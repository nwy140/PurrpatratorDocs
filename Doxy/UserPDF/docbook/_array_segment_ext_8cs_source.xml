<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__array_segment_ext_8cs_source" xml:lang="en-US">
<title>ArraySegmentExt.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArraySegmentExt.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__array_segment_ext_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__array_segment_ext_8cs_source_1l00002"/>00002 
<anchor xml:id="__array_segment_ext_8cs_source_1l00003"/>00003 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__array_segment_ext_8cs_source_1l00004"/>00004 {
<anchor xml:id="__array_segment_ext_8cs_source_1l00005"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext">00005</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext">ArraySegmentExt</link>
<anchor xml:id="__array_segment_ext_8cs_source_1l00006"/>00006 &#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00007"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a99c0eb3a294f290e69394581b64a6dca">00007</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ArraySegment&lt;byte&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a99c0eb3a294f290e69394581b64a6dca">ExtractArraySegment</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_segment_ext_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArraySegment&lt;byte&gt;(buffer,&#32;0,&#32;(bitposition&#32;+&#32;7)&#32;&gt;&gt;&#32;3);
<anchor xml:id="__array_segment_ext_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00011"/>00011 
<anchor xml:id="__array_segment_ext_8cs_source_1l00012"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a051229e341a01287c152fb79af185969">00012</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ArraySegment&lt;ushort&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a051229e341a01287c152fb79af185969">ExtractArraySegment</link>(ushort[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_segment_ext_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArraySegment&lt;ushort&gt;(buffer,&#32;0,&#32;(bitposition&#32;+&#32;15)&#32;&gt;&gt;&#32;4);
<anchor xml:id="__array_segment_ext_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00016"/>00016 
<anchor xml:id="__array_segment_ext_8cs_source_1l00017"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a69cf10cb4fdd5facff9429852351cd58">00017</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ArraySegment&lt;uint&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a69cf10cb4fdd5facff9429852351cd58">ExtractArraySegment</link>(uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_segment_ext_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArraySegment&lt;uint&gt;(buffer,&#32;0,&#32;(bitposition&#32;+&#32;31)&#32;&gt;&gt;&#32;5);
<anchor xml:id="__array_segment_ext_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00021"/>00021 
<anchor xml:id="__array_segment_ext_8cs_source_1l00022"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1af1f3993edfdfa55d82f24e5dca492df7">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ArraySegment&lt;ulong&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1af1f3993edfdfa55d82f24e5dca492df7">ExtractArraySegment</link>(ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_segment_ext_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArraySegment&lt;ulong&gt;(buffer,&#32;0,&#32;(bitposition&#32;+&#32;63)&#32;&gt;&gt;&#32;6);
<anchor xml:id="__array_segment_ext_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00026"/>00026 
<anchor xml:id="__array_segment_ext_8cs_source_1l00027"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a9a2dbf3073260ad0a5a088fc3bbf2095">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a9a2dbf3073260ad0a5a088fc3bbf2095">Append</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;byte&gt;&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;buffer.Offset&#32;&lt;&lt;&#32;3;
<anchor xml:id="__array_segment_ext_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Array.Append(value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;-=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00034"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a2bd2ae7a46107e1f87bede52083b482b">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a2bd2ae7a46107e1f87bede52083b482b">Append</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;uint&gt;&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;buffer.Offset&#32;&lt;&lt;&#32;5;
<anchor xml:id="__array_segment_ext_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Array.Append(value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;-=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00041"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1afc6dc6c4132372b4038996f502bdc942">00041</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1afc6dc6c4132372b4038996f502bdc942">Append</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;ulong&gt;&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;buffer.Offset&#32;&lt;&lt;&#32;6;
<anchor xml:id="__array_segment_ext_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Array.Append(value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;-=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00048"/>00048 
<anchor xml:id="__array_segment_ext_8cs_source_1l00049"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1aec09d9111c5ffa5bd8481d1b9cf9feca">00049</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1aec09d9111c5ffa5bd8481d1b9cf9feca">Write</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;byte&gt;&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;buffer.Offset&#32;&lt;&lt;&#32;3;
<anchor xml:id="__array_segment_ext_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Array.Write(value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;-=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00056"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a53071454a90163012571fb25e5676e53">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a53071454a90163012571fb25e5676e53">Write</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;uint&gt;&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;buffer.Offset&#32;&lt;&lt;&#32;5;
<anchor xml:id="__array_segment_ext_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Array.Write(value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;-=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00063"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1ad67ded56abf409425f060b9596b61a51">00063</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1ad67ded56abf409425f060b9596b61a51">Write</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;ulong&gt;&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;buffer.Offset&#32;&lt;&lt;&#32;6;
<anchor xml:id="__array_segment_ext_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Array.Write(value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;-=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00070"/>00070 
<anchor xml:id="__array_segment_ext_8cs_source_1l00071"/>00071 
<anchor xml:id="__array_segment_ext_8cs_source_1l00072"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1ab1a3f82501d72cc34490084ca5133ecc">00072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1ab1a3f82501d72cc34490084ca5133ecc">Read</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;byte&gt;&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;buffer.Offset&#32;&lt;&lt;&#32;3;
<anchor xml:id="__array_segment_ext_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;buffer.Array.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;-=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value;
<anchor xml:id="__array_segment_ext_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00080"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a3c87fc81261e4523a14e77bd6ca87377">00080</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a3c87fc81261e4523a14e77bd6ca87377">Read</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;uint&gt;&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;buffer.Offset&#32;&lt;&lt;&#32;5;
<anchor xml:id="__array_segment_ext_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;buffer.Array.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;-=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value;
<anchor xml:id="__array_segment_ext_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00088"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a0ebe42347127f6efd90ce805c5774c0b">00088</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a0ebe42347127f6efd90ce805c5774c0b">Read</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;ulong&gt;&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;buffer.Offset&#32;&lt;&lt;&#32;6;
<anchor xml:id="__array_segment_ext_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;buffer.Array.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;-=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value;
<anchor xml:id="__array_segment_ext_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00096"/>00096 
<anchor xml:id="__array_segment_ext_8cs_source_1l00097"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1ac5ec0ac14afb7f747f59c2127d5d29be">00097</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1ac5ec0ac14afb7f747f59c2127d5d29be">ReadOutSafe</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;byte&gt;&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;srcStartPos,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;source.Offset&#32;&lt;&lt;&#32;3;
<anchor xml:id="__array_segment_ext_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcStartPos&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;source.Array.ReadOutSafe(srcStartPos,&#32;target,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00103"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a4e01e6a848d1de841b09a25355743e95">00103</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a4e01e6a848d1de841b09a25355743e95">ReadOutSafe</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;byte&gt;&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;srcStartPos,&#32;ulong[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;source.Offset&#32;&lt;&lt;&#32;3;
<anchor xml:id="__array_segment_ext_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcStartPos&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;source.Array.ReadOutSafe(srcStartPos,&#32;target,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00109"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a3456d2ec9c968fad7e89e8d303c6febd">00109</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1a3456d2ec9c968fad7e89e8d303c6febd">ReadOutSafe</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;ulong&gt;&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;srcStartPos,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;source.Offset&#32;&lt;&lt;&#32;6;
<anchor xml:id="__array_segment_ext_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcStartPos&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;source.Array.ReadOutSafe(srcStartPos,&#32;target,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00115"/><link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1ad20084ca343562cb1c8c392079dfc357">00115</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_segment_ext_1ad20084ca343562cb1c8c392079dfc357">ReadOutSafe</link>(<emphasis role="keyword">this</emphasis>&#32;ArraySegment&lt;ulong&gt;&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;srcStartPos,&#32;ulong[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_segment_ext_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_segment_ext_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;source.Offset&#32;&lt;&lt;&#32;6;
<anchor xml:id="__array_segment_ext_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcStartPos&#32;+=&#32;offset;
<anchor xml:id="__array_segment_ext_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;source.Array.ReadOutSafe(srcStartPos,&#32;target,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_segment_ext_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;}
<anchor xml:id="__array_segment_ext_8cs_source_1l00122"/>00122 }
<anchor xml:id="__array_segment_ext_8cs_source_1l00123"/>00123 
</programlisting></section>
