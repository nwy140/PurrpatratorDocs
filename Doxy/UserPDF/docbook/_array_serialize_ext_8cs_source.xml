<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__array_serialize_ext_8cs_source" xml:lang="en-US">
<title>ArraySerializeExt.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArraySerializeExt.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__array_serialize_ext_8cs_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00002"/>00002 <emphasis role="comment">*&#32;The&#32;MIT&#32;License&#32;(MIT)</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00003"/>00003 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00004"/>00004 <emphasis role="comment">*&#32;Copyright&#32;(c)&#32;2018-2019&#32;Davin&#32;Carten&#32;(emotitron)&#32;(davincarten@gmail.com)</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00005"/>00005 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00006"/>00006 <emphasis role="comment">*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00007"/>00007 <emphasis role="comment">*&#32;of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00008"/>00008 <emphasis role="comment">*&#32;in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00009"/>00009 <emphasis role="comment">*&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00010"/>00010 <emphasis role="comment">*&#32;copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00011"/>00011 <emphasis role="comment">*&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00012"/>00012 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00013"/>00013 <emphasis role="comment">*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00014"/>00014 <emphasis role="comment">*&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00015"/>00015 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00016"/>00016 <emphasis role="comment">*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00017"/>00017 <emphasis role="comment">*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00018"/>00018 <emphasis role="comment">*&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00019"/>00019 <emphasis role="comment">*&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00020"/>00020 <emphasis role="comment">*&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00021"/>00021 <emphasis role="comment">*&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00022"/>00022 <emphasis role="comment">*&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00023"/>00023 <emphasis role="comment">*/</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00024"/>00024 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00025"/>00025 <emphasis role="preprocessor">#if&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00026"/>00026 <emphasis role="preprocessor">#define&#32;UNITY_ASSERTIONS</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00027"/>00027 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00028"/>00028 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00029"/>00029 <emphasis role="comment">//using&#32;Photon.Compression.Utilities;</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00030"/>00030 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00031"/>00031 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00032"/>00032 {
<anchor xml:id="__array_serialize_ext_8cs_source_1l00033"/>00033 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00037"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext">00037</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext">ArraySerializeExt</link>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;bufferOverrunMsg&#32;=&#32;<emphasis role="stringliteral">&quot;Byte&#32;buffer&#32;length&#32;exceeded&#32;by&#32;write&#32;or&#32;read.&#32;Dataloss&#32;will&#32;occur.&#32;Likely&#32;due&#32;to&#32;a&#32;Read/Write&#32;mismatch.&quot;</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00040"/>00040 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00041"/>00041 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Zero</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00042"/>00042 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;byte[]</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00047"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a14796af6f28e5ef2607aeacaba5e1a4d">00047</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a14796af6f28e5ef2607aeacaba5e1a4d">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startByte,&#32;<emphasis role="keywordtype">int</emphasis>&#32;endByte)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startByte;&#32;i&#32;&lt;=&#32;endByte;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00052"/>00052 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00056"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa5c0a2a7e85a99c33f27005ed6405ca2">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa5c0a2a7e85a99c33f27005ed6405ca2">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startByte)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;buffer.Length;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startByte;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00062"/>00062 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00066"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ac618e7b63f51e8f204161e9d5cc9c436">00066</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ac618e7b63f51e8f204161e9d5cc9c436">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;buffer.Length;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00072"/>00072 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ushort[]</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00077"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a719ad2f32e26135f9a49275ae0b38026">00077</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a719ad2f32e26135f9a49275ae0b38026">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;ushort[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startByte,&#32;<emphasis role="keywordtype">int</emphasis>&#32;endByte)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startByte;&#32;i&#32;&lt;=&#32;endByte;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00082"/>00082 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00086"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a861b024c57e3cc2a7593e74bd9d087e1">00086</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a861b024c57e3cc2a7593e74bd9d087e1">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;ushort[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startByte)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;buffer.Length;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startByte;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00092"/>00092 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00096"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a7fd386098ecd80413916c76f9876933b">00096</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a7fd386098ecd80413916c76f9876933b">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;ushort[]&#32;buffer)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;buffer.Length;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00102"/>00102 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;uint[]</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00107"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a05370404eae63f63af2fa3012f9cb773">00107</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a05370404eae63f63af2fa3012f9cb773">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startByte,&#32;<emphasis role="keywordtype">int</emphasis>&#32;endByte)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startByte;&#32;i&#32;&lt;=&#32;endByte;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00112"/>00112 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00116"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a0e508d23be6ffe397015737aaaffa93c">00116</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a0e508d23be6ffe397015737aaaffa93c">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startByte)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;buffer.Length;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startByte;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00122"/>00122 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00126"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aedb7770a5429b9749f589767f5052f20">00126</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aedb7770a5429b9749f589767f5052f20">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;buffer.Length;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00132"/>00132 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ulong[]</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00137"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a214cb667fd7a8f759995e062ccbaed2b">00137</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a214cb667fd7a8f759995e062ccbaed2b">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startByte,&#32;<emphasis role="keywordtype">int</emphasis>&#32;endByte)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startByte;&#32;i&#32;&lt;=&#32;endByte;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00142"/>00142 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00146"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ae5d8a14d686b9e4a762f001264e057ce">00146</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ae5d8a14d686b9e4a762f001264e057ce">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startByte)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;buffer.Length;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startByte;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00152"/>00152 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00156"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ad1a34c264a6916bd32f23d60ab2abd85">00156</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ad1a34c264a6916bd32f23d60ab2abd85">Zero</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;buffer.Length;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00162"/>00162 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00163"/>00163 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00164"/>00164 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00165"/>00165 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Read/Write&#32;Signed&#32;Value</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00166"/>00166 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00167"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a42d028879084425d6c1181a13cff7298">00167</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a42d028879084425d6c1181a13cff7298">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00172"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a2f250b1779f1b9aa15c48584bfb2e026">00172</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a2f250b1779f1b9aa15c48584bfb2e026">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00177"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ad59bbda5afb356f6c39412a43890fb3e">00177</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ad59bbda5afb356f6c39412a43890fb3e">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00182"/>00182 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00183"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a2885147028aacfa8fdbaae9960a871fb">00183</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a2885147028aacfa8fdbaae9960a871fb">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;zigzag&#32;=&#32;(ulong)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;63));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00188"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a4feda3619fc6eef4a9a99aa07bdba9e8">00188</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a4feda3619fc6eef4a9a99aa07bdba9e8">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;zigzag&#32;=&#32;(ulong)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;63));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00193"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a7d9d3fda8e458275b5a6ff76bf793865">00193</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a7d9d3fda8e458275b5a6ff76bf793865">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;zigzag&#32;=&#32;(ulong)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;63));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00198"/>00198 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00199"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aaa88b57a34416278c38f34f66ec71722">00199</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aaa88b57a34416278c38f34f66ec71722">ReadSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;value&#32;=&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zagzig&#32;=&#32;(int)((value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(int)(value&#32;&amp;&#32;1)));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00205"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a948e54684ad0d4f0a88b55973eaf034b">00205</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a948e54684ad0d4f0a88b55973eaf034b">ReadSigned</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;value&#32;=&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zagzig&#32;=&#32;(int)((value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(int)(value&#32;&amp;&#32;1)));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00211"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ae7019b5cc0889d71aa2498619f53c3a0">00211</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ae7019b5cc0889d71aa2498619f53c3a0">ReadSigned</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;value&#32;=&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zagzig&#32;=&#32;(int)((value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(int)(value&#32;&amp;&#32;1)));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00217"/>00217 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00218"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a4a5c836852a53338d3be554be00681fc">00218</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a4a5c836852a53338d3be554be00681fc">ReadSigned64</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;zagzig&#32;=&#32;((long)(value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(long)(value&#32;&amp;&#32;1)));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00224"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a47ecb1ab72a1bee57c3ff6d2c1110895">00224</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a47ecb1ab72a1bee57c3ff6d2c1110895">ReadSigned64</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;zagzig&#32;=&#32;((long)(value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(long)(value&#32;&amp;&#32;1)));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00230"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1addfa86edcafcfc4b181260e1910739d0">00230</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1addfa86edcafcfc4b181260e1910739d0">ReadSigned64</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;zagzig&#32;=&#32;((long)(value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(long)(value&#32;&amp;&#32;1)));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00236"/>00236 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00237"/>00237 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00238"/>00238 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00239"/>00239 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Float&#32;Reader/Writer</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00240"/>00240 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00247"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a0ac2fa3035093ce8f26599ea77115bf2">00247</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a0ac2fa3035093ce8f26599ea77115bf2">WriteFloat</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">float</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a629db6ce12b6d31b786eff8bb799bbc3">Write</link>(buffer,&#32;((<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)value).uint32,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00251"/>00251 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00257"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1af1aa83077b2d610d32d24e0e5cc30ebc">00257</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1af1aa83077b2d610d32d24e0e5cc30ebc">ReadFloat</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;32));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00261"/>00261 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00262"/>00262 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00263"/>00263 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00264"/>00264 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Primary&#32;Append</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00265"/>00265 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00274"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1acd43cf6d19a957c167f82a9da21cc45d">00274</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1acd43cf6d19a957c167f82a9da21cc45d">Append</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00278"/>00278 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;8;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;(bitposition&#32;&amp;&#32;MODULUS);&#32;<emphasis role="comment">//&#32;this&#32;is&#32;just&#32;a&#32;modulus</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;3;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00283"/>00283 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetmask&#32;=&#32;((1UL&#32;&lt;&lt;&#32;offset)&#32;-&#32;1);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00285"/>00285 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;comp&#32;=&#32;buffer[index]&#32;&amp;&#32;offsetmask;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;result&#32;=&#32;comp&#32;|&#32;(value&#32;&lt;&lt;&#32;offset);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00288"/>00288 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(byte)result;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00290"/>00290 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;MAXBITS&#32;-&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(offset&#32;&lt;&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(byte)((value&#32;&gt;&gt;&#32;offset));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;offset&#32;+&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00300"/>00300 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00301"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a20fbbd516627d413c80f18b24fde2c9e">00301</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a20fbbd516627d413c80f18b24fde2c9e">Append</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00305"/>00305 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;32;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;just&#32;a&#32;modulus</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;5;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00310"/>00310 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetmask&#32;=&#32;((1UL&#32;&lt;&lt;&#32;offset)&#32;-&#32;1);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00312"/>00312 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;comp&#32;=&#32;buffer[index]&#32;&amp;&#32;offsetmask;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;result&#32;=&#32;comp&#32;|&#32;(value&#32;&lt;&lt;&#32;offset);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00315"/>00315 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(uint)result;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00317"/>00317 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;MAXBITS&#32;-&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(offset&#32;&lt;&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(uint)((value&#32;&gt;&gt;&#32;offset));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;offset&#32;+&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00331"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1abb5c92c726e399b7408f20d3cb57e964">00331</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1abb5c92c726e399b7408f20d3cb57e964">Append</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;uint&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00335"/>00335 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;32;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;just&#32;a&#32;modulus</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;5;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00340"/>00340 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetmask&#32;=&#32;((1UL&#32;&lt;&lt;&#32;offset)&#32;-&#32;1);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;comp&#32;=&#32;buffer[index]&#32;&amp;&#32;offsetmask;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;result&#32;=&#32;comp&#32;|&#32;((ulong)value&#32;&lt;&lt;&#32;offset);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00344"/>00344 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(uint)result;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index&#32;+&#32;1]&#32;=&#32;(uint)(result&#32;&gt;&gt;&#32;MAXBITS);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00347"/>00347 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00350"/>00350 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00351"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a18eeb8382eda1dacbaa4530c773bf612">00351</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a18eeb8382eda1dacbaa4530c773bf612">Append</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00355"/>00355 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;64;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;just&#32;a&#32;modulus</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;6;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00360"/>00360 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetmask&#32;=&#32;((1UL&#32;&lt;&lt;&#32;offset)&#32;-&#32;1);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;comp&#32;=&#32;buffer[index]&#32;&amp;&#32;offsetmask;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;result&#32;=&#32;comp&#32;|&#32;(value&#32;&lt;&lt;&#32;offset);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00364"/>00364 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;result;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index&#32;+&#32;1]&#32;=&#32;value&#32;&gt;&gt;&#32;(MAXBITS&#32;-&#32;offset);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00367"/>00367 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00370"/>00370 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00371"/>00371 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00372"/>00372 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00373"/>00373 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Primary&#32;Writers</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00374"/>00374 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00383"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a629db6ce12b6d31b786eff8bb799bbc3">00383</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a629db6ce12b6d31b786eff8bb799bbc3">Write</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00387"/>00387 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;8;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;3;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;totalpush&#32;=&#32;offset&#32;+&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00393"/>00393 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetmask&#32;=&#32;mask&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetcomp&#32;=&#32;value&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00397"/>00397 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(byte)((buffer[index]&#32;&amp;&#32;~offsetmask)&#32;|&#32;(offsetcomp&#32;&amp;&#32;offsetmask));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00399"/>00399 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;MAXBITS&#32;-&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalpush&#32;=&#32;totalpush&#32;-&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00402"/>00402 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;These&#32;are&#32;complete&#32;overwrites&#32;of&#32;the&#32;array&#32;element,&#32;so&#32;no&#32;masking&#32;is&#32;required</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(totalpush&#32;&gt;&#32;MAXBITS)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetcomp&#32;=&#32;value&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(byte)offsetcomp;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;+=&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalpush&#32;=&#32;totalpush&#32;-&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00412"/>00412 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;remaning&#32;partial&#32;write&#32;needs&#32;masking</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(totalpush&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00417"/>00417 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetmask&#32;=&#32;mask&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetcomp&#32;=&#32;value&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(byte)((buffer[index]&#32;&amp;&#32;~offsetmask)&#32;|&#32;(offsetcomp&#32;&amp;&#32;offsetmask));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00424"/>00424 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00425"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a46b9a87f08b3b69f25dd757a0afa556e">00425</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a46b9a87f08b3b69f25dd757a0afa556e">Write</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00429"/>00429 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;32;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;5;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;totalpush&#32;=&#32;offset&#32;+&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00435"/>00435 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetmask&#32;=&#32;mask&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetval&#32;=&#32;value&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00439"/>00439 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(uint)((buffer[index]&#32;&amp;&#32;~offsetmask)&#32;|&#32;(offsetval&#32;&amp;&#32;offsetmask));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00441"/>00441 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;MAXBITS&#32;-&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalpush&#32;=&#32;totalpush&#32;-&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00444"/>00444 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(totalpush&#32;&gt;&#32;MAXBITS)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetmask&#32;=&#32;mask&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetval&#32;=&#32;value&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(uint)((buffer[index]&#32;&amp;&#32;~offsetmask)&#32;|&#32;(offsetval&#32;&amp;&#32;offsetmask));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;+=&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalpush&#32;=&#32;totalpush&#32;-&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00456"/>00456 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00457"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a1bb854b2b08c579f9d196d64117cf034">00457</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a1bb854b2b08c579f9d196d64117cf034">Write</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00461"/>00461 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;64;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;6;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;totalpush&#32;=&#32;offset&#32;+&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00467"/>00467 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetmask&#32;=&#32;mask&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetval&#32;=&#32;value&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00471"/>00471 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(buffer[index]&#32;&amp;&#32;~offsetmask)&#32;|&#32;(offsetval&#32;&amp;&#32;offsetmask);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00473"/>00473 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;MAXBITS&#32;-&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalpush&#32;=&#32;totalpush&#32;-&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00476"/>00476 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(totalpush&#32;&gt;&#32;MAXBITS)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetmask&#32;=&#32;mask&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetval&#32;=&#32;value&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[index]&#32;=&#32;(buffer[index]&#32;&amp;&#32;~offsetmask)&#32;|&#32;(offsetval&#32;&amp;&#32;offsetmask);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;+=&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalpush&#32;=&#32;totalpush&#32;-&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00488"/>00488 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00489"/>00489 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00490"/>00490 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00491"/>00491 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Secondary&#32;Writers</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00492"/>00492 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00493"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ac9aad9013d1ca56024a09dde59ca1f5b">00493</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ac9aad9013d1ca56024a09dde59ca1f5b">WriteBool</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;b,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((ulong)(b&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00497"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a73034f9c2179007cfea5b82770e40184">00497</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a73034f9c2179007cfea5b82770e40184">WriteBool</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;b,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((ulong)(b&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00501"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a7df32cf7c1416cd6e2616c98fc1ace44">00501</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a7df32cf7c1416cd6e2616c98fc1ace44">WriteBool</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;b,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((ulong)(b&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00505"/>00505 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00506"/>00506 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00507"/>00507 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00508"/>00508 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Primary&#32;Readers</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00509"/>00509 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00517"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">00517</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00521"/>00521 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;8;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;just&#32;a&#32;modulus</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;3;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00526"/>00526 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00527"/>00527 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPEMENT_BUILD</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bitposition&#32;+&#32;bits)&#32;&gt;&#32;(buffer.Length&#32;&lt;&lt;&#32;3))
<anchor xml:id="__array_serialize_ext_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Debug.LogError(bufferOverrunMsg);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00530"/>00530 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00531"/>00531 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;(ulong)buffer[index]&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;MAXBITS&#32;-&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(offset&#32;&lt;&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;|=&#32;(ulong)buffer[index]&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;+=&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00541"/>00541 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value&#32;&amp;&#32;mask;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00545"/>00545 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00553"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1afa95462f75f3282ff885ba675a48f71c">00553</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1afa95462f75f3282ff885ba675a48f71c">Read</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00557"/>00557 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;32;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;just&#32;a&#32;modulus</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;5;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00562"/>00562 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00563"/>00563 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPEMENT_BUILD</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bitposition&#32;+&#32;bits)&#32;&gt;&#32;(buffer.Length&#32;&lt;&lt;&#32;3))
<anchor xml:id="__array_serialize_ext_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Debug.LogError(bufferOverrunMsg);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00566"/>00566 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00567"/>00567 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;(ulong)buffer[index]&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;MAXBITS&#32;-&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(offset&#32;&lt;&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;|=&#32;(ulong)buffer[index]&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;+=&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value&#32;&amp;&#32;mask;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00580"/>00580 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00588"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a26fe6762b346e16dab42b8cbdd82b14d">00588</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a26fe6762b346e16dab42b8cbdd82b14d">Read</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00592"/>00592 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;64;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;just&#32;a&#32;modulus</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;6;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00597"/>00597 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00598"/>00598 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPEMENT_BUILD</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((bitposition&#32;+&#32;bits)&#32;&gt;&#32;(buffer.Length&#32;&lt;&lt;&#32;3))
<anchor xml:id="__array_serialize_ext_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Debug.LogError(bufferOverrunMsg);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00601"/>00601 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00602"/>00602 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;(ulong)buffer[index]&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;MAXBITS&#32;-&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(offset&#32;&lt;&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;|=&#32;(ulong)buffer[index]&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;+=&#32;MAXBITS;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00612"/>00612 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value&#32;&amp;&#32;mask;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00616"/>00616 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00617"/>00617 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00618"/>00618 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00619"/>00619 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Secondary&#32;Readers</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Ulong</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Just&#32;use&#32;Read(),&#32;it&#32;return&#32;a&#32;ulong&#32;already.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00623"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ac13ae3c36b1aaa48628167bf22c88a9c">00623</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ac13ae3c36b1aaa48628167bf22c88a9c">ReadUInt64</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00627"/>00627 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Just&#32;use&#32;Read(),&#32;it&#32;return&#32;a&#32;ulong&#32;already.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00629"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aed334c596f44215458fa262dc93d33a8">00629</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aed334c596f44215458fa262dc93d33a8">ReadUInt64</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00633"/>00633 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Just&#32;use&#32;Read(),&#32;it&#32;return&#32;a&#32;ulong&#32;already.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00635"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a642293f06d9bea5933c37a62105f4f6e">00635</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a642293f06d9bea5933c37a62105f4f6e">ReadUInt64</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00639"/>00639 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;UInt</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00641"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aca5c7b70a49ee4eca30bd28f0ed98b88">00641</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aca5c7b70a49ee4eca30bd28f0ed98b88">ReadUInt32</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uint)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00645"/>00645 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00646"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a7ae0018feee863c04fe08b08525ea344">00646</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a7ae0018feee863c04fe08b08525ea344">ReadUInt32</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uint)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00650"/>00650 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00651"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a4947c751976927def44fc5390ed2ce4b">00651</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a4947c751976927def44fc5390ed2ce4b">ReadUInt32</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uint)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00655"/>00655 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;UShort</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00657"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a204d02e98434c86e9e2c9df7b1b5637f">00657</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ushort&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a204d02e98434c86e9e2c9df7b1b5637f">ReadUInt16</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ushort)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00661"/>00661 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00662"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a3bedb92d63ad4c9d589e43fec77c0a51">00662</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ushort&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a3bedb92d63ad4c9d589e43fec77c0a51">ReadUInt16</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ushort)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00666"/>00666 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00667"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a48dc0ca2afda7da2a5a8ad8d2795b988">00667</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ushort&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a48dc0ca2afda7da2a5a8ad8d2795b988">ReadUInt16</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ushort)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00671"/>00671 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Byte</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00673"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a36938e7bc85d6b4ad05dc1f60b50f721">00673</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a36938e7bc85d6b4ad05dc1f60b50f721">ReadByte</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00677"/>00677 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00678"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a8e54a65048cf18cd06a506ba1f4f7bd4">00678</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a8e54a65048cf18cd06a506ba1f4f7bd4">ReadByte</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00682"/>00682 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00683"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a38793627327752ab5873301cdbab4a34">00683</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a38793627327752ab5873301cdbab4a34">ReadByte</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00687"/>00687 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Bool</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00689"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a0a6c858ffda476d2ae3bd41db707e1a3">00689</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a0a6c858ffda476d2ae3bd41db707e1a3">ReadBool</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;1)&#32;==&#32;1&#32;?&#32;true&#32;:&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00693"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ad76d04181b64e16937e6ff4c571fc74c">00693</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ad76d04181b64e16937e6ff4c571fc74c">ReadBool</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;1)&#32;==&#32;1&#32;?&#32;true&#32;:&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00697"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ab7eca795142cf793a7211c64b4bd3162">00697</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ab7eca795142cf793a7211c64b4bd3162">ReadBool</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;1)&#32;==&#32;1&#32;?&#32;true&#32;:&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00701"/>00701 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Char</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00703"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a9d10a82ebc6ccd77d5d8f395a53135a4">00703</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a9d10a82ebc6ccd77d5d8f395a53135a4">ReadChar</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00707"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a0d79430c021e795631d27a3a7419bf67">00707</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a0d79430c021e795631d27a3a7419bf67">ReadChar</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00711"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a1822e8ca1da987696015fe3c34cbc7b1">00711</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a1822e8ca1da987696015fe3c34cbc7b1">ReadChar</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00715"/>00715 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00716"/>00716 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00717"/>00717 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00718"/>00718 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ReadOut&#32;Safe</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00719"/>00719 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00728"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a8659c5c77035070861af6d2f56b97643">00728</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a8659c5c77035070861af6d2f56b97643">ReadOutSafe</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;srcStartPos,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00732"/>00732 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;srcStartPos;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00735"/>00735 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Add&#32;len&#32;checks</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00737"/>00737 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;source.Read(ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.Write(val,&#32;ref&#32;bitposition,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00743"/>00743 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00747"/>00747 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00756"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a269398daa54676ca23e2e9acb4835ac2">00756</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a269398daa54676ca23e2e9acb4835ac2">ReadOutSafe</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;srcStartPos,&#32;ulong[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00760"/>00760 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;srcStartPos;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00763"/>00763 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Add&#32;len&#32;checks</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00765"/>00765 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;source.Read(ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.Write(val,&#32;ref&#32;bitposition,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00771"/>00771 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00775"/>00775 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00784"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1afa31c17b6a7bc52df19a3a939bccd17c">00784</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1afa31c17b6a7bc52df19a3a939bccd17c">ReadOutSafe</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;srcStartPos,&#32;ulong[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00788"/>00788 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;srcStartPos;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00791"/>00791 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Add&#32;len&#32;checks</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00793"/>00793 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;8&#32;?&#32;8&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;source.Read(ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.Write(val,&#32;ref&#32;bitposition,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00799"/>00799 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00803"/>00803 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00812"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a9007fcae3c243c8e74d61db4561a4349">00812</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a9007fcae3c243c8e74d61db4561a4349">ReadOutSafe</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;srcStartPos,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00816"/>00816 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;srcStartPos;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00819"/>00819 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Add&#32;len&#32;checks</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00821"/>00821 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;8&#32;?&#32;8&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;source.Read(ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.Write(val,&#32;ref&#32;bitposition,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00827"/>00827 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00831"/>00831 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00832"/>00832 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00833"/>00833 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00834"/>00834 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Virtual&#32;Indexers</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00835"/>00835 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00840"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a47c22f391303527b41c7362806f11678">00840</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a47c22f391303527b41c7362806f11678">IndexAsUInt64</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;index&#32;&lt;&lt;&#32;3;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ulong)(
<anchor xml:id="__array_serialize_ext_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i]&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i&#32;+&#32;1]&#32;&lt;&lt;&#32;8&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i&#32;+&#32;2]&#32;&lt;&lt;&#32;16&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i&#32;+&#32;3]&#32;&lt;&lt;&#32;24&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i&#32;+&#32;4]&#32;&lt;&lt;&#32;32&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i&#32;+&#32;5]&#32;&lt;&lt;&#32;40&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i&#32;+&#32;6]&#32;&lt;&lt;&#32;48&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i&#32;+&#32;7]&#32;&lt;&lt;&#32;56);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00857"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1afaedaca2d305755394b21c681bda0d43">00857</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1afaedaca2d305755394b21c681bda0d43">IndexAsUInt64</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;index&#32;&lt;&lt;&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ulong)(
<anchor xml:id="__array_serialize_ext_8cs_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i]&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ulong)buffer[i&#32;+&#32;1]&#32;&lt;&lt;&#32;32);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00864"/>00864 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00869"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a370c5ea5874378241179cbc822854f10">00869</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a370c5ea5874378241179cbc822854f10">IndexAsUInt32</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;index&#32;&lt;&lt;&#32;3;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uint)(
<anchor xml:id="__array_serialize_ext_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)buffer[i]&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)buffer[i&#32;+&#32;1]&#32;&lt;&lt;&#32;8&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)buffer[i&#32;+&#32;2]&#32;&lt;&lt;&#32;16&#32;|
<anchor xml:id="__array_serialize_ext_8cs_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)buffer[i&#32;+&#32;3]&#32;&lt;&lt;&#32;24);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00882"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ae17ae5735f194109d79384b2f881796d">00882</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ae17ae5735f194109d79384b2f881796d">IndexAsUInt32</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;index&#32;&gt;&gt;&#32;1;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;(index&#32;&amp;&#32;MODULUS)&#32;&lt;&lt;&#32;5;&#32;<emphasis role="comment">//&#32;modulus&#32;*&#32;8</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;element&#32;=&#32;buffer[i];
<anchor xml:id="__array_serialize_ext_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)((element&#32;&gt;&gt;&#32;offset));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00894"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ae9ab9d1ea6619f16eaf0be4a54167270">00894</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ae9ab9d1ea6619f16eaf0be4a54167270">IndexAsUInt8</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;7;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;index&#32;&gt;&gt;&#32;3;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;(index&#32;&amp;&#32;MODULUS)&#32;&lt;&lt;&#32;3;&#32;<emphasis role="comment">//&#32;modulus&#32;*&#32;8</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;element&#32;=&#32;buffer[i];
<anchor xml:id="__array_serialize_ext_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)((element&#32;&gt;&gt;&#32;offset));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00906"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a2715519b3dec4d96c457daea08f7a38d">00906</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a2715519b3dec4d96c457daea08f7a38d">IndexAsUInt8</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;3;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;index&#32;&gt;&gt;&#32;3;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;(index&#32;&amp;&#32;MODULUS)&#32;&lt;&lt;&#32;3;&#32;<emphasis role="comment">//&#32;modulus&#32;*&#32;8</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;element&#32;=&#32;buffer[i];
<anchor xml:id="__array_serialize_ext_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)((element&#32;&gt;&gt;&#32;offset));
<anchor xml:id="__array_serialize_ext_8cs_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00914"/>00914 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00915"/>00915 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00916"/>00916 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00917"/>00917 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Obsolete&#32;Writers</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00918"/>00918 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00920"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a083a694206977ee137e40faf5112a84d">00920</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a083a694206977ee137e40faf5112a84d">Write</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ulong&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a629db6ce12b6d31b786eff8bb799bbc3">Write</link>(buffer,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00926"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ad78425f1ead5e448484cda6d59ddb5e3">00926</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint[]&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ad78425f1ead5e448484cda6d59ddb5e3">Write</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;ulong&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a629db6ce12b6d31b786eff8bb799bbc3">Write</link>(buffer,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00932"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a8af2f2e2bc3a1a03b9c9c7d197205844">00932</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong[]&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a8af2f2e2bc3a1a03b9c9c7d197205844">Write</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;ulong&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a629db6ce12b6d31b786eff8bb799bbc3">Write</link>(buffer,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00938"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa63afdbb79d72a27bacbc473fee6e66f">00938</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa63afdbb79d72a27bacbc473fee6e66f">Write</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">float</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a629db6ce12b6d31b786eff8bb799bbc3">Write</link>(buffer,&#32;((<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)value).uint32,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__array_serialize_ext_8cs_source_1l00942"/>00942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00944"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a8a6ca8538d45c7f4860212907cb16219">00944</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a8a6ca8538d45c7f4860212907cb16219">Read</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00948"/>00948 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00949"/>00949 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00950"/>00950 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00951"/>00951 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Obsolete&#32;Readers</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l00952"/>00952 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00954"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa4773f3b652b005583af7000c40133e7">00954</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa4773f3b652b005583af7000c40133e7">Read</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00959"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aeaa09c86c8c8b74b98b10ab0662b36e2">00959</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aeaa09c86c8c8b74b98b10ab0662b36e2">Read</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00964"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa39f2d37d2621ba01a9e66765704e6dd">00964</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa39f2d37d2621ba01a9e66765704e6dd">Read</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00968"/>00968 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00970"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a977a85e0c0480647e97aef4decbdfe3b">00970</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a977a85e0c0480647e97aef4decbdfe3b">ReadUInt8</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00971"/>00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00972"/>00972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00973"/>00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00974"/>00974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00975"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1af950b41fb0b681c7b5493a70c9d7c34a">00975</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1af950b41fb0b681c7b5493a70c9d7c34a">ReadUInt32</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uint)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00980"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a1a2cfe35b09b1da2c3df1b173739fd9c">00980</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a1a2cfe35b09b1da2c3df1b173739fd9c">ReadUInt64</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00984"/>00984 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00986"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa26e8660e4d7dbc0d7759ba487f8a7f0">00986</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aa26e8660e4d7dbc0d7759ba487f8a7f0">ReadUInt8</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00991"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aca7312c5aa389667f2684e41f8c396a5">00991</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aca7312c5aa389667f2684e41f8c396a5">ReadUInt32</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00993"/>00993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uint)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l00994"/>00994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l00995"/>00995 
<anchor xml:id="__array_serialize_ext_8cs_source_1l00996"/>00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l00997"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a1d9d65bea276bcebe303799841a82b73">00997</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a1d9d65bea276bcebe303799841a82b73">ReadUInt64</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l01001"/>01001 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l01003"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a3de32d7d002ec2616c0405ee757bd02f">01003</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a3de32d7d002ec2616c0405ee757bd02f">ReadUInt8</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l01004"/>01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l01007"/>01007 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l01009"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a6718de7244040a99292e55acaa09506e">01009</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a6718de7244040a99292e55acaa09506e">ReadUInt32</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l01011"/>01011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l01012"/>01012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l01013"/>01013 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;has&#32;changed.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l01015"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ac9fee45c8723c8735bb0ac041c97cd55">01015</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1ac9fee45c8723c8735bb0ac041c97cd55">ReadUInt64</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__array_serialize_ext_8cs_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1aadae8684e9facce5a02f21d974021421">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l01018"/>01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l01019"/>01019 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Instead&#32;use&#32;ReadOutUnsafe.&#32;They&#32;are&#32;much&#32;faster.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l01021"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a5b0809cdb1d015367c401a6acf0e5ccc">01021</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a5b0809cdb1d015367c401a6acf0e5ccc">Write</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;srcbuffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;writepos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l01023"/>01023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(bits&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fragbits&#32;=&#32;(bits&#32;&gt;&#32;64)&#32;?&#32;64&#32;:&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;frag&#32;=&#32;srcbuffer.Read(ref&#32;readpos,&#32;fragbits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(frag,&#32;ref&#32;writepos,&#32;fragbits);
<anchor xml:id="__array_serialize_ext_8cs_source_1l01028"/>01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bits&#32;-=&#32;fragbits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l01030"/>01030 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__array_serialize_ext_8cs_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l01033"/>01033 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Do&#32;not&#32;use&#32;unless&#32;you&#32;have&#32;removed&#32;ArraySerializerUnsafe,&#32;this&#32;is&#32;for&#32;benchmarking&#32;comparisons&#32;only.&quot;</emphasis>)]
<anchor xml:id="__array_serialize_ext_8cs_source_1l01035"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a020be61582542cdc4b72fc0c214a0881">01035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_ext_1a020be61582542cdc4b72fc0c214a0881">ReadArrayOutSafe</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;srcStartPos,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_ext_8cs_source_1l01036"/>01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l01037"/>01037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_ext_8cs_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;srcStartPos;
<anchor xml:id="__array_serialize_ext_8cs_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_ext_8cs_source_1l01041"/>01041 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Add&#32;len&#32;checks</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l01043"/>01043 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_ext_8cs_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_ext_8cs_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_ext_8cs_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;source.Read(ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.Write(val,&#32;ref&#32;bitposition,&#32;cnt);
<anchor xml:id="__array_serialize_ext_8cs_source_1l01049"/>01049 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_ext_8cs_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l01053"/>01053 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01054"/>01054 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_ext_8cs_source_1l01055"/>01055 
<anchor xml:id="__array_serialize_ext_8cs_source_1l01056"/>01056 &#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_ext_8cs_source_1l01057"/>01057 }
<anchor xml:id="__array_serialize_ext_8cs_source_1l01058"/>01058 
</programlisting></section>
