<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__array_serialize_unsafe_8cs_source" xml:lang="en-US">
<title>ArraySerializeUnsafe.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArraySerializeUnsafe.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__array_serialize_unsafe_8cs_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00002"/>00002 <emphasis role="comment">*&#32;The&#32;MIT&#32;License&#32;(MIT)</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00003"/>00003 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00004"/>00004 <emphasis role="comment">*&#32;Copyright&#32;(c)&#32;2018-2019&#32;Davin&#32;Carten&#32;(emotitron)&#32;(davincarten@gmail.com)</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00005"/>00005 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00006"/>00006 <emphasis role="comment">*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00007"/>00007 <emphasis role="comment">*&#32;of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00008"/>00008 <emphasis role="comment">*&#32;in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00009"/>00009 <emphasis role="comment">*&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00010"/>00010 <emphasis role="comment">*&#32;copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00011"/>00011 <emphasis role="comment">*&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00012"/>00012 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00013"/>00013 <emphasis role="comment">*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00014"/>00014 <emphasis role="comment">*&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00015"/>00015 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00016"/>00016 <emphasis role="comment">*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00017"/>00017 <emphasis role="comment">*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00018"/>00018 <emphasis role="comment">*&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00019"/>00019 <emphasis role="comment">*&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00020"/>00020 <emphasis role="comment">*&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00021"/>00021 <emphasis role="comment">*&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00022"/>00022 <emphasis role="comment">*&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00023"/>00023 <emphasis role="comment">*/</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00024"/>00024 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00025"/>00025 <emphasis role="preprocessor">#if&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00026"/>00026 <emphasis role="preprocessor">#define&#32;UNITY_ASSERTIONS</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00027"/>00027 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00028"/>00028 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00029"/>00029 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00030"/>00030 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00031"/>00031 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00032"/>00032 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00033"/>00033 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00034"/>00034 {
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00035"/>00035 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00036"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe">ArraySerializeUnsafe</link>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;bufferOverrunMsg&#32;=&#32;<emphasis role="stringliteral">&quot;Byte&#32;buffer&#32;overrun.&#32;Dataloss&#32;will&#32;occur.&quot;</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00039"/>00039 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00040"/>00040 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Read/Write&#32;Signed&#32;Value</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00041"/>00041 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00047"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aad43a38228ed7e77b5968bc763066d6b">00047</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aad43a38228ed7e77b5968bc763066d6b">WriteSigned</link>(ulong*&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(buffer,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00052"/>00052 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00058"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a617954426c11928e6a29924c86904f5a">00058</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a617954426c11928e6a29924c86904f5a">AppendSigned</link>(ulong*&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(buffer,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00063"/>00063 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00068"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1adca7942800067de6810fcfcd6bb914b0">00068</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1adca7942800067de6810fcfcd6bb914b0">AddSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00077"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a85438055b159698a8b89e0da7c2b075b">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a85438055b159698a8b89e0da7c2b075b">AddSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00086"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aa0ff6c4cfe32ef06ea8e0032f452f173">00086</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aa0ff6c4cfe32ef06ea8e0032f452f173">AddSigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00091"/>00091 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Inject</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00097"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aab34e3abe5d73cb6d8db9bcbe4cedfa3">00097</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aab34e3abe5d73cb6d8db9bcbe4cedfa3">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00106"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ad249b0e7b5f309b7de58ff3c8cdc7535">00106</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ad249b0e7b5f309b7de58ff3c8cdc7535">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00115"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a20b1f202992101366b7e95d8085fa983">00115</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a20b1f202992101366b7e95d8085fa983">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00120"/>00120 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Poke</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00127"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aa6df4cd317240173d82b6f64b87789b0">00127</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aa6df4cd317240173d82b6f64b87789b0">PokeSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00137"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7dc1b1dabf93068e2acfbfbb5cd56d87">00137</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7dc1b1dabf93068e2acfbfbb5cd56d87">PokeSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00147"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a04d0c93ea6e0ec310d9ffd38f05b3134">00147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a04d0c93ea6e0ec310d9ffd38f05b3134">PokeSigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00152"/>00152 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00157"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a54c616819e08d226c702608cdfac40d7">00157</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a54c616819e08d226c702608cdfac40d7">ReadSigned</link>(ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;value&#32;=&#32;(uint)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(uPtr,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zagzig&#32;=&#32;(int)((value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(int)(value&#32;&amp;&#32;1)));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00163"/>00163 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Peek</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00168"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a918507b8a2f85bea9efb99f1739387f4">00168</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a918507b8a2f85bea9efb99f1739387f4">PeekSigned</link>(ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;value&#32;=&#32;(uint)<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(uPtr,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zagzig&#32;=&#32;(int)((value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(int)(value&#32;&amp;&#32;1)));
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00174"/>00174 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00175"/>00175 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00176"/>00176 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00186"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">00186</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(ulong*&#32;uPtr,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;&lt;=&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00190"/>00190 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;64;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;6;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00195"/>00195 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetmask&#32;=&#32;((1UL&#32;&lt;&lt;&#32;offset)&#32;-&#32;1);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00197"/>00197 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;result&#32;=&#32;(uPtr[index]&#32;&amp;&#32;offsetmask)&#32;|&#32;(value&#32;&lt;&lt;&#32;offset);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uPtr[index]&#32;=&#32;result;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uPtr[index&#32;+&#32;1]&#32;=&#32;result&#32;&gt;&gt;&#32;(MAXBITS&#32;-&#32;offset);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00201"/>00201 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00204"/>00204 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;unsafe&#32;static&#32;void&#32;Add(this&#32;ulong&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;int&#32;bitposition,&#32;int&#32;bits)</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(bits&#32;==&#32;0)</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;return;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00218"/>00218 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;const&#32;int&#32;MAXBITS&#32;=&#32;64;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;const&#32;int&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;int&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;int&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;6;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00223"/>00223 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;ulong&#32;offsetmask&#32;=&#32;((1UL&#32;&lt;&lt;&#32;offset)&#32;-&#32;1);</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00225"/>00225 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;ulong&#32;result&#32;=&#32;(uPtr[index]&#32;&amp;&#32;offsetmask)&#32;|&#32;(value&#32;&lt;&lt;&#32;offset);</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;uPtr[index]&#32;=&#32;result;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;uPtr[index&#32;+&#32;1]&#32;=&#32;result&#32;&gt;&gt;&#32;(MAXBITS&#32;-&#32;offset);</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00229"/>00229 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;bitposition&#32;+=&#32;bits;</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00232"/>00232 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00241"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">00241</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(ulong*&#32;uPtr,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;&lt;=&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00245"/>00245 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;64;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;6;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00250"/>00250 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00252"/>00252 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetmask&#32;=&#32;mask&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetcomp&#32;=&#32;value&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00255"/>00255 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uPtr[index]&#32;=&#32;(uPtr[index]&#32;&amp;&#32;~offsetmask)&#32;|&#32;(offsetcomp&#32;&amp;&#32;offsetmask);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00257"/>00257 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;MAXBITS&#32;-&#32;offset;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00259"/>00259 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset&#32;&lt;&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetmask&#32;=&#32;mask&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetcomp&#32;=&#32;value&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00265"/>00265 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uPtr[index]&#32;=&#32;(uPtr[index]&#32;&amp;&#32;~offsetmask)&#32;|&#32;(offsetcomp&#32;&amp;&#32;offsetmask);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00270"/>00270 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00279"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">00279</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00283"/>00283 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;64;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;just&#32;a&#32;modulus</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;6;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00290"/>00290 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;uPtr[index]&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;|=&#32;uPtr[index&#32;+&#32;1]&#32;&lt;&lt;&#32;(MAXBITS&#32;-&#32;offset);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00293"/>00293 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value&#32;&amp;&#32;mask;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00297"/>00297 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00307"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aac015a19abdb356f790cb158c399d236">00307</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aac015a19abdb356f790cb158c399d236">Read</link>(ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00311"/>00311 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MAXBITS&#32;=&#32;64;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;MODULUS&#32;=&#32;MAXBITS&#32;-&#32;1;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;bitposition&#32;&amp;&#32;MODULUS;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;just&#32;a&#32;modulus</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;bitposition&#32;&gt;&gt;&#32;6;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00316"/>00316 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00318"/>00318 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;value&#32;=&#32;uPtr[index]&#32;&gt;&gt;&#32;offset;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;|=&#32;uPtr[index&#32;+&#32;1]&#32;&lt;&lt;&#32;(MAXBITS&#32;-&#32;offset);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00321"/>00321 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value&#32;&amp;&#32;mask;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00324"/>00324 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00325"/>00325 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Secondary&#32;Add</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00326"/>00326 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00332"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a8eed7af214af22ed7d6e1e3f2b2bea7b">00332</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a8eed7af214af22ed7d6e1e3f2b2bea7b">Add</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00341"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a5e87ce3a31742e47f794b1c0072a228a">00341</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a5e87ce3a31742e47f794b1c0072a228a">Add</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00350"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1adb70cced0326b78bf193dbb27f6d17b8">00350</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1adb70cced0326b78bf193dbb27f6d17b8">Add</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00359"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a31ae951acb8e76fbe6d266ac93eea072">00359</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a31ae951acb8e76fbe6d266ac93eea072">Add</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00363"/>00363 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00369"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ad01291d204934c02e9f7567826b4fb6a">00369</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ad01291d204934c02e9f7567826b4fb6a">AddUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00378"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a64860382bd4f7498d0702855f4915a1f">00378</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a64860382bd4f7498d0702855f4915a1f">AddUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00387"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a16bb9f4bf1b4ee997651c6ea96234b69">00387</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a16bb9f4bf1b4ee997651c6ea96234b69">AddUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00396"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a1b5ae3feac77b751f24556f120457bc3">00396</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a1b5ae3feac77b751f24556f120457bc3">AddUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af41d5ed8a3567a57dcec561e0f5c9ebd">Append</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00400"/>00400 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00401"/>00401 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00402"/>00402 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00403"/>00403 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Secondary&#32;Inject</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00404"/>00404 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00409"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a5abe80710e4749c531f6fe65f8753820">00409</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a5abe80710e4749c531f6fe65f8753820">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00417"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ae1b50d2e1381fd02d5962f282d5ce000">00417</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ae1b50d2e1381fd02d5962f282d5ce000">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00425"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a329c3f02e6b3b655220acd3e4ad44e69">00425</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a329c3f02e6b3b655220acd3e4ad44e69">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00433"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed07bc529f706b9cc0d31655a79e35ac">00433</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed07bc529f706b9cc0d31655a79e35ac">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00442"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ad3f5e32ef0e175a524e917e8e1544ac0">00442</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ad3f5e32ef0e175a524e917e8e1544ac0">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00451"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7fa907b300fdf0fc95f66a6cded17f22">00451</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7fa907b300fdf0fc95f66a6cded17f22">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00460"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a1ae390e133fb1b9ce70c54c2d70f224a">00460</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a1ae390e133fb1b9ce70c54c2d70f224a">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00469"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aff760ad1506a3d4c236ab7b4fdd5d7cd">00469</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aff760ad1506a3d4c236ab7b4fdd5d7cd">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ulong*&#32;uPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00473"/>00473 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00474"/>00474 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00475"/>00475 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00476"/>00476 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Secondary&#32;Poke</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00477"/>00477 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00483"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af2bbd46e555555106cfd395a5df09373">00483</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1af2bbd46e555555106cfd395a5df09373">Poke</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00492"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aebc9ea90886b8af4fc06515a194050ce">00492</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aebc9ea90886b8af4fc06515a194050ce">Poke</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00501"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7fc2ffb97ae1499104eb44a33c650a4f">00501</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7fc2ffb97ae1499104eb44a33c650a4f">Poke</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00509"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a3b1c2f21b5952be5177862b1c26552b8">00509</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a3b1c2f21b5952be5177862b1c26552b8">Poke</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00519"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aeca6155e6221e0ac642948cde93b64f1">00519</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aeca6155e6221e0ac642948cde93b64f1">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00529"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a8866cdb143d4df1319dc05aa275d3bf2">00529</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a8866cdb143d4df1319dc05aa275d3bf2">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00539"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aeffb0da43220a32fcc5ccc9def2ba49a">00539</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aeffb0da43220a32fcc5ccc9def2ba49a">PokeUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00549"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a5a17df40fe2c3d8d1861dfbc590e3aec">00549</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a5a17df40fe2c3d8d1861dfbc590e3aec">PokeUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ulong*&#32;uPtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(uPtr,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00553"/>00553 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00554"/>00554 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00555"/>00555 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00556"/>00556 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00557"/>00557 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ReadOut&#32;UInt64[]&#32;To&#32;Array</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00558"/>00558 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00567"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aa29c7e4c647110ee57afcdd9ccc5d8dd">00567</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aa29c7e4c647110ee57afcdd9ccc5d8dd">ReadOutUnsafe</link>(ulong*&#32;sourcePtr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;ulong*&#32;targetPtr,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00571"/>00571 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00574"/>00574 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sourcePtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(targetPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00580"/>00580 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00584"/>00584 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00594"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1afaf99c9f84fc1c0f0f10931768bd76af">00594</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1afaf99c9f84fc1c0f0f10931768bd76af">ReadOutUnsafe</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00600"/>00600 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((targetPos&#32;+&#32;bits)&#32;&lt;=&#32;(target.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((sourcePos&#32;+&#32;bits)&#32;&lt;=&#32;(source.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00603"/>00603 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(ulong*&#32;sPtr&#32;=&#32;source)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(<emphasis role="keywordtype">byte</emphasis>*&#32;_tPtr&#32;=&#32;target)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;tPtr&#32;=&#32;(ulong*)_tPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00608"/>00608 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sPtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(tPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00614"/>00614 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00619"/>00619 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00629"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a2870601c5be42e35dbb81baeaa4d8a75">00629</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a2870601c5be42e35dbb81baeaa4d8a75">ReadOutUnsafe</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;uint[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00635"/>00635 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((targetPos&#32;+&#32;bits)&#32;&lt;=&#32;(target.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((sourcePos&#32;+&#32;bits)&#32;&lt;=&#32;(source.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00638"/>00638 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(ulong*&#32;sPtr&#32;=&#32;source)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(uint*&#32;_tPtr&#32;=&#32;target)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;tPtr&#32;=&#32;(ulong*)_tPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00643"/>00643 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sPtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(tPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00649"/>00649 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00663"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a16878d461a48f656e004dbc15483aca1">00663</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a16878d461a48f656e004dbc15483aca1">ReadOutUnsafe</link>(<emphasis role="keyword">this</emphasis>&#32;ulong[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;ulong[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00669"/>00669 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((targetPos&#32;+&#32;bits)&#32;&lt;=&#32;(target.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((sourcePos&#32;+&#32;bits)&#32;&lt;=&#32;(source.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00672"/>00672 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(ulong*&#32;sPtr&#32;=&#32;source)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(ulong*&#32;tPtr&#32;=&#32;target)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sPtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(tPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00681"/>00681 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00686"/>00686 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00687"/>00687 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00688"/>00688 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00689"/>00689 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ReadOut&#32;UInt32[]&#32;To&#32;Array</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00690"/>00690 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00700"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aa833cc1c3b10ab0f18ca58690df814a8">00700</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aa833cc1c3b10ab0f18ca58690df814a8">ReadOutUnsafe</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00706"/>00706 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((targetPos&#32;+&#32;bits)&#32;&lt;=&#32;(target.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((sourcePos&#32;+&#32;bits)&#32;&lt;=&#32;(source.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00709"/>00709 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(uint*&#32;_sPtr&#32;=&#32;source)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(<emphasis role="keywordtype">byte</emphasis>*&#32;_tPtr&#32;=&#32;target)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;sPtr&#32;=&#32;(ulong*)_sPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;tPtr&#32;=&#32;(ulong*)_tPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00715"/>00715 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sPtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(tPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00721"/>00721 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00735"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ad2245200c53099068ed23d4259ed720a">00735</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ad2245200c53099068ed23d4259ed720a">ReadOutUnsafe</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;uint[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00739"/>00739 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00742"/>00742 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((targetPos&#32;+&#32;bits)&#32;&lt;=&#32;(target.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((sourcePos&#32;+&#32;bits)&#32;&lt;=&#32;(source.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00745"/>00745 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(uint*&#32;_sPtr&#32;=&#32;source)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(uint*&#32;_tPtr&#32;=&#32;target)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;sPtr&#32;=&#32;(ulong*)_sPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;tPtr&#32;=&#32;(ulong*)_tPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00751"/>00751 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sPtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(tPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00757"/>00757 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00771"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ac3c44560ce8b15f8203bbef3c249d46f">00771</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ac3c44560ce8b15f8203bbef3c249d46f">ReadOutUnsafe</link>(<emphasis role="keyword">this</emphasis>&#32;uint[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;ulong[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00777"/>00777 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((targetPos&#32;+&#32;bits)&#32;&lt;=&#32;(target.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((sourcePos&#32;+&#32;bits)&#32;&lt;=&#32;(source.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00780"/>00780 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(uint*&#32;_sPtr&#32;=&#32;source)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(ulong*&#32;tPtr&#32;=&#32;target)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;sPtr&#32;=&#32;(ulong*)_sPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00785"/>00785 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sPtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(tPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00791"/>00791 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00796"/>00796 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00797"/>00797 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00798"/>00798 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00799"/>00799 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ReadOut&#32;UInt8[]&#32;to&#32;Array</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00800"/>00800 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00810"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a1bb8f817269d8af044c064423934edee">00810</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a1bb8f817269d8af044c064423934edee">ReadOutUnsafe</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;ulong[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00814"/>00814 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00817"/>00817 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((targetPos&#32;+&#32;bits)&#32;&lt;=&#32;(target.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((sourcePos&#32;+&#32;bits)&#32;&lt;=&#32;(source.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00820"/>00820 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(<emphasis role="keywordtype">byte</emphasis>*&#32;_sPtr&#32;=&#32;source)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(ulong*&#32;tPtr&#32;=&#32;target)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;sPtr&#32;=&#32;(ulong*)_sPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00825"/>00825 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sPtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(tPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00831"/>00831 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00836"/>00836 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00846"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7081dc037149909905051d9d4a3a44c8">00846</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7081dc037149909905051d9d4a3a44c8">ReadOutUnsafe</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;uint[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00850"/>00850 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00853"/>00853 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((targetPos&#32;+&#32;bits)&#32;&lt;=&#32;(target.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((sourcePos&#32;+&#32;bits)&#32;&lt;=&#32;(source.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00856"/>00856 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(<emphasis role="keywordtype">byte</emphasis>*&#32;_sPtr&#32;=&#32;source)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(uint*&#32;_tPtr&#32;=&#32;target)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;sPtr&#32;=&#32;(ulong*)_sPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;tPtr&#32;=&#32;(ulong*)_tPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00862"/>00862 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sPtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(tPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00868"/>00868 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00882"/><link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ae5dc5927725bd8713a88e1a039120964">00882</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;unsafe&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1ae5dc5927725bd8713a88e1a039120964">ReadOutUnsafe</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;source,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sourcePos,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;target,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetPos,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bits&#32;==&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00886"/>00886 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readpos&#32;=&#32;sourcePos;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;remaining&#32;=&#32;bits;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00889"/>00889 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((targetPos&#32;+&#32;bits)&#32;&lt;=&#32;(target.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((sourcePos&#32;+&#32;bits)&#32;&lt;=&#32;(source.Length&#32;&lt;&lt;&#32;3),&#32;bufferOverrunMsg);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00892"/>00892 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(<emphasis role="keywordtype">byte</emphasis>*&#32;_sPtr&#32;=&#32;source)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixed&#32;(<emphasis role="keywordtype">byte</emphasis>*&#32;_tPtr&#32;=&#32;target)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;sPtr&#32;=&#32;(ulong*)_sPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong*&#32;tPtr&#32;=&#32;(ulong*)_tPtr;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00898"/>00898 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remaining&#32;&gt;&#32;0)
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;remaining&#32;&gt;&#32;64&#32;?&#32;64&#32;:&#32;remaining;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b">Read</link>(sPtr,&#32;ref&#32;readpos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1">Write</link>(tPtr,&#32;val,&#32;ref&#32;targetPos,&#32;cnt);
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00904"/>00904 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;-=&#32;cnt;
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00909"/>00909 
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00910"/>00910 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;}
<anchor xml:id="__array_serialize_unsafe_8cs_source_1l00912"/>00912 }
</programlisting></section>
