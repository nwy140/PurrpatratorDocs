<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__bezier_spline_8cs_source" xml:lang="en-US">
<title>BezierSpline.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Demos/DemoSlotRacer/Scripts/BezierCurve/BezierSpline.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__bezier_spline_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;Bezier.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;Part&#32;of:&#32;Photon&#32;Unity&#32;Networking&#32;Demos</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;Original:&#32;http://catlikecoding.com/unity/tutorials/curves-and-splines/</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&#32;Used&#32;in&#32;SlotRacer&#32;Demo</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00010"/>00010 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00011"/>00011 
<anchor xml:id="__bezier_spline_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__bezier_spline_8cs_source_1l00013"/>00013 
<anchor xml:id="__bezier_spline_8cs_source_1l00014"/>00014 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__bezier_spline_8cs_source_1l00015"/>00015 
<anchor xml:id="__bezier_spline_8cs_source_1l00016"/>00016 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils">Photon.Pun.Demo.SlotRacer.Utils</link>
<anchor xml:id="__bezier_spline_8cs_source_1l00017"/>00017 {
<anchor xml:id="__bezier_spline_8cs_source_1l00018"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline">BezierSpline</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__bezier_spline_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__bezier_spline_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3[]&#32;points;
<anchor xml:id="__bezier_spline_8cs_source_1l00022"/>00022 
<anchor xml:id="__bezier_spline_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__bezier_spline_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;lengths;
<anchor xml:id="__bezier_spline_8cs_source_1l00025"/>00025 
<anchor xml:id="__bezier_spline_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__bezier_spline_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;lengthsTime;
<anchor xml:id="__bezier_spline_8cs_source_1l00028"/>00028 
<anchor xml:id="__bezier_spline_8cs_source_1l00029"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1ada3e95177981740ee2256110a4bcb96d">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1ada3e95177981740ee2256110a4bcb96d">TotalLength</link>;
<anchor xml:id="__bezier_spline_8cs_source_1l00030"/>00030 
<anchor xml:id="__bezier_spline_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__bezier_spline_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1a23f89bced10ef110018bd903488b51a1">BezierControlPointMode</link>[]&#32;modes;
<anchor xml:id="__bezier_spline_8cs_source_1l00033"/>00033 
<anchor xml:id="__bezier_spline_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__bezier_spline_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;loop;
<anchor xml:id="__bezier_spline_8cs_source_1l00036"/>00036 
<anchor xml:id="__bezier_spline_8cs_source_1l00037"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a7293fb1a280fb743d588fbe3242463cd">00037</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a7293fb1a280fb743d588fbe3242463cd">Loop</link>
<anchor xml:id="__bezier_spline_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;loop;
<anchor xml:id="__bezier_spline_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loop&#32;=&#32;value;
<anchor xml:id="__bezier_spline_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modes[modes.Length&#32;-&#32;1]&#32;=&#32;modes[0];
<anchor xml:id="__bezier_spline_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1aa32483d6a9ccf491be4d29fafa2b1d1d">SetControlPoint</link>(0,&#32;points[0]);
<anchor xml:id="__bezier_spline_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00050"/>00050 
<anchor xml:id="__bezier_spline_8cs_source_1l00051"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1acfd3abeb1020e4c3f04d274d88d8fb7a">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1acfd3abeb1020e4c3f04d274d88d8fb7a">ControlPointCount</link>
<anchor xml:id="__bezier_spline_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;points.Length;
<anchor xml:id="__bezier_spline_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00057"/>00057 
<anchor xml:id="__bezier_spline_8cs_source_1l00058"/>00058 
<anchor xml:id="__bezier_spline_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__bezier_spline_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1ac563b5947b103ffc039b5143a4c574ff">ComputeLengths</link>();
<anchor xml:id="__bezier_spline_8cs_source_1l00062"/>00062 
<anchor xml:id="__bezier_spline_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00064"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a82b7b22d343a6ab62d76d9562c59beaf">00064</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a82b7b22d343a6ab62d76d9562c59beaf">GetControlPoint</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__bezier_spline_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;points[index];
<anchor xml:id="__bezier_spline_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00068"/>00068 
<anchor xml:id="__bezier_spline_8cs_source_1l00069"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1aa32483d6a9ccf491be4d29fafa2b1d1d">00069</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1aa32483d6a9ccf491be4d29fafa2b1d1d">SetControlPoint</link>(<emphasis role="keywordtype">int</emphasis>&#32;index,&#32;Vector3&#32;point)
<anchor xml:id="__bezier_spline_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;%&#32;3&#32;==&#32;0)
<anchor xml:id="__bezier_spline_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;delta&#32;=&#32;point&#32;-&#32;points[index];
<anchor xml:id="__bezier_spline_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(loop)
<anchor xml:id="__bezier_spline_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;0)
<anchor xml:id="__bezier_spline_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[1]&#32;+=&#32;delta;
<anchor xml:id="__bezier_spline_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[points.Length&#32;-&#32;2]&#32;+=&#32;delta;
<anchor xml:id="__bezier_spline_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[points.Length&#32;-&#32;1]&#32;=&#32;point;
<anchor xml:id="__bezier_spline_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;points.Length&#32;-&#32;1)
<anchor xml:id="__bezier_spline_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[0]&#32;=&#32;point;
<anchor xml:id="__bezier_spline_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[1]&#32;+=&#32;delta;
<anchor xml:id="__bezier_spline_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[index&#32;-&#32;1]&#32;+=&#32;delta;
<anchor xml:id="__bezier_spline_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[index&#32;-&#32;1]&#32;+=&#32;delta;
<anchor xml:id="__bezier_spline_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[index&#32;+&#32;1]&#32;+=&#32;delta;
<anchor xml:id="__bezier_spline_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&gt;&#32;0)
<anchor xml:id="__bezier_spline_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[index&#32;-&#32;1]&#32;+=&#32;delta;
<anchor xml:id="__bezier_spline_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;+&#32;1&#32;&lt;&#32;points.Length)
<anchor xml:id="__bezier_spline_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[index&#32;+&#32;1]&#32;+=&#32;delta;
<anchor xml:id="__bezier_spline_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[index]&#32;=&#32;point;
<anchor xml:id="__bezier_spline_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnforceMode(index);
<anchor xml:id="__bezier_spline_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00109"/>00109 
<anchor xml:id="__bezier_spline_8cs_source_1l00110"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a3b7d3dbe4bb98d09407bba590bffb9dd">00110</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1a23f89bced10ef110018bd903488b51a1">BezierControlPointMode</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a3b7d3dbe4bb98d09407bba590bffb9dd">GetControlPointMode</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__bezier_spline_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;modes[(index&#32;+&#32;1)&#32;/&#32;3];
<anchor xml:id="__bezier_spline_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00114"/>00114 
<anchor xml:id="__bezier_spline_8cs_source_1l00115"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1aad3dac668441bdea39be3d56d0990b57">00115</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1aad3dac668441bdea39be3d56d0990b57">SetControlPointMode</link>(<emphasis role="keywordtype">int</emphasis>&#32;index,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1a23f89bced10ef110018bd903488b51a1">BezierControlPointMode</link>&#32;mode)
<anchor xml:id="__bezier_spline_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;modeIndex&#32;=&#32;(index&#32;+&#32;1)&#32;/&#32;3;
<anchor xml:id="__bezier_spline_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modes[modeIndex]&#32;=&#32;mode;
<anchor xml:id="__bezier_spline_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(loop)
<anchor xml:id="__bezier_spline_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(modeIndex&#32;==&#32;0)&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modes[modes.Length&#32;-&#32;1]&#32;=&#32;mode;
<anchor xml:id="__bezier_spline_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(modeIndex&#32;==&#32;modes.Length&#32;-&#32;1)&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modes[0]&#32;=&#32;mode;
<anchor xml:id="__bezier_spline_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnforceMode(index);
<anchor xml:id="__bezier_spline_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00130"/>00130 
<anchor xml:id="__bezier_spline_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EnforceMode(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__bezier_spline_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;modeIndex&#32;=&#32;(index&#32;+&#32;1)&#32;/&#32;3;
<anchor xml:id="__bezier_spline_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1a23f89bced10ef110018bd903488b51a1">BezierControlPointMode</link>&#32;mode&#32;=&#32;modes[modeIndex];
<anchor xml:id="__bezier_spline_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1a23f89bced10ef110018bd903488b51a1">BezierControlPointMode</link>.Free&#32;||&#32;!loop&#32;&amp;&amp;&#32;(modeIndex&#32;==&#32;0&#32;||&#32;modeIndex&#32;==&#32;modes.Length&#32;-&#32;1))
<anchor xml:id="__bezier_spline_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__bezier_spline_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00139"/>00139 
<anchor xml:id="__bezier_spline_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;middleIndex&#32;=&#32;modeIndex&#32;*&#32;3;
<anchor xml:id="__bezier_spline_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fixedIndex,&#32;enforcedIndex;
<anchor xml:id="__bezier_spline_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&lt;=&#32;middleIndex)
<anchor xml:id="__bezier_spline_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixedIndex&#32;=&#32;middleIndex&#32;-&#32;1;
<anchor xml:id="__bezier_spline_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fixedIndex&#32;&lt;&#32;0)
<anchor xml:id="__bezier_spline_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixedIndex&#32;=&#32;points.Length&#32;-&#32;2;
<anchor xml:id="__bezier_spline_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enforcedIndex&#32;=&#32;middleIndex&#32;+&#32;1;
<anchor xml:id="__bezier_spline_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enforcedIndex&#32;&gt;=&#32;points.Length)
<anchor xml:id="__bezier_spline_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enforcedIndex&#32;=&#32;1;
<anchor xml:id="__bezier_spline_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixedIndex&#32;=&#32;middleIndex&#32;+&#32;1;
<anchor xml:id="__bezier_spline_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fixedIndex&#32;&gt;=&#32;points.Length)
<anchor xml:id="__bezier_spline_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixedIndex&#32;=&#32;1;
<anchor xml:id="__bezier_spline_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enforcedIndex&#32;=&#32;middleIndex&#32;-&#32;1;
<anchor xml:id="__bezier_spline_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enforcedIndex&#32;&lt;&#32;0)
<anchor xml:id="__bezier_spline_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enforcedIndex&#32;=&#32;points.Length&#32;-&#32;2;
<anchor xml:id="__bezier_spline_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00167"/>00167 
<anchor xml:id="__bezier_spline_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;middle&#32;=&#32;points[middleIndex];
<anchor xml:id="__bezier_spline_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;enforcedTangent&#32;=&#32;middle&#32;-&#32;points[fixedIndex];
<anchor xml:id="__bezier_spline_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1a23f89bced10ef110018bd903488b51a1">BezierControlPointMode</link>.Aligned)
<anchor xml:id="__bezier_spline_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enforcedTangent&#32;=&#32;enforcedTangent.normalized&#32;*&#32;Vector3.Distance(middle,&#32;points[enforcedIndex]);
<anchor xml:id="__bezier_spline_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[enforcedIndex]&#32;=&#32;middle&#32;+&#32;enforcedTangent;
<anchor xml:id="__bezier_spline_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00176"/>00176 
<anchor xml:id="__bezier_spline_8cs_source_1l00177"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1aa70f2eeddf5169433ac9c299a18bac2b">00177</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1aa70f2eeddf5169433ac9c299a18bac2b">CurveCount</link>
<anchor xml:id="__bezier_spline_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(points.Length&#32;-&#32;1)&#32;/&#32;3;
<anchor xml:id="__bezier_spline_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00183"/>00183 
<anchor xml:id="__bezier_spline_8cs_source_1l00184"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a781ddf5344420bfeb2f5bf8413fcaa54">00184</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a781ddf5344420bfeb2f5bf8413fcaa54">GetPoint</link>(<emphasis role="keywordtype">float</emphasis>&#32;t)
<anchor xml:id="__bezier_spline_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="__bezier_spline_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;&gt;=&#32;1f)
<anchor xml:id="__bezier_spline_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;1f;
<anchor xml:id="__bezier_spline_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;points.Length&#32;-&#32;4;
<anchor xml:id="__bezier_spline_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;Mathf.Clamp01(t)&#32;*&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1aa70f2eeddf5169433ac9c299a18bac2b">CurveCount</link>;
<anchor xml:id="__bezier_spline_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;(int)t;
<anchor xml:id="__bezier_spline_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;-=&#32;i;
<anchor xml:id="__bezier_spline_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;*=&#32;3;
<anchor xml:id="__bezier_spline_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;transform.TransformPoint(<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier">Bezier</link>.<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_1a92b639bbe28e91ebf634d21804d19b50">GetPoint</link>(points[i],&#32;points[i&#32;+&#32;1],&#32;points[i&#32;+&#32;2],&#32;points[i&#32;+&#32;3],&#32;t));
<anchor xml:id="__bezier_spline_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__bezier_spline_8cs_source_1l00202"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a710a65cb21a8c0c861e78073c1cd2972">00202</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a710a65cb21a8c0c861e78073c1cd2972">GetVelocity</link>(<emphasis role="keywordtype">float</emphasis>&#32;t)
<anchor xml:id="__bezier_spline_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="__bezier_spline_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;&gt;=&#32;1f)
<anchor xml:id="__bezier_spline_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;1f;
<anchor xml:id="__bezier_spline_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;points.Length&#32;-&#32;4;
<anchor xml:id="__bezier_spline_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;Mathf.Clamp01(t)&#32;*&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1aa70f2eeddf5169433ac9c299a18bac2b">CurveCount</link>;
<anchor xml:id="__bezier_spline_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;(int)t;
<anchor xml:id="__bezier_spline_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;-=&#32;i;
<anchor xml:id="__bezier_spline_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;*=&#32;3;
<anchor xml:id="__bezier_spline_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;transform.TransformPoint(<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier">Bezier</link>.<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_1abe7d75f2a21945ddda206a7c9d655801">GetFirstDerivative</link>(points[i],&#32;points[i&#32;+&#32;1],&#32;points[i&#32;+&#32;2],&#32;points[i&#32;+&#32;3],&#32;t))&#32;-&#32;transform.position;
<anchor xml:id="__bezier_spline_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__bezier_spline_8cs_source_1l00220"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1ab35c04ba6acf62df7603be053f4f7d22">00220</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1ab35c04ba6acf62df7603be053f4f7d22">GetDirection</link>(<emphasis role="keywordtype">float</emphasis>&#32;t)
<anchor xml:id="__bezier_spline_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a710a65cb21a8c0c861e78073c1cd2972">GetVelocity</link>(t).normalized;
<anchor xml:id="__bezier_spline_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00224"/>00224 
<anchor xml:id="__bezier_spline_8cs_source_1l00225"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a6fd38285f4e828f299c22c045b32429f">00225</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a6fd38285f4e828f299c22c045b32429f">AddCurve</link>&#32;()
<anchor xml:id="__bezier_spline_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;point&#32;=&#32;points[points.Length&#32;-&#32;1];
<anchor xml:id="__bezier_spline_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Array.Resize(ref&#32;points,&#32;points.Length&#32;+&#32;3);
<anchor xml:id="__bezier_spline_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.x&#32;+=&#32;1f;
<anchor xml:id="__bezier_spline_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[points.Length&#32;-&#32;3]&#32;=&#32;point;
<anchor xml:id="__bezier_spline_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.x&#32;+=&#32;1f;
<anchor xml:id="__bezier_spline_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[points.Length&#32;-&#32;2]&#32;=&#32;point;
<anchor xml:id="__bezier_spline_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point.x&#32;+=&#32;1f;
<anchor xml:id="__bezier_spline_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[points.Length&#32;-&#32;1]&#32;=&#32;point;
<anchor xml:id="__bezier_spline_8cs_source_1l00235"/>00235 
<anchor xml:id="__bezier_spline_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Array.Resize(ref&#32;modes,&#32;modes.Length&#32;+&#32;1);
<anchor xml:id="__bezier_spline_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modes[modes.Length&#32;-&#32;1]&#32;=&#32;modes[modes.Length&#32;-&#32;2];
<anchor xml:id="__bezier_spline_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnforceMode(points.Length&#32;-&#32;4);
<anchor xml:id="__bezier_spline_8cs_source_1l00239"/>00239 
<anchor xml:id="__bezier_spline_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(loop)
<anchor xml:id="__bezier_spline_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points[points.Length&#32;-&#32;1]&#32;=&#32;points[0];
<anchor xml:id="__bezier_spline_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modes[modes.Length&#32;-&#32;1]&#32;=&#32;modes[0];
<anchor xml:id="__bezier_spline_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnforceMode(0);
<anchor xml:id="__bezier_spline_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__bezier_spline_8cs_source_1l00248"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1ac70cb013d16d5bf194f4d48c91f01fd0">00248</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1ac70cb013d16d5bf194f4d48c91f01fd0">Reset</link>()
<anchor xml:id="__bezier_spline_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[]&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(1f,&#32;0f,&#32;0f),
<anchor xml:id="__bezier_spline_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(2f,&#32;0f,&#32;0f),
<anchor xml:id="__bezier_spline_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(3f,&#32;0f,&#32;0f),
<anchor xml:id="__bezier_spline_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(4f,&#32;0f,&#32;0f)
<anchor xml:id="__bezier_spline_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__bezier_spline_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1a23f89bced10ef110018bd903488b51a1">BezierControlPointMode</link>[]&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1a23f89bced10ef110018bd903488b51a1">BezierControlPointMode</link>.Free,
<anchor xml:id="__bezier_spline_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1a23f89bced10ef110018bd903488b51a1">BezierControlPointMode</link>.Free
<anchor xml:id="__bezier_spline_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__bezier_spline_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00261"/>00261 
<anchor xml:id="__bezier_spline_8cs_source_1l00262"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1ac563b5947b103ffc039b5143a4c574ff">00262</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1ac563b5947b103ffc039b5143a4c574ff">ComputeLengths</link>()
<anchor xml:id="__bezier_spline_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;subDivisions&#32;=&#32;100;
<anchor xml:id="__bezier_spline_8cs_source_1l00265"/>00265 
<anchor xml:id="__bezier_spline_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;totalSamples&#32;=&#32;points.Length&#32;*&#32;subDivisions;
<anchor xml:id="__bezier_spline_8cs_source_1l00267"/>00267 
<anchor xml:id="__bezier_spline_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;lets&#32;create&#32;lengths&#32;for&#32;each&#32;control&#32;point.</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.lengths&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[totalSamples];
<anchor xml:id="__bezier_spline_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.lengthsTime&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[totalSamples];
<anchor xml:id="__bezier_spline_8cs_source_1l00271"/>00271 
<anchor xml:id="__bezier_spline_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;totalDistance&#32;=&#32;0;
<anchor xml:id="__bezier_spline_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;CurrentTime&#32;=&#32;0f;
<anchor xml:id="__bezier_spline_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__bezier_spline_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;pos;
<anchor xml:id="__bezier_spline_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;lastPos&#32;=&#32;this.<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a781ddf5344420bfeb2f5bf8413fcaa54">GetPoint</link>&#32;(0f);
<anchor xml:id="__bezier_spline_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;go&#32;from&#32;the&#32;first,&#32;to&#32;the&#32;second&#32;to&#32;last</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;totalSamples&#32;-&#32;1;&#32;i++)
<anchor xml:id="__bezier_spline_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CurrentTime&#32;=&#32;(1f&#32;*&#32;i)&#32;/&#32;totalSamples;
<anchor xml:id="__bezier_spline_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pos&#32;=&#32;this.<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a781ddf5344420bfeb2f5bf8413fcaa54">GetPoint</link>&#32;(CurrentTime);
<anchor xml:id="__bezier_spline_8cs_source_1l00282"/>00282 
<anchor xml:id="__bezier_spline_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_delta&#32;=&#32;(pos&#32;-&#32;lastPos).magnitude;
<anchor xml:id="__bezier_spline_8cs_source_1l00284"/>00284 
<anchor xml:id="__bezier_spline_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalDistance&#32;+=&#32;_delta&#32;;
<anchor xml:id="__bezier_spline_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.lengths&#32;[i]&#32;=&#32;totalDistance;
<anchor xml:id="__bezier_spline_8cs_source_1l00287"/>00287 
<anchor xml:id="__bezier_spline_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.lengthsTime&#32;[i]&#32;=&#32;CurrentTime;
<anchor xml:id="__bezier_spline_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastPos&#32;=&#32;pos;
<anchor xml:id="__bezier_spline_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00291"/>00291 
<anchor xml:id="__bezier_spline_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TotalLength&#32;=&#32;totalDistance;
<anchor xml:id="__bezier_spline_8cs_source_1l00293"/>00293 
<anchor xml:id="__bezier_spline_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00295"/>00295 
<anchor xml:id="__bezier_spline_8cs_source_1l00296"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a882790bce850708c85428578c2eb1c2c">00296</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a882790bce850708c85428578c2eb1c2c">GetPositionAtDistance</link>(<emphasis role="keywordtype">float</emphasis>&#32;distance,<emphasis role="keywordtype">bool</emphasis>&#32;reverse&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__bezier_spline_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(reverse)
<anchor xml:id="__bezier_spline_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bezier_spline_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance&#32;=&#32;this.TotalLength&#32;-&#32;distance;
<anchor xml:id="__bezier_spline_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00302"/>00302 
<anchor xml:id="__bezier_spline_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance&#32;=&#32;Mathf.Repeat&#32;(distance,&#32;this.TotalLength);
<anchor xml:id="__bezier_spline_8cs_source_1l00304"/>00304 
<anchor xml:id="__bezier_spline_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;make&#32;sure&#32;that&#32;we&#32;are&#32;within&#32;the&#32;total&#32;distance&#32;of&#32;the&#32;points</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(distance&#32;&lt;=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;points[0];
<anchor xml:id="__bezier_spline_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(distance&#32;&gt;=&#32;this.TotalLength)&#32;<emphasis role="keywordflow">return</emphasis>&#32;points[points.Length&#32;-&#32;1];
<anchor xml:id="__bezier_spline_8cs_source_1l00308"/>00308 
<anchor xml:id="__bezier_spline_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;lets&#32;find&#32;the&#32;first&#32;point&#32;that&#32;is&#32;below&#32;the&#32;distance</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;but,&#32;who&apos;s&#32;next&#32;point&#32;is&#32;above&#32;the&#32;distance</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;index&#32;=&#32;0;
<anchor xml:id="__bezier_spline_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(index&#32;&lt;&#32;lengths.Length&#32;-1&#32;&amp;&amp;&#32;lengths[index]&#32;&lt;&#32;distance)
<anchor xml:id="__bezier_spline_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__bezier_spline_8cs_source_1l00314"/>00314 
<anchor xml:id="__bezier_spline_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.Log(&quot;Index&#32;=&quot;+index);</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00316"/>00316 
<anchor xml:id="__bezier_spline_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;get&#32;the&#32;percentage&#32;of&#32;travel&#32;from&#32;the&#32;current&#32;length&#32;to&#32;the&#32;next</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;where&#32;the&#32;distance&#32;is.</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;deltaAmount&#32;=&#32;Mathf.InverseLerp(lengths[index-1],&#32;lengths[index],&#32;distance);</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00320"/>00320 
<anchor xml:id="__bezier_spline_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;deltaDistanceRatio&#32;=&#32;&#32;(distance-lengths[index-1])/(lengths&#32;[index]&#32;-&#32;lengths&#32;[index&#32;-&#32;1])&#32;;
<anchor xml:id="__bezier_spline_8cs_source_1l00322"/>00322 
<anchor xml:id="__bezier_spline_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;deltaTime&#32;=&#32;(lengthsTime&#32;[index]&#32;-&#32;lengthsTime&#32;[index&#32;-&#32;1])&#32;*&#32;deltaDistanceRatio;
<anchor xml:id="__bezier_spline_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//float&#32;splineDistance&#32;=&#32;(lengths&#32;[index&#32;-&#32;1]&#32;+&#32;(lengths&#32;[index]&#32;-&#32;lengths&#32;[index&#32;-&#32;1])&#32;*&#32;amount)&#32;/&#32;this.TotalLength;</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00325"/>00325 
<anchor xml:id="__bezier_spline_8cs_source_1l00326"/>00326 
<anchor xml:id="__bezier_spline_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_bezier_spline_1a781ddf5344420bfeb2f5bf8413fcaa54">GetPoint</link>(this.lengthsTime[index]+deltaTime);
<anchor xml:id="__bezier_spline_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;use&#32;that,&#32;to&#32;get&#32;the&#32;actual&#32;point</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;Vector3.Lerp(points[index-1],&#32;points[index],&#32;amount);</emphasis>
<anchor xml:id="__bezier_spline_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;}
<anchor xml:id="__bezier_spline_8cs_source_1l00332"/>00332 }
</programlisting></section>
