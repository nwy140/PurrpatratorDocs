<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__bit_counter_8cs_source" xml:lang="en-US">
<title>BitCounter.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/BitCounter.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__bit_counter_8cs_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00002"/>00002 <emphasis role="comment">*&#32;The&#32;MIT&#32;License&#32;(MIT)</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00003"/>00003 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00004"/>00004 <emphasis role="comment">*&#32;Copyright&#32;(c)&#32;2018-2019&#32;Davin&#32;Carten&#32;(emotitron)&#32;(davincarten@gmail.com)</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00005"/>00005 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00006"/>00006 <emphasis role="comment">*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00007"/>00007 <emphasis role="comment">*&#32;of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00008"/>00008 <emphasis role="comment">*&#32;in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00009"/>00009 <emphasis role="comment">*&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00010"/>00010 <emphasis role="comment">*&#32;copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00011"/>00011 <emphasis role="comment">*&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00012"/>00012 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00013"/>00013 <emphasis role="comment">*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00014"/>00014 <emphasis role="comment">*&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00015"/>00015 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00016"/>00016 <emphasis role="comment">*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00017"/>00017 <emphasis role="comment">*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00018"/>00018 <emphasis role="comment">*&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00019"/>00019 <emphasis role="comment">*&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00020"/>00020 <emphasis role="comment">*&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00021"/>00021 <emphasis role="comment">*&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00022"/>00022 <emphasis role="comment">*&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00023"/>00023 <emphasis role="comment">*/</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00024"/>00024 
<anchor xml:id="__bit_counter_8cs_source_1l00025"/>00025 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__bit_counter_8cs_source_1l00026"/>00026 
<anchor xml:id="__bit_counter_8cs_source_1l00027"/>00027 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__bit_counter_8cs_source_1l00028"/>00028 {
<anchor xml:id="__bit_counter_8cs_source_1l00029"/>00029 
<anchor xml:id="__bit_counter_8cs_source_1l00030"/><link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548">PackedBitsSize</link>&#32;{&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548ab31df9c476d20e85ff898121efe11b5a">UInt8</link>&#32;=&#32;4,&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548a8bd950a9d7779b83f5c30046c9aaf1cf">UInt16</link>&#32;=&#32;5,&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548ae7956ed7be1c5025a27ed3cb42a396bd">UInt32</link>&#32;=&#32;6,&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548aaf71234725f0470ccf993e263a8b820a">UInt64</link>&#32;=&#32;7&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00031"/><link linkend="_namespace_photon_1_1_compression_1ac32365f7eee7a2fd254b548dcfca700f">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1ac32365f7eee7a2fd254b548dcfca700f">PackedBytesSize</link>&#32;{&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548ab31df9c476d20e85ff898121efe11b5a">UInt8</link>&#32;=&#32;1,&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548a8bd950a9d7779b83f5c30046c9aaf1cf">UInt16</link>&#32;=&#32;2,&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548ae7956ed7be1c5025a27ed3cb42a396bd">UInt32</link>&#32;=&#32;3,&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548aaf71234725f0470ccf993e263a8b820a">UInt64</link>&#32;=&#32;4&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00032"/>00032 
<anchor xml:id="__bit_counter_8cs_source_1l00036"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_bit_counter">BitCounter</link>
<anchor xml:id="__bit_counter_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00038"/>00038 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Count&#32;Used&#32;Bit&#32;Utils</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00039"/>00039 
<anchor xml:id="__bit_counter_8cs_source_1l00040"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa1d0b7ce7ffc43a99503ace9638ef415">00040</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa1d0b7ce7ffc43a99503ace9638ef415">bitPatternToLog2</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[128]&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;<emphasis role="comment">//&#32;change&#32;to&#32;1&#32;if&#32;you&#32;want&#32;bitSize(0)&#32;=&#32;1</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;48,&#32;-1,&#32;-1,&#32;31,&#32;-1,&#32;15,&#32;51,&#32;-1,&#32;63,&#32;5,&#32;-1,&#32;-1,&#32;-1,&#32;19,&#32;-1,
<anchor xml:id="__bit_counter_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;23,&#32;28,&#32;-1,&#32;-1,&#32;-1,&#32;40,&#32;36,&#32;46,&#32;-1,&#32;13,&#32;-1,&#32;-1,&#32;-1,&#32;34,&#32;-1,&#32;58,
<anchor xml:id="__bit_counter_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,&#32;60,&#32;2,&#32;43,&#32;55,&#32;-1,&#32;-1,&#32;-1,&#32;50,&#32;62,&#32;4,&#32;-1,&#32;18,&#32;27,&#32;-1,&#32;39,
<anchor xml:id="__bit_counter_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;45,&#32;-1,&#32;-1,&#32;33,&#32;57,&#32;-1,&#32;1,&#32;54,&#32;-1,&#32;49,&#32;-1,&#32;17,&#32;-1,&#32;-1,&#32;32,&#32;-1,
<anchor xml:id="__bit_counter_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;53,&#32;-1,&#32;16,&#32;-1,&#32;-1,&#32;52,&#32;-1,&#32;-1,&#32;-1,&#32;64,&#32;6,&#32;7,&#32;8,&#32;-1,&#32;9,&#32;-1,
<anchor xml:id="__bit_counter_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,&#32;-1,&#32;20,&#32;10,&#32;-1,&#32;-1,&#32;24,&#32;-1,&#32;29,&#32;-1,&#32;-1,&#32;21,&#32;-1,&#32;11,&#32;-1,&#32;-1,
<anchor xml:id="__bit_counter_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;41,&#32;-1,&#32;25,&#32;37,&#32;-1,&#32;47,&#32;-1,&#32;30,&#32;14,&#32;-1,&#32;-1,&#32;-1,&#32;-1,&#32;22,&#32;-1,&#32;-1,
<anchor xml:id="__bit_counter_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;35,&#32;12,&#32;-1,&#32;-1,&#32;-1,&#32;59,&#32;42,&#32;-1,&#32;-1,&#32;61,&#32;3,&#32;26,&#32;38,&#32;44,&#32;-1,&#32;56
<anchor xml:id="__bit_counter_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__bit_counter_8cs_source_1l00051"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa93c2be142b67140d47437066b18ce23">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa93c2be142b67140d47437066b18ce23">MULTIPLICATOR</link>&#32;=&#32;0x6c04f118e9966f6bUL;
<anchor xml:id="__bit_counter_8cs_source_1l00052"/>00052 
<anchor xml:id="__bit_counter_8cs_source_1l00056"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aeaa849e5cf156b94518b9776517b2c55">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aeaa849e5cf156b94518b9776517b2c55">UsedBitCount</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;val)
<anchor xml:id="__bit_counter_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;1;
<anchor xml:id="__bit_counter_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;2;
<anchor xml:id="__bit_counter_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;4;
<anchor xml:id="__bit_counter_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;8;
<anchor xml:id="__bit_counter_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;16;
<anchor xml:id="__bit_counter_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;32;
<anchor xml:id="__bit_counter_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa1d0b7ce7ffc43a99503ace9638ef415">bitPatternToLog2</link>[(ulong)(val&#32;*&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa93c2be142b67140d47437066b18ce23">MULTIPLICATOR</link>)&#32;&gt;&gt;&#32;57];
<anchor xml:id="__bit_counter_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00066"/>00066 
<anchor xml:id="__bit_counter_8cs_source_1l00070"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a4a80c21b22c8d01d2ceaef156e520528">00070</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a4a80c21b22c8d01d2ceaef156e520528">UsedBitCount</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;val)
<anchor xml:id="__bit_counter_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;1;
<anchor xml:id="__bit_counter_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;2;
<anchor xml:id="__bit_counter_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;4;
<anchor xml:id="__bit_counter_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;8;
<anchor xml:id="__bit_counter_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;16;
<anchor xml:id="__bit_counter_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//v&#32;|=&#32;v&#32;&gt;&gt;&#32;32;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa1d0b7ce7ffc43a99503ace9638ef415">bitPatternToLog2</link>[(ulong)(val&#32;*&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa93c2be142b67140d47437066b18ce23">MULTIPLICATOR</link>)&#32;&gt;&gt;&#32;57];
<anchor xml:id="__bit_counter_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00080"/>00080 
<anchor xml:id="__bit_counter_8cs_source_1l00084"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a77c3bc7eb1b4c0643ef289d5cc972e6b">00084</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a77c3bc7eb1b4c0643ef289d5cc972e6b">UsedBitCount</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;val)
<anchor xml:id="__bit_counter_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;1;
<anchor xml:id="__bit_counter_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;2;
<anchor xml:id="__bit_counter_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;4;
<anchor xml:id="__bit_counter_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;8;
<anchor xml:id="__bit_counter_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;|=&#32;val&#32;&gt;&gt;&#32;16;
<anchor xml:id="__bit_counter_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//v&#32;|=&#32;v&#32;&gt;&gt;&#32;32;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa1d0b7ce7ffc43a99503ace9638ef415">bitPatternToLog2</link>[((ulong)val&#32;*&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa93c2be142b67140d47437066b18ce23">MULTIPLICATOR</link>)&#32;&gt;&gt;&#32;57];
<anchor xml:id="__bit_counter_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00094"/>00094 
<anchor xml:id="__bit_counter_8cs_source_1l00098"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a3d27493134ba8b8c0779ab9f1ed73cd3">00098</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a3d27493134ba8b8c0779ab9f1ed73cd3">UsedBitCount</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;val)
<anchor xml:id="__bit_counter_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;v&#32;=&#32;val;
<anchor xml:id="__bit_counter_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;|=&#32;v&#32;&gt;&gt;&#32;1;
<anchor xml:id="__bit_counter_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;|=&#32;v&#32;&gt;&gt;&#32;2;
<anchor xml:id="__bit_counter_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;|=&#32;v&#32;&gt;&gt;&#32;4;
<anchor xml:id="__bit_counter_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;|=&#32;v&#32;&gt;&gt;&#32;8;
<anchor xml:id="__bit_counter_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//val&#32;|=&#32;val&#32;&gt;&gt;&#32;16;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//v&#32;|=&#32;v&#32;&gt;&gt;&#32;32;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa1d0b7ce7ffc43a99503ace9638ef415">bitPatternToLog2</link>[(ulong)(v&#32;*&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa93c2be142b67140d47437066b18ce23">MULTIPLICATOR</link>)&#32;&gt;&gt;&#32;57];
<anchor xml:id="__bit_counter_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00109"/>00109 
<anchor xml:id="__bit_counter_8cs_source_1l00113"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a2ffe7bc43d0068d978985a5e2964336e">00113</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a2ffe7bc43d0068d978985a5e2964336e">UsedBitCount</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;val)
<anchor xml:id="__bit_counter_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;v&#32;=&#32;val;
<anchor xml:id="__bit_counter_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;|=&#32;v&#32;&gt;&gt;&#32;1;
<anchor xml:id="__bit_counter_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;|=&#32;v&#32;&gt;&gt;&#32;2;
<anchor xml:id="__bit_counter_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;|=&#32;v&#32;&gt;&gt;&#32;4;
<anchor xml:id="__bit_counter_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//v&#32;|=&#32;v&#32;&gt;&gt;&#32;8;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//v&#32;|=&#32;v&#32;&gt;&gt;&#32;16;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//v&#32;|=&#32;v&#32;&gt;&gt;&#32;32;</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa1d0b7ce7ffc43a99503ace9638ef415">bitPatternToLog2</link>[(ulong)(v&#32;*&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1aa93c2be142b67140d47437066b18ce23">MULTIPLICATOR</link>)&#32;&gt;&gt;&#32;57];
<anchor xml:id="__bit_counter_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00124"/>00124 
<anchor xml:id="__bit_counter_8cs_source_1l00125"/>00125 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00126"/>00126 
<anchor xml:id="__bit_counter_8cs_source_1l00127"/>00127 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Count&#32;Used&#32;Bytes&#32;Utils</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00128"/>00128 
<anchor xml:id="__bit_counter_8cs_source_1l00129"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a9526e42e6aae7c383c672304730d5ba2">00129</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a9526e42e6aae7c383c672304730d5ba2">UsedByteCount</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;val)
<anchor xml:id="__bit_counter_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;==&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__bit_counter_8cs_source_1l00133"/>00133 
<anchor xml:id="__bit_counter_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0x000000FF00000000)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0x00FF000000000000)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0xFF00000000000000)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;8;
<anchor xml:id="__bit_counter_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;7;
<anchor xml:id="__bit_counter_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0x0000FF0000000000)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;6;
<anchor xml:id="__bit_counter_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;5;
<anchor xml:id="__bit_counter_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0x0000000000FF0000)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0x00000000FF000000)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;4;
<anchor xml:id="__bit_counter_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;3;
<anchor xml:id="__bit_counter_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0x000000000000FF00)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
<anchor xml:id="__bit_counter_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__bit_counter_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00169"/>00169 
<anchor xml:id="__bit_counter_8cs_source_1l00170"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1ae3a39d72ecdc5b3fdb270871d3f8010a">00170</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1ae3a39d72ecdc5b3fdb270871d3f8010a">UsedByteCount</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;val)
<anchor xml:id="__bit_counter_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;==&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__bit_counter_8cs_source_1l00174"/>00174 
<anchor xml:id="__bit_counter_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0x00FF0000)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0xFF000000)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;4;
<anchor xml:id="__bit_counter_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;3;
<anchor xml:id="__bit_counter_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0x0000FF00)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
<anchor xml:id="__bit_counter_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__bit_counter_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00189"/>00189 
<anchor xml:id="__bit_counter_8cs_source_1l00190"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a731f191a528d580e77a16d00e9d447ad">00190</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a731f191a528d580e77a16d00e9d447ad">UsedByteCount</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;val)
<anchor xml:id="__bit_counter_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;==&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__bit_counter_8cs_source_1l00194"/>00194 
<anchor xml:id="__bit_counter_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((val&#32;&amp;&#32;0xFF00)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
<anchor xml:id="__bit_counter_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__bit_counter_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00200"/>00200 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__bit_counter_8cs_source_1l00201"/>00201 
<anchor xml:id="__bit_counter_8cs_source_1l00202"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a1546238048580ee3e5d38c0c3a5d8586">00202</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a1546238048580ee3e5d38c0c3a5d8586">CountTrueBits</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;val,&#32;<emphasis role="keywordtype">int</emphasis>&#32;range&#32;=&#32;32)
<anchor xml:id="__bit_counter_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00204"/>00204 
<anchor xml:id="__bit_counter_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;truecount&#32;=&#32;0;
<anchor xml:id="__bit_counter_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;range;&#32;++i)
<anchor xml:id="__bit_counter_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tmp&#32;=&#32;val&#32;&gt;&gt;&#32;i;
<anchor xml:id="__bit_counter_8cs_source_1l00209"/>00209 
<anchor xml:id="__bit_counter_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truecount;
<anchor xml:id="__bit_counter_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00214"/>00214 
<anchor xml:id="__bit_counter_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((tmp&#32;&amp;&#32;1)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount++;
<anchor xml:id="__bit_counter_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00220"/>00220 
<anchor xml:id="__bit_counter_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truecount;
<anchor xml:id="__bit_counter_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00223"/>00223 
<anchor xml:id="__bit_counter_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;int&gt;&#32;reusableList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;(32);
<anchor xml:id="__bit_counter_8cs_source_1l00225"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a8d9ba0d4e699e5c8326144c7372dd24b">00225</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1a8d9ba0d4e699e5c8326144c7372dd24b">CountTrueBits</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;val,&#32;out&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;mountTypeIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;range&#32;=&#32;32)
<anchor xml:id="__bit_counter_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableList.Clear();
<anchor xml:id="__bit_counter_8cs_source_1l00228"/>00228 
<anchor xml:id="__bit_counter_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;truecount&#32;=&#32;0;
<anchor xml:id="__bit_counter_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;range;&#32;++i)
<anchor xml:id="__bit_counter_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tmp&#32;=&#32;val&#32;&gt;&gt;&#32;i;
<anchor xml:id="__bit_counter_8cs_source_1l00233"/>00233 
<anchor xml:id="__bit_counter_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mountTypeIndex&#32;=&#32;reusableList.ToArray();
<anchor xml:id="__bit_counter_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truecount;
<anchor xml:id="__bit_counter_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00239"/>00239 
<anchor xml:id="__bit_counter_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((tmp&#32;&amp;&#32;1)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount++;
<anchor xml:id="__bit_counter_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableList.Add(i);
<anchor xml:id="__bit_counter_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00246"/>00246 
<anchor xml:id="__bit_counter_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mountTypeIndex&#32;=&#32;reusableList.ToArray();
<anchor xml:id="__bit_counter_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truecount;
<anchor xml:id="__bit_counter_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00250"/>00250 
<anchor xml:id="__bit_counter_8cs_source_1l00251"/><link linkend="_class_photon_1_1_compression_1_1_bit_counter_1adabd1d528d35d38b0e1be8d380e838c3">00251</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_bit_counter_1adabd1d528d35d38b0e1be8d380e838c3">CountTrueBits</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;val,&#32;out&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;mountTypeIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;range&#32;=&#32;32)
<anchor xml:id="__bit_counter_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableList.Clear();
<anchor xml:id="__bit_counter_8cs_source_1l00254"/>00254 
<anchor xml:id="__bit_counter_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;truecount&#32;=&#32;0;
<anchor xml:id="__bit_counter_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;range;&#32;++i)
<anchor xml:id="__bit_counter_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;tmp&#32;=&#32;val&#32;&gt;&gt;&#32;i;
<anchor xml:id="__bit_counter_8cs_source_1l00259"/>00259 
<anchor xml:id="__bit_counter_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mountTypeIndex&#32;=&#32;reusableList.ToArray();
<anchor xml:id="__bit_counter_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truecount;
<anchor xml:id="__bit_counter_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00265"/>00265 
<anchor xml:id="__bit_counter_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((tmp&#32;&amp;&#32;1)&#32;!=&#32;0)
<anchor xml:id="__bit_counter_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__bit_counter_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount++;
<anchor xml:id="__bit_counter_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableList.Add(i);
<anchor xml:id="__bit_counter_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00272"/>00272 
<anchor xml:id="__bit_counter_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mountTypeIndex&#32;=&#32;reusableList.ToArray();
<anchor xml:id="__bit_counter_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truecount;
<anchor xml:id="__bit_counter_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;}
<anchor xml:id="__bit_counter_8cs_source_1l00277"/>00277 
<anchor xml:id="__bit_counter_8cs_source_1l00278"/>00278 
<anchor xml:id="__bit_counter_8cs_source_1l00279"/>00279 }
<anchor xml:id="__bit_counter_8cs_source_1l00280"/>00280 
</programlisting></section>
