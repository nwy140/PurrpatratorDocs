<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__byte_converter_8cs_source" xml:lang="en-US">
<title>ByteConverter.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Utilities/ByteConverter.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__byte_converter_8cs_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00002"/>00002 <emphasis role="comment">*&#32;The&#32;MIT&#32;License&#32;(MIT)</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00003"/>00003 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00004"/>00004 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00005"/>00005 <emphasis role="comment">*&#32;Copyright&#32;(c)&#32;2012-2013&#32;Fredrik&#32;Holmstrom&#32;(fredrik.johan.holmstrom@gmail.com)</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00006"/>00006 <emphasis role="comment">*&#32;Extended&#32;2018-2019&#32;Davin&#32;Carten&#32;[emotitron]&#32;(davincarten@gmail.com)</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00007"/>00007 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00008"/>00008 <emphasis role="comment">*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00009"/>00009 <emphasis role="comment">*&#32;of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00010"/>00010 <emphasis role="comment">*&#32;in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00011"/>00011 <emphasis role="comment">*&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00012"/>00012 <emphasis role="comment">*&#32;copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00013"/>00013 <emphasis role="comment">*&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00014"/>00014 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00015"/>00015 <emphasis role="comment">*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00016"/>00016 <emphasis role="comment">*&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00017"/>00017 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00018"/>00018 <emphasis role="comment">*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00019"/>00019 <emphasis role="comment">*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00020"/>00020 <emphasis role="comment">*&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00021"/>00021 <emphasis role="comment">*&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00022"/>00022 <emphasis role="comment">*&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00023"/>00023 <emphasis role="comment">*&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00024"/>00024 <emphasis role="comment">*&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00025"/>00025 <emphasis role="comment">*/</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00026"/>00026 
<anchor xml:id="__byte_converter_8cs_source_1l00027"/>00027 <emphasis role="keyword">using</emphasis>&#32;System.Runtime.InteropServices;
<anchor xml:id="__byte_converter_8cs_source_1l00028"/>00028 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__byte_converter_8cs_source_1l00029"/>00029 
<anchor xml:id="__byte_converter_8cs_source_1l00033"/>00033 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__byte_converter_8cs_source_1l00034"/>00034 {
<anchor xml:id="__byte_converter_8cs_source_1l00035"/>00035 
<anchor xml:id="__byte_converter_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;[StructLayout(LayoutKind.Explicit)]
<anchor xml:id="__byte_converter_8cs_source_1l00037"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter">00037</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>
<anchor xml:id="__byte_converter_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00039"/>00039 
<anchor xml:id="__byte_converter_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00041"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ac4c41cfc6e2e9765747c871bf32f995b">00041</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Single&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ac4c41cfc6e2e9765747c871bf32f995b">float32</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00043"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a36ae2d28881483fbab2567aa29b08f95">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Double&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a36ae2d28881483fbab2567aa29b08f95">float64</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00045"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ab5f058b5b6c219d9c92a217294873c00">00045</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;SByte&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ab5f058b5b6c219d9c92a217294873c00">int8</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00047"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a974ee654412963403047dea370517baa">00047</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Int16&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a974ee654412963403047dea370517baa">int16</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00049"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adf83456c7f5996d17d412fb536cc088e">00049</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548a8bd950a9d7779b83f5c30046c9aaf1cf">UInt16</link>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adf83456c7f5996d17d412fb536cc088e">uint16</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00051"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aa59edde589742c4374ab3b0d4c0b9461">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Char&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aa59edde589742c4374ab3b0d4c0b9461">character</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00053"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a8be129ddb644f828222027fd389bd5e2">00053</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Int32&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a8be129ddb644f828222027fd389bd5e2">int32</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00055"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aa515f6f874916387d48bfb14b986fec8">00055</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548ae7956ed7be1c5025a27ed3cb42a396bd">UInt32</link>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aa515f6f874916387d48bfb14b986fec8">uint32</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00057"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ae5067cc33fb65aaa6ea3d60d9346b414">00057</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Int64&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ae5067cc33fb65aaa6ea3d60d9346b414">int64</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00059"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a57d062fb094384a544a7415c7355df67">00059</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548aaf71234725f0470ccf993e263a8b820a">UInt64</link>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a57d062fb094384a544a7415c7355df67">uint64</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00060"/>00060 
<anchor xml:id="__byte_converter_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__byte_converter_8cs_source_1l00062"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adcdcb454d20529defe0681f784b34228">00062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Byte&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adcdcb454d20529defe0681f784b34228">byte0</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(1)]
<anchor xml:id="__byte_converter_8cs_source_1l00064"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a64a95050b56d1ea85c427de7e7c11c39">00064</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Byte&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a64a95050b56d1ea85c427de7e7c11c39">byte1</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(2)]
<anchor xml:id="__byte_converter_8cs_source_1l00066"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a57bd7760cc7a20df7eaf2a66dcc73291">00066</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Byte&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a57bd7760cc7a20df7eaf2a66dcc73291">byte2</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(3)]
<anchor xml:id="__byte_converter_8cs_source_1l00068"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a3f5e73f4ba44eba913fa24d9c73aecc2">00068</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Byte&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a3f5e73f4ba44eba913fa24d9c73aecc2">byte3</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(4)]
<anchor xml:id="__byte_converter_8cs_source_1l00070"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a1d4148956f49b15c2a64cc38939dc83a">00070</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Byte&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a1d4148956f49b15c2a64cc38939dc83a">byte4</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(5)]
<anchor xml:id="__byte_converter_8cs_source_1l00072"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a5d36813da1e362b0aa787b6d6d42f712">00072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Byte&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a5d36813da1e362b0aa787b6d6d42f712">byte5</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(6)]
<anchor xml:id="__byte_converter_8cs_source_1l00074"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ae0ec29a9e8ab391485e3dc4a16e10a9a">00074</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Byte&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ae0ec29a9e8ab391485e3dc4a16e10a9a">byte6</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(7)]
<anchor xml:id="__byte_converter_8cs_source_1l00076"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a7f05a220828ff1a5a82eb0e64b46ab39">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Byte&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a7f05a220828ff1a5a82eb0e64b46ab39">byte7</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00077"/>00077 
<anchor xml:id="__byte_converter_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(4)]
<anchor xml:id="__byte_converter_8cs_source_1l00082"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aedf27b0f5255e633bd8723267de430c8">00082</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;uint&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aedf27b0f5255e633bd8723267de430c8">uint16_B</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00083"/>00083 
<anchor xml:id="__byte_converter_8cs_source_1l00084"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a38bb27553b9f4a65203849fd43bd579f">00084</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a38bb27553b9f4a65203849fd43bd579f">GetBytes</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;target,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;4)
<anchor xml:id="__byte_converter_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;++i)
<anchor xml:id="__byte_converter_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target[i]&#32;=&#32;<emphasis role="keyword">this</emphasis>[i];
<anchor xml:id="__byte_converter_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00089"/>00089 
<anchor xml:id="__byte_converter_8cs_source_1l00095"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a50082c346153e913729ff143067385b2">00095</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Byte&#32;<emphasis role="keyword">this</emphasis>[<emphasis role="keywordtype">int</emphasis>&#32;index]
<anchor xml:id="__byte_converter_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(index)
<anchor xml:id="__byte_converter_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adcdcb454d20529defe0681f784b34228">byte0</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a64a95050b56d1ea85c427de7e7c11c39">byte1</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a57bd7760cc7a20df7eaf2a66dcc73291">byte2</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a3f5e73f4ba44eba913fa24d9c73aecc2">byte3</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a1d4148956f49b15c2a64cc38939dc83a">byte4</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;5:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a5d36813da1e362b0aa787b6d6d42f712">byte5</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;6:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ae0ec29a9e8ab391485e3dc4a16e10a9a">byte6</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;7:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a7f05a220828ff1a5a82eb0e64b46ab39">byte7</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__byte_converter_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert((index&#32;&gt;=&#32;8),&#32;<emphasis role="stringliteral">&quot;Index&#32;value&#32;of&#32;&quot;</emphasis>&#32;+&#32;index&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;is&#32;invalid.&#32;ByteConverter&#32;this[]&#32;indexer&#32;must&#32;be&#32;a&#32;value&#32;between&#32;0&#32;and&#32;7.&quot;</emphasis>);
<anchor xml:id="__byte_converter_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__byte_converter_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00115"/>00115 
<anchor xml:id="__byte_converter_8cs_source_1l00116"/>00116 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Implicit&#32;To&#32;ByteConverter</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00117"/>00117 
<anchor xml:id="__byte_converter_8cs_source_1l00118"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a5804e95c4e23468d02ea9378a496d989">00118</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes)
<anchor xml:id="__byte_converter_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00121"/>00121 
<anchor xml:id="__byte_converter_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len&#32;=&#32;bytes.Length;
<anchor xml:id="__byte_converter_8cs_source_1l00123"/>00123 
<anchor xml:id="__byte_converter_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adcdcb454d20529defe0681f784b34228">byte0</link>&#32;=&#32;bytes[0];
<anchor xml:id="__byte_converter_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;0)&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a64a95050b56d1ea85c427de7e7c11c39">byte1</link>&#32;=&#32;bytes[1];
<anchor xml:id="__byte_converter_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;1)&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a57bd7760cc7a20df7eaf2a66dcc73291">byte2</link>&#32;=&#32;bytes[2];
<anchor xml:id="__byte_converter_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;2)&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a3f5e73f4ba44eba913fa24d9c73aecc2">byte3</link>&#32;=&#32;bytes[3];
<anchor xml:id="__byte_converter_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;3)&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a1d4148956f49b15c2a64cc38939dc83a">byte4</link>&#32;=&#32;bytes[4];
<anchor xml:id="__byte_converter_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;4)&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a5d36813da1e362b0aa787b6d6d42f712">byte5</link>&#32;=&#32;bytes[5];
<anchor xml:id="__byte_converter_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;5)&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ae0ec29a9e8ab391485e3dc4a16e10a9a">byte6</link>&#32;=&#32;bytes[3];
<anchor xml:id="__byte_converter_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;6)&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a7f05a220828ff1a5a82eb0e64b46ab39">byte7</link>&#32;=&#32;bytes[7];
<anchor xml:id="__byte_converter_8cs_source_1l00132"/>00132 
<anchor xml:id="__byte_converter_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00135"/>00135 
<anchor xml:id="__byte_converter_8cs_source_1l00136"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a5145a35fcb61e4f4288ec2d4b7f2f76e">00136</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(Byte&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adcdcb454d20529defe0681f784b34228">byte0</link>&#32;=&#32;val;
<anchor xml:id="__byte_converter_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00142"/>00142 
<anchor xml:id="__byte_converter_8cs_source_1l00143"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ad5520284e64f8405225230de7caa6d3e">00143</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(SByte&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ab5f058b5b6c219d9c92a217294873c00">int8</link>&#32;=&#32;val;
<anchor xml:id="__byte_converter_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00149"/>00149 
<anchor xml:id="__byte_converter_8cs_source_1l00150"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a645799f85bd4056b2e3f6d90c9070ca6">00150</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(Char&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aa59edde589742c4374ab3b0d4c0b9461">character</link>&#32;=&#32;val;
<anchor xml:id="__byte_converter_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00156"/>00156 
<anchor xml:id="__byte_converter_8cs_source_1l00157"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1af0b1698620c19c4772d90450f5aeaa61">00157</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(UInt32&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aa515f6f874916387d48bfb14b986fec8">uint32</link>&#32;=&#32;val;
<anchor xml:id="__byte_converter_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00163"/>00163 
<anchor xml:id="__byte_converter_8cs_source_1l00164"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aef5245ce99727a53384dd096445cd2f0">00164</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(Int32&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a8be129ddb644f828222027fd389bd5e2">int32</link>&#32;=&#32;val;
<anchor xml:id="__byte_converter_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00170"/>00170 
<anchor xml:id="__byte_converter_8cs_source_1l00171"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a0baa63bfb1e1e938477a2c680c8db1d3">00171</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(UInt64&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a57d062fb094384a544a7415c7355df67">uint64</link>&#32;=&#32;val;
<anchor xml:id="__byte_converter_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00177"/>00177 
<anchor xml:id="__byte_converter_8cs_source_1l00178"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ade86ec84e230086428535a64f2e17005">00178</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(Int64&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ae5067cc33fb65aaa6ea3d60d9346b414">int64</link>&#32;=&#32;val;
<anchor xml:id="__byte_converter_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00184"/>00184 
<anchor xml:id="__byte_converter_8cs_source_1l00185"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a48d380c99a42f27ec929b802aeaaaec1">00185</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(Single&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ac4c41cfc6e2e9765747c871bf32f995b">float32</link>&#32;=&#32;val;
<anchor xml:id="__byte_converter_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00191"/>00191 
<anchor xml:id="__byte_converter_8cs_source_1l00192"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a662316444921627435e69194c4767a63">00192</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(Double&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a36ae2d28881483fbab2567aa29b08f95">float64</link>&#32;=&#32;val;
<anchor xml:id="__byte_converter_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00198"/>00198 
<anchor xml:id="__byte_converter_8cs_source_1l00199"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a8a8c4d2b330e63a9ce487895437c3292">00199</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>(Boolean&#32;val)
<anchor xml:id="__byte_converter_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>);
<anchor xml:id="__byte_converter_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a8be129ddb644f828222027fd389bd5e2">int32</link>&#32;=&#32;val&#32;?&#32;1&#32;:&#32;0;
<anchor xml:id="__byte_converter_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc;
<anchor xml:id="__byte_converter_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00205"/>00205 
<anchor xml:id="__byte_converter_8cs_source_1l00206"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a5e358b50a735077964ed036c1d5cfcd8">00206</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a5e358b50a735077964ed036c1d5cfcd8">ExtractByteArray</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;targetArray)
<anchor xml:id="__byte_converter_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__byte_converter_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len&#32;=&#32;targetArray.Length;
<anchor xml:id="__byte_converter_8cs_source_1l00209"/>00209 
<anchor xml:id="__byte_converter_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetArray[0]&#32;=&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adcdcb454d20529defe0681f784b34228">byte0</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;0)&#32;targetArray[1]&#32;=&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a64a95050b56d1ea85c427de7e7c11c39">byte1</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;1)&#32;targetArray[2]&#32;=&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a57bd7760cc7a20df7eaf2a66dcc73291">byte2</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;2)&#32;targetArray[3]&#32;=&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a3f5e73f4ba44eba913fa24d9c73aecc2">byte3</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;3)&#32;targetArray[4]&#32;=&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a1d4148956f49b15c2a64cc38939dc83a">byte4</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;4)&#32;targetArray[5]&#32;=&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a5d36813da1e362b0aa787b6d6d42f712">byte5</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;5)&#32;targetArray[6]&#32;=&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ae0ec29a9e8ab391485e3dc4a16e10a9a">byte6</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&gt;&#32;6)&#32;targetArray[7]&#32;=&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a7f05a220828ff1a5a82eb0e64b46ab39">byte7</link>;
<anchor xml:id="__byte_converter_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00219"/>00219 
<anchor xml:id="__byte_converter_8cs_source_1l00220"/>00220 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00221"/>00221 
<anchor xml:id="__byte_converter_8cs_source_1l00222"/>00222 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Implicit&#32;From&#32;ByteConverter</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00223"/>00223 
<anchor xml:id="__byte_converter_8cs_source_1l00224"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ac2389c037a481a12cbcf8aa1f27b43b6">00224</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;Byte(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adcdcb454d20529defe0681f784b34228">byte0</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00225"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a39dcda8bcaa119dd4c20e444296ecb5a">00225</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;SByte(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ab5f058b5b6c219d9c92a217294873c00">int8</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00226"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a7e2722cf2ce3d05ec3ff418a0e51ee95">00226</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;Char(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aa59edde589742c4374ab3b0d4c0b9461">character</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00227"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a33911c803a9bdb6818f2ec13aa2e59be">00227</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548a8bd950a9d7779b83f5c30046c9aaf1cf">UInt16</link>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1adf83456c7f5996d17d412fb536cc088e">uint16</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00228"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ab9f77ab6e62b0b4ee6efb9af465e1480">00228</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;Int16(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a974ee654412963403047dea370517baa">int16</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00229"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a4276f78a8068653aeb8f16a3ea670159">00229</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548ae7956ed7be1c5025a27ed3cb42a396bd">UInt32</link>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aa515f6f874916387d48bfb14b986fec8">uint32</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00230"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ad8a61b883c953ace48e2d3f068235f42">00230</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;Int32(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a8be129ddb644f828222027fd389bd5e2">int32</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00231"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1aff31a5ed0a89e97fc3169b67571e0286">00231</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548aaf71234725f0470ccf993e263a8b820a">UInt64</link>(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a57d062fb094384a544a7415c7355df67">uint64</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00232"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a1c6ac1436e519f8995ce99b50849c8c4">00232</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;Int64(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ae5067cc33fb65aaa6ea3d60d9346b414">int64</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00233"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ab6c569ba8778b457fc6da383c5b707da">00233</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;Single(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ac4c41cfc6e2e9765747c871bf32f995b">float32</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00234"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1abcf837cbb251a4ab4ce785560320e8c1">00234</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;Double(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a36ae2d28881483fbab2567aa29b08f95">float64</link>;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00235"/><link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1ab075bdeca42b7a8fa54a002d75733322">00235</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;Boolean(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;bc)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bc.<link linkend="_struct_photon_1_1_compression_1_1_byte_converter_1a8be129ddb644f828222027fd389bd5e2">int32</link>&#32;!=&#32;0;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00236"/>00236 
<anchor xml:id="__byte_converter_8cs_source_1l00237"/>00237 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__byte_converter_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;}
<anchor xml:id="__byte_converter_8cs_source_1l00239"/>00239 }
</programlisting></section>
