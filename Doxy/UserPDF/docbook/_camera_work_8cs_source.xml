<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__camera_work_8cs_source" xml:lang="en-US">
<title>CameraWork.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Demos/PunBasics-Tutorial/Scripts/CameraWork.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__camera_work_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;CameraWork.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;Part&#32;of:&#32;Photon&#32;Unity&#32;Networking&#32;Demos</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;Used&#32;in&#32;PUN&#32;Basics&#32;Tutorial&#32;to&#32;deal&#32;with&#32;the&#32;Camera&#32;work&#32;to&#32;follow&#32;the&#32;player</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00010"/>00010 
<anchor xml:id="__camera_work_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__camera_work_8cs_source_1l00012"/>00012 
<anchor xml:id="__camera_work_8cs_source_1l00013"/><link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_pun_basics">00013</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_pun_basics">Photon.Pun.Demo.PunBasics</link>
<anchor xml:id="__camera_work_8cs_source_1l00014"/>00014 {
<anchor xml:id="__camera_work_8cs_source_1l00018"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_camera_work">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_camera_work">CameraWork</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__camera_work_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;{
<anchor xml:id="__camera_work_8cs_source_1l00020"/>00020 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Private&#32;Fields</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00021"/>00021 
<anchor xml:id="__camera_work_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;distance&#32;in&#32;the&#32;local&#32;x-z&#32;plane&#32;to&#32;the&#32;target&quot;</emphasis>)]
<anchor xml:id="__camera_work_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__camera_work_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;distance&#32;=&#32;7.0f;
<anchor xml:id="__camera_work_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;height&#32;we&#32;want&#32;the&#32;camera&#32;to&#32;be&#32;above&#32;the&#32;target&quot;</emphasis>)]
<anchor xml:id="__camera_work_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__camera_work_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;height&#32;=&#32;3.0f;
<anchor xml:id="__camera_work_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Allow&#32;the&#32;camera&#32;to&#32;be&#32;offseted&#32;vertically&#32;from&#32;the&#32;target,&#32;for&#32;example&#32;giving&#32;more&#32;view&#32;of&#32;the&#32;sceneray&#32;and&#32;less&#32;ground.&quot;</emphasis>)]
<anchor xml:id="__camera_work_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__camera_work_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;centerOffset&#32;=&#32;Vector3.zero;
<anchor xml:id="__camera_work_8cs_source_1l00033"/>00033 
<anchor xml:id="__camera_work_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Set&#32;this&#32;as&#32;false&#32;if&#32;a&#32;component&#32;of&#32;a&#32;prefab&#32;being&#32;instanciated&#32;by&#32;Photon&#32;Network,&#32;and&#32;manually&#32;call&#32;OnStartFollowing()&#32;when&#32;and&#32;if&#32;needed.&quot;</emphasis>)]
<anchor xml:id="__camera_work_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__camera_work_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;followOnStart&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__camera_work_8cs_source_1l00037"/>00037 
<anchor xml:id="__camera_work_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;Smoothing&#32;for&#32;the&#32;camera&#32;to&#32;follow&#32;the&#32;target&quot;</emphasis>)]
<anchor xml:id="__camera_work_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__camera_work_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;smoothSpeed&#32;=&#32;0.125f;
<anchor xml:id="__camera_work_8cs_source_1l00041"/>00041 
<anchor xml:id="__camera_work_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cached&#32;transform&#32;of&#32;the&#32;target</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;cameraTransform;
<anchor xml:id="__camera_work_8cs_source_1l00044"/>00044 
<anchor xml:id="__camera_work_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;maintain&#32;a&#32;flag&#32;internally&#32;to&#32;reconnect&#32;if&#32;target&#32;is&#32;lost&#32;or&#32;camera&#32;is&#32;switched</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isFollowing;
<anchor xml:id="__camera_work_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Cache&#32;for&#32;camera&#32;offset</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;cameraOffset&#32;=&#32;Vector3.zero;
<anchor xml:id="__camera_work_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00052"/>00052 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00053"/>00053 
<anchor xml:id="__camera_work_8cs_source_1l00054"/>00054 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;MonoBehaviour&#32;Callbacks</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00055"/>00055 
<anchor xml:id="__camera_work_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__camera_work_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__camera_work_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Start&#32;following&#32;the&#32;target&#32;if&#32;wanted.</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(followOnStart)
<anchor xml:id="__camera_work_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__camera_work_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_camera_work_1a60e535ee79e36273332789ae1391e0eb">OnStartFollowing</link>();
<anchor xml:id="__camera_work_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__camera_work_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__camera_work_8cs_source_1l00067"/>00067 
<anchor xml:id="__camera_work_8cs_source_1l00068"/>00068 
<anchor xml:id="__camera_work_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;LateUpdate()
<anchor xml:id="__camera_work_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__camera_work_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;transform&#32;target&#32;may&#32;not&#32;destroy&#32;on&#32;level&#32;load,&#32;</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;we&#32;need&#32;to&#32;cover&#32;corner&#32;cases&#32;where&#32;the&#32;Main&#32;Camera&#32;is&#32;different&#32;everytime&#32;we&#32;load&#32;a&#32;new&#32;scene,&#32;and&#32;reconnect&#32;when&#32;that&#32;happens</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cameraTransform&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;isFollowing)
<anchor xml:id="__camera_work_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__camera_work_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_camera_work_1a60e535ee79e36273332789ae1391e0eb">OnStartFollowing</link>();
<anchor xml:id="__camera_work_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__camera_work_8cs_source_1l00077"/>00077 
<anchor xml:id="__camera_work_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;only&#32;follow&#32;is&#32;explicitly&#32;declared</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isFollowing)&#32;{
<anchor xml:id="__camera_work_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Follow&#32;();
<anchor xml:id="__camera_work_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__camera_work_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__camera_work_8cs_source_1l00083"/>00083 
<anchor xml:id="__camera_work_8cs_source_1l00084"/>00084 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00085"/>00085 
<anchor xml:id="__camera_work_8cs_source_1l00086"/>00086 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Public&#32;Methods</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00087"/>00087 
<anchor xml:id="__camera_work_8cs_source_1l00092"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_camera_work_1a60e535ee79e36273332789ae1391e0eb">00092</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_camera_work_1a60e535ee79e36273332789ae1391e0eb">OnStartFollowing</link>()
<anchor xml:id="__camera_work_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraTransform&#32;=&#32;Camera.main.transform;
<anchor xml:id="__camera_work_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isFollowing&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__camera_work_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;don&apos;t&#32;smooth&#32;anything,&#32;we&#32;go&#32;straight&#32;to&#32;the&#32;right&#32;camera&#32;shot</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cut();
<anchor xml:id="__camera_work_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__camera_work_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00100"/>00100 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00101"/>00101 
<anchor xml:id="__camera_work_8cs_source_1l00102"/>00102 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Private&#32;Methods</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00103"/>00103 
<anchor xml:id="__camera_work_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Follow()
<anchor xml:id="__camera_work_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__camera_work_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraOffset.z&#32;=&#32;-distance;
<anchor xml:id="__camera_work_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraOffset.y&#32;=&#32;height;
<anchor xml:id="__camera_work_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraTransform.position&#32;=&#32;Vector3.Lerp(cameraTransform.position,&#32;<emphasis role="keyword">this</emphasis>.transform.position&#32;+<emphasis role="keyword">this</emphasis>.transform.TransformVector(cameraOffset),&#32;smoothSpeed*Time.deltaTime);
<anchor xml:id="__camera_work_8cs_source_1l00113"/>00113 
<anchor xml:id="__camera_work_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraTransform.LookAt(this.transform.position&#32;+&#32;centerOffset);
<anchor xml:id="__camera_work_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__camera_work_8cs_source_1l00117"/>00117 
<anchor xml:id="__camera_work_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__camera_work_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Cut()
<anchor xml:id="__camera_work_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__camera_work_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraOffset.z&#32;=&#32;-distance;
<anchor xml:id="__camera_work_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraOffset.y&#32;=&#32;height;
<anchor xml:id="__camera_work_8cs_source_1l00123"/>00123 
<anchor xml:id="__camera_work_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraTransform.position&#32;=&#32;this.transform.position&#32;+&#32;this.transform.TransformVector(cameraOffset);
<anchor xml:id="__camera_work_8cs_source_1l00125"/>00125 
<anchor xml:id="__camera_work_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraTransform.LookAt(this.transform.position&#32;+&#32;centerOffset);
<anchor xml:id="__camera_work_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__camera_work_8cs_source_1l00128"/>00128 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__camera_work_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;}
<anchor xml:id="__camera_work_8cs_source_1l00130"/>00130 }
</programlisting></section>
