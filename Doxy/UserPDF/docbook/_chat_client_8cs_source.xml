<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__chat_client_8cs_source" xml:lang="en-US">
<title>ChatClient.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__chat_client_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;summary&gt;The&#32;Photon&#32;Chat&#32;Api&#32;enables&#32;clients&#32;to&#32;connect&#32;to&#32;a&#32;chat&#32;server&#32;and&#32;communicate&#32;with&#32;other&#32;clients.&lt;/summary&gt;</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;remarks&gt;ChatClient&#32;is&#32;the&#32;main&#32;class&#32;of&#32;this&#32;api.&lt;/remarks&gt;</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;copyright&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;Photon&#32;Chat&#32;Api&#32;-&#32;Copyright&#32;(C)&#32;2014&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;----------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00006"/>00006 
<anchor xml:id="__chat_client_8cs_source_1l00007"/>00007 <emphasis role="preprocessor">#if&#32;UNITY_4_7&#32;||&#32;UNITY_5&#32;||&#32;UNITY_5_3_OR_NEWER</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00008"/>00008 <emphasis role="preprocessor">#define&#32;SUPPORTED_UNITY</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00009"/>00009 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00010"/>00010 
<anchor xml:id="__chat_client_8cs_source_1l00011"/>00011 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_chat">Photon.Chat</link>
<anchor xml:id="__chat_client_8cs_source_1l00012"/>00012 {
<anchor xml:id="__chat_client_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__chat_client_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Collections.<link linkend="_namespace_system_1_1_collections_1_1_generic">Generic</link>;
<anchor xml:id="__chat_client_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Diagnostics;
<anchor xml:id="__chat_client_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;ExitGames.Client.Photon;
<anchor xml:id="__chat_client_8cs_source_1l00017"/>00017 
<anchor xml:id="__chat_client_8cs_source_1l00018"/>00018 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;SUPPORTED_UNITY&#32;||&#32;NETFX_CORE</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link>&#32;=&#32;ExitGames.Client.Photon.Hashtable;
<anchor xml:id="__chat_client_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon_1_1_realtime_1aee53af119f47f74d4224e7b8dcb4ff4b">SupportClass</link>&#32;=&#32;ExitGames.Client.Photon.SupportClass;
<anchor xml:id="__chat_client_8cs_source_1l00021"/>00021 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00022"/>00022 
<anchor xml:id="__chat_client_8cs_source_1l00023"/>00023 
<anchor xml:id="__chat_client_8cs_source_1l00041"/><link linkend="_class_photon_1_1_chat_1_1_chat_client">00041</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_chat_1_1_chat_client">ChatClient</link>&#32;:&#32;IPhotonPeerListener
<anchor xml:id="__chat_client_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;FriendRequestListMax&#32;=&#32;1024;
<anchor xml:id="__chat_client_8cs_source_1l00044"/>00044 
<anchor xml:id="__chat_client_8cs_source_1l00046"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1ac37c92ca11e06427a261abde9809ce3f">00046</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ac37c92ca11e06427a261abde9809ce3f">DefaultMaxSubscribers</link>&#32;=&#32;100;
<anchor xml:id="__chat_client_8cs_source_1l00047"/>00047 
<anchor xml:id="__chat_client_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;HttpForwardWebFlag&#32;=&#32;0x01;
<anchor xml:id="__chat_client_8cs_source_1l00049"/>00049 
<anchor xml:id="__chat_client_8cs_source_1l00059"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0299296d1acde3271523056464c0ac11">00059</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0299296d1acde3271523056464c0ac11">EnableProtocolFallback</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00060"/>00060 
<anchor xml:id="__chat_client_8cs_source_1l00062"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1acd09983e6a7c5f77386068daea5c1e5e">00062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1acd09983e6a7c5f77386068daea5c1e5e">NameServerAddress</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00063"/>00063 
<anchor xml:id="__chat_client_8cs_source_1l00065"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a586cbe47663c00ba006c4b1fca8973fc">00065</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a586cbe47663c00ba006c4b1fca8973fc">FrontendAddress</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00066"/>00066 
<anchor xml:id="__chat_client_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;chatRegion&#32;=&#32;<emphasis role="stringliteral">&quot;EU&quot;</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00069"/>00069 
<anchor xml:id="__chat_client_8cs_source_1l00071"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a44a3e865b745b732bc02213a5388c1ea">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a44a3e865b745b732bc02213a5388c1ea">ChatRegion</link>
<anchor xml:id="__chat_client_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatRegion;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;this.chatRegion&#32;=&#32;value;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00076"/>00076 
<anchor xml:id="__chat_client_8cs_source_1l00078"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">00078</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00079"/>00079 
<anchor xml:id="__chat_client_8cs_source_1l00081"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">00081</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00085"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">00085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>
<anchor xml:id="__chat_client_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectedToFrontEnd&#32;&amp;&amp;&#32;this.HasPeer;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00094"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9319494267567de368f56a737b643634">00094</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9319494267567de368f56a737b643634">CanChatInChannel</link>(<emphasis role="keywordtype">string</emphasis>&#32;channelName)
<anchor xml:id="__chat_client_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>&#32;&amp;&amp;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a83932af87d8d3a71deb04cda9c7961c0">PublicChannels</link>.ContainsKey(channelName)&#32;&amp;&amp;&#32;!this.PublicChannelsUnsubscribing.Contains(channelName);
<anchor xml:id="__chat_client_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00098"/>00098 
<anchor xml:id="__chat_client_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasPeer
<anchor xml:id="__chat_client_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af8e65e153d95d5ba0378393fd39e1a1e">chatPeer</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00103"/>00103 
<anchor xml:id="__chat_client_8cs_source_1l00105"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1adc7265160bf8f2697ae12f1fbe027eb3">00105</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1adc7265160bf8f2697ae12f1fbe027eb3">AppVersion</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00106"/>00106 
<anchor xml:id="__chat_client_8cs_source_1l00108"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1ad90fda837d118577340199e9485bba84">00108</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ad90fda837d118577340199e9485bba84">AppId</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00109"/>00109 
<anchor xml:id="__chat_client_8cs_source_1l00110"/>00110 
<anchor xml:id="__chat_client_8cs_source_1l00112"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">00112</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_authentication_values">AuthenticationValues</link>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00113"/>00113 
<anchor xml:id="__chat_client_8cs_source_1l00118"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546">00118</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546">UserId</link>
<anchor xml:id="__chat_client_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>.<link linkend="_class_photon_1_1_chat_1_1_authentication_values_1ac91cec9e6295f82a23df0e592fa23953">UserId</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__chat_gui_8cs_1a2507e30a30e7795f768f9883242b3f85">AuthenticationValues</link>();
<anchor xml:id="__chat_client_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>.<link linkend="_class_photon_1_1_chat_1_1_authentication_values_1ac91cec9e6295f82a23df0e592fa23953">UserId</link>&#32;=&#32;value;
<anchor xml:id="__chat_client_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00133"/>00133 
<anchor xml:id="__chat_client_8cs_source_1l00142"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a145da05ec4438bf37eb12603459b66b5">00142</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a145da05ec4438bf37eb12603459b66b5">MessageLimit</link>;
<anchor xml:id="__chat_client_8cs_source_1l00143"/>00143 
<anchor xml:id="__chat_client_8cs_source_1l00151"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a7097434874100e46b581916dbba5ced1">00151</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a7097434874100e46b581916dbba5ced1">PrivateChatHistoryLength</link>&#32;=&#32;-1;
<anchor xml:id="__chat_client_8cs_source_1l00152"/>00152 
<anchor xml:id="__chat_client_8cs_source_1l00154"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a83932af87d8d3a71deb04cda9c7961c0">00154</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;Dictionary&lt;string,&#32;ChatChannel&gt;&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a83932af87d8d3a71deb04cda9c7961c0">PublicChannels</link>;
<anchor xml:id="__chat_client_8cs_source_1l00156"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a595d3160ff5fa3ba96ec5c972ad8528b">00156</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;Dictionary&lt;string,&#32;ChatChannel&gt;&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a595d3160ff5fa3ba96ec5c972ad8528b">PrivateChannels</link>;
<anchor xml:id="__chat_client_8cs_source_1l00157"/>00157 
<anchor xml:id="__chat_client_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;channels&#32;being&#32;in&#32;unsubscribing&#32;process</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;items&#32;will&#32;be&#32;removed&#32;on&#32;successful&#32;unsubscription&#32;or&#32;subscription&#32;(the&#32;latter&#32;required&#32;after&#32;attempt&#32;to&#32;unsubscribe&#32;from&#32;not&#32;existing&#32;channel)</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;HashSet&lt;string&gt;&#32;PublicChannelsUnsubscribing;
<anchor xml:id="__chat_client_8cs_source_1l00161"/>00161 
<anchor xml:id="__chat_client_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_interface_photon_1_1_chat_1_1_i_chat_client_listener">IChatClientListener</link>&#32;listener&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00164"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1af8e65e153d95d5ba0378393fd39e1a1e">00164</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_peer">ChatPeer</link>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af8e65e153d95d5ba0378393fd39e1a1e">chatPeer</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ChatAppName&#32;=&#32;<emphasis role="stringliteral">&quot;chat&quot;</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;didAuthenticate;
<anchor xml:id="__chat_client_8cs_source_1l00167"/>00167 
<anchor xml:id="__chat_client_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>?&#32;statusToSetWhenConnected;
<anchor xml:id="__chat_client_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">object</emphasis>&#32;messageToSetWhenConnected;
<anchor xml:id="__chat_client_8cs_source_1l00170"/>00170 
<anchor xml:id="__chat_client_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;msDeltaForServiceCalls&#32;=&#32;50;
<anchor xml:id="__chat_client_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;msTimestampOfLastServiceCall;
<anchor xml:id="__chat_client_8cs_source_1l00173"/>00173 
<anchor xml:id="__chat_client_8cs_source_1l00184"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9a625d156affdbf51778ebf60a302df6">00184</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9a625d156affdbf51778ebf60a302df6">UseBackgroundWorkerForSending</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00185"/>00185 
<anchor xml:id="__chat_client_8cs_source_1l00187"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff">00187</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ConnectionProtocol&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff">TransportProtocol</link>
<anchor xml:id="__chat_client_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.TransportProtocol;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.chatPeer&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;this.chatPeer.PeerState&#32;!=&#32;PeerStateValue.Disconnected)
<anchor xml:id="__chat_client_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;Can&apos;t&#32;set&#32;TransportProtocol.&#32;Disconnect&#32;first!&#32;&quot;</emphasis>&#32;+&#32;((<emphasis role="keyword">this</emphasis>.chatPeer&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;<emphasis role="stringliteral">&quot;PeerState:&#32;&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">this</emphasis>.chatPeer.PeerState&#32;:&#32;<emphasis role="stringliteral">&quot;The&#32;chatPeer&#32;is&#32;null.&quot;</emphasis>));
<anchor xml:id="__chat_client_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.TransportProtocol&#32;=&#32;value;
<anchor xml:id="__chat_client_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00200"/>00200 
<anchor xml:id="__chat_client_8cs_source_1l00210"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a8a166f5011405a4a85e957ac2d1ea498">00210</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;ConnectionProtocol,&#32;Type&gt;&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a8a166f5011405a4a85e957ac2d1ea498">SocketImplementationConfig</link>
<anchor xml:id="__chat_client_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SocketImplementationConfig;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00214"/>00214 
<anchor xml:id="__chat_client_8cs_source_1l00220"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1ab42b0bad653802e35481597091cc4c57">00220</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ab42b0bad653802e35481597091cc4c57">ChatClient</link>(<link linkend="_interface_photon_1_1_chat_1_1_i_chat_client_listener">IChatClientListener</link>&#32;listener,&#32;ConnectionProtocol&#32;protocol&#32;=&#32;ConnectionProtocol.Udp)
<anchor xml:id="__chat_client_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener&#32;=&#32;listener;
<anchor xml:id="__chat_client_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.Uninitialized;
<anchor xml:id="__chat_client_8cs_source_1l00224"/>00224 
<anchor xml:id="__chat_client_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_peer">ChatPeer</link>(<emphasis role="keyword">this</emphasis>,&#32;protocol);
<anchor xml:id="__chat_client_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.SerializationProtocolType&#32;=&#32;SerializationProtocol.GpBinaryV18;
<anchor xml:id="__chat_client_8cs_source_1l00227"/>00227 
<anchor xml:id="__chat_client_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PublicChannels&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;ChatChannel&gt;();
<anchor xml:id="__chat_client_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PrivateChannels&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;ChatChannel&gt;();
<anchor xml:id="__chat_client_8cs_source_1l00230"/>00230 
<anchor xml:id="__chat_client_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PublicChannelsUnsubscribing&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;string&gt;();
<anchor xml:id="__chat_client_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00233"/>00233 
<anchor xml:id="__chat_client_8cs_source_1l00234"/>00234 
<anchor xml:id="__chat_client_8cs_source_1l00235"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a55a715b3029d0f17c1eb537960c7aa5b">00235</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a55a715b3029d0f17c1eb537960c7aa5b">ConnectUsingSettings</link>(<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings">ChatAppSettings</link>&#32;appSettings)
<anchor xml:id="__chat_client_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(appSettings&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;ConnectUsingSettings&#32;failed.&#32;The&#32;appSettings&#32;can&apos;t&#32;be&#32;null.&apos;&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00242"/>00242 
<anchor xml:id="__chat_client_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a9ec67739f1545b7a93cb7f6ac0ca6368">FixedRegion</link>))
<anchor xml:id="__chat_client_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a44a3e865b745b732bc02213a5388c1ea">ChatRegion</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a9ec67739f1545b7a93cb7f6ac0ca6368">FixedRegion</link>;
<anchor xml:id="__chat_client_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00247"/>00247 
<anchor xml:id="__chat_client_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a9855b64c1107dfad8221b1d0156be575">NetworkLogging</link>;
<anchor xml:id="__chat_client_8cs_source_1l00249"/>00249 
<anchor xml:id="__chat_client_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff">TransportProtocol</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a51f15aea7a0a4418107b40ecfe9deca7">Protocol</link>;
<anchor xml:id="__chat_client_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0299296d1acde3271523056464c0ac11">EnableProtocolFallback</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a5bf3015c982241ccc17702f9542b609e">EnableProtocolFallback</link>;
<anchor xml:id="__chat_client_8cs_source_1l00252"/>00252 
<anchor xml:id="__chat_client_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a3a2c9a7940abc2890b334ab041661a48">IsDefaultNameServer</link>)
<anchor xml:id="__chat_client_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.<link linkend="_class_photon_1_1_chat_1_1_chat_peer_1ac5e355b6fb0142819c49deae80305659">NameServerHost</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a1ea03b819b873de0427b45a15950b5a6">Server</link>;
<anchor xml:id="__chat_client_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.<link linkend="_class_photon_1_1_chat_1_1_chat_peer_1ac6a44cd138597c409840edb8395ad442">NameServerPortOverride</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a0eb04044ea10a4c8529983bda96f290b">Port</link>;
<anchor xml:id="__chat_client_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00258"/>00258 
<anchor xml:id="__chat_client_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded">Connect</link>(appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a082b8a5313837a3f9c33520b202ee55f">AppIdChat</link>,&#32;appSettings.<link linkend="_class_photon_1_1_chat_1_1_chat_app_settings_1a8173220d38fd94bcb5fadb2a6304cbbb">AppVersion</link>,&#32;<emphasis role="keyword">this</emphasis>.AuthValues);
<anchor xml:id="__chat_client_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00261"/>00261 
<anchor xml:id="__chat_client_8cs_source_1l00269"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded">00269</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded">Connect</link>(<emphasis role="keywordtype">string</emphasis>&#32;appId,&#32;<emphasis role="keywordtype">string</emphasis>&#32;appVersion,&#32;<link linkend="_class_photon_1_1_chat_1_1_authentication_values">AuthenticationValues</link>&#32;authValues)
<anchor xml:id="__chat_client_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.TimePingInterval&#32;=&#32;3000;
<anchor xml:id="__chat_client_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.None;
<anchor xml:id="__chat_client_8cs_source_1l00273"/>00273 
<anchor xml:id="__chat_client_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(authValues&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>&#32;=&#32;authValues;
<anchor xml:id="__chat_client_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00278"/>00278 
<anchor xml:id="__chat_client_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ad90fda837d118577340199e9485bba84">AppId</link>&#32;=&#32;appId;
<anchor xml:id="__chat_client_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1adc7265160bf8f2697ae12f1fbe027eb3">AppVersion</link>&#32;=&#32;appVersion;
<anchor xml:id="__chat_client_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.didAuthenticate&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.QuickResendAttempts&#32;=&#32;2;
<anchor xml:id="__chat_client_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.SentCountAllowance&#32;=&#32;7;
<anchor xml:id="__chat_client_8cs_source_1l00284"/>00284 
<anchor xml:id="__chat_client_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;clean&#32;all&#32;channels</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PublicChannels.Clear();
<anchor xml:id="__chat_client_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PrivateChannels.Clear();
<anchor xml:id="__chat_client_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PublicChannelsUnsubscribing.Clear();
<anchor xml:id="__chat_client_8cs_source_1l00289"/>00289 
<anchor xml:id="__chat_client_8cs_source_1l00290"/>00290 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_WEBGL</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff">TransportProtocol</link>&#32;==&#32;ConnectionProtocol.Tcp&#32;||&#32;<emphasis role="keyword">this</emphasis>.TransportProtocol&#32;==&#32;ConnectionProtocol.Udp)
<anchor xml:id="__chat_client_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;WebGL&#32;requires&#32;WebSockets.&#32;Switching&#32;TransportProtocol&#32;to&#32;WebSocketSecure.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff">TransportProtocol</link>&#32;=&#32;ConnectionProtocol.WebSocketSecure;
<anchor xml:id="__chat_client_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00296"/>00296 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00297"/>00297 
<anchor xml:id="__chat_client_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1acd09983e6a7c5f77386068daea5c1e5e">NameServerAddress</link>&#32;=&#32;this.chatPeer.<link linkend="_class_photon_1_1_chat_1_1_chat_peer_1a541b0c29815c07c87c49e62827c5b33a">NameServerAddress</link>;
<anchor xml:id="__chat_client_8cs_source_1l00299"/>00299 
<anchor xml:id="__chat_client_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isConnecting&#32;=&#32;this.chatPeer.<link linkend="_class_photon_1_1_chat_1_1_chat_peer_1afc6fce926fbdd0512c2940c1a914f4e7">Connect</link>();
<anchor xml:id="__chat_client_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isConnecting)
<anchor xml:id="__chat_client_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectingToNameServer;
<anchor xml:id="__chat_client_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00305"/>00305 
<anchor xml:id="__chat_client_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9a625d156affdbf51778ebf60a302df6">UseBackgroundWorkerForSending</link>)
<anchor xml:id="__chat_client_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00308"/>00308 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_SWITCH</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_realtime_1aee53af119f47f74d4224e7b8dcb4ff4b">SupportClass</link>.StartBackgroundCalls(this.SendOutgoingInBackground,&#32;this.msDeltaForServiceCalls);&#32;&#32;<emphasis role="comment">//&#32;as&#32;workaround,&#32;we&#32;don&apos;t&#32;name&#32;the&#32;Thread.</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00310"/>00310 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_realtime_1aee53af119f47f74d4224e7b8dcb4ff4b">SupportClass</link>.StartBackgroundCalls(this.SendOutgoingInBackground,&#32;this.msDeltaForServiceCalls,&#32;<emphasis role="stringliteral">&quot;ChatClient&#32;Service&#32;Thread&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00312"/>00312 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00314"/>00314 
<anchor xml:id="__chat_client_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;isConnecting;
<anchor xml:id="__chat_client_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00317"/>00317 
<anchor xml:id="__chat_client_8cs_source_1l00329"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1ae8f7f17505875382395e1cc898c6ca61">00329</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ae8f7f17505875382395e1cc898c6ca61">ConnectAndSetStatus</link>(<emphasis role="keywordtype">string</emphasis>&#32;appId,&#32;<emphasis role="keywordtype">string</emphasis>&#32;appVersion,&#32;<link linkend="_class_photon_1_1_chat_1_1_authentication_values">AuthenticationValues</link>&#32;authValues,
<anchor xml:id="__chat_client_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;status&#32;=&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_user_status">ChatUserStatus</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_user_status_1a5dd001713c1f5f001beaf278fa3978bb">Online</link>,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statusToSetWhenConnected&#32;=&#32;status;
<anchor xml:id="__chat_client_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;messageToSetWhenConnected&#32;=&#32;message;
<anchor xml:id="__chat_client_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded">Connect</link>(appId,&#32;appVersion,&#32;authValues);
<anchor xml:id="__chat_client_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00336"/>00336 
<anchor xml:id="__chat_client_8cs_source_1l00344"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1aa08129ee3ee957c825e0a91a61e97993">00344</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1aa08129ee3ee957c825e0a91a61e97993">Service</link>()
<anchor xml:id="__chat_client_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Dispatch&#32;until&#32;every&#32;already-received&#32;message&#32;got&#32;dispatched</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(this.HasPeer&#32;&amp;&amp;&#32;this.chatPeer.DispatchIncomingCommands())
<anchor xml:id="__chat_client_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00350"/>00350 
<anchor xml:id="__chat_client_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;there&#32;is&#32;no&#32;background&#32;thread&#32;for&#32;sending,&#32;Service()&#32;will&#32;do&#32;that&#32;as&#32;well,&#32;in&#32;intervals</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9a625d156affdbf51778ebf60a302df6">UseBackgroundWorkerForSending</link>)
<anchor xml:id="__chat_client_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Environment.TickCount&#32;-&#32;<emphasis role="keyword">this</emphasis>.msTimestampOfLastServiceCall&#32;&gt;&#32;<emphasis role="keyword">this</emphasis>.msDeltaForServiceCalls&#32;||&#32;<emphasis role="keyword">this</emphasis>.msTimestampOfLastServiceCall&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.msTimestampOfLastServiceCall&#32;=&#32;Environment.TickCount;
<anchor xml:id="__chat_client_8cs_source_1l00357"/>00357 
<anchor xml:id="__chat_client_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(this.HasPeer&#32;&amp;&amp;&#32;this.chatPeer.SendOutgoingCommands())
<anchor xml:id="__chat_client_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00364"/>00364 
<anchor xml:id="__chat_client_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SendOutgoingInBackground()
<anchor xml:id="__chat_client_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(this.HasPeer&#32;&amp;&amp;&#32;this.chatPeer.SendOutgoingCommands())
<anchor xml:id="__chat_client_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00374"/>00374 
<anchor xml:id="__chat_client_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.Disconnected;
<anchor xml:id="__chat_client_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00377"/>00377 
<anchor xml:id="__chat_client_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Obsolete(<emphasis role="stringliteral">&quot;Better&#32;use&#32;UseBackgroundWorkerForSending&#32;and&#32;Service().&quot;</emphasis>)]
<anchor xml:id="__chat_client_8cs_source_1l00380"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9fffdb1eda49e68bf205c17c99d8b217">00380</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9fffdb1eda49e68bf205c17c99d8b217">SendAcksOnly</link>()
<anchor xml:id="__chat_client_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.HasPeer)&#32;this.chatPeer.SendAcksOnly();
<anchor xml:id="__chat_client_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00384"/>00384 
<anchor xml:id="__chat_client_8cs_source_1l00385"/>00385 
<anchor xml:id="__chat_client_8cs_source_1l00389"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">00389</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">Disconnect</link>(<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>&#32;cause&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.DisconnectByClientLogic)
<anchor xml:id="__chat_client_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.HasPeer&#32;&amp;&amp;&#32;this.chatPeer.PeerState&#32;!=&#32;PeerStateValue.Disconnected)
<anchor xml:id="__chat_client_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.Disconnecting;
<anchor xml:id="__chat_client_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;cause;
<anchor xml:id="__chat_client_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.Disconnect();
<anchor xml:id="__chat_client_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00398"/>00398 
<anchor xml:id="__chat_client_8cs_source_1l00402"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a7e3cc4c17ac091055422d6f21dd59818">00402</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a7e3cc4c17ac091055422d6f21dd59818">StopThread</link>()
<anchor xml:id="__chat_client_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.HasPeer)
<anchor xml:id="__chat_client_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.StopThread();
<anchor xml:id="__chat_client_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00409"/>00409 
<anchor xml:id="__chat_client_8cs_source_1l00413"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe55a18070d332c5cad63a884d6a1242">00413</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe55a18070d332c5cad63a884d6a1242">Subscribe</link>(<emphasis role="keywordtype">string</emphasis>[]&#32;channels)
<anchor xml:id="__chat_client_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe55a18070d332c5cad63a884d6a1242">Subscribe</link>(channels,&#32;0);
<anchor xml:id="__chat_client_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00417"/>00417 
<anchor xml:id="__chat_client_8cs_source_1l00424"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9443c39e4fde86cbfe6e2687642d3f79">00424</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9443c39e4fde86cbfe6e2687642d3f79">Subscribe</link>(<emphasis role="keywordtype">string</emphasis>[]&#32;channels,&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;lastMsgIds)
<anchor xml:id="__chat_client_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;Subscribe&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00434"/>00434 
<anchor xml:id="__chat_client_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;channels.Length&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;Subscribe&#32;can&apos;t&#32;be&#32;called&#32;for&#32;empty&#32;or&#32;null&#32;channels-list.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00443"/>00443 
<anchor xml:id="__chat_client_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;channels.Length;&#32;i++)
<anchor xml:id="__chat_client_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(channels[i]))
<anchor xml:id="__chat_client_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Subscribe&#32;can&apos;t&#32;be&#32;called&#32;with&#32;a&#32;null&#32;or&#32;empty&#32;channel&#32;name&#32;at&#32;index&#32;{0}.&quot;</emphasis>,&#32;i));
<anchor xml:id="__chat_client_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00455"/>00455 
<anchor xml:id="__chat_client_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lastMsgIds&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;lastMsgIds.Length&#32;!=&#32;channels.Length)
<anchor xml:id="__chat_client_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;Subscribe&#32;can&apos;t&#32;be&#32;called&#32;when&#32;\&quot;lastMsgIds\&quot;&#32;array&#32;is&#32;null&#32;or&#32;does&#32;not&#32;have&#32;the&#32;same&#32;length&#32;as&#32;\&quot;channels\&quot;&#32;array.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00464"/>00464 
<anchor xml:id="__chat_client_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;opParameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;
<anchor xml:id="__chat_client_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code">ChatParameterCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code_1a9dd583a1e25e106394b9aec31eaf15f3">Channels</link>,&#32;channels&#32;},
<anchor xml:id="__chat_client_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code">ChatParameterCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code_1ae647ccead0599f216485fd191c7318ce">MsgIds</link>,&#32;&#32;lastMsgIds},
<anchor xml:id="__chat_client_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code">ChatParameterCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code_1a6b76139a3303feb491403143af03404a">HistoryLength</link>,&#32;-1&#32;}&#32;<emphasis role="comment">//&#32;server&#32;will&#32;decide&#32;how&#32;many&#32;messages&#32;to&#32;send&#32;to&#32;client</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__chat_client_8cs_source_1l00471"/>00471 
<anchor xml:id="__chat_client_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code">ChatOperationCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code_1af116a0d1172c73fda306f69e51241df0">Subscribe</link>,&#32;opParameters,&#32;SendOptions.SendReliable);
<anchor xml:id="__chat_client_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00474"/>00474 
<anchor xml:id="__chat_client_8cs_source_1l00485"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a34ca1fde36c382177f9941c70402e5d7">00485</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a34ca1fde36c382177f9941c70402e5d7">Subscribe</link>(<emphasis role="keywordtype">string</emphasis>[]&#32;channels,&#32;<emphasis role="keywordtype">int</emphasis>&#32;messagesFromHistory)
<anchor xml:id="__chat_client_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;Subscribe&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00495"/>00495 
<anchor xml:id="__chat_client_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;channels.Length&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;Subscribe&#32;can&apos;t&#32;be&#32;called&#32;for&#32;empty&#32;or&#32;null&#32;channels-list.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00504"/>00504 
<anchor xml:id="__chat_client_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.SendChannelOperation(channels,&#32;(<emphasis role="keywordtype">byte</emphasis>)<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code">ChatOperationCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code_1af116a0d1172c73fda306f69e51241df0">Subscribe</link>,&#32;messagesFromHistory);
<anchor xml:id="__chat_client_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00507"/>00507 
<anchor xml:id="__chat_client_8cs_source_1l00519"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a107f60bcc98b3ed19922d3222f7a32b7">00519</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a107f60bcc98b3ed19922d3222f7a32b7">Unsubscribe</link>(<emphasis role="keywordtype">string</emphasis>[]&#32;channels)
<anchor xml:id="__chat_client_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;Unsubscribe&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00529"/>00529 
<anchor xml:id="__chat_client_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channels&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;channels.Length&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;Unsubscribe&#32;can&apos;t&#32;be&#32;called&#32;for&#32;empty&#32;or&#32;null&#32;channels-list.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00538"/>00538 
<anchor xml:id="__chat_client_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>&#32;ch&#32;<emphasis role="keywordflow">in</emphasis>&#32;channels)
<anchor xml:id="__chat_client_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PublicChannelsUnsubscribing.Add(ch);
<anchor xml:id="__chat_client_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.SendChannelOperation(channels,&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code">ChatOperationCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code_1a0cf740ac7a73ba3d7c3c3448cfb40633">Unsubscribe</link>,&#32;0);
<anchor xml:id="__chat_client_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00545"/>00545 
<anchor xml:id="__chat_client_8cs_source_1l00555"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1afefc5d6f79d10d6d755669d14eee9c12">00555</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1afefc5d6f79d10d6d755669d14eee9c12">PublishMessage</link>(<emphasis role="keywordtype">string</emphasis>&#32;channelName,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forwardAsWebhook&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.publishMessage(channelName,&#32;message,&#32;<emphasis role="keyword">true</emphasis>,&#32;forwardAsWebhook);
<anchor xml:id="__chat_client_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00559"/>00559 
<anchor xml:id="__chat_client_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;PublishMessageUnreliable(<emphasis role="keywordtype">string</emphasis>&#32;channelName,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forwardAsWebhook&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.publishMessage(channelName,&#32;message,&#32;<emphasis role="keyword">false</emphasis>,&#32;forwardAsWebhook);
<anchor xml:id="__chat_client_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00564"/>00564 
<anchor xml:id="__chat_client_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;publishMessage(<emphasis role="keywordtype">string</emphasis>&#32;channelName,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;reliable,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forwardAsWebhook&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;PublishMessage&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00575"/>00575 
<anchor xml:id="__chat_client_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(channelName)&#32;||&#32;message&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;PublishMessage&#32;parameters&#32;must&#32;be&#32;non-null&#32;and&#32;not&#32;empty.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00584"/>00584 
<anchor xml:id="__chat_client_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;parameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;
<anchor xml:id="__chat_client_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;(byte)ChatParameterCode.Channel,&#32;channelName&#32;},
<anchor xml:id="__chat_client_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;(byte)ChatParameterCode.Message,&#32;message&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__chat_client_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(forwardAsWebhook)
<anchor xml:id="__chat_client_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.Add(ChatParameterCode.WebFlags,&#32;(<emphasis role="keywordtype">byte</emphasis>)0x1);
<anchor xml:id="__chat_client_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00594"/>00594 
<anchor xml:id="__chat_client_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(ChatOperationCode.Publish,&#32;parameters,&#32;<emphasis role="keyword">new</emphasis>&#32;SendOptions()&#32;{&#32;Reliability&#32;=&#32;reliable&#32;});
<anchor xml:id="__chat_client_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00597"/>00597 
<anchor xml:id="__chat_client_8cs_source_1l00605"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1ad50dca47b8149b0952746af0fe25dad2">00605</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ad50dca47b8149b0952746af0fe25dad2">SendPrivateMessage</link>(<emphasis role="keywordtype">string</emphasis>&#32;target,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forwardAsWebhook&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ad50dca47b8149b0952746af0fe25dad2">SendPrivateMessage</link>(target,&#32;message,&#32;<emphasis role="keyword">false</emphasis>,&#32;forwardAsWebhook);
<anchor xml:id="__chat_client_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00609"/>00609 
<anchor xml:id="__chat_client_8cs_source_1l00618"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1af667c9375be0cfdd9d626c24f1bb4deb">00618</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af667c9375be0cfdd9d626c24f1bb4deb">SendPrivateMessage</link>(<emphasis role="keywordtype">string</emphasis>&#32;target,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;encrypt,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forwardAsWebhook)
<anchor xml:id="__chat_client_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.sendPrivateMessage(target,&#32;message,&#32;encrypt,&#32;<emphasis role="keyword">true</emphasis>,&#32;forwardAsWebhook);
<anchor xml:id="__chat_client_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00622"/>00622 
<anchor xml:id="__chat_client_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SendPrivateMessageUnreliable(<emphasis role="keywordtype">string</emphasis>&#32;target,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;encrypt,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forwardAsWebhook&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.sendPrivateMessage(target,&#32;message,&#32;encrypt,&#32;<emphasis role="keyword">false</emphasis>,&#32;forwardAsWebhook);
<anchor xml:id="__chat_client_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00627"/>00627 
<anchor xml:id="__chat_client_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;sendPrivateMessage(<emphasis role="keywordtype">string</emphasis>&#32;target,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;encrypt,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;reliable,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forwardAsWebhook&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;SendPrivateMessage&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00638"/>00638 
<anchor xml:id="__chat_client_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(target)&#32;||&#32;message&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;SendPrivateMessage&#32;parameters&#32;must&#32;be&#32;non-null&#32;and&#32;not&#32;empty.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00647"/>00647 
<anchor xml:id="__chat_client_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;parameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;
<anchor xml:id="__chat_client_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.UserId,&#32;target&#32;},
<anchor xml:id="__chat_client_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.Message,&#32;message&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__chat_client_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(forwardAsWebhook)
<anchor xml:id="__chat_client_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.Add(ChatParameterCode.WebFlags,&#32;(<emphasis role="keywordtype">byte</emphasis>)0x1);
<anchor xml:id="__chat_client_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00657"/>00657 
<anchor xml:id="__chat_client_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(ChatOperationCode.SendPrivate,&#32;parameters,&#32;<emphasis role="keyword">new</emphasis>&#32;SendOptions()&#32;{&#32;Reliability&#32;=&#32;reliable,&#32;Encrypt&#32;=&#32;encrypt&#32;});
<anchor xml:id="__chat_client_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00660"/>00660 
<anchor xml:id="__chat_client_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SetOnlineStatus(<emphasis role="keywordtype">int</emphasis>&#32;status,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;skipMessage)
<anchor xml:id="__chat_client_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;SetOnlineStatus&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00686"/>00686 
<anchor xml:id="__chat_client_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;parameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;
<anchor xml:id="__chat_client_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.Status,&#32;status&#32;},
<anchor xml:id="__chat_client_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__chat_client_8cs_source_1l00691"/>00691 
<anchor xml:id="__chat_client_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(skipMessage)
<anchor xml:id="__chat_client_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters[ChatParameterCode.SkipMessage]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters[ChatParameterCode.Message]&#32;=&#32;message;
<anchor xml:id="__chat_client_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00700"/>00700 
<anchor xml:id="__chat_client_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(ChatOperationCode.UpdateStatus,&#32;parameters,&#32;SendOptions.SendReliable);
<anchor xml:id="__chat_client_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00703"/>00703 
<anchor xml:id="__chat_client_8cs_source_1l00716"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0d5755dc7972e0a68cf51863ff2d6ed1">00716</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0d5755dc7972e0a68cf51863ff2d6ed1">SetOnlineStatus</link>(<emphasis role="keywordtype">int</emphasis>&#32;status)
<anchor xml:id="__chat_client_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.SetOnlineStatus(status,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00720"/>00720 
<anchor xml:id="__chat_client_8cs_source_1l00735"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1ac910645633b86071da9f1bb928b42243">00735</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ac910645633b86071da9f1bb928b42243">SetOnlineStatus</link>(<emphasis role="keywordtype">int</emphasis>&#32;status,&#32;<emphasis role="keywordtype">object</emphasis>&#32;message)
<anchor xml:id="__chat_client_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.SetOnlineStatus(status,&#32;message,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00739"/>00739 
<anchor xml:id="__chat_client_8cs_source_1l00764"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a03179eafc39116476b13ebd68ae43b58">00764</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a03179eafc39116476b13ebd68ae43b58">AddFriends</link>(<emphasis role="keywordtype">string</emphasis>[]&#32;friends)
<anchor xml:id="__chat_client_8cs_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;AddFriends&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00774"/>00774 
<anchor xml:id="__chat_client_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(friends&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;friends.Length&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;AddFriends&#32;can&apos;t&#32;be&#32;called&#32;for&#32;empty&#32;or&#32;null&#32;list.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(friends.Length&#32;&gt;&#32;FriendRequestListMax)
<anchor xml:id="__chat_client_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;AddFriends&#32;max&#32;list&#32;size&#32;exceeded:&#32;&quot;</emphasis>&#32;+&#32;friends.Length&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&gt;&#32;&quot;</emphasis>&#32;+&#32;FriendRequestListMax);
<anchor xml:id="__chat_client_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00791"/>00791 
<anchor xml:id="__chat_client_8cs_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;parameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;
<anchor xml:id="__chat_client_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code">ChatParameterCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code_1ae1248e5e672e273a606542ef83713c75">Friends</link>,&#32;friends&#32;},
<anchor xml:id="__chat_client_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__chat_client_8cs_source_1l00796"/>00796 
<anchor xml:id="__chat_client_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code">ChatOperationCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code_1ad0fa7f85c104183cfec5fb0613088fb7">AddFriends</link>,&#32;parameters,&#32;SendOptions.SendReliable);
<anchor xml:id="__chat_client_8cs_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00799"/>00799 
<anchor xml:id="__chat_client_8cs_source_1l00842"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9dc5c47ec3c216142d3dcdf6b5a5e1a0">00842</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9dc5c47ec3c216142d3dcdf6b5a5e1a0">RemoveFriends</link>(<emphasis role="keywordtype">string</emphasis>[]&#32;friends)
<anchor xml:id="__chat_client_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;RemoveFriends&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00852"/>00852 
<anchor xml:id="__chat_client_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(friends&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;friends.Length&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;RemoveFriends&#32;can&apos;t&#32;be&#32;called&#32;for&#32;empty&#32;or&#32;null&#32;list.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(friends.Length&#32;&gt;&#32;FriendRequestListMax)
<anchor xml:id="__chat_client_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;RemoveFriends&#32;max&#32;list&#32;size&#32;exceeded:&#32;&quot;</emphasis>&#32;+&#32;friends.Length&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&gt;&#32;&quot;</emphasis>&#32;+&#32;FriendRequestListMax);
<anchor xml:id="__chat_client_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00869"/>00869 
<anchor xml:id="__chat_client_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;parameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;
<anchor xml:id="__chat_client_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code">ChatParameterCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code_1ae1248e5e672e273a606542ef83713c75">Friends</link>,&#32;friends&#32;},
<anchor xml:id="__chat_client_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__chat_client_8cs_source_1l00874"/>00874 
<anchor xml:id="__chat_client_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code">ChatOperationCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code_1a84934276dfca49546803e3af930526e9">RemoveFriends</link>,&#32;parameters,&#32;SendOptions.SendReliable);
<anchor xml:id="__chat_client_8cs_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00877"/>00877 
<anchor xml:id="__chat_client_8cs_source_1l00886"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1ab1feb7b68f1125ecd4a5c1994767a8ce">00886</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ab1feb7b68f1125ecd4a5c1994767a8ce">GetPrivateChannelNameByUser</link>(<emphasis role="keywordtype">string</emphasis>&#32;userName)
<anchor xml:id="__chat_client_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;{0}:{1}&quot;</emphasis>,&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546">UserId</link>,&#32;userName);
<anchor xml:id="__chat_client_8cs_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00890"/>00890 
<anchor xml:id="__chat_client_8cs_source_1l00900"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5dd578fb1b7cbbebcbe28a95187bb85e">00900</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5dd578fb1b7cbbebcbe28a95187bb85e">TryGetChannel</link>(<emphasis role="keywordtype">string</emphasis>&#32;channelName,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isPrivate,&#32;out&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_channel">ChatChannel</link>&#32;channel)
<anchor xml:id="__chat_client_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isPrivate)
<anchor xml:id="__chat_client_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.PublicChannels.TryGetValue(channelName,&#32;out&#32;channel);
<anchor xml:id="__chat_client_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.PrivateChannels.TryGetValue(channelName,&#32;out&#32;channel);
<anchor xml:id="__chat_client_8cs_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00911"/>00911 
<anchor xml:id="__chat_client_8cs_source_1l00920"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5e6a8762289fd86be605bef46d67018d">00920</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5e6a8762289fd86be605bef46d67018d">TryGetChannel</link>(<emphasis role="keywordtype">string</emphasis>&#32;channelName,&#32;out&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_channel">ChatChannel</link>&#32;channel)
<anchor xml:id="__chat_client_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;this.PublicChannels.TryGetValue(channelName,&#32;out&#32;channel);
<anchor xml:id="__chat_client_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(found)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00925"/>00925 
<anchor xml:id="__chat_client_8cs_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;this.PrivateChannels.TryGetValue(channelName,&#32;out&#32;channel);
<anchor xml:id="__chat_client_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;found;
<anchor xml:id="__chat_client_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00929"/>00929 
<anchor xml:id="__chat_client_8cs_source_1l00936"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1af9f150401be83cd00b7061fe04a07456">00936</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af9f150401be83cd00b7061fe04a07456">TryGetPrivateChannelByUser</link>(<emphasis role="keywordtype">string</emphasis>&#32;userId,&#32;out&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_channel">ChatChannel</link>&#32;channel)
<anchor xml:id="__chat_client_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(userId))
<anchor xml:id="__chat_client_8cs_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00942"/>00942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channelName&#32;=&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ab1feb7b68f1125ecd4a5c1994767a8ce">GetPrivateChannelNameByUser</link>(userId);
<anchor xml:id="__chat_client_8cs_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5dd578fb1b7cbbebcbe28a95187bb85e">TryGetChannel</link>(channelName,&#32;<emphasis role="keyword">true</emphasis>,&#32;out&#32;channel);
<anchor xml:id="__chat_client_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00946"/>00946 
<anchor xml:id="__chat_client_8cs_source_1l00954"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">00954</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;DebugLevel&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>
<anchor xml:id="__chat_client_8cs_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;this.chatPeer.DebugOut&#32;=&#32;value;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.DebugOut;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00959"/>00959 
<anchor xml:id="__chat_client_8cs_source_1l00960"/>00960 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Private&#32;methods&#32;area</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00961"/>00961 
<anchor xml:id="__chat_client_8cs_source_1l00962"/>00962 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;IPhotonPeerListener&#32;implementation</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00963"/>00963 
<anchor xml:id="__chat_client_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;IPhotonPeerListener.DebugReturn(DebugLevel&#32;level,&#32;<emphasis role="keywordtype">string</emphasis>&#32;message)
<anchor xml:id="__chat_client_8cs_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(level,&#32;message);
<anchor xml:id="__chat_client_8cs_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l00968"/>00968 
<anchor xml:id="__chat_client_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;IPhotonPeerListener.OnEvent(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00971"/>00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(eventData.Code)
<anchor xml:id="__chat_client_8cs_source_1l00972"/>00972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l00973"/>00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ChatEventCode.ChatMessages:
<anchor xml:id="__chat_client_8cs_source_1l00974"/>00974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandleChatMessagesEvent(eventData);
<anchor xml:id="__chat_client_8cs_source_1l00975"/>00975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ChatEventCode.PrivateMessage:
<anchor xml:id="__chat_client_8cs_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandlePrivateMessageEvent(eventData);
<anchor xml:id="__chat_client_8cs_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ChatEventCode.StatusUpdate:
<anchor xml:id="__chat_client_8cs_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandleStatusUpdate(eventData);
<anchor xml:id="__chat_client_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ChatEventCode.Subscribe:
<anchor xml:id="__chat_client_8cs_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandleSubscribeEvent(eventData);
<anchor xml:id="__chat_client_8cs_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ChatEventCode.Unsubscribe:
<anchor xml:id="__chat_client_8cs_source_1l00986"/>00986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandleUnsubscribeEvent(eventData);
<anchor xml:id="__chat_client_8cs_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ChatEventCode.UserSubscribed:
<anchor xml:id="__chat_client_8cs_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandleUserSubscribedEvent(eventData);
<anchor xml:id="__chat_client_8cs_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ChatEventCode.UserUnsubscribed:
<anchor xml:id="__chat_client_8cs_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandleUserUnsubscribedEvent(eventData);
<anchor xml:id="__chat_client_8cs_source_1l00993"/>00993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00994"/>00994 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;CHAT_EXTENDED</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ChatEventCode.PropertiesChanged:
<anchor xml:id="__chat_client_8cs_source_1l00996"/>00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandlePropertiesChanged(eventData);
<anchor xml:id="__chat_client_8cs_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ChatEventCode.ErrorInfo:
<anchor xml:id="__chat_client_8cs_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandleErrorInfoEvent(eventData);
<anchor xml:id="__chat_client_8cs_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01001"/>01001 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01004"/>01004 
<anchor xml:id="__chat_client_8cs_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;IPhotonPeerListener.OnOperationResponse(OperationResponse&#32;operationResponse)
<anchor xml:id="__chat_client_8cs_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(operationResponse.OperationCode)
<anchor xml:id="__chat_client_8cs_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01009"/>01009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)ChatOperationCode.Authenticate:
<anchor xml:id="__chat_client_8cs_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.HandleAuthResponse(operationResponse);
<anchor xml:id="__chat_client_8cs_source_1l01011"/>01011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01012"/>01012 
<anchor xml:id="__chat_client_8cs_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;following&#32;operations&#32;usually&#32;don&apos;t&#32;return&#32;useful&#32;data&#32;and&#32;no&#32;error.</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)ChatOperationCode.Subscribe:
<anchor xml:id="__chat_client_8cs_source_1l01015"/>01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)ChatOperationCode.Unsubscribe:
<anchor xml:id="__chat_client_8cs_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)ChatOperationCode.Publish:
<anchor xml:id="__chat_client_8cs_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)ChatOperationCode.SendPrivate:
<anchor xml:id="__chat_client_8cs_source_1l01018"/>01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__chat_client_8cs_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((operationResponse.ReturnCode&#32;!=&#32;0)&#32;&amp;&amp;&#32;(<emphasis role="keyword">this</emphasis>.DebugOut&#32;&gt;=&#32;DebugLevel.ERROR))
<anchor xml:id="__chat_client_8cs_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationResponse.ReturnCode&#32;==&#32;-2)
<anchor xml:id="__chat_client_8cs_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01023"/>01023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Chat&#32;Operation&#32;{0}&#32;unknown&#32;on&#32;server.&#32;Check&#32;your&#32;AppId&#32;and&#32;make&#32;sure&#32;it&apos;s&#32;for&#32;a&#32;Chat&#32;application.&quot;</emphasis>,&#32;operationResponse.OperationCode));
<anchor xml:id="__chat_client_8cs_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Chat&#32;Operation&#32;{0}&#32;failed&#32;(Code:&#32;{1}).&#32;Debug&#32;Message:&#32;{2}&quot;</emphasis>,&#32;operationResponse.OperationCode,&#32;operationResponse.ReturnCode,&#32;operationResponse.DebugMessage));
<anchor xml:id="__chat_client_8cs_source_1l01028"/>01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01033"/>01033 
<anchor xml:id="__chat_client_8cs_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;IPhotonPeerListener.OnStatusChanged(StatusCode&#32;statusCode)
<anchor xml:id="__chat_client_8cs_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01036"/>01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(statusCode)
<anchor xml:id="__chat_client_8cs_source_1l01037"/>01037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.Connect:
<anchor xml:id="__chat_client_8cs_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.chatPeer.IsProtocolSecure)
<anchor xml:id="__chat_client_8cs_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.chatPeer.EstablishEncryption())
<anchor xml:id="__chat_client_8cs_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;Error&#32;establishing&#32;encryption&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01049"/>01049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAuthenticateOnNameServer();
<anchor xml:id="__chat_client_8cs_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01053"/>01053 
<anchor xml:id="__chat_client_8cs_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectingToNameServer)
<anchor xml:id="__chat_client_8cs_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectedToNameServer;
<anchor xml:id="__chat_client_8cs_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnChatStateChange(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>);
<anchor xml:id="__chat_client_8cs_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01059"/>01059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectingToFrontEnd)
<anchor xml:id="__chat_client_8cs_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.AuthenticateOnFrontEnd())
<anchor xml:id="__chat_client_8cs_source_1l01062"/>01062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01063"/>01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01064"/>01064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01065"/>01065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Error&#32;authenticating&#32;on&#32;frontend!&#32;Check&#32;log&#32;output,&#32;AuthValues&#32;and&#32;if&#32;you&apos;re&#32;connected.&#32;State:&#32;{0}&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>.State));
<anchor xml:id="__chat_client_8cs_source_1l01066"/>01066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01067"/>01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.EncryptionEstablished:
<anchor xml:id="__chat_client_8cs_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;once&#32;encryption&#32;is&#32;available,&#32;the&#32;client&#32;should&#32;send&#32;one&#32;(secure)&#32;authenticate.&#32;it&#32;includes&#32;the&#32;AppId&#32;(which&#32;identifies&#32;your&#32;app&#32;on&#32;the&#32;Photon&#32;Cloud)</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01072"/>01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TryAuthenticateOnNameServer();
<anchor xml:id="__chat_client_8cs_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.Disconnect:
<anchor xml:id="__chat_client_8cs_source_1l01075"/>01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>)
<anchor xml:id="__chat_client_8cs_source_1l01076"/>01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01077"/>01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectWithFallbackProtocol:
<anchor xml:id="__chat_client_8cs_source_1l01078"/>01078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0299296d1acde3271523056464c0ac11">EnableProtocolFallback</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;client&#32;does&#32;a&#32;fallback&#32;only&#32;one&#32;time</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01079"/>01079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.<link linkend="_class_photon_1_1_chat_1_1_chat_peer_1ac6a44cd138597c409840edb8395ad442">NameServerPortOverride</link>&#32;=&#32;0;&#32;&#32;&#32;<emphasis role="comment">//&#32;resets&#32;a&#32;value&#32;in&#32;the&#32;peer&#32;only&#32;(as&#32;we&#32;change&#32;the&#32;protocol,&#32;the&#32;port&#32;has&#32;to&#32;change,&#32;too)</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01080"/>01080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.chatPeer.TransportProtocol&#32;=&#32;(this.chatPeer.TransportProtocol&#32;==&#32;ConnectionProtocol.Tcp)&#32;?&#32;ConnectionProtocol.Udp&#32;:&#32;ConnectionProtocol.Tcp;
<anchor xml:id="__chat_client_8cs_source_1l01081"/>01081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>.<link linkend="_class_photon_1_1_chat_1_1_chat_peer_1afc6fce926fbdd0512c2940c1a914f4e7">Connect</link>(<emphasis role="keyword">this</emphasis>.AppId,&#32;<emphasis role="keyword">this</emphasis>.AppVersion,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01082"/>01082 
<anchor xml:id="__chat_client_8cs_source_1l01083"/>01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;client&#32;now&#32;has&#32;to&#32;return,&#32;instead&#32;of&#32;break,&#32;to&#32;avoid&#32;further&#32;processing&#32;of&#32;the&#32;disconnect&#32;call</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01085"/>01085 
<anchor xml:id="__chat_client_8cs_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.Authenticated:
<anchor xml:id="__chat_client_8cs_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ConnectToFrontEnd();
<anchor xml:id="__chat_client_8cs_source_1l01088"/>01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;client&#32;disconnected&#32;from&#32;nameserver&#32;after&#32;authentication</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01089"/>01089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;switch&#32;to&#32;frontend</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01090"/>01090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.Disconnecting:
<anchor xml:id="__chat_client_8cs_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;expected&#32;disconnect</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01094"/>01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__chat_client_8cs_source_1l01095"/>01095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unexpected&#32;disconnect,&#32;we&#32;log&#32;warning&#32;and&#32;stacktrace</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;stacktrace&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Empty;
<anchor xml:id="__chat_client_8cs_source_1l01097"/>01097 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;DEBUG&#32;&amp;&amp;&#32;!NETFX_CORE</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stacktrace&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;System.Diagnostics.StackTrace(<emphasis role="keyword">true</emphasis>).ToString();
<anchor xml:id="__chat_client_8cs_source_1l01099"/>01099 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01100"/>01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Got&#32;a&#32;unexpected&#32;Disconnect&#32;in&#32;ChatState:&#32;{0}.&#32;Server:&#32;{1}&#32;Trace:&#32;{2}&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>.State,&#32;<emphasis role="keyword">this</emphasis>.chatPeer.ServerAddress,&#32;stacktrace));
<anchor xml:id="__chat_client_8cs_source_1l01101"/>01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01102"/>01102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01103"/>01103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01104"/>01104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01105"/>01105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>.<link linkend="_class_photon_1_1_chat_1_1_authentication_values_1aa6fa7c406c123b02bff4568a13a8063c">Token</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;&#32;<emphasis role="comment">//&#32;when&#32;leaving&#32;the&#32;server,&#32;invalidate&#32;the&#32;secret&#32;(but&#32;not&#32;the&#32;auth&#32;values)</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01106"/>01106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.Disconnected;
<anchor xml:id="__chat_client_8cs_source_1l01108"/>01108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnChatStateChange(<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.Disconnected);
<anchor xml:id="__chat_client_8cs_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnDisconnected();
<anchor xml:id="__chat_client_8cs_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01111"/>01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.DisconnectByServerUserLimit:
<anchor xml:id="__chat_client_8cs_source_1l01112"/>01112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;This&#32;connection&#32;was&#32;rejected&#32;due&#32;to&#32;the&#32;apps&#32;CCU&#32;limit.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01113"/>01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">Disconnect</link>(<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.MaxCcuReached);
<anchor xml:id="__chat_client_8cs_source_1l01114"/>01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01115"/>01115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.ExceptionOnConnect:
<anchor xml:id="__chat_client_8cs_source_1l01116"/>01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.SecurityExceptionOnConnect:
<anchor xml:id="__chat_client_8cs_source_1l01117"/>01117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.EncryptionFailedToEstablish:
<anchor xml:id="__chat_client_8cs_source_1l01118"/>01118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.ExceptionOnConnect;
<anchor xml:id="__chat_client_8cs_source_1l01119"/>01119 
<anchor xml:id="__chat_client_8cs_source_1l01120"/>01120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;enabled,&#32;the&#32;client&#32;can&#32;attempt&#32;to&#32;connect&#32;with&#32;another&#32;networking-protocol&#32;to&#32;check&#32;if&#32;that&#32;connects</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0299296d1acde3271523056464c0ac11">EnableProtocolFallback</link>&#32;&amp;&amp;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectingToNameServer)
<anchor xml:id="__chat_client_8cs_source_1l01122"/>01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01123"/>01123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectWithFallbackProtocol;
<anchor xml:id="__chat_client_8cs_source_1l01124"/>01124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01125"/>01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01126"/>01126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01127"/>01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">Disconnect</link>(<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.ExceptionOnConnect);
<anchor xml:id="__chat_client_8cs_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01129"/>01129 
<anchor xml:id="__chat_client_8cs_source_1l01130"/>01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01131"/>01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.Exception:
<anchor xml:id="__chat_client_8cs_source_1l01132"/>01132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.ExceptionOnReceive:
<anchor xml:id="__chat_client_8cs_source_1l01133"/>01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">Disconnect</link>(<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.Exception);
<anchor xml:id="__chat_client_8cs_source_1l01134"/>01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.DisconnectByServerTimeout:
<anchor xml:id="__chat_client_8cs_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">Disconnect</link>(<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.ServerTimeout);
<anchor xml:id="__chat_client_8cs_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01138"/>01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.DisconnectByServerLogic:
<anchor xml:id="__chat_client_8cs_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">Disconnect</link>(<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.DisconnectByServerLogic);
<anchor xml:id="__chat_client_8cs_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.DisconnectByServerReasonUnknown:
<anchor xml:id="__chat_client_8cs_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">Disconnect</link>(<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.DisconnectByServerReasonUnknown);
<anchor xml:id="__chat_client_8cs_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01144"/>01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;StatusCode.TimeoutDisconnect:
<anchor xml:id="__chat_client_8cs_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.ClientTimeout;
<anchor xml:id="__chat_client_8cs_source_1l01146"/>01146 
<anchor xml:id="__chat_client_8cs_source_1l01147"/>01147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;enabled,&#32;the&#32;client&#32;can&#32;attempt&#32;to&#32;connect&#32;with&#32;another&#32;networking-protocol&#32;to&#32;check&#32;if&#32;that&#32;connects</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0299296d1acde3271523056464c0ac11">EnableProtocolFallback</link>&#32;&amp;&amp;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectingToNameServer)
<anchor xml:id="__chat_client_8cs_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01150"/>01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectWithFallbackProtocol;
<anchor xml:id="__chat_client_8cs_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01152"/>01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">Disconnect</link>(<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.ClientTimeout);
<anchor xml:id="__chat_client_8cs_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01157"/>01157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01158"/>01158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01159"/>01159 
<anchor xml:id="__chat_client_8cs_source_1l01160"/>01160 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;SDK_V4</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01161"/>01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;IPhotonPeerListener.OnMessage(<emphasis role="keywordtype">object</emphasis>&#32;msg)
<anchor xml:id="__chat_client_8cs_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01163"/>01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channelName&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01164"/>01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;receivedBytes&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>[])msg;
<anchor xml:id="__chat_client_8cs_source_1l01165"/>01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;channelId&#32;=&#32;BitConverter.ToInt32(receivedBytes,&#32;0);
<anchor xml:id="__chat_client_8cs_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;messageBytes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[receivedBytes.Length&#32;-&#32;4];
<anchor xml:id="__chat_client_8cs_source_1l01167"/>01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Array.Copy(receivedBytes,&#32;4,&#32;messageBytes,&#32;0,&#32;receivedBytes.Length&#32;-&#32;4);
<anchor xml:id="__chat_client_8cs_source_1l01168"/>01168 
<anchor xml:id="__chat_client_8cs_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;channel&#32;<emphasis role="keywordflow">in</emphasis>&#32;this.PublicChannels)
<anchor xml:id="__chat_client_8cs_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channel.Value.ChannelID&#32;==&#32;channelId)
<anchor xml:id="__chat_client_8cs_source_1l01172"/>01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channelName&#32;=&#32;channel.Key;
<anchor xml:id="__chat_client_8cs_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01177"/>01177 
<anchor xml:id="__chat_client_8cs_source_1l01178"/>01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelName&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01179"/>01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ALL,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;got&#32;OnMessage&#32;in&#32;channel&#32;{0}&quot;</emphasis>,&#32;channelName));
<anchor xml:id="__chat_client_8cs_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01184"/>01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;got&#32;OnMessage&#32;in&#32;unknown&#32;channel&#32;{0}&quot;</emphasis>,&#32;channelId));
<anchor xml:id="__chat_client_8cs_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01186"/>01186 
<anchor xml:id="__chat_client_8cs_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnReceiveBroadcastMessage(channelName,&#32;messageBytes);
<anchor xml:id="__chat_client_8cs_source_1l01188"/>01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01189"/>01189 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01190"/>01190 
<anchor xml:id="__chat_client_8cs_source_1l01191"/>01191 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01192"/>01192 
<anchor xml:id="__chat_client_8cs_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TryAuthenticateOnNameServer()
<anchor xml:id="__chat_client_8cs_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.didAuthenticate)
<anchor xml:id="__chat_client_8cs_source_1l01196"/>01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.didAuthenticate&#32;=&#32;this.chatPeer.<link linkend="_class_photon_1_1_chat_1_1_chat_peer_1ab0b363cadd9e032f5572e8b59f398ec8">AuthenticateOnNameServer</link>(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ad90fda837d118577340199e9485bba84">AppId</link>,&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1adc7265160bf8f2697ae12f1fbe027eb3">AppVersion</link>,&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a44a3e865b745b732bc02213a5388c1ea">ChatRegion</link>,&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>);
<anchor xml:id="__chat_client_8cs_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.didAuthenticate)
<anchor xml:id="__chat_client_8cs_source_1l01199"/>01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01201"/>01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01202"/>01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Error&#32;calling&#32;OpAuthenticate!&#32;Did&#32;not&#32;work&#32;on&#32;NameServer.&#32;Check&#32;log&#32;output,&#32;AuthValues&#32;and&#32;if&#32;you&apos;re&#32;connected.&#32;State:&#32;{0}&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>.State));
<anchor xml:id="__chat_client_8cs_source_1l01203"/>01203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01204"/>01204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01205"/>01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01206"/>01206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01207"/>01207 
<anchor xml:id="__chat_client_8cs_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SendChannelOperation(<emphasis role="keywordtype">string</emphasis>[]&#32;channels,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;operation,&#32;<emphasis role="keywordtype">int</emphasis>&#32;historyLength)
<anchor xml:id="__chat_client_8cs_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;opParameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;&#32;{&#32;{&#32;(byte)ChatParameterCode.Channels,&#32;channels&#32;}&#32;};
<anchor xml:id="__chat_client_8cs_source_1l01211"/>01211 
<anchor xml:id="__chat_client_8cs_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(historyLength&#32;!=&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01213"/>01213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParameters.Add((<emphasis role="keywordtype">byte</emphasis>)ChatParameterCode.HistoryLength,&#32;historyLength);
<anchor xml:id="__chat_client_8cs_source_1l01215"/>01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01216"/>01216 
<anchor xml:id="__chat_client_8cs_source_1l01217"/>01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(operation,&#32;opParameters,&#32;SendOptions.SendReliable);
<anchor xml:id="__chat_client_8cs_source_1l01218"/>01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01219"/>01219 
<anchor xml:id="__chat_client_8cs_source_1l01220"/>01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandlePrivateMessageEvent(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l01221"/>01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01222"/>01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Console.WriteLine(SupportClass.DictionaryToString(eventData.Parameters));</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01223"/>01223 
<anchor xml:id="__chat_client_8cs_source_1l01224"/>01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;message&#32;=&#32;(object)eventData.Parameters[(<emphasis role="keywordtype">byte</emphasis>)ChatParameterCode.Message];
<anchor xml:id="__chat_client_8cs_source_1l01225"/>01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;sender&#32;=&#32;(string)eventData.Parameters[(<emphasis role="keywordtype">byte</emphasis>)ChatParameterCode.Sender];
<anchor xml:id="__chat_client_8cs_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;msgId&#32;=&#32;(int)eventData.Parameters[ChatParameterCode.MsgId];
<anchor xml:id="__chat_client_8cs_source_1l01227"/>01227 
<anchor xml:id="__chat_client_8cs_source_1l01228"/>01228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channelName;
<anchor xml:id="__chat_client_8cs_source_1l01229"/>01229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546">UserId</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546">UserId</link>.Equals(sender))
<anchor xml:id="__chat_client_8cs_source_1l01230"/>01230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;target&#32;=&#32;(string)eventData.Parameters[(<emphasis role="keywordtype">byte</emphasis>)ChatParameterCode.UserId];
<anchor xml:id="__chat_client_8cs_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channelName&#32;=&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ab1feb7b68f1125ecd4a5c1994767a8ce">GetPrivateChannelNameByUser</link>(target);
<anchor xml:id="__chat_client_8cs_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channelName&#32;=&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ab1feb7b68f1125ecd4a5c1994767a8ce">GetPrivateChannelNameByUser</link>(sender);
<anchor xml:id="__chat_client_8cs_source_1l01237"/>01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01238"/>01238 
<anchor xml:id="__chat_client_8cs_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChatChannel&#32;channel;
<anchor xml:id="__chat_client_8cs_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.PrivateChannels.TryGetValue(channelName,&#32;out&#32;channel))
<anchor xml:id="__chat_client_8cs_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ChatChannel(channelName);
<anchor xml:id="__chat_client_8cs_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.IsPrivate&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01244"/>01244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.MessageLimit&#32;=&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a145da05ec4438bf37eb12603459b66b5">MessageLimit</link>;
<anchor xml:id="__chat_client_8cs_source_1l01245"/>01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PrivateChannels.Add(channel.Name,&#32;channel);
<anchor xml:id="__chat_client_8cs_source_1l01246"/>01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01247"/>01247 
<anchor xml:id="__chat_client_8cs_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.Add(sender,&#32;message,&#32;msgId);
<anchor xml:id="__chat_client_8cs_source_1l01249"/>01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnPrivateMessage(sender,&#32;message,&#32;channelName);
<anchor xml:id="__chat_client_8cs_source_1l01250"/>01250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01251"/>01251 
<anchor xml:id="__chat_client_8cs_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleChatMessagesEvent(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l01253"/>01253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>[]&#32;messages&#32;=&#32;(<emphasis role="keywordtype">object</emphasis>[])eventData.Parameters[(<emphasis role="keywordtype">byte</emphasis>)ChatParameterCode.Messages];
<anchor xml:id="__chat_client_8cs_source_1l01255"/>01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;senders&#32;=&#32;(<emphasis role="keywordtype">string</emphasis>[])eventData.Parameters[(<emphasis role="keywordtype">byte</emphasis>)ChatParameterCode.Senders];
<anchor xml:id="__chat_client_8cs_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channelName&#32;=&#32;(string)eventData.Parameters[(<emphasis role="keywordtype">byte</emphasis>)ChatParameterCode.Channel];
<anchor xml:id="__chat_client_8cs_source_1l01257"/>01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastMsgId&#32;=&#32;(int)eventData.Parameters[ChatParameterCode.MsgId];
<anchor xml:id="__chat_client_8cs_source_1l01258"/>01258 
<anchor xml:id="__chat_client_8cs_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChatChannel&#32;channel;
<anchor xml:id="__chat_client_8cs_source_1l01260"/>01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(!this.PublicChannels.TryGetValue(channelName,&#32;out&#32;channel))
<anchor xml:id="__chat_client_8cs_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01263"/>01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;Channel&#32;&quot;</emphasis>&#32;+&#32;channelName&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;for&#32;incoming&#32;message&#32;event&#32;not&#32;found.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01266"/>01266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01267"/>01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01268"/>01268 
<anchor xml:id="__chat_client_8cs_source_1l01269"/>01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.Add(senders,&#32;messages,&#32;lastMsgId);
<anchor xml:id="__chat_client_8cs_source_1l01270"/>01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnGetMessages(channelName,&#32;senders,&#32;messages);
<anchor xml:id="__chat_client_8cs_source_1l01271"/>01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01272"/>01272 
<anchor xml:id="__chat_client_8cs_source_1l01273"/>01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleSubscribeEvent(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l01274"/>01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01275"/>01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;channelsInResponse&#32;=&#32;(<emphasis role="keywordtype">string</emphasis>[])eventData.Parameters[ChatParameterCode.Channels];
<anchor xml:id="__chat_client_8cs_source_1l01276"/>01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>[]&#32;results&#32;=&#32;(<emphasis role="keywordtype">bool</emphasis>[])eventData.Parameters[ChatParameterCode.SubscribeResults];
<anchor xml:id="__chat_client_8cs_source_1l01277"/>01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;channelsInResponse.Length;&#32;i++)
<anchor xml:id="__chat_client_8cs_source_1l01278"/>01278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01279"/>01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(results[i])
<anchor xml:id="__chat_client_8cs_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channelName&#32;=&#32;channelsInResponse[i];
<anchor xml:id="__chat_client_8cs_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChatChannel&#32;channel;
<anchor xml:id="__chat_client_8cs_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.PublicChannels.TryGetValue(channelName,&#32;out&#32;channel))
<anchor xml:id="__chat_client_8cs_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ChatChannel(channelName);
<anchor xml:id="__chat_client_8cs_source_1l01286"/>01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.MessageLimit&#32;=&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a145da05ec4438bf37eb12603459b66b5">MessageLimit</link>;
<anchor xml:id="__chat_client_8cs_source_1l01287"/>01287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PublicChannels.Add(channel.Name,&#32;channel);
<anchor xml:id="__chat_client_8cs_source_1l01288"/>01288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01289"/>01289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;temp;
<anchor xml:id="__chat_client_8cs_source_1l01290"/>01290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(eventData.Parameters.TryGetValue(ChatParameterCode.Properties,&#32;out&#32;temp))
<anchor xml:id="__chat_client_8cs_source_1l01291"/>01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01292"/>01292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;object,&#32;object&gt;&#32;channelProperties&#32;=&#32;temp&#32;as&#32;Dictionary&lt;object,&#32;object&gt;;
<anchor xml:id="__chat_client_8cs_source_1l01293"/>01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.ReadChannelProperties(channelProperties);
<anchor xml:id="__chat_client_8cs_source_1l01294"/>01294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channel.PublishSubscribers)&#32;<emphasis role="comment">//&#32;or&#32;maybe&#32;remove&#32;check&#32;&amp;&#32;always&#32;add&#32;anyway?</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.Subscribers.Add(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546">UserId</link>);
<anchor xml:id="__chat_client_8cs_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(eventData.Parameters.TryGetValue(ChatParameterCode.ChannelSubscribers,&#32;out&#32;temp))
<anchor xml:id="__chat_client_8cs_source_1l01300"/>01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;subscribers&#32;=&#32;temp&#32;as&#32;<emphasis role="keywordtype">string</emphasis>[];
<anchor xml:id="__chat_client_8cs_source_1l01302"/>01302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.AddSubscribers(subscribers);
<anchor xml:id="__chat_client_8cs_source_1l01303"/>01303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01304"/>01304 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;CHAT_EXTENDED</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01305"/>01305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(eventData.Parameters.TryGetValue(ChatParameterCode.UserProperties,&#32;out&#32;temp))
<anchor xml:id="__chat_client_8cs_source_1l01306"/>01306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01307"/>01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;string,&#32;Dictionary&lt;object,&#32;object&gt;&gt;&#32;userProperties&#32;=&#32;temp&#32;as&#32;Dictionary&lt;string,&#32;Dictionary&lt;object,&#32;object&gt;&gt;;
<anchor xml:id="__chat_client_8cs_source_1l01308"/>01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;pair&#32;<emphasis role="keywordflow">in</emphasis>&#32;userProperties)
<anchor xml:id="__chat_client_8cs_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.ReadUserProperties(pair.Key,&#32;pair.Value);
<anchor xml:id="__chat_client_8cs_source_1l01311"/>01311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01313"/>01313 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01314"/>01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01315"/>01315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01316"/>01316 
<anchor xml:id="__chat_client_8cs_source_1l01317"/>01317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnSubscribed(channelsInResponse,&#32;results);
<anchor xml:id="__chat_client_8cs_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01319"/>01319 
<anchor xml:id="__chat_client_8cs_source_1l01320"/>01320 
<anchor xml:id="__chat_client_8cs_source_1l01321"/>01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleUnsubscribeEvent(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;channelsInRequest&#32;=&#32;(<emphasis role="keywordtype">string</emphasis>[])eventData[ChatParameterCode.Channels];
<anchor xml:id="__chat_client_8cs_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;channelsInRequest.Length;&#32;i++)
<anchor xml:id="__chat_client_8cs_source_1l01325"/>01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01326"/>01326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channelName&#32;=&#32;channelsInRequest[i];
<anchor xml:id="__chat_client_8cs_source_1l01327"/>01327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PublicChannels.Remove(channelName);
<anchor xml:id="__chat_client_8cs_source_1l01328"/>01328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.PublicChannelsUnsubscribing.Remove(channelName);
<anchor xml:id="__chat_client_8cs_source_1l01329"/>01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01330"/>01330 
<anchor xml:id="__chat_client_8cs_source_1l01331"/>01331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnUnsubscribed(channelsInRequest);
<anchor xml:id="__chat_client_8cs_source_1l01332"/>01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01333"/>01333 
<anchor xml:id="__chat_client_8cs_source_1l01334"/>01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleAuthResponse(OperationResponse&#32;operationResponse)
<anchor xml:id="__chat_client_8cs_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.INFO)
<anchor xml:id="__chat_client_8cs_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.INFO,&#32;operationResponse.ToStringFull()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;on:&#32;&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">this</emphasis>.chatPeer.NameServerAddress);
<anchor xml:id="__chat_client_8cs_source_1l01339"/>01339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01340"/>01340 
<anchor xml:id="__chat_client_8cs_source_1l01341"/>01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationResponse.ReturnCode&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01342"/>01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01343"/>01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectedToNameServer)
<anchor xml:id="__chat_client_8cs_source_1l01344"/>01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.Authenticated;
<anchor xml:id="__chat_client_8cs_source_1l01346"/>01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnChatStateChange(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>);
<anchor xml:id="__chat_client_8cs_source_1l01347"/>01347 
<anchor xml:id="__chat_client_8cs_source_1l01348"/>01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationResponse.Parameters.ContainsKey(ParameterCode.Secret))
<anchor xml:id="__chat_client_8cs_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01350"/>01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01351"/>01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01352"/>01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__chat_gui_8cs_1a2507e30a30e7795f768f9883242b3f85">AuthenticationValues</link>();
<anchor xml:id="__chat_client_8cs_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>.<link linkend="_class_photon_1_1_chat_1_1_authentication_values_1aa6fa7c406c123b02bff4568a13a8063c">Token</link>&#32;=&#32;operationResponse[ParameterCode.Secret]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01355"/>01355 
<anchor xml:id="__chat_client_8cs_source_1l01356"/>01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a586cbe47663c00ba006c4b1fca8973fc">FrontendAddress</link>&#32;=&#32;(string)operationResponse[ParameterCode.Address];
<anchor xml:id="__chat_client_8cs_source_1l01357"/>01357 
<anchor xml:id="__chat_client_8cs_source_1l01358"/>01358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;disconnect&#32;and&#32;status&#32;handler&#32;starts&#32;to&#32;connect&#32;to&#32;front&#32;end</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01359"/>01359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>.chatPeer.Disconnect();
<anchor xml:id="__chat_client_8cs_source_1l01360"/>01360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01362"/>01362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01363"/>01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01364"/>01364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01365"/>01365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;No&#32;secret&#32;in&#32;authentication&#32;response.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationResponse.Parameters.ContainsKey(ParameterCode.UserId))
<anchor xml:id="__chat_client_8cs_source_1l01369"/>01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;incomingId&#32;=&#32;operationResponse.Parameters[ParameterCode.UserId]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01371"/>01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(incomingId))
<anchor xml:id="__chat_client_8cs_source_1l01372"/>01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01373"/>01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546">UserId</link>&#32;=&#32;incomingId;
<anchor xml:id="__chat_client_8cs_source_1l01374"/>01374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.INFO,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Received&#32;your&#32;UserID&#32;from&#32;server.&#32;Updating&#32;local&#32;value&#32;to:&#32;{0}&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>.UserId));
<anchor xml:id="__chat_client_8cs_source_1l01375"/>01375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01376"/>01376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01377"/>01377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01378"/>01378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectingToFrontEnd)
<anchor xml:id="__chat_client_8cs_source_1l01379"/>01379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01380"/>01380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectedToFrontEnd;
<anchor xml:id="__chat_client_8cs_source_1l01381"/>01381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnChatStateChange(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>);
<anchor xml:id="__chat_client_8cs_source_1l01382"/>01382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnConnected();
<anchor xml:id="__chat_client_8cs_source_1l01383"/>01383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(statusToSetWhenConnected.HasValue)
<anchor xml:id="__chat_client_8cs_source_1l01384"/>01384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01385"/>01385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetOnlineStatus(statusToSetWhenConnected.Value,&#32;messageToSetWhenConnected);
<anchor xml:id="__chat_client_8cs_source_1l01386"/>01386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statusToSetWhenConnected&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01387"/>01387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01388"/>01388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01389"/>01389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01390"/>01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01391"/>01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01392"/>01392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//this.listener.DebugReturn(DebugLevel.INFO,&#32;operationResponse.ToStringFull()&#32;+&#32;&quot;&#32;NS:&#32;&quot;&#32;+&#32;this.NameServerAddress&#32;+&#32;&quot;&#32;FrontEnd:&#32;&quot;&#32;+&#32;this.frontEndAddress);</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01393"/>01393 
<anchor xml:id="__chat_client_8cs_source_1l01394"/>01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(operationResponse.ReturnCode)
<anchor xml:id="__chat_client_8cs_source_1l01395"/>01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01396"/>01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ErrorCode.InvalidAuthentication:
<anchor xml:id="__chat_client_8cs_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.InvalidAuthentication;
<anchor xml:id="__chat_client_8cs_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01399"/>01399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ErrorCode.CustomAuthenticationFailed:
<anchor xml:id="__chat_client_8cs_source_1l01400"/>01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.CustomAuthenticationFailed;
<anchor xml:id="__chat_client_8cs_source_1l01401"/>01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01402"/>01402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ErrorCode.InvalidRegion:
<anchor xml:id="__chat_client_8cs_source_1l01403"/>01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.InvalidRegion;
<anchor xml:id="__chat_client_8cs_source_1l01404"/>01404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ErrorCode.MaxCcuReached:
<anchor xml:id="__chat_client_8cs_source_1l01406"/>01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.MaxCcuReached;
<anchor xml:id="__chat_client_8cs_source_1l01407"/>01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01408"/>01408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ErrorCode.OperationNotAllowedInCurrentState:
<anchor xml:id="__chat_client_8cs_source_1l01409"/>01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.OperationNotAllowedInCurrentState;
<anchor xml:id="__chat_client_8cs_source_1l01410"/>01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01411"/>01411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;ErrorCode.AuthenticationTicketExpired:
<anchor xml:id="__chat_client_8cs_source_1l01412"/>01412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e">ChatDisconnectCause</link>.AuthenticationTicketExpired;
<anchor xml:id="__chat_client_8cs_source_1l01413"/>01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01414"/>01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01415"/>01415 
<anchor xml:id="__chat_client_8cs_source_1l01416"/>01416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01418"/>01418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;{0}&#32;ClientState:&#32;{1}&#32;ServerAddress:&#32;{2}&quot;</emphasis>,&#32;operationResponse.ToStringFull(),&#32;<emphasis role="keyword">this</emphasis>.State,&#32;<emphasis role="keyword">this</emphasis>.chatPeer.ServerAddress));
<anchor xml:id="__chat_client_8cs_source_1l01419"/>01419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01420"/>01420 
<anchor xml:id="__chat_client_8cs_source_1l01421"/>01421 
<anchor xml:id="__chat_client_8cs_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2">Disconnect</link>(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50">DisconnectedCause</link>);
<anchor xml:id="__chat_client_8cs_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01424"/>01424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01425"/>01425 
<anchor xml:id="__chat_client_8cs_source_1l01426"/>01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleStatusUpdate(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l01427"/>01427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01428"/>01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;user&#32;=&#32;(string)eventData.Parameters[ChatParameterCode.Sender];
<anchor xml:id="__chat_client_8cs_source_1l01429"/>01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;status&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>)eventData.Parameters[ChatParameterCode.Status];
<anchor xml:id="__chat_client_8cs_source_1l01430"/>01430 
<anchor xml:id="__chat_client_8cs_source_1l01431"/>01431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;message&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01432"/>01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;gotMessage&#32;=&#32;eventData.Parameters.ContainsKey(ChatParameterCode.Message);
<anchor xml:id="__chat_client_8cs_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(gotMessage)
<anchor xml:id="__chat_client_8cs_source_1l01434"/>01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01435"/>01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;message&#32;=&#32;eventData.Parameters[ChatParameterCode.Message];
<anchor xml:id="__chat_client_8cs_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01437"/>01437 
<anchor xml:id="__chat_client_8cs_source_1l01438"/>01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnStatusUpdate(user,&#32;status,&#32;gotMessage,&#32;message);
<anchor xml:id="__chat_client_8cs_source_1l01439"/>01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01440"/>01440 
<anchor xml:id="__chat_client_8cs_source_1l01441"/>01441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ConnectToFrontEnd()
<anchor xml:id="__chat_client_8cs_source_1l01442"/>01442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01443"/>01443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7">State</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81">ChatState</link>.ConnectingToFrontEnd;
<anchor xml:id="__chat_client_8cs_source_1l01444"/>01444 
<anchor xml:id="__chat_client_8cs_source_1l01445"/>01445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.INFO)
<anchor xml:id="__chat_client_8cs_source_1l01446"/>01446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01447"/>01447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.INFO,&#32;<emphasis role="stringliteral">&quot;Connecting&#32;to&#32;frontend&#32;&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">this</emphasis>.FrontendAddress);
<anchor xml:id="__chat_client_8cs_source_1l01448"/>01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01449"/>01449 
<anchor xml:id="__chat_client_8cs_source_1l01450"/>01450 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_WEBGL</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01451"/>01451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff">TransportProtocol</link>&#32;==&#32;ConnectionProtocol.Tcp&#32;||&#32;<emphasis role="keyword">this</emphasis>.TransportProtocol&#32;==&#32;ConnectionProtocol.Udp)
<anchor xml:id="__chat_client_8cs_source_1l01452"/>01452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01453"/>01453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;WebGL&#32;requires&#32;WebSockets.&#32;Switching&#32;TransportProtocol&#32;to&#32;WebSocketSecure.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01454"/>01454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff">TransportProtocol</link>&#32;=&#32;ConnectionProtocol.WebSocketSecure;
<anchor xml:id="__chat_client_8cs_source_1l01455"/>01455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01456"/>01456 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01457"/>01457 
<anchor xml:id="__chat_client_8cs_source_1l01458"/>01458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.chatPeer.<link linkend="_class_photon_1_1_chat_1_1_chat_peer_1afc6fce926fbdd0512c2940c1a914f4e7">Connect</link>(<emphasis role="keyword">this</emphasis>.FrontendAddress,&#32;ChatAppName))
<anchor xml:id="__chat_client_8cs_source_1l01459"/>01459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01460"/>01460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01461"/>01461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01462"/>01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Connecting&#32;to&#32;frontend&#32;{0}&#32;failed.&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>.FrontendAddress));
<anchor xml:id="__chat_client_8cs_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01465"/>01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01466"/>01466 
<anchor xml:id="__chat_client_8cs_source_1l01467"/>01467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01468"/>01468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01469"/>01469 
<anchor xml:id="__chat_client_8cs_source_1l01470"/>01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;AuthenticateOnFrontEnd()
<anchor xml:id="__chat_client_8cs_source_1l01471"/>01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01472"/>01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01473"/>01473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01474"/>01474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61">AuthValues</link>.<link linkend="_class_photon_1_1_chat_1_1_authentication_values_1aa6fa7c406c123b02bff4568a13a8063c">Token</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01475"/>01475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01476"/>01476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01477"/>01477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01478"/>01478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;Can&apos;t&#32;authenticate&#32;on&#32;front&#32;end&#32;server.&#32;Secret&#32;(AuthValues.Token)&#32;is&#32;not&#32;set&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01479"/>01479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01480"/>01480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01481"/>01481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01482"/>01482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01483"/>01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01484"/>01484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;opParameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;&#32;{&#32;{&#32;(byte)ChatParameterCode.Secret,&#32;<emphasis role="keyword">this</emphasis>.AuthValues.Token&#32;}&#32;};
<anchor xml:id="__chat_client_8cs_source_1l01485"/>01485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.PrivateChatHistoryLength&#32;&gt;&#32;-1)
<anchor xml:id="__chat_client_8cs_source_1l01486"/>01486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01487"/>01487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParameters[(byte)ChatParameterCode.HistoryLength]&#32;=&#32;<emphasis role="keyword">this</emphasis>.PrivateChatHistoryLength;
<anchor xml:id="__chat_client_8cs_source_1l01488"/>01488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01489"/>01489 
<anchor xml:id="__chat_client_8cs_source_1l01490"/>01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(ChatOperationCode.Authenticate,&#32;opParameters,&#32;SendOptions.SendReliable);
<anchor xml:id="__chat_client_8cs_source_1l01491"/>01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01492"/>01492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01493"/>01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01494"/>01494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01495"/>01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01496"/>01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01497"/>01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;Can&apos;t&#32;authenticate&#32;on&#32;front&#32;end&#32;server.&#32;Authentication&#32;Values&#32;are&#32;not&#32;set&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01498"/>01498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01499"/>01499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01500"/>01500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01501"/>01501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01502"/>01502 
<anchor xml:id="__chat_client_8cs_source_1l01503"/>01503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleUserUnsubscribedEvent(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l01504"/>01504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01505"/>01505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channelName&#32;=&#32;eventData.Parameters[ChatParameterCode.Channel]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01506"/>01506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;userId&#32;=&#32;eventData.Parameters[ChatParameterCode.UserId]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01507"/>01507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChatChannel&#32;channel;
<anchor xml:id="__chat_client_8cs_source_1l01508"/>01508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.PublicChannels.TryGetValue(channelName,&#32;out&#32;channel))
<anchor xml:id="__chat_client_8cs_source_1l01509"/>01509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01510"/>01510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!channel.PublishSubscribers)
<anchor xml:id="__chat_client_8cs_source_1l01511"/>01511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01512"/>01512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01513"/>01513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01514"/>01514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Channel&#32;\&quot;{0}\&quot;&#32;for&#32;incoming&#32;UserUnsubscribed&#32;(\&quot;{1}\&quot;)&#32;event&#32;does&#32;not&#32;have&#32;PublishSubscribers&#32;enabled.&quot;</emphasis>,&#32;channelName,&#32;userId));
<anchor xml:id="__chat_client_8cs_source_1l01515"/>01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01516"/>01516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01517"/>01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!channel.Subscribers.Remove(userId))&#32;<emphasis role="comment">//&#32;user&#32;not&#32;found!</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01518"/>01518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01519"/>01519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01520"/>01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01521"/>01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Channel&#32;\&quot;{0}\&quot;&#32;does&#32;not&#32;contain&#32;unsubscribed&#32;user&#32;\&quot;{1}\&quot;.&quot;</emphasis>,&#32;channelName,&#32;userId));
<anchor xml:id="__chat_client_8cs_source_1l01522"/>01522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01523"/>01523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01524"/>01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01525"/>01525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01526"/>01526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01527"/>01527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01528"/>01528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01529"/>01529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Channel&#32;\&quot;{0}\&quot;&#32;not&#32;found&#32;for&#32;incoming&#32;UserUnsubscribed&#32;(\&quot;{1}\&quot;)&#32;event.&quot;</emphasis>,&#32;channelName,&#32;userId));
<anchor xml:id="__chat_client_8cs_source_1l01530"/>01530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01531"/>01531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01532"/>01532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnUserUnsubscribed(channelName,&#32;userId);
<anchor xml:id="__chat_client_8cs_source_1l01533"/>01533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01534"/>01534 
<anchor xml:id="__chat_client_8cs_source_1l01535"/>01535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleUserSubscribedEvent(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l01536"/>01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01537"/>01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TODO:&#32;Handle&#32;user&#32;properties!</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01538"/>01538 
<anchor xml:id="__chat_client_8cs_source_1l01539"/>01539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channelName&#32;=&#32;eventData.Parameters[ChatParameterCode.Channel]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01540"/>01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;userId&#32;=&#32;eventData.Parameters[ChatParameterCode.UserId]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01541"/>01541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChatChannel&#32;channel;
<anchor xml:id="__chat_client_8cs_source_1l01542"/>01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.PublicChannels.TryGetValue(channelName,&#32;out&#32;channel))
<anchor xml:id="__chat_client_8cs_source_1l01543"/>01543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01544"/>01544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!channel.PublishSubscribers)
<anchor xml:id="__chat_client_8cs_source_1l01545"/>01545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01546"/>01546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01547"/>01547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01548"/>01548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Channel&#32;\&quot;{0}\&quot;&#32;for&#32;incoming&#32;UserSubscribed&#32;(\&quot;{1}\&quot;)&#32;event&#32;does&#32;not&#32;have&#32;PublishSubscribers&#32;enabled.&quot;</emphasis>,&#32;channelName,&#32;userId));
<anchor xml:id="__chat_client_8cs_source_1l01549"/>01549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01550"/>01550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01551"/>01551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!channel.Subscribers.Add(userId))&#32;<emphasis role="comment">//&#32;user&#32;came&#32;back&#32;from&#32;the&#32;dead&#32;?</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01552"/>01552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01553"/>01553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01554"/>01554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01555"/>01555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Channel&#32;\&quot;{0}\&quot;&#32;already&#32;contains&#32;newly&#32;subscribed&#32;user&#32;\&quot;{1}\&quot;.&quot;</emphasis>,&#32;channelName,&#32;userId));
<anchor xml:id="__chat_client_8cs_source_1l01556"/>01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01557"/>01557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01558"/>01558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channel.MaxSubscribers&#32;&gt;&#32;0&#32;&amp;&amp;&#32;channel.Subscribers.Count&#32;&gt;&#32;channel.MaxSubscribers)
<anchor xml:id="__chat_client_8cs_source_1l01559"/>01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01560"/>01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01561"/>01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01562"/>01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Channel&#32;\&quot;{0}\&quot;&apos;s&#32;MaxSubscribers&#32;exceeded.&#32;count={1}&#32;&gt;&#32;MaxSubscribers={2}.&quot;</emphasis>,&#32;channelName,&#32;channel.Subscribers.Count,&#32;channel.MaxSubscribers));
<anchor xml:id="__chat_client_8cs_source_1l01563"/>01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01564"/>01564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01565"/>01565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01566"/>01566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01567"/>01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01570"/>01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Channel&#32;\&quot;{0}\&quot;&#32;not&#32;found&#32;for&#32;incoming&#32;UserSubscribed&#32;(\&quot;{1}\&quot;)&#32;event.&quot;</emphasis>,&#32;channelName,&#32;userId));
<anchor xml:id="__chat_client_8cs_source_1l01571"/>01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01572"/>01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01573"/>01573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnUserSubscribed(channelName,&#32;userId);
<anchor xml:id="__chat_client_8cs_source_1l01574"/>01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01575"/>01575 
<anchor xml:id="__chat_client_8cs_source_1l01576"/>01576 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01577"/>01577 
<anchor xml:id="__chat_client_8cs_source_1l01586"/><link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0f1ee1bc79ae06278ad7229706441141">01586</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a0f1ee1bc79ae06278ad7229706441141">Subscribe</link>(<emphasis role="keywordtype">string</emphasis>&#32;channel,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastMsgId&#32;=&#32;0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;messagesFromHistory&#32;=&#32;-1,&#32;<link linkend="_class_photon_1_1_chat_1_1_channel_creation_options">ChannelCreationOptions</link>&#32;creationOptions&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01587"/>01587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01588"/>01588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(creationOptions&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01589"/>01589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01590"/>01590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;creationOptions&#32;=&#32;<link linkend="_class_photon_1_1_chat_1_1_channel_creation_options">ChannelCreationOptions</link>.<link linkend="_class_photon_1_1_chat_1_1_channel_creation_options_1aa2c635f57756a2bdddab74ea8e50fb3e">Default</link>;
<anchor xml:id="__chat_client_8cs_source_1l01591"/>01591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01592"/>01592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxSubscribers&#32;=&#32;creationOptions.<link linkend="_class_photon_1_1_chat_1_1_channel_creation_options_1a94ba10ec47180d1f9435658e82cd82b0">MaxSubscribers</link>;
<anchor xml:id="__chat_client_8cs_source_1l01593"/>01593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;publishSubscribers&#32;=&#32;creationOptions.PublishSubscribers;
<anchor xml:id="__chat_client_8cs_source_1l01594"/>01594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxSubscribers&#32;&lt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01595"/>01595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01596"/>01596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01597"/>01597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01598"/>01598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;Cannot&#32;set&#32;MaxSubscribers&#32;&lt;&#32;0.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01599"/>01599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01600"/>01600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01601"/>01601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01602"/>01602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lastMsgId&#32;&lt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01603"/>01603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01604"/>01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01605"/>01605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01606"/>01606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;lastMsgId&#32;cannot&#32;be&#32;&lt;&#32;0.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01608"/>01608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01609"/>01609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01610"/>01610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(messagesFromHistory&#32;&lt;&#32;-1)
<anchor xml:id="__chat_client_8cs_source_1l01611"/>01611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01612"/>01612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01613"/>01613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01614"/>01614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;messagesFromHistory&#32;&lt;&#32;-1,&#32;setting&#32;it&#32;to&#32;-1&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01615"/>01615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01616"/>01616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;messagesFromHistory&#32;=&#32;-1;
<anchor xml:id="__chat_client_8cs_source_1l01617"/>01617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01618"/>01618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lastMsgId&#32;&gt;&#32;0&#32;&amp;&amp;&#32;messagesFromHistory&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01619"/>01619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01620"/>01620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.WARNING)
<anchor xml:id="__chat_client_8cs_source_1l01621"/>01621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01622"/>01622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;lastMsgId&#32;will&#32;be&#32;ignored&#32;because&#32;messagesFromHistory&#32;==&#32;0&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01623"/>01623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01624"/>01624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastMsgId&#32;=&#32;0;
<anchor xml:id="__chat_client_8cs_source_1l01625"/>01625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01626"/>01626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;object,&#32;object&gt;&#32;properties&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01627"/>01627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(publishSubscribers)
<anchor xml:id="__chat_client_8cs_source_1l01628"/>01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01629"/>01629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxSubscribers&#32;&gt;&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ac37c92ca11e06427a261abde9809ce3f">DefaultMaxSubscribers</link>)
<anchor xml:id="__chat_client_8cs_source_1l01630"/>01630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01631"/>01631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b">DebugOut</link>&#32;&gt;=&#32;DebugLevel.ERROR)
<anchor xml:id="__chat_client_8cs_source_1l01632"/>01632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01633"/>01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,
<anchor xml:id="__chat_client_8cs_source_1l01634"/>01634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Cannot&#32;set&#32;MaxSubscribers&#32;&gt;&#32;{0}&#32;when&#32;PublishSubscribers&#32;==&#32;true.&quot;</emphasis>,&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_client_1ac37c92ca11e06427a261abde9809ce3f">DefaultMaxSubscribers</link>));
<anchor xml:id="__chat_client_8cs_source_1l01635"/>01635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01636"/>01636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01637"/>01637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01638"/>01638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;properties&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;object,&#32;object&gt;();
<anchor xml:id="__chat_client_8cs_source_1l01639"/>01639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;properties[<link linkend="_class_photon_1_1_chat_1_1_channel_well_known_properties">ChannelWellKnownProperties</link>.<link linkend="_class_photon_1_1_chat_1_1_channel_well_known_properties_1a7a5ec624e5b41204f40420bebffa530d">PublishSubscribers</link>]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01640"/>01640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01641"/>01641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxSubscribers&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01642"/>01642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01643"/>01643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(properties&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01644"/>01644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01645"/>01645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;properties&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;object,&#32;object&gt;();
<anchor xml:id="__chat_client_8cs_source_1l01646"/>01646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01647"/>01647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;properties[<link linkend="_class_photon_1_1_chat_1_1_channel_well_known_properties">ChannelWellKnownProperties</link>.<link linkend="_class_photon_1_1_chat_1_1_channel_well_known_properties_1a88d36f10f0462ea021635b5ef416adba">MaxSubscribers</link>]&#32;=&#32;maxSubscribers;
<anchor xml:id="__chat_client_8cs_source_1l01648"/>01648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01649"/>01649 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;CHAT_EXTENDED</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01650"/>01650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(creationOptions.CustomProperties&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;creationOptions.CustomProperties.Count&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01651"/>01651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01652"/>01652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;pair&#32;<emphasis role="keywordflow">in</emphasis>&#32;creationOptions.CustomProperties)
<anchor xml:id="__chat_client_8cs_source_1l01653"/>01653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01654"/>01654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;properties.Add(pair.Key,&#32;pair.Value);
<anchor xml:id="__chat_client_8cs_source_1l01655"/>01655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01656"/>01656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01657"/>01657 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01658"/>01658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;opParameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;&#32;{&#32;{&#32;<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code">ChatParameterCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code_1a9dd583a1e25e106394b9aec31eaf15f3">Channels</link>,&#32;<emphasis role="keyword">new</emphasis>[]&#32;{&#32;channel&#32;}&#32;}&#32;};
<anchor xml:id="__chat_client_8cs_source_1l01659"/>01659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(messagesFromHistory&#32;!=&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01660"/>01660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01661"/>01661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParameters.Add(<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code">ChatParameterCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code_1a6b76139a3303feb491403143af03404a">HistoryLength</link>,&#32;messagesFromHistory);
<anchor xml:id="__chat_client_8cs_source_1l01662"/>01662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01663"/>01663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lastMsgId&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01664"/>01664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01665"/>01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParameters.Add(<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code">ChatParameterCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code_1ae647ccead0599f216485fd191c7318ce">MsgIds</link>,&#32;<emphasis role="keyword">new</emphasis>[]&#32;{&#32;lastMsgId&#32;});
<anchor xml:id="__chat_client_8cs_source_1l01666"/>01666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01667"/>01667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(properties&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;properties.Count&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01668"/>01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01669"/>01669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParameters.Add(<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code">ChatParameterCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_parameter_code_1a9a090586c7b99a491fefd8f90d042820">Properties</link>,&#32;properties);
<anchor xml:id="__chat_client_8cs_source_1l01670"/>01670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01671"/>01671 
<anchor xml:id="__chat_client_8cs_source_1l01672"/>01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code">ChatOperationCode</link>.<link linkend="_class_photon_1_1_chat_1_1_chat_operation_code_1af116a0d1172c73fda306f69e51241df0">Subscribe</link>,&#32;opParameters,&#32;SendOptions.SendReliable);
<anchor xml:id="__chat_client_8cs_source_1l01673"/>01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01674"/>01674 
<anchor xml:id="__chat_client_8cs_source_1l01675"/>01675 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;CHAT_EXTENDED</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01676"/>01676 
<anchor xml:id="__chat_client_8cs_source_1l01677"/>01677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SetChannelProperties(<emphasis role="keywordtype">string</emphasis>&#32;channelName,&#32;Dictionary&lt;object,&#32;object&gt;&#32;channelProperties,&#32;Dictionary&lt;object,&#32;object&gt;&#32;expectedProperties&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;httpForward&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01678"/>01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01679"/>01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l01680"/>01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01681"/>01681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;SetChannelProperties&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01682"/>01682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01683"/>01683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01684"/>01684 
<anchor xml:id="__chat_client_8cs_source_1l01685"/>01685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(channelName)&#32;||&#32;channelProperties&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;channelProperties.Count&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01686"/>01686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01687"/>01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;SetChannelProperties&#32;parameters&#32;must&#32;be&#32;non-null&#32;and&#32;not&#32;empty.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01688"/>01688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01689"/>01689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01690"/>01690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;parameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;
<anchor xml:id="__chat_client_8cs_source_1l01691"/>01691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01692"/>01692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.Channel,&#32;channelName&#32;},
<anchor xml:id="__chat_client_8cs_source_1l01693"/>01693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.Properties,&#32;channelProperties&#32;},
<anchor xml:id="__chat_client_8cs_source_1l01694"/>01694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.Broadcast,&#32;<emphasis role="keyword">true</emphasis>&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01695"/>01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__chat_client_8cs_source_1l01696"/>01696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(httpForward)
<anchor xml:id="__chat_client_8cs_source_1l01697"/>01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01698"/>01698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.Add(ChatParameterCode.WebFlags,&#32;HttpForwardWebFlag);
<anchor xml:id="__chat_client_8cs_source_1l01699"/>01699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01700"/>01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(expectedProperties&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;expectedProperties.Count&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01701"/>01701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01702"/>01702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.Add(ChatParameterCode.ExpectedValues,&#32;expectedProperties);
<anchor xml:id="__chat_client_8cs_source_1l01703"/>01703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01704"/>01704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(ChatOperationCode.SetProperties,&#32;parameters,&#32;SendOptions.SendReliable);
<anchor xml:id="__chat_client_8cs_source_1l01705"/>01705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01706"/>01706 
<anchor xml:id="__chat_client_8cs_source_1l01707"/>01707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SetCustomChannelProperties(<emphasis role="keywordtype">string</emphasis>&#32;channelName,&#32;Dictionary&lt;string,&#32;object&gt;&#32;channelProperties,&#32;Dictionary&lt;string,&#32;object&gt;&#32;expectedProperties&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;httpForward&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01708"/>01708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01709"/>01709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelProperties&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;channelProperties.Count&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01710"/>01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01711"/>01711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;object,&#32;object&gt;&#32;properties&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;object,&#32;object&gt;(channelProperties.Count);
<anchor xml:id="__chat_client_8cs_source_1l01712"/>01712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;pair&#32;<emphasis role="keywordflow">in</emphasis>&#32;channelProperties)
<anchor xml:id="__chat_client_8cs_source_1l01713"/>01713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01714"/>01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;properties.Add(pair.Key,&#32;pair.Value);
<anchor xml:id="__chat_client_8cs_source_1l01715"/>01715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01716"/>01716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;object,&#32;object&gt;&#32;expected&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01717"/>01717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(expectedProperties&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;expectedProperties.Count&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01718"/>01718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01719"/>01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expected&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;object,&#32;object&gt;(expectedProperties.Count);
<anchor xml:id="__chat_client_8cs_source_1l01720"/>01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;pair&#32;<emphasis role="keywordflow">in</emphasis>&#32;expectedProperties)
<anchor xml:id="__chat_client_8cs_source_1l01721"/>01721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01722"/>01722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expected.Add(pair.Key,&#32;pair.Value);
<anchor xml:id="__chat_client_8cs_source_1l01723"/>01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01724"/>01724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01725"/>01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.SetChannelProperties(channelName,&#32;properties,&#32;expected,&#32;httpForward);
<anchor xml:id="__chat_client_8cs_source_1l01726"/>01726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01727"/>01727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.SetChannelProperties(channelName,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01728"/>01728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01729"/>01729 
<anchor xml:id="__chat_client_8cs_source_1l01730"/>01730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SetCustomUserProperties(<emphasis role="keywordtype">string</emphasis>&#32;channelName,&#32;<emphasis role="keywordtype">string</emphasis>&#32;userId,&#32;Dictionary&lt;string,&#32;object&gt;&#32;userProperties,&#32;Dictionary&lt;string,&#32;object&gt;&#32;expectedProperties&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;httpForward&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01731"/>01731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01732"/>01732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(userProperties&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;userProperties.Count&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01733"/>01733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01734"/>01734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;object,&#32;object&gt;&#32;properties&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;object,&#32;object&gt;(userProperties.Count);
<anchor xml:id="__chat_client_8cs_source_1l01735"/>01735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;pair&#32;<emphasis role="keywordflow">in</emphasis>&#32;userProperties)
<anchor xml:id="__chat_client_8cs_source_1l01736"/>01736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01737"/>01737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;properties.Add(pair.Key,&#32;pair.Value);
<anchor xml:id="__chat_client_8cs_source_1l01738"/>01738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01739"/>01739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;object,&#32;object&gt;&#32;expected&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01740"/>01740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(expectedProperties&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;expectedProperties.Count&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01741"/>01741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01742"/>01742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expected&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;object,&#32;object&gt;(expectedProperties.Count);
<anchor xml:id="__chat_client_8cs_source_1l01743"/>01743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;pair&#32;<emphasis role="keywordflow">in</emphasis>&#32;expectedProperties)
<anchor xml:id="__chat_client_8cs_source_1l01744"/>01744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01745"/>01745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expected.Add(pair.Key,&#32;pair.Value);
<anchor xml:id="__chat_client_8cs_source_1l01746"/>01746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01747"/>01747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01748"/>01748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.SetUserProperties(channelName,&#32;userId,&#32;properties,&#32;expected,&#32;httpForward);
<anchor xml:id="__chat_client_8cs_source_1l01749"/>01749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01750"/>01750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.SetUserProperties(channelName,&#32;userId,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01751"/>01751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01752"/>01752 
<anchor xml:id="__chat_client_8cs_source_1l01753"/>01753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SetUserProperties(<emphasis role="keywordtype">string</emphasis>&#32;channelName,&#32;<emphasis role="keywordtype">string</emphasis>&#32;userId,&#32;Dictionary&lt;object,&#32;object&gt;&#32;channelProperties,&#32;Dictionary&lt;object,&#32;object&gt;&#32;expectedProperties&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;httpForward&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__chat_client_8cs_source_1l01754"/>01754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01755"/>01755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5">CanChat</link>)
<anchor xml:id="__chat_client_8cs_source_1l01756"/>01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01757"/>01757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.ERROR,&#32;<emphasis role="stringliteral">&quot;SetUserProperties&#32;called&#32;while&#32;not&#32;connected&#32;to&#32;front&#32;end&#32;server.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01758"/>01758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01759"/>01759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01760"/>01760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(channelName))
<anchor xml:id="__chat_client_8cs_source_1l01761"/>01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01762"/>01762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;SetUserProperties&#32;\&quot;channelName\&quot;&#32;parameter&#32;must&#32;be&#32;non-null&#32;and&#32;not&#32;empty.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01763"/>01763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01764"/>01764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01765"/>01765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(channelProperties&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;channelProperties.Count&#32;==&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01766"/>01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01767"/>01767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;SetUserProperties&#32;\&quot;channelProperties\&quot;&#32;parameter&#32;must&#32;be&#32;non-null&#32;and&#32;not&#32;empty.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01768"/>01768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01769"/>01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01770"/>01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(userId))
<anchor xml:id="__chat_client_8cs_source_1l01771"/>01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01772"/>01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="stringliteral">&quot;SetUserProperties&#32;\&quot;userId\&quot;&#32;parameter&#32;must&#32;be&#32;non-null&#32;and&#32;not&#32;empty.&quot;</emphasis>);
<anchor xml:id="__chat_client_8cs_source_1l01773"/>01773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01774"/>01774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01775"/>01775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;byte,&#32;object&gt;&#32;parameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;byte,&#32;object&gt;
<anchor xml:id="__chat_client_8cs_source_1l01776"/>01776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01777"/>01777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.Channel,&#32;channelName&#32;},
<anchor xml:id="__chat_client_8cs_source_1l01778"/>01778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.Properties,&#32;channelProperties&#32;},
<anchor xml:id="__chat_client_8cs_source_1l01779"/>01779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.UserId,&#32;userId&#32;},
<anchor xml:id="__chat_client_8cs_source_1l01780"/>01780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;ChatParameterCode.Broadcast,&#32;<emphasis role="keyword">true</emphasis>&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01781"/>01781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__chat_client_8cs_source_1l01782"/>01782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(httpForward)
<anchor xml:id="__chat_client_8cs_source_1l01783"/>01783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01784"/>01784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.Add(ChatParameterCode.WebFlags,&#32;HttpForwardWebFlag);
<anchor xml:id="__chat_client_8cs_source_1l01785"/>01785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01786"/>01786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(expectedProperties&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;expectedProperties.Count&#32;&gt;&#32;0)
<anchor xml:id="__chat_client_8cs_source_1l01787"/>01787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01788"/>01788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.Add(ChatParameterCode.ExpectedValues,&#32;expectedProperties);
<anchor xml:id="__chat_client_8cs_source_1l01789"/>01789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01790"/>01790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.chatPeer.SendOperation(ChatOperationCode.SetProperties,&#32;parameters,&#32;SendOptions.SendReliable);
<anchor xml:id="__chat_client_8cs_source_1l01791"/>01791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01792"/>01792 
<anchor xml:id="__chat_client_8cs_source_1l01793"/>01793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandlePropertiesChanged(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l01794"/>01794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01795"/>01795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channelName&#32;=&#32;eventData.Parameters[ChatParameterCode.Channel]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01796"/>01796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChatChannel&#32;channel;
<anchor xml:id="__chat_client_8cs_source_1l01797"/>01797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.PublicChannels.TryGetValue(channelName,&#32;out&#32;channel))
<anchor xml:id="__chat_client_8cs_source_1l01798"/>01798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01799"/>01799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.DebugReturn(DebugLevel.WARNING,&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Channel&#32;{0}&#32;for&#32;incoming&#32;ChannelPropertiesUpdated&#32;event&#32;not&#32;found.&quot;</emphasis>,&#32;channelName));
<anchor xml:id="__chat_client_8cs_source_1l01800"/>01800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__chat_client_8cs_source_1l01801"/>01801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01802"/>01802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;senderId&#32;=&#32;eventData.Parameters[ChatParameterCode.Sender]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01803"/>01803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;object,&#32;object&gt;&#32;changedProperties&#32;=&#32;eventData.Parameters[ChatParameterCode.Properties]&#32;as&#32;Dictionary&lt;object,&#32;object&gt;;
<anchor xml:id="__chat_client_8cs_source_1l01804"/>01804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;temp;
<anchor xml:id="__chat_client_8cs_source_1l01805"/>01805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(eventData.Parameters.TryGetValue(ChatParameterCode.UserId,&#32;out&#32;temp))
<anchor xml:id="__chat_client_8cs_source_1l01806"/>01806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01807"/>01807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;targetUserId&#32;=&#32;temp&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01808"/>01808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.ReadUserProperties(targetUserId,&#32;changedProperties);
<anchor xml:id="__chat_client_8cs_source_1l01809"/>01809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnUserPropertiesChanged(channelName,&#32;targetUserId,&#32;senderId,&#32;changedProperties);
<anchor xml:id="__chat_client_8cs_source_1l01810"/>01810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01811"/>01811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01812"/>01812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01813"/>01813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;channel.ReadChannelProperties(changedProperties);
<anchor xml:id="__chat_client_8cs_source_1l01814"/>01814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnChannelPropertiesChanged(channelName,&#32;senderId,&#32;changedProperties);
<anchor xml:id="__chat_client_8cs_source_1l01815"/>01815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01816"/>01816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01817"/>01817 
<anchor xml:id="__chat_client_8cs_source_1l01818"/>01818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleErrorInfoEvent(EventData&#32;eventData)
<anchor xml:id="__chat_client_8cs_source_1l01819"/>01819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__chat_client_8cs_source_1l01820"/>01820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;channel&#32;=&#32;eventData.Parameters[ChatParameterCode.Channel]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01821"/>01821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;msg&#32;=&#32;eventData.Parameters[ChatParameterCode.DebugMessage]&#32;as&#32;string;
<anchor xml:id="__chat_client_8cs_source_1l01822"/>01822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;data&#32;=&#32;eventData.Parameters[ChatParameterCode.DebugData];
<anchor xml:id="__chat_client_8cs_source_1l01823"/>01823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.listener.OnErrorInfo(channel,&#32;msg,&#32;data);
<anchor xml:id="__chat_client_8cs_source_1l01824"/>01824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01825"/>01825 
<anchor xml:id="__chat_client_8cs_source_1l01826"/>01826 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__chat_client_8cs_source_1l01827"/>01827 &#32;&#32;&#32;&#32;}
<anchor xml:id="__chat_client_8cs_source_1l01828"/>01828 }
</programlisting></section>
