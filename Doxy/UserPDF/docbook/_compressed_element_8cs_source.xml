<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__compressed_element_8cs_source" xml:lang="en-US">
<title>CompressedElement.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/TransformCrusher/Structs/CompressedElement.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__compressed_element_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00005"/>00005 
<anchor xml:id="__compressed_element_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__compressed_element_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Runtime.InteropServices;
<anchor xml:id="__compressed_element_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;System.Text;
<anchor xml:id="__compressed_element_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__compressed_element_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespaceemotitron">emotitron</link>.Compression;
<anchor xml:id="__compressed_element_8cs_source_1l00011"/>00011 
<anchor xml:id="__compressed_element_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__compressed_element_8cs_source_1l00013"/>00013 {
<anchor xml:id="__compressed_element_8cs_source_1l00014"/>00014 
<anchor xml:id="__compressed_element_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;[StructLayout(LayoutKind.Explicit)]
<anchor xml:id="__compressed_element_8cs_source_1l00019"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;:&#32;IEquatable&lt;CompressedElement&gt;
<anchor xml:id="__compressed_element_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00021"/>00021 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Fields</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00022"/>00022 
<anchor xml:id="__compressed_element_8cs_source_1l00023"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">00023</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">CompressedElement</link>();
<anchor xml:id="__compressed_element_8cs_source_1l00024"/>00024 
<anchor xml:id="__compressed_element_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__compressed_element_8cs_source_1l00026"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(16)]
<anchor xml:id="__compressed_element_8cs_source_1l00028"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(32)]
<anchor xml:id="__compressed_element_8cs_source_1l00030"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00031"/>00031 
<anchor xml:id="__compressed_element_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__compressed_element_8cs_source_1l00033"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">00033</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00034"/>00034 
<anchor xml:id="__compressed_element_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(0)]
<anchor xml:id="__compressed_element_8cs_source_1l00036"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_compressed_quat">CompressedQuat</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00037"/>00037 
<anchor xml:id="__compressed_element_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[FieldOffset(48)]
<anchor xml:id="__compressed_element_8cs_source_1l00039"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">00039</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00040"/>00040 
<anchor xml:id="__compressed_element_8cs_source_1l00041"/>00041 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00042"/>00042 
<anchor xml:id="__compressed_element_8cs_source_1l00043"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a30ee71728d9a37e2d3c03709c8c1e208">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a30ee71728d9a37e2d3c03709c8c1e208">Clear</link>()
<anchor xml:id="__compressed_element_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__compressed_element_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cx&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<emphasis role="keyword">null</emphasis>,&#32;0);
<anchor xml:id="__compressed_element_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cy&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<emphasis role="keyword">null</emphasis>,&#32;0);
<anchor xml:id="__compressed_element_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cz&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<emphasis role="keyword">null</emphasis>,&#32;0);
<anchor xml:id="__compressed_element_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00050"/>00050 
<anchor xml:id="__compressed_element_8cs_source_1l00051"/>00051 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;AsArray</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00052"/>00052 
<anchor xml:id="__compressed_element_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;ulong[]&#32;reusableArray64&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ulong[2];
<anchor xml:id="__compressed_element_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;uint[]&#32;reusableArray32&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;uint[4];
<anchor xml:id="__compressed_element_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;reusableArray8&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[16];
<anchor xml:id="__compressed_element_8cs_source_1l00056"/>00056 
<anchor xml:id="__compressed_element_8cs_source_1l00062"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a28af61110a8690c663636f3811a0541a">00062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ulong[]&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a28af61110a8690c663636f3811a0541a">AsArray64</link>(BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray64.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray64.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray64.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray64.Zero((bitposition&#32;+&#32;63)&#32;&gt;&gt;&#32;6);
<anchor xml:id="__compressed_element_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;reusableArray64;
<anchor xml:id="__compressed_element_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00071"/>00071 
<anchor xml:id="__compressed_element_8cs_source_1l00076"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aeb80c1751bb7781ac5f443cb7b5f6d3c">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aeb80c1751bb7781ac5f443cb7b5f6d3c">AsArray64</link>(ulong[]&#32;nonalloc,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Zero((bitposition&#32;+&#32;63)&#32;&gt;&gt;&#32;6);
<anchor xml:id="__compressed_element_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00084"/>00084 
<anchor xml:id="__compressed_element_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;32</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00091"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a2109106f567516a35e39d676ff174adf">00091</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;uint[]&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a2109106f567516a35e39d676ff174adf">AsArray32</link>(BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray64.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray64.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray64.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray64.Zero(bitposition&#32;+&#32;31&#32;&gt;&gt;&#32;5);
<anchor xml:id="__compressed_element_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;reusableArray32;
<anchor xml:id="__compressed_element_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00100"/>00100 
<anchor xml:id="__compressed_element_8cs_source_1l00105"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ad9ee1e1c375279ddf9fa4f1eadba85e3">00105</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ad9ee1e1c375279ddf9fa4f1eadba85e3">AsArray32</link>(uint[]&#32;nonalloc,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Zero((bitposition&#32;+&#32;31)&#32;&gt;&gt;&#32;5);
<anchor xml:id="__compressed_element_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00113"/>00113 
<anchor xml:id="__compressed_element_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;8</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00120"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a41dd2fcf956c0f9c3cc610c87fa9308e">00120</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a41dd2fcf956c0f9c3cc610c87fa9308e">AsArray8</link>(BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray8.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray8.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray8.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reusableArray64.Zero(bitposition&#32;+&#32;7&#32;&gt;&gt;&#32;3);
<anchor xml:id="__compressed_element_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;reusableArray8;
<anchor xml:id="__compressed_element_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00129"/>00129 
<anchor xml:id="__compressed_element_8cs_source_1l00134"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a85369a53dc276c047d2bc7d92666477f">00134</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a85369a53dc276c047d2bc7d92666477f">AsArray8</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;nonalloc,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Append(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.crusher._bits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__compressed_element_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.Zero((bitposition&#32;+&#32;7)&#32;&gt;&gt;&#32;3);
<anchor xml:id="__compressed_element_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00142"/>00142 
<anchor xml:id="__compressed_element_8cs_source_1l00143"/>00143 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00144"/>00144 
<anchor xml:id="__compressed_element_8cs_source_1l00145"/>00145 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Implicit/Explicit&#32;Casts</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00146"/>00146 
<anchor xml:id="__compressed_element_8cs_source_1l00147"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1abd73275a042705b94c697ad2dffcfc83">00147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;ulong(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00149"/>00149 <emphasis role="preprocessor">#if&#32;DEVELOPMENT_BUILD&#32;||&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">Cached_TotalBits</link>[0]&#32;&gt;&#32;64)
<anchor xml:id="__compressed_element_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Cast&#32;of&#32;CompressedElement&#32;to&#32;ulong&#32;only&#32;works&#32;if&#32;the&#32;total&#32;bits&#32;of&#32;all&#32;crushers&#32;is&#32;&gt;=&#32;64&#32;bits.&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00152"/>00152 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;buffer&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(ce,&#32;ref&#32;buffer);
<anchor xml:id="__compressed_element_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__compressed_element_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00157"/>00157 
<anchor xml:id="__compressed_element_8cs_source_1l00158"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a24f68c9d8bd6c3e773cd66dae1049290">00158</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;uint(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00160"/>00160 <emphasis role="preprocessor">#if&#32;DEVELOPMENT_BUILD&#32;||&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">Cached_TotalBits</link>[0]&#32;&gt;&#32;32)
<anchor xml:id="__compressed_element_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Cast&#32;of&#32;CompressedElement&#32;to&#32;uint&#32;only&#32;works&#32;if&#32;the&#32;total&#32;bits&#32;of&#32;all&#32;crushers&#32;is&#32;&gt;=&#32;32&#32;bits.&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00163"/>00163 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;buffer&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(ce,&#32;ref&#32;buffer);
<anchor xml:id="__compressed_element_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uint)buffer;
<anchor xml:id="__compressed_element_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00168"/>00168 
<anchor xml:id="__compressed_element_8cs_source_1l00169"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a19284fb3ea6dc5a129071892efd91ffb">00169</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;ushort(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00171"/>00171 <emphasis role="preprocessor">#if&#32;DEVELOPMENT_BUILD&#32;||&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">Cached_TotalBits</link>[0]&#32;&gt;&#32;16)
<anchor xml:id="__compressed_element_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Cast&#32;of&#32;CompressedElement&#32;to&#32;ushort&#32;only&#32;works&#32;if&#32;the&#32;total&#32;bits&#32;of&#32;all&#32;crushers&#32;is&#32;&gt;=&#32;16&#32;bits.&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00174"/>00174 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;buffer&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(ce,&#32;ref&#32;buffer);
<anchor xml:id="__compressed_element_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ushort)buffer;
<anchor xml:id="__compressed_element_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00179"/>00179 
<anchor xml:id="__compressed_element_8cs_source_1l00180"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1adf04e2f4056e0c6774bfe8a8987179e6">00180</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;byte(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00182"/>00182 <emphasis role="preprocessor">#if&#32;DEVELOPMENT_BUILD&#32;||&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">Cached_TotalBits</link>[0]&#32;&gt;&#32;8)
<anchor xml:id="__compressed_element_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Cast&#32;of&#32;CompressedElement&#32;to&#32;byte&#32;only&#32;works&#32;if&#32;the&#32;total&#32;bits&#32;of&#32;all&#32;crushers&#32;is&#32;&gt;=&#32;8&#32;bits.&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00185"/>00185 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;buffer&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(ce,&#32;ref&#32;buffer);
<anchor xml:id="__compressed_element_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)buffer;
<anchor xml:id="__compressed_element_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00190"/>00190 
<anchor xml:id="__compressed_element_8cs_source_1l00191"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ab9f7501620a37d5baeb2dc93ca37e14f">00191</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;ulong[]&#32;(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.AsArray64(reusableArray64);
<anchor xml:id="__compressed_element_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;reusableArray64;
<anchor xml:id="__compressed_element_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00196"/>00196 
<anchor xml:id="__compressed_element_8cs_source_1l00197"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aaaaee80ec7a9588e521ccac527dd2e20">00197</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;uint[]&#32;(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.AsArray32(reusableArray32);
<anchor xml:id="__compressed_element_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;reusableArray32;
<anchor xml:id="__compressed_element_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00202"/>00202 
<anchor xml:id="__compressed_element_8cs_source_1l00203"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1acb1f443b71f948e9429d525b2c856045">00203</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.AsArray8(reusableArray8);
<anchor xml:id="__compressed_element_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;reusableArray8;
<anchor xml:id="__compressed_element_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00208"/>00208 
<anchor xml:id="__compressed_element_8cs_source_1l00209"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a35ce3011b9cdea4c488ccc57dc41dd47">00209</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1acb4e3fad5f2425bf8bb66f9067eaf1d1">Decompress</link>();
<anchor xml:id="__compressed_element_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00213"/>00213 
<anchor xml:id="__compressed_element_8cs_source_1l00214"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ab9ad6737ef36f523e8f532e74451c8b7">00214</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;Vector3(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e&#32;=&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1acb4e3fad5f2425bf8bb66f9067eaf1d1">Decompress</link>();
<anchor xml:id="__compressed_element_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;TRSType.Quaternion)
<anchor xml:id="__compressed_element_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00219"/>00219 <emphasis role="preprocessor">#if&#32;!DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Casting&#32;CompressedElement&#32;of&#32;type&#32;Quaternion&#32;to&#32;a&#32;Vector3&#32;using&#32;quaternion.eulerAngles.&#32;Is&#32;this&#32;intentional?&#32;Cast&#32;to&#32;Quaternion&#32;and&#32;convert&#32;to&#32;eulerAnges&#32;yourself&#32;to&#32;silence&#32;this&#32;warning.&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00221"/>00221 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>.eulerAngles;
<anchor xml:id="__compressed_element_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00229"/>00229 
<anchor xml:id="__compressed_element_8cs_source_1l00230"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ae1c071be7a74b3d9dc85ab767043eaf0">00230</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;Quaternion(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e&#32;=&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1acb4e3fad5f2425bf8bb66f9067eaf1d1">Decompress</link>();
<anchor xml:id="__compressed_element_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>&#32;=&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;trsType&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00235"/>00235 
<anchor xml:id="__compressed_element_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trsType&#32;==&#32;TRSType.Quaternion)
<anchor xml:id="__compressed_element_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trsType&#32;==&#32;TRSType.Euler)
<anchor xml:id="__compressed_element_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00242"/>00242 <emphasis role="preprocessor">#if&#32;!DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Casting&#32;a&#32;CompressedElement&#32;of&#32;TRSType.Euler&#32;to&#32;a&#32;Quaternion&#32;using&#32;Quaternion.Euler().&#32;Is&#32;this&#32;intentional?&#32;Cast&#32;to&#32;Vector3&#32;and&#32;convert&#32;to&#32;Quaternion&#32;yourself&#32;to&#32;silence&#32;this&#32;warning.&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00244"/>00244 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Euler(e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00249"/>00249 <emphasis role="preprocessor">#if&#32;!DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Trying&#32;to&#32;cast&#32;a&#32;CompresedElement&#32;of&#32;&quot;</emphasis>&#32;+&#32;trsType&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;to&#32;a&#32;quaternion,&#32;even&#32;though&#32;it&#32;is&#32;not&#32;a&#32;rotation&#32;type.&#32;Are&#32;you&#32;using&#32;the&#32;correct&#32;ElementCrusher&#32;to&#32;compressed&#32;this&#32;value?&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00251"/>00251 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00255"/>00255 
<anchor xml:id="__compressed_element_8cs_source_1l00256"/>00256 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00257"/>00257 
<anchor xml:id="__compressed_element_8cs_source_1l00258"/>00258 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Constructors</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00259"/>00259 
<anchor xml:id="__compressed_element_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Obsolete(<emphasis role="stringliteral">&quot;Compressed&#32;Element&#32;is&#32;now&#32;a&#32;class&#32;and&#32;no&#32;longer&#32;a&#32;struct.&#32;Where&#32;this&#32;used&#32;to&#32;be&#32;used,&#32;now&#32;compressedElement.Clear()&#32;should&#32;be&#32;used&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__compressed_element_8cs_source_1l00261"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a1031ec3dc86e8f376c486bed479f3ad1">00261</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a1031ec3dc86e8f376c486bed479f3ad1">Empty</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">CompressedElement</link>();
<anchor xml:id="__compressed_element_8cs_source_1l00262"/>00262 
<anchor xml:id="__compressed_element_8cs_source_1l00263"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">00263</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">CompressedElement</link>()
<anchor xml:id="__compressed_element_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//UnityEngine.Debug.LogWarning(&quot;CE&#32;Construct&#32;NULL&quot;);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructor</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00268"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aaf72888e84c8dc5c7c831b44fce37d75">00268</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aaf72888e84c8dc5c7c831b44fce37d75">CompressedElement</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)<emphasis role="comment">/*&#32;:&#32;this()*/</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//UnityEngine.Debug.LogWarning(&quot;CE&#32;Construct&quot;);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cx&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cy&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cz&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00276"/>00276 
<anchor xml:id="__compressed_element_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructor</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00278"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a11d76bfbf98791847cc1f9e15b1abc82">00278</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a11d76bfbf98791847cc1f9e15b1abc82">CompressedElement</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)&#32;<emphasis role="comment">/*:&#32;this()*/</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Debug.LogWarning(<emphasis role="stringliteral">&quot;CE&#32;Construct&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cx&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cy&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cz&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00286"/>00286 
<anchor xml:id="__compressed_element_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructor&#32;for&#32;uniform&#32;scale</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00295"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a9d35c017a8634c37856dc963a9ff2c98">00295</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a9d35c017a8634c37856dc963a9ff2c98">CompressedElement</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>)&#32;<emphasis role="comment">/*:&#32;this()*/</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Debug.LogWarning(<emphasis role="stringliteral">&quot;CE&#32;Construct&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cUniform&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">UCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00301"/>00301 
<anchor xml:id="__compressed_element_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructor&#32;for&#32;Quaternion&#32;rotation</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00309"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a3a6ae9df3383aeab055a9366ed11bf55">00309</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a3a6ae9df3383aeab055a9366ed11bf55">CompressedElement</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>)<emphasis role="comment">/*&#32;:&#32;this()*/</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Debug.LogWarning(<emphasis role="stringliteral">&quot;CE&#32;Construct&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cQuat&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_compressed_quat">CompressedQuat</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">QCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00315"/>00315 
<anchor xml:id="__compressed_element_8cs_source_1l00316"/>00316 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00317"/>00317 
<anchor xml:id="__compressed_element_8cs_source_1l00318"/>00318 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Set</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00319"/>00319 
<anchor xml:id="__compressed_element_8cs_source_1l00320"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">00320</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;CompressedFloat&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)
<anchor xml:id="__compressed_element_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cx&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cy&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cz&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00327"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aec563bdd47f6bdf3802f07384d83ae30">00327</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aec563bdd47f6bdf3802f07384d83ae30">Set</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)
<anchor xml:id="__compressed_element_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cx&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cy&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cz&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00334"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a72268ccde2fc9c5fa8fff25d397b71a1">00334</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a72268ccde2fc9c5fa8fff25d397b71a1">Set</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>)&#32;<emphasis role="comment">/*:&#32;this()*/</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cUniform&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">UCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00339"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a1614fbbf86484f8df9ae646df3212195">00339</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a1614fbbf86484f8df9ae646df3212195">Set</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>)<emphasis role="comment">/*&#32;:&#32;this()*/</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cQuat&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_compressed_quat">CompressedQuat</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">QCrusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00344"/>00344 
<anchor xml:id="__compressed_element_8cs_source_1l00345"/>00345 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00346"/>00346 
<anchor xml:id="__compressed_element_8cs_source_1l00347"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1adec2f19c07c360963ed55c3266bc466f">00347</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1adec2f19c07c360963ed55c3266bc466f">CopyTo</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;copyTarget)
<anchor xml:id="__compressed_element_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyTarget.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>&#32;=&#32;this.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyTarget.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;=&#32;this.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyTarget.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;=&#32;this.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyTarget.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;=&#32;this.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00354"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade22dc21a4a9579283111ae09271daaf">00354</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade22dc21a4a9579283111ae09271daaf">CopyFrom</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;copySource)
<anchor xml:id="__compressed_element_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.crusher&#32;=&#32;copySource.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cx&#32;=&#32;copySource.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cy&#32;=&#32;copySource.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.cz&#32;=&#32;copySource.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00361"/>00361 
<anchor xml:id="__compressed_element_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Indexer</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TODO&#32;make&#32;these&#32;switches</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00364"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a60a5dc8cdd074ea8d5c02fa2e767e130">00364</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;uint&#32;<emphasis role="keyword">this</emphasis>[<emphasis role="keywordtype">int</emphasis>&#32;axis]
<anchor xml:id="__compressed_element_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(axis&#32;==&#32;0)&#32;?&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;:&#32;(axis&#32;==&#32;1)&#32;?&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00371"/>00371 
<anchor xml:id="__compressed_element_8cs_source_1l00372"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ac3c029b5a34d3103e6d885a7cfc6a179">00372</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ac3c029b5a34d3103e6d885a7cfc6a179">GetUInt</link>(<emphasis role="keywordtype">int</emphasis>&#32;axis)
<anchor xml:id="__compressed_element_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(axis&#32;==&#32;0)&#32;?&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;:&#32;(axis&#32;==&#32;1)&#32;?&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00376"/>00376 
<anchor xml:id="__compressed_element_8cs_source_1l00377"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1acb4e3fad5f2425bf8bb66f9067eaf1d1">00377</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1acb4e3fad5f2425bf8bb66f9067eaf1d1">Decompress</link>()
<anchor xml:id="__compressed_element_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00381"/>00381 
<anchor xml:id="__compressed_element_8cs_source_1l00382"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a666d78fba3894bd8639cd63ff6ed8b01">00382</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a666d78fba3894bd8639cd63ff6ed8b01">Serialize</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(<emphasis role="keyword">this</emphasis>,&#32;buffer,&#32;ref&#32;bitposition,&#32;ia,&#32;bcl);
<anchor xml:id="__compressed_element_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00386"/>00386 
<anchor xml:id="__compressed_element_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;a.Compare(b)&#32;now&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__compressed_element_8cs_source_1l00391"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a343f1e21a1630d6e4411393e98cc8a9e">00391</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a343f1e21a1630d6e4411393e98cc8a9e">Compare</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b)
<anchor xml:id="__compressed_element_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a74db5ba3cd21c08ddbf91af3dcb8322f">Equals</link>(b);
<anchor xml:id="__compressed_element_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00395"/>00395 
<anchor xml:id="__compressed_element_8cs_source_1l00400"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aeae3a0cabfbde8074b979141f98c97ce">00400</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aeae3a0cabfbde8074b979141f98c97ce">HighestDifferentBit</link>(uint&#32;a,&#32;uint&#32;b)
<anchor xml:id="__compressed_element_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;highestDiffBit&#32;=&#32;0;
<anchor xml:id="__compressed_element_8cs_source_1l00403"/>00403 
<anchor xml:id="__compressed_element_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;This&#32;needs&#32;testing</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;32;&#32;i++)
<anchor xml:id="__compressed_element_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;(uint)1&#32;&lt;&lt;&#32;i;
<anchor xml:id="__compressed_element_8cs_source_1l00408"/>00408 
<anchor xml:id="__compressed_element_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((a&#32;&amp;&#32;mask)&#32;==&#32;(b&#32;&amp;&#32;mask))
<anchor xml:id="__compressed_element_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highestDiffBit&#32;=&#32;i;
<anchor xml:id="__compressed_element_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;highestDiffBit;
<anchor xml:id="__compressed_element_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00416"/>00416 
<anchor xml:id="__compressed_element_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;CompressedElement&#32;operator&#32;+(CompressedElement&#32;a,&#32;CompressedElement&#32;b)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;new&#32;CompressedElement(a.crusher,&#32;(uint)((long)a.cx&#32;+&#32;b.cx),&#32;(uint)((long)a.cy&#32;+&#32;b.cy),&#32;(uint)((long)a.cz&#32;+&#32;b.cz));</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;CompressedElement&#32;operator&#32;-(CompressedElement&#32;a,&#32;CompressedElement&#32;b)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;new&#32;CompressedElement(a.crusher,&#32;(uint)((long)a.cx&#32;-&#32;b.cx),&#32;(uint)((long)a.cy&#32;-&#32;b.cy),&#32;(uint)((long)a.cz&#32;-&#32;b.cz));</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;CompressedElement&#32;operator&#32;*(CompressedElement&#32;a,&#32;float&#32;b)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;new&#32;CompressedElement(a.crusher,&#32;(uint)(a.cx&#32;*&#32;b),&#32;(uint)(a.cy&#32;*&#32;b),&#32;(uint)(a.cz&#32;*&#32;b));</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00429"/>00429 
<anchor xml:id="__compressed_element_8cs_source_1l00433"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a026a98c2b8f0ef721cb45eeff9c33798">00433</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a026a98c2b8f0ef721cb45eeff9c33798">Extrapolate</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;target,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;curr,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;prev,&#32;<emphasis role="keywordtype">int</emphasis>&#32;divisor&#32;=&#32;2)
<anchor xml:id="__compressed_element_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>
<anchor xml:id="__compressed_element_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,
<anchor xml:id="__compressed_element_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>))&#32;/&#32;divisor),
<anchor xml:id="__compressed_element_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>))&#32;/&#32;divisor),
<anchor xml:id="__compressed_element_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>))&#32;/&#32;divisor)
<anchor xml:id="__compressed_element_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete]
<anchor xml:id="__compressed_element_8cs_source_1l00444"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1afa071bbf03b66f73ed36bb7f48c822f3">00444</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1afa071bbf03b66f73ed36bb7f48c822f3">Extrapolate</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;curr,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;prev,&#32;<emphasis role="keywordtype">int</emphasis>&#32;divisor&#32;=&#32;2)
<anchor xml:id="__compressed_element_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">CompressedElement</link>
<anchor xml:id="__compressed_element_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,
<anchor xml:id="__compressed_element_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>))&#32;/&#32;divisor),
<anchor xml:id="__compressed_element_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>))&#32;/&#32;divisor),
<anchor xml:id="__compressed_element_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>))&#32;/&#32;divisor)
<anchor xml:id="__compressed_element_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00458"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a943bf923292a5063650b6affbd44fd17">00458</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a943bf923292a5063650b6affbd44fd17">Extrapolate</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;target,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;curr,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;prev,&#32;<emphasis role="keywordtype">int</emphasis>&#32;divisor&#32;=&#32;2)
<anchor xml:id="__compressed_element_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>
<anchor xml:id="__compressed_element_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,
<anchor xml:id="__compressed_element_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>))&#32;/&#32;divisor),
<anchor xml:id="__compressed_element_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>))&#32;/&#32;divisor),
<anchor xml:id="__compressed_element_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>))&#32;/&#32;divisor)
<anchor xml:id="__compressed_element_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete]
<anchor xml:id="__compressed_element_8cs_source_1l00469"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1adbe6ed8e5f34596684aa5abd1045f256">00469</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1adbe6ed8e5f34596684aa5abd1045f256">Extrapolate</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;curr,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;prev,&#32;<emphasis role="keywordtype">int</emphasis>&#32;divisor&#32;=&#32;2)
<anchor xml:id="__compressed_element_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">CompressedElement</link>
<anchor xml:id="__compressed_element_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,
<anchor xml:id="__compressed_element_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>))&#32;/&#32;divisor),
<anchor xml:id="__compressed_element_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>))&#32;/&#32;divisor),
<anchor xml:id="__compressed_element_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;+&#32;(((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>))&#32;/&#32;divisor)
<anchor xml:id="__compressed_element_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00483"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1af9f25a49a5f9af5e02e5518802208ffc">00483</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1af9f25a49a5f9af5e02e5518802208ffc">Extrapolate</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;target,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;curr,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;prev,&#32;<emphasis role="keywordtype">float</emphasis>&#32;amount&#32;=&#32;.5f)
<anchor xml:id="__compressed_element_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//int&#32;divisor&#32;=&#32;(int)(1f&#32;/&#32;amount);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//return&#32;Extrapolate(curr,&#32;prev,&#32;divisor);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>
<anchor xml:id="__compressed_element_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,
<anchor xml:id="__compressed_element_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>)&#32;*&#32;amount),
<anchor xml:id="__compressed_element_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>)&#32;*&#32;amount),
<anchor xml:id="__compressed_element_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)&#32;*&#32;amount)
<anchor xml:id="__compressed_element_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete]
<anchor xml:id="__compressed_element_8cs_source_1l00496"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a9b6475ed4fd46a1e50311522ff2c4642">00496</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a9b6475ed4fd46a1e50311522ff2c4642">Extrapolate</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;curr,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;prev,&#32;<emphasis role="keywordtype">float</emphasis>&#32;amount&#32;=&#32;.5f)
<anchor xml:id="__compressed_element_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//int&#32;divisor&#32;=&#32;(int)(1f&#32;/&#32;amount);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//return&#32;Extrapolate(curr,&#32;prev,&#32;divisor);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">CompressedElement</link>
<anchor xml:id="__compressed_element_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,
<anchor xml:id="__compressed_element_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>)&#32;*&#32;amount),
<anchor xml:id="__compressed_element_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>)&#32;*&#32;amount),
<anchor xml:id="__compressed_element_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)&#32;*&#32;amount)
<anchor xml:id="__compressed_element_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00511"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a91ee8ffe47f5d082aa4c6f390fadcc32">00511</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a91ee8ffe47f5d082aa4c6f390fadcc32">Extrapolate</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;target,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;curr,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;prev,&#32;<emphasis role="keywordtype">float</emphasis>&#32;amount&#32;=&#32;.5f)
<anchor xml:id="__compressed_element_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//int&#32;divisor&#32;=&#32;(int)(1f&#32;/&#32;amount);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//return&#32;Extrapolate(curr,&#32;prev,&#32;divisor);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>
<anchor xml:id="__compressed_element_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,
<anchor xml:id="__compressed_element_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>)&#32;*&#32;amount),
<anchor xml:id="__compressed_element_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>)&#32;*&#32;amount),
<anchor xml:id="__compressed_element_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)&#32;*&#32;amount)
<anchor xml:id="__compressed_element_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00524"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a2bc96a9c56a90a32cc27f80a4b61ca7b">00524</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a2bc96a9c56a90a32cc27f80a4b61ca7b">Extrapolate</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;curr,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;prev,&#32;<emphasis role="keywordtype">float</emphasis>&#32;amount&#32;=&#32;.5f)
<anchor xml:id="__compressed_element_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//int&#32;divisor&#32;=&#32;(int)(1f&#32;/&#32;amount);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//return&#32;Extrapolate(curr,&#32;prev,&#32;divisor);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">CompressedElement</link>
<anchor xml:id="__compressed_element_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>,
<anchor xml:id="__compressed_element_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>)&#32;*&#32;amount),
<anchor xml:id="__compressed_element_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>)&#32;*&#32;amount),
<anchor xml:id="__compressed_element_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint)(curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;+&#32;((<emphasis role="keywordtype">long</emphasis>)curr.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;-&#32;prev.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)&#32;*&#32;amount)
<anchor xml:id="__compressed_element_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00536"/>00536 
<anchor xml:id="__compressed_element_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;uppers&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">CompressedElement</link>();
<anchor xml:id="__compressed_element_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;lowers&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ade4990c6360751939df298d8d64cc848">CompressedElement</link>();
<anchor xml:id="__compressed_element_8cs_source_1l00549"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a72d1d0d70ea29fe7075f4515aaf97a8b">00549</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;BitCullingLevel&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a72d1d0d70ea29fe7075f4515aaf97a8b">GetGuessableBitCullLevel</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b,&#32;BitCullingLevel&#32;maxCullLvl)
<anchor xml:id="__compressed_element_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(BitCullingLevel&#32;lvl&#32;=&#32;maxCullLvl;&#32;lvl&#32;&gt;&#32;0;&#32;lvl--)
<anchor xml:id="__compressed_element_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.ZeroLowerBits(uppers,&#32;lvl);
<anchor xml:id="__compressed_element_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b.ZeroUpperBits(lowers,&#32;lvl);
<anchor xml:id="__compressed_element_8cs_source_1l00555"/>00555 
<anchor xml:id="__compressed_element_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((uppers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;|&#32;lowers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>)&#32;==&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uppers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;|&#32;lowers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>)&#32;==&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uppers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;|&#32;lowers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)&#32;==&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)
<anchor xml:id="__compressed_element_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lvl;
<anchor xml:id="__compressed_element_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__compressed_element_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00564"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ab33ffafeecccd6ccd89225cd6e2c9348">00564</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;BitCullingLevel&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ab33ffafeecccd6ccd89225cd6e2c9348">GetGuessableBitCullLevel</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;oldComp,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;newComp,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec,&#32;BitCullingLevel&#32;maxCullLvl)
<anchor xml:id="__compressed_element_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(BitCullingLevel&#32;lvl&#32;=&#32;maxCullLvl;&#32;lvl&#32;&gt;&#32;0;&#32;lvl--)
<anchor xml:id="__compressed_element_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldComp.ZeroLowerBits(uppers,&#32;lvl);
<anchor xml:id="__compressed_element_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newComp.ZeroUpperBits(lowers,&#32;lvl);
<anchor xml:id="__compressed_element_8cs_source_1l00570"/>00570 
<anchor xml:id="__compressed_element_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((uppers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;|&#32;lowers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>)&#32;==&#32;newComp.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uppers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;|&#32;lowers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>)&#32;==&#32;newComp.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uppers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>&#32;|&#32;lowers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)&#32;==&#32;newComp.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>)
<anchor xml:id="__compressed_element_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lvl;
<anchor xml:id="__compressed_element_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__compressed_element_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00578"/>00578 
<anchor xml:id="__compressed_element_8cs_source_1l00582"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aca809b908f0f224626f0a34a5da630f2">00582</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;BitCullingLevel&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aca809b908f0f224626f0a34a5da630f2">FindBestBitCullLevel</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b,&#32;BitCullingLevel&#32;maxCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec&#32;=&#32;a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ec&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__compressed_element_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Debug.Log(<emphasis role="stringliteral">&quot;NUL&#32;CE&#32;CRUSHER&#32;FindBestBitCullLevel&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__compressed_element_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00590"/>00590 
<anchor xml:id="__compressed_element_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;TRSType.Quaternion)
<anchor xml:id="__compressed_element_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ulong)a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>&#32;==&#32;(ulong)b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>)
<anchor xml:id="__compressed_element_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropAll;
<anchor xml:id="__compressed_element_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__compressed_element_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00599"/>00599 
<anchor xml:id="__compressed_element_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.NoCulling&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;BitCullingLevel.DropThird))
<anchor xml:id="__compressed_element_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__compressed_element_8cs_source_1l00602"/>00602 
<anchor xml:id="__compressed_element_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.DropThird&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;BitCullingLevel.DropHalf))
<anchor xml:id="__compressed_element_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropThird;
<anchor xml:id="__compressed_element_8cs_source_1l00605"/>00605 
<anchor xml:id="__compressed_element_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.DropHalf&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;BitCullingLevel.DropAll))
<anchor xml:id="__compressed_element_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropHalf;
<anchor xml:id="__compressed_element_8cs_source_1l00608"/>00608 
<anchor xml:id="__compressed_element_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;both&#32;values&#32;are&#32;the&#32;same</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropAll;
<anchor xml:id="__compressed_element_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00613"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aabcdff8e3069b07ff8321d342a722167">00613</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;BitCullingLevel&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1aabcdff8e3069b07ff8321d342a722167">FindBestBitCullLevel</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec,&#32;BitCullingLevel&#32;maxCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;TRSType.Quaternion)
<anchor xml:id="__compressed_element_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ulong)a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>&#32;==&#32;(ulong)b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>)
<anchor xml:id="__compressed_element_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropAll;
<anchor xml:id="__compressed_element_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__compressed_element_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00623"/>00623 
<anchor xml:id="__compressed_element_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.NoCulling&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;ec,&#32;BitCullingLevel.DropThird))
<anchor xml:id="__compressed_element_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__compressed_element_8cs_source_1l00626"/>00626 
<anchor xml:id="__compressed_element_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.DropThird&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;ec,&#32;BitCullingLevel.DropHalf))
<anchor xml:id="__compressed_element_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropThird;
<anchor xml:id="__compressed_element_8cs_source_1l00629"/>00629 
<anchor xml:id="__compressed_element_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.DropHalf&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;ec,&#32;BitCullingLevel.DropAll))
<anchor xml:id="__compressed_element_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropHalf;
<anchor xml:id="__compressed_element_8cs_source_1l00632"/>00632 
<anchor xml:id="__compressed_element_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;both&#32;values&#32;are&#32;the&#32;same</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropAll;
<anchor xml:id="__compressed_element_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00637"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a4301094c32e992dc998f9d5b98392573">00637</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;BitCullingLevel&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a4301094c32e992dc998f9d5b98392573">FindBestBitCullLevel</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b,&#32;FloatCrusher[]&#32;ec,&#32;BitCullingLevel&#32;maxCulling)
<anchor xml:id="__compressed_element_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.NoCulling&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;ec,&#32;BitCullingLevel.DropThird))
<anchor xml:id="__compressed_element_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__compressed_element_8cs_source_1l00641"/>00641 
<anchor xml:id="__compressed_element_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.DropThird&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;ec,&#32;BitCullingLevel.DropHalf))
<anchor xml:id="__compressed_element_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropThird;
<anchor xml:id="__compressed_element_8cs_source_1l00644"/>00644 
<anchor xml:id="__compressed_element_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.DropHalf&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;ec,&#32;BitCullingLevel.DropAll))
<anchor xml:id="__compressed_element_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropHalf;
<anchor xml:id="__compressed_element_8cs_source_1l00647"/>00647 
<anchor xml:id="__compressed_element_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;both&#32;values&#32;are&#32;the&#32;same</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropAll;
<anchor xml:id="__compressed_element_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00651"/>00651 
<anchor xml:id="__compressed_element_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;TestMatchingUpper(uint&#32;a,&#32;uint&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lowerbits)
<anchor xml:id="__compressed_element_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(((a&#32;&gt;&gt;&#32;lowerbits)&#32;&lt;&lt;&#32;lowerbits)&#32;==&#32;((b&#32;&gt;&gt;&#32;lowerbits)&#32;&lt;&lt;&#32;lowerbits));
<anchor xml:id="__compressed_element_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00656"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a6751296206fe4e6470d2bf92bb968fb7">00656</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a6751296206fe4e6470d2bf92bb968fb7">TestMatchingUpper</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec&#32;=&#32;a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>.GetBits(bcl))&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>.GetBits(bcl))&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>.GetBits(bcl))
<anchor xml:id="__compressed_element_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00667"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ab0ee0863843e25e3085b418b676ece0a">00667</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ab0ee0863843e25e3085b418b676ece0a">TestMatchingUpper</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;ec[0].GetBits(bcl))&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;ec[1].GetBits(bcl))&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;ec[2].GetBits(bcl))
<anchor xml:id="__compressed_element_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00677"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a45135a789506619703a086cf59fd40f1">00677</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a45135a789506619703a086cf59fd40f1">TestMatchingUpper</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b,&#32;FloatCrusher[]&#32;ec,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__compressed_element_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;ec[0].GetBitsAtCullLevel(bcl))&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;ec[1].GetBitsAtCullLevel(bcl))&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;ec[2].GetBitsAtCullLevel(bcl))
<anchor xml:id="__compressed_element_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00686"/>00686 
<anchor xml:id="__compressed_element_8cs_source_1l00687"/>00687 
<anchor xml:id="__compressed_element_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;bool&#32;operator&#32;==(CompressedElement&#32;a,&#32;CompressedElement&#32;b)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;a.Equals(b);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;bool&#32;operator&#32;!=(CompressedElement&#32;a,&#32;CompressedElement&#32;b)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;!(a.Equals(b));</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00696"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a0a689e4848045613a6eee0cea49c45b1">00696</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a0a689e4848045613a6eee0cea49c45b1">ToString</link>()
<anchor xml:id="__compressed_element_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__compressed_element_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;[Empty&#32;CompElement]&quot;</emphasis>;
<anchor xml:id="__compressed_element_8cs_source_1l00700"/>00700 
<anchor xml:id="__compressed_element_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;TRSType.Quaternion)
<anchor xml:id="__compressed_element_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;[&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>.<link linkend="_struct_photon_1_1_compression_1_1_compressed_quat_1a694bfe7bb7198d8ff22757aacc452b32">cvalue</link>&#32;+&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
<anchor xml:id="__compressed_element_8cs_source_1l00703"/>00703 
<anchor xml:id="__compressed_element_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;TRSType.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__compressed_element_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;[&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>.cvalue&#32;+&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
<anchor xml:id="__compressed_element_8cs_source_1l00706"/>00706 
<anchor xml:id="__compressed_element_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;[x:&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;y:&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;z:&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue&#32;+&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
<anchor xml:id="__compressed_element_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00709"/>00709 
<anchor xml:id="__compressed_element_8cs_source_1l00710"/>00710 
<anchor xml:id="__compressed_element_8cs_source_1l00711"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a5f6fdf29e1ee5e1ce1445c81f2d35d0c">00711</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a5f6fdf29e1ee5e1ce1445c81f2d35d0c">operator ==</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b)
<anchor xml:id="__compressed_element_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(a,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__compressed_element_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__compressed_element_8cs_source_1l00715"/>00715 
<anchor xml:id="__compressed_element_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a74db5ba3cd21c08ddbf91af3dcb8322f">Equals</link>(b);
<anchor xml:id="__compressed_element_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00718"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7b9fce8a18dbc85a14fb6b67f73f5e95">00718</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7b9fce8a18dbc85a14fb6b67f73f5e95">operator !=</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b)
<anchor xml:id="__compressed_element_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(a,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__compressed_element_8cs_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__compressed_element_8cs_source_1l00722"/>00722 
<anchor xml:id="__compressed_element_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a74db5ba3cd21c08ddbf91af3dcb8322f">Equals</link>(b);
<anchor xml:id="__compressed_element_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00725"/>00725 
<anchor xml:id="__compressed_element_8cs_source_1l00726"/>00726 
<anchor xml:id="__compressed_element_8cs_source_1l00727"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a74db5ba3cd21c08ddbf91af3dcb8322f">00727</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a74db5ba3cd21c08ddbf91af3dcb8322f">Equals</link>(<emphasis role="keywordtype">object</emphasis>&#32;obj)
<anchor xml:id="__compressed_element_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a74db5ba3cd21c08ddbf91af3dcb8322f">Equals</link>(obj&#32;as&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>);
<anchor xml:id="__compressed_element_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00731"/>00731 
<anchor xml:id="__compressed_element_8cs_source_1l00732"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a26a481e124c57c8f63fe05cd51bb8003">00732</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a26a481e124c57c8f63fe05cd51bb8003">Equals</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;other)
<anchor xml:id="__compressed_element_8cs_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(crusher&#32;!=&#32;other.crusher)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00736"/>00736 
<anchor xml:id="__compressed_element_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!ReferenceEquals(other,&#32;<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue&#32;==&#32;other.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue&#32;==&#32;other.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue&#32;==&#32;other.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>.cvalue&#32;==&#32;other.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>.cvalue&#32;&amp;&amp;
<anchor xml:id="__compressed_element_8cs_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>.<link linkend="_struct_photon_1_1_compression_1_1_compressed_quat_1a694bfe7bb7198d8ff22757aacc452b32">cvalue</link>&#32;==&#32;other.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>.<link linkend="_struct_photon_1_1_compression_1_1_compressed_quat_1a694bfe7bb7198d8ff22757aacc452b32">cvalue</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00745"/>00745 
<anchor xml:id="__compressed_element_8cs_source_1l00746"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ae0ae88afb3a20b6f4a2d19e26a5380ec">00746</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ae0ae88afb3a20b6f4a2d19e26a5380ec">GetHashCode</link>()
<anchor xml:id="__compressed_element_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;hashCode&#32;=&#32;-1337834834;
<anchor xml:id="__compressed_element_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.GetHashCode();
<anchor xml:id="__compressed_element_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.GetHashCode();
<anchor xml:id="__compressed_element_8cs_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.GetHashCode();
<anchor xml:id="__compressed_element_8cs_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>.GetHashCode();
<anchor xml:id="__compressed_element_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>.GetHashCode();
<anchor xml:id="__compressed_element_8cs_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hashCode;
<anchor xml:id="__compressed_element_8cs_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00757"/>00757 
<anchor xml:id="__compressed_element_8cs_source_1l00758"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext">00758</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext">CompressedElementExt</link>
<anchor xml:id="__compressed_element_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00760"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1af36f291a1c312a2cdbd8bbdf69d14d30">00760</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;System.UInt32[]&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1af36f291a1c312a2cdbd8bbdf69d14d30">reusableInts</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;System.UInt32[3];
<anchor xml:id="__compressed_element_8cs_source_1l00761"/>00761 
<anchor xml:id="__compressed_element_8cs_source_1l00762"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a11ab5f6de702e18858271d1dd90320c3">00762</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a11ab5f6de702e18858271d1dd90320c3">AppendSB</link>(<emphasis role="keyword">this</emphasis>&#32;StringBuilder&#32;strb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce)
<anchor xml:id="__compressed_element_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(ce,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__compressed_element_8cs_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(<emphasis role="stringliteral">&quot;[Null&#32;CompElement]&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;crusher&#32;=&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(crusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__compressed_element_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(<emphasis role="stringliteral">&quot;[CE&#32;Null&#32;Crusher]&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(crusher.TRSType&#32;==&#32;TRSType.Quaternion)
<anchor xml:id="__compressed_element_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(crusher.TRSType).Append(<emphasis role="stringliteral">&quot;&#32;cQuat:&#32;[&quot;</emphasis>).Append(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>.<link linkend="_struct_photon_1_1_compression_1_1_compressed_quat_1a694bfe7bb7198d8ff22757aacc452b32">cvalue</link>).Append(<emphasis role="stringliteral">&quot;]&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(crusher.TRSType&#32;==&#32;TRSType.Scale&#32;&amp;&amp;&#32;crusher.uniformAxes&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__compressed_element_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(crusher.TRSType).Append(<emphasis role="stringliteral">&quot;&#32;cUni:&#32;[&quot;</emphasis>).Append(crusher.uniformAxes).Append(<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>).Append(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>.cvalue).Append(<emphasis role="stringliteral">&quot;]&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(crusher.TRSType).Append(<emphasis role="stringliteral">&quot;&#32;cXYZ:&#32;[x:&quot;</emphasis>).Append(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue).Append(<emphasis role="stringliteral">&quot;&#32;y:&quot;</emphasis>).Append(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue).Append(<emphasis role="stringliteral">&quot;&#32;z:&quot;</emphasis>).Append(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue).Append(<emphasis role="stringliteral">&quot;]&quot;</emphasis>);
<anchor xml:id="__compressed_element_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00787"/>00787 
<anchor xml:id="__compressed_element_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;strb;
<anchor xml:id="__compressed_element_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00791"/>00791 
<anchor xml:id="__compressed_element_8cs_source_1l00792"/>00792 
<anchor xml:id="__compressed_element_8cs_source_1l00793"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a50db23c91baa7590e8f2f30a1535fbe2">00793</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a50db23c91baa7590e8f2f30a1535fbe2">GetChangeAmount</link>(uint[]&#32;results,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b)
<anchor xml:id="__compressed_element_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)
<anchor xml:id="__compressed_element_8cs_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;results[i]&#32;=&#32;(System.UInt32)System.Math.Abs(a[i]&#32;-&#32;b[0]);
<anchor xml:id="__compressed_element_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00799"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a9698ea1f4c6297e429b914dad3261bae">00799</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint[]&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a9698ea1f4c6297e429b914dad3261bae">GetChangeAmount</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b)
<anchor xml:id="__compressed_element_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)
<anchor xml:id="__compressed_element_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1af36f291a1c312a2cdbd8bbdf69d14d30">reusableInts</link>[i]&#32;=&#32;(System.UInt32)System.Math.Abs(a[i]&#32;-&#32;b[0]);
<anchor xml:id="__compressed_element_8cs_source_1l00803"/>00803 
<anchor xml:id="__compressed_element_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1af36f291a1c312a2cdbd8bbdf69d14d30">reusableInts</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00806"/>00806 
<anchor xml:id="__compressed_element_8cs_source_1l00813"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a7219a58224bc6741445cbd6386bf2de7">00813</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a7219a58224bc6741445cbd6386bf2de7">GuessUpperBits</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;newcpos,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;oldcpos,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;crusher&#32;=&#32;oldcpos.crusher;</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newcpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(
<anchor xml:id="__compressed_element_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec,
<anchor xml:id="__compressed_element_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>.GuessUpperBits(newcpos[0],&#32;oldcpos[0],&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>.GuessUpperBits(newcpos[1],&#32;oldcpos[1],&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>.GuessUpperBits(newcpos[2],&#32;oldcpos[2],&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00824"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1aa71fd006379a306bf9097759dbed4918">00824</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1aa71fd006379a306bf9097759dbed4918">GuessUpperBits</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;newcpos,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;oldcpos,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;crusher&#32;=&#32;oldcpos.crusher;</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>(
<anchor xml:id="__compressed_element_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec,
<anchor xml:id="__compressed_element_8cs_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>.GuessUpperBits(newcpos[0],&#32;oldcpos[0],&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>.GuessUpperBits(newcpos[1],&#32;oldcpos[1],&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>.GuessUpperBits(newcpos[2],&#32;oldcpos[2],&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;CompressedElement&#32;GuessUpperBits(this&#32;CompressedElement&#32;newcpos,&#32;CompressedElement&#32;oldcpos,&#32;FloatCrusher[]&#32;ec,&#32;BitCullingLevel&#32;bcl)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;var&#32;crusher&#32;=&#32;oldcpos.crusher;</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;new&#32;CompressedElement(</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;crusher,</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;new&#32;CompressedValue(crusher.xcrusher,&#32;ec[0].GuessUpperBits(newcpos.cx,&#32;oldcpos.cx,&#32;bcl),&#32;crusher.xcrusher.GetBits(bcl)),</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;new&#32;CompressedValue(crusher.ycrusher,&#32;ec[1].GuessUpperBits(newcpos.cx,&#32;oldcpos.cx,&#32;bcl),&#32;crusher.xcrusher.GetBits(bcl)),</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;new&#32;CompressedValue(crusher.zcrusher,&#32;ec[2].GuessUpperBits(newcpos.cx,&#32;oldcpos.cx,&#32;bcl),&#32;crusher.xcrusher.GetBits(bcl))</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00844"/>00844 
<anchor xml:id="__compressed_element_8cs_source_1l00848"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a9a1b94fc0d33ef543bf15ccdc095a93d">00848</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a9a1b94fc0d33ef543bf15ccdc095a93d">OverwriteUpperBits</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;low,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;uppers,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec&#32;=&#32;low.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;low.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(
<anchor xml:id="__compressed_element_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec,
<anchor xml:id="__compressed_element_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>.OverwriteUpperBits(low.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;uppers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>.OverwriteUpperBits(low.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;uppers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>.OverwriteUpperBits(low.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;uppers.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00859"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a5efc7e4d11c948005ee954b68b6683fa">00859</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a5efc7e4d11c948005ee954b68b6683fa">OverwriteUpperBits</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;low,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;up,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>(
<anchor xml:id="__compressed_element_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec,
<anchor xml:id="__compressed_element_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec[0].<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a9a1b94fc0d33ef543bf15ccdc095a93d">OverwriteUpperBits</link>(low.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;up.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec[1].OverwriteUpperBits(low.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;up.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec[2].OverwriteUpperBits(low.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;up.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;CompressedElement&#32;OverwriteUpperBits(this&#32;CompressedElement&#32;low,&#32;CompressedElement&#32;up,&#32;FloatCrusher[]&#32;ec,&#32;BitCullingLevel&#32;bcl)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;new&#32;CompressedElement(</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;//ec,</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec[0].OverwriteUpperBits(low.cx,&#32;up.cx,&#32;bcl),</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec[1].OverwriteUpperBits(low.cy,&#32;up.cy,&#32;bcl),</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec[2].OverwriteUpperBits(low.cz,&#32;up.cz,&#32;bcl)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00877"/>00877 
<anchor xml:id="__compressed_element_8cs_source_1l00878"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1ab003d033555ec867a0f732aa30be2cb1">00878</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1ab003d033555ec867a0f732aa30be2cb1">ZeroLowerBits</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;fullpos,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;target,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec&#32;=&#32;fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(
<anchor xml:id="__compressed_element_8cs_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec,&#32;<emphasis role="comment">//fullpos.crusher,</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>.ZeroLowerBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>.ZeroLowerBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>.ZeroLowerBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00889"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a5d4ca7e028bd8851039a314e216dfd72">00889</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a5d4ca7e028bd8851039a314e216dfd72">ZeroLowerBits</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;fullpos,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>(
<anchor xml:id="__compressed_element_8cs_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec,&#32;<emphasis role="comment">//fullpos.crusher,</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec[0].<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1ab003d033555ec867a0f732aa30be2cb1">ZeroLowerBits</link>(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec[1].ZeroLowerBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec[2].ZeroLowerBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;CompressedElement&#32;ZeroLowerBits(this&#32;CompressedElement&#32;fullpos,&#32;FloatCrusher[]&#32;ec,&#32;BitCullingLevel&#32;bcl)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;new&#32;CompressedElement(</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;fullpos.crusher,</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec[0].ZeroLowerBits(fullpos.cx,&#32;bcl),</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec[1].ZeroLowerBits(fullpos.cy,&#32;bcl),</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec[2].ZeroLowerBits(fullpos.cz,&#32;bcl)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00907"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a38bbb95b01c9783c46410f491c374d1b">00907</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a38bbb95b01c9783c46410f491c374d1b">ZeroUpperBits</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;fullpos,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;target,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec&#32;=&#32;fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1ada7c5fbec9a585a83601b7d6073674e5">crusher</link>;
<anchor xml:id="__compressed_element_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(
<anchor xml:id="__compressed_element_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec,&#32;<emphasis role="comment">/*fullpos.crusher,*/</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>.ZeroUpperBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>.ZeroUpperBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>.ZeroUpperBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__compressed_element_8cs_source_1l00918"/><link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1ac223ac82d5af6a6d8e68705a2122cac6">00918</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1ac223ac82d5af6a6d8e68705a2122cac6">ZeroUpperBits</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;fullpos,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compressed_element_8cs_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>(
<anchor xml:id="__compressed_element_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec,&#32;<emphasis role="comment">/*fullpos.crusher,*/</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec[0].<link linkend="_class_photon_1_1_compression_1_1_compressed_element_ext_1a38bbb95b01c9783c46410f491c374d1b">ZeroUpperBits</link>(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec[1].ZeroUpperBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;bcl),
<anchor xml:id="__compressed_element_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec[2].ZeroUpperBits(fullpos.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;bcl)
<anchor xml:id="__compressed_element_8cs_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__compressed_element_8cs_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;CompressedElement&#32;ZeroUpperBits(this&#32;CompressedElement&#32;fullpos,&#32;FloatCrusher[]&#32;ec,&#32;BitCullingLevel&#32;bcl)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;new&#32;CompressedElement(</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec,&#32;/*fullpos.crusher,*/</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec[0].ZeroUpperBits(fullpos.cx,&#32;bcl),</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec[1].ZeroUpperBits(fullpos.cy,&#32;bcl),</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ec[2].ZeroUpperBits(fullpos.cz,&#32;bcl)</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;);</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__compressed_element_8cs_source_1l00936"/>00936 
<anchor xml:id="__compressed_element_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;}
<anchor xml:id="__compressed_element_8cs_source_1l00938"/>00938 }
</programlisting></section>
