<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__countdown_timer_8cs_source" xml:lang="en-US">
<title>CountdownTimer.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/UtilityScripts/Room/CountdownTimer.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__countdown_timer_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;CountdownTimer.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;Part&#32;of:&#32;Photon&#32;Unity&#32;Utilities,</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;This&#32;is&#32;a&#32;basic&#32;CountdownTimer.&#32;In&#32;order&#32;to&#32;start&#32;the&#32;timer,&#32;the&#32;MasterClient&#32;can&#32;add&#32;a&#32;certain&#32;entry&#32;to&#32;the&#32;Custom&#32;Room&#32;Properties,</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;which&#32;contains&#32;the&#32;property&apos;s&#32;name&#32;&apos;StartTime&apos;&#32;and&#32;the&#32;actual&#32;start&#32;time&#32;describing&#32;the&#32;moment,&#32;the&#32;timer&#32;has&#32;been&#32;started.</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;To&#32;have&#32;a&#32;synchronized&#32;timer,&#32;the&#32;best&#32;practice&#32;is&#32;to&#32;use&#32;PhotonNetwork.Time.</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;In&#32;order&#32;to&#32;subscribe&#32;to&#32;the&#32;CountdownTimerHasExpired&#32;event&#32;you&#32;can&#32;call&#32;CountdownTimer.OnCountdownTimerHasExpired&#32;+=&#32;OnCountdownTimerIsExpired;</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00010"/>00010 <emphasis role="comment">//&#32;from&#32;Unity&apos;s&#32;OnEnable&#32;function&#32;for&#32;example.&#32;For&#32;unsubscribing&#32;simply&#32;call&#32;CountdownTimer.OnCountdownTimerHasExpired&#32;-=&#32;OnCountdownTimerIsExpired;.</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00011"/>00011 <emphasis role="comment">//&#32;You&#32;can&#32;do&#32;this&#32;from&#32;Unity&apos;s&#32;OnDisable&#32;function&#32;for&#32;example.</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00012"/>00012 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00013"/>00013 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00014"/>00014 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00015"/>00015 
<anchor xml:id="__countdown_timer_8cs_source_1l00016"/>00016 <emphasis role="keyword">using</emphasis>&#32;ExitGames.Client.Photon;
<anchor xml:id="__countdown_timer_8cs_source_1l00017"/>00017 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_realtime">Realtime</link>;
<anchor xml:id="__countdown_timer_8cs_source_1l00018"/>00018 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__countdown_timer_8cs_source_1l00019"/>00019 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.UI;
<anchor xml:id="__countdown_timer_8cs_source_1l00020"/>00020 
<anchor xml:id="__countdown_timer_8cs_source_1l00021"/>00021 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_utility_scripts">Photon.Pun.UtilityScripts</link>
<anchor xml:id="__countdown_timer_8cs_source_1l00022"/>00022 {
<anchor xml:id="__countdown_timer_8cs_source_1l00035"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer">CountdownTimer</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks">MonoBehaviourPunCallbacks</link>
<anchor xml:id="__countdown_timer_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00040"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1ad1f577038d15c8988d2f336e775878ff">00040</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;delegate&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1ad1f577038d15c8988d2f336e775878ff">CountdownTimerHasExpired</link>();
<anchor xml:id="__countdown_timer_8cs_source_1l00041"/>00041 
<anchor xml:id="__countdown_timer_8cs_source_1l00042"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a7b880d4043595abe7a2eb3bb631b5a10">00042</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a7b880d4043595abe7a2eb3bb631b5a10">CountdownStartTime</link>&#32;=&#32;<emphasis role="stringliteral">&quot;StartTime&quot;</emphasis>;
<anchor xml:id="__countdown_timer_8cs_source_1l00043"/>00043 
<anchor xml:id="__countdown_timer_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Countdown&#32;time&#32;in&#32;seconds&quot;</emphasis>)]&#32;
<anchor xml:id="__countdown_timer_8cs_source_1l00045"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1aacc097f04cde45d93b95260153848f9e">00045</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1aacc097f04cde45d93b95260153848f9e">Countdown</link>&#32;=&#32;5.0f;
<anchor xml:id="__countdown_timer_8cs_source_1l00046"/>00046 
<anchor xml:id="__countdown_timer_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isTimerRunning;
<anchor xml:id="__countdown_timer_8cs_source_1l00048"/>00048 
<anchor xml:id="__countdown_timer_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;startTime;
<anchor xml:id="__countdown_timer_8cs_source_1l00050"/>00050 
<anchor xml:id="__countdown_timer_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Reference&#32;to&#32;a&#32;Text&#32;component&#32;for&#32;visualizing&#32;the&#32;countdown&quot;</emphasis>)]
<anchor xml:id="__countdown_timer_8cs_source_1l00052"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a44333b5c35bcb807bce626108cd4e069">00052</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a44333b5c35bcb807bce626108cd4e069">Text</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a44333b5c35bcb807bce626108cd4e069">Text</link>;
<anchor xml:id="__countdown_timer_8cs_source_1l00053"/>00053 
<anchor xml:id="__countdown_timer_8cs_source_1l00054"/>00054 
<anchor xml:id="__countdown_timer_8cs_source_1l00058"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a872822dedbe8007e7c978868b3f5b30d">00058</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">event</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1ad1f577038d15c8988d2f336e775878ff">CountdownTimerHasExpired</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a872822dedbe8007e7c978868b3f5b30d">OnCountdownTimerHasExpired</link>;
<anchor xml:id="__countdown_timer_8cs_source_1l00059"/>00059 
<anchor xml:id="__countdown_timer_8cs_source_1l00060"/>00060 
<anchor xml:id="__countdown_timer_8cs_source_1l00061"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1adb25f31e1bb24c72eaf8a6f46ecc81e5">00061</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1adb25f31e1bb24c72eaf8a6f46ecc81e5">Start</link>()
<anchor xml:id="__countdown_timer_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.Text&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Reference&#32;to&#32;&apos;Text&apos;&#32;is&#32;not&#32;set.&#32;Please&#32;set&#32;a&#32;valid&#32;reference.&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__countdown_timer_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00065"/>00065 
<anchor xml:id="__countdown_timer_8cs_source_1l00066"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a17a7b394eb415ff8bc64a90bf0259044">00066</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a17a7b394eb415ff8bc64a90bf0259044">OnEnable</link>()
<anchor xml:id="__countdown_timer_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(<emphasis role="stringliteral">&quot;OnEnable&#32;CountdownTimer&quot;</emphasis>);
<anchor xml:id="__countdown_timer_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnEnable();
<anchor xml:id="__countdown_timer_8cs_source_1l00070"/>00070 
<anchor xml:id="__countdown_timer_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;starttime&#32;may&#32;already&#32;be&#32;in&#32;the&#32;props.&#32;look&#32;it&#32;up.</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initialize();
<anchor xml:id="__countdown_timer_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00074"/>00074 
<anchor xml:id="__countdown_timer_8cs_source_1l00075"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a86684c4f51de7d687017b8f6c2c823a1">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a86684c4f51de7d687017b8f6c2c823a1">OnDisable</link>()
<anchor xml:id="__countdown_timer_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnDisable();
<anchor xml:id="__countdown_timer_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(<emphasis role="stringliteral">&quot;OnDisable&#32;CountdownTimer&quot;</emphasis>);
<anchor xml:id="__countdown_timer_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00080"/>00080 
<anchor xml:id="__countdown_timer_8cs_source_1l00081"/>00081 
<anchor xml:id="__countdown_timer_8cs_source_1l00082"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a420f95549ce05dd84581c58bd4fe8ee7">00082</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a420f95549ce05dd84581c58bd4fe8ee7">Update</link>()
<anchor xml:id="__countdown_timer_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.isTimerRunning)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__countdown_timer_8cs_source_1l00085"/>00085 
<anchor xml:id="__countdown_timer_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;countdown&#32;=&#32;TimeRemaining();
<anchor xml:id="__countdown_timer_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Text.text&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Game&#32;starts&#32;in&#32;{0}&#32;seconds&quot;</emphasis>,&#32;countdown.ToString(<emphasis role="stringliteral">&quot;n0&quot;</emphasis>));
<anchor xml:id="__countdown_timer_8cs_source_1l00088"/>00088 
<anchor xml:id="__countdown_timer_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(countdown&#32;&gt;&#32;0.0f)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__countdown_timer_8cs_source_1l00090"/>00090 
<anchor xml:id="__countdown_timer_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnTimerEnds();
<anchor xml:id="__countdown_timer_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00093"/>00093 
<anchor xml:id="__countdown_timer_8cs_source_1l00094"/>00094 
<anchor xml:id="__countdown_timer_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnTimerRuns()
<anchor xml:id="__countdown_timer_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.isTimerRunning&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__countdown_timer_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__countdown_timer_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00100"/>00100 
<anchor xml:id="__countdown_timer_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnTimerEnds()
<anchor xml:id="__countdown_timer_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.isTimerRunning&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__countdown_timer_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__countdown_timer_8cs_source_1l00105"/>00105 
<anchor xml:id="__countdown_timer_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(<emphasis role="stringliteral">&quot;Emptying&#32;info&#32;text.&quot;</emphasis>,&#32;this.Text);
<anchor xml:id="__countdown_timer_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Text.text&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Empty;
<anchor xml:id="__countdown_timer_8cs_source_1l00108"/>00108 
<anchor xml:id="__countdown_timer_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a872822dedbe8007e7c978868b3f5b30d">OnCountdownTimerHasExpired</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a872822dedbe8007e7c978868b3f5b30d">OnCountdownTimerHasExpired</link>();
<anchor xml:id="__countdown_timer_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00111"/>00111 
<anchor xml:id="__countdown_timer_8cs_source_1l00112"/>00112 
<anchor xml:id="__countdown_timer_8cs_source_1l00113"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a8385606100f683b1b27f24e2cc6caedd">00113</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a8385606100f683b1b27f24e2cc6caedd">OnRoomPropertiesUpdate</link>(<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;propertiesThatChanged)
<anchor xml:id="__countdown_timer_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(<emphasis role="stringliteral">&quot;CountdownTimer.OnRoomPropertiesUpdate&#32;&quot;</emphasis>&#32;+&#32;propertiesThatChanged.ToStringFull());
<anchor xml:id="__countdown_timer_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initialize();
<anchor xml:id="__countdown_timer_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00118"/>00118 
<anchor xml:id="__countdown_timer_8cs_source_1l00119"/>00119 
<anchor xml:id="__countdown_timer_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Initialize()
<anchor xml:id="__countdown_timer_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;propStartTime;
<anchor xml:id="__countdown_timer_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a07448f5cc909eb45bf1fe81d037f1860">TryGetStartTime</link>(out&#32;propStartTime))
<anchor xml:id="__countdown_timer_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.startTime&#32;=&#32;propStartTime;
<anchor xml:id="__countdown_timer_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(<emphasis role="stringliteral">&quot;Initialize&#32;sets&#32;StartTime&#32;&quot;</emphasis>&#32;+&#32;this.startTime&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;server&#32;time&#32;now:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">ServerTimestamp</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;remain:&#32;&quot;</emphasis>&#32;+&#32;TimeRemaining());
<anchor xml:id="__countdown_timer_8cs_source_1l00127"/>00127 
<anchor xml:id="__countdown_timer_8cs_source_1l00128"/>00128 
<anchor xml:id="__countdown_timer_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.isTimerRunning&#32;=&#32;TimeRemaining()&#32;&gt;&#32;0;
<anchor xml:id="__countdown_timer_8cs_source_1l00130"/>00130 
<anchor xml:id="__countdown_timer_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.isTimerRunning)
<anchor xml:id="__countdown_timer_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnTimerRuns();
<anchor xml:id="__countdown_timer_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__countdown_timer_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnTimerEnds();
<anchor xml:id="__countdown_timer_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00137"/>00137 
<anchor xml:id="__countdown_timer_8cs_source_1l00138"/>00138 
<anchor xml:id="__countdown_timer_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;TimeRemaining()
<anchor xml:id="__countdown_timer_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;timer&#32;=&#32;PhotonNetwork.ServerTimestamp&#32;-&#32;this.startTime;
<anchor xml:id="__countdown_timer_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.Countdown&#32;-&#32;timer&#32;/&#32;1000f;
<anchor xml:id="__countdown_timer_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00144"/>00144 
<anchor xml:id="__countdown_timer_8cs_source_1l00145"/>00145 
<anchor xml:id="__countdown_timer_8cs_source_1l00146"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a07448f5cc909eb45bf1fe81d037f1860">00146</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a07448f5cc909eb45bf1fe81d037f1860">TryGetStartTime</link>(out&#32;<emphasis role="keywordtype">int</emphasis>&#32;startTimestamp)
<anchor xml:id="__countdown_timer_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;startTimestamp&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">ServerTimestamp</link>;
<anchor xml:id="__countdown_timer_8cs_source_1l00149"/>00149 
<anchor xml:id="__countdown_timer_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;startTimeFromProps;
<anchor xml:id="__countdown_timer_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>.TryGetValue(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a7b880d4043595abe7a2eb3bb631b5a10">CountdownStartTime</link>,&#32;out&#32;startTimeFromProps))
<anchor xml:id="__countdown_timer_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;startTimestamp&#32;=&#32;(int)startTimeFromProps;
<anchor xml:id="__countdown_timer_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__countdown_timer_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00156"/>00156 
<anchor xml:id="__countdown_timer_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__countdown_timer_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00159"/>00159 
<anchor xml:id="__countdown_timer_8cs_source_1l00160"/>00160 
<anchor xml:id="__countdown_timer_8cs_source_1l00161"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a402d0ea749a694f65303b1bc82c376a1">00161</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a402d0ea749a694f65303b1bc82c376a1">SetStartTime</link>()
<anchor xml:id="__countdown_timer_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;startTime&#32;=&#32;0;
<anchor xml:id="__countdown_timer_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;wasSet&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a07448f5cc909eb45bf1fe81d037f1860">TryGetStartTime</link>(out&#32;startTime);
<anchor xml:id="__countdown_timer_8cs_source_1l00165"/>00165 
<anchor xml:id="__countdown_timer_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;props&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>
<anchor xml:id="__countdown_timer_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__countdown_timer_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer">CountdownTimer</link>.<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a7b880d4043595abe7a2eb3bb631b5a10">CountdownStartTime</link>,&#32;(int)<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">ServerTimestamp</link>}
<anchor xml:id="__countdown_timer_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__countdown_timer_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1aff6e067d041db92e4fbde6a3277926ad">SetCustomProperties</link>(props);
<anchor xml:id="__countdown_timer_8cs_source_1l00171"/>00171 
<anchor xml:id="__countdown_timer_8cs_source_1l00172"/>00172 
<anchor xml:id="__countdown_timer_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(<emphasis role="stringliteral">&quot;Set&#32;Custom&#32;Props&#32;for&#32;Time:&#32;&quot;</emphasis>+&#32;props.ToStringFull()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;wasSet:&#32;&quot;</emphasis>+wasSet);
<anchor xml:id="__countdown_timer_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;}
<anchor xml:id="__countdown_timer_8cs_source_1l00176"/>00176 }
</programlisting></section>
