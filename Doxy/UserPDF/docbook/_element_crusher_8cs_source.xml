<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__element_crusher_8cs_source" xml:lang="en-US">
<title>ElementCrusher.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/TransformCrusher/ElementCrusher.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__element_crusher_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00005"/>00005 
<anchor xml:id="__element_crusher_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__element_crusher_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__element_crusher_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__element_crusher_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;System.Collections.ObjectModel;
<anchor xml:id="__element_crusher_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_utilities">Utilities</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespaceemotitron">emotitron</link>.Compression;
<anchor xml:id="__element_crusher_8cs_source_1l00012"/>00012 
<anchor xml:id="__element_crusher_8cs_source_1l00013"/>00013 
<anchor xml:id="__element_crusher_8cs_source_1l00014"/>00014 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00015"/>00015 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__element_crusher_8cs_source_1l00016"/>00016 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00017"/>00017 
<anchor xml:id="__element_crusher_8cs_source_1l00018"/>00018 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__element_crusher_8cs_source_1l00019"/>00019 {
<anchor xml:id="__element_crusher_8cs_source_1l00020"/><link linkend="_interface_photon_1_1_compression_1_1_i_on_element_crusher_change">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_i_on_element_crusher_change">IOnElementCrusherChange</link>
<anchor xml:id="__element_crusher_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00022"/><link linkend="_interface_photon_1_1_compression_1_1_i_on_element_crusher_change_1ad02bf18f8a7edead2e4652d3aee6bf62">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_interface_photon_1_1_compression_1_1_i_on_element_crusher_change_1ad02bf18f8a7edead2e4652d3aee6bf62">OnCrusherChange</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec);
<anchor xml:id="__element_crusher_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00024"/>00024 
<anchor xml:id="__element_crusher_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;[System.Serializable]
<anchor xml:id="__element_crusher_8cs_source_1l00026"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;:&#32;Crusher&lt;ElementCrusher&gt;,&#32;IEquatable&lt;ElementCrusher&gt;,&#32;ICrusherCopy&lt;ElementCrusher&gt;
<anchor xml:id="__element_crusher_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00028"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>&#32;{&#32;NonUniform&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7a74c53bcd3dcb2bb79993b2fec37d362a">XY</link>&#32;=&#32;3,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7a27db3b98d01e664c17a6620b222c6469">XZ</link>&#32;=&#32;5,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7affa4ba973372c3650fd0881abeca6512">YZ</link>&#32;=&#32;6,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7ae65075d550f9b5bf9992fa1d71a131be">XYZ</link>&#32;=&#32;7&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00029"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>
<anchor xml:id="__element_crusher_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Position&#32;=&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Euler&#32;=&#32;1,
<anchor xml:id="__element_crusher_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;=&#32;2,
<anchor xml:id="__element_crusher_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scale&#32;=&#32;3,
<anchor xml:id="__element_crusher_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generic&#32;=&#32;4
<anchor xml:id="__element_crusher_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00040"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad156ccc0e5affd918665dcaed29da756">00040</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;ElementCrusher&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad156ccc0e5affd918665dcaed29da756">staticElementCrushers</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;ElementCrusher&gt;();
<anchor xml:id="__element_crusher_8cs_source_1l00041"/>00041 
<anchor xml:id="__element_crusher_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;reusableCE&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00044"/>00044 
<anchor xml:id="__element_crusher_8cs_source_1l00045"/>00045 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Static&#32;Crushers</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00046"/>00046 
<anchor xml:id="__element_crusher_8cs_source_1l00047"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a892dce044537a02eeb3dc65092f0bae2">00047</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a892dce044537a02eeb3dc65092f0bae2">GetStaticPositionCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad85de9040535aecb1777e788a7e1e863">Bounds</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;resolution)
<anchor xml:id="__element_crusher_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Build&#32;a&#32;new&#32;EC&#32;with&#32;the&#32;supplied&#32;values.</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>.Position)
<anchor xml:id="__element_crusher_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;FloatCrusher.GetStaticFloatCrusher(resolution,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>.min.x,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>.max.x,&#32;Axis.Generic,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position),
<anchor xml:id="__element_crusher_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;FloatCrusher.GetStaticFloatCrusher(resolution,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>.min.y,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>.max.y,&#32;Axis.Generic,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position),
<anchor xml:id="__element_crusher_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;FloatCrusher.GetStaticFloatCrusher(resolution,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>.min.z,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>.max.z,&#32;Axis.Generic,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position)
<anchor xml:id="__element_crusher_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__element_crusher_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;See&#32;if&#32;this&#32;crusher&#32;is&#32;a&#32;repeat&#32;of&#32;an&#32;existing&#32;one</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(ec);
<anchor xml:id="__element_crusher_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00059"/>00059 
<anchor xml:id="__element_crusher_8cs_source_1l00060"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad970a9ff90c58416aa13960d67b4e308">00060</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad970a9ff90c58416aa13960d67b4e308">GetStaticQuatCrusher</link>(<emphasis role="keywordtype">int</emphasis>&#32;minBits)
<anchor xml:id="__element_crusher_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Build&#32;a&#32;new&#32;EC&#32;with&#32;the&#32;supplied&#32;values.</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">QCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_quat_crusher">QuatCrusher</link>(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>)&#32;{&#32;Bits&#32;=&#32;minBits&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__element_crusher_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;See&#32;if&#32;this&#32;crusher&#32;is&#32;a&#32;repeat&#32;of&#32;an&#32;existing&#32;one</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(ec);
<anchor xml:id="__element_crusher_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00070"/>00070 
<anchor xml:id="__element_crusher_8cs_source_1l00077"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ec,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CheckAgainstFloatCrushersAsWell&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(ec,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__element_crusher_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00081"/>00081 
<anchor xml:id="__element_crusher_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CheckAgainstFloatCrushersAsWell)
<anchor xml:id="__element_crusher_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ec.cache_xEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;FloatCrusher.CheckAgainstStatics(ec._xcrusher);
<anchor xml:id="__element_crusher_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ec.cache_yEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;FloatCrusher.CheckAgainstStatics(ec._ycrusher);
<anchor xml:id="__element_crusher_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ec.cache_zEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;FloatCrusher.CheckAgainstStatics(ec._zcrusher);
<anchor xml:id="__element_crusher_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ec.cache_uEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">UCrusher</link>&#32;=&#32;FloatCrusher.CheckAgainstStatics(ec._ucrusher);
<anchor xml:id="__element_crusher_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00093"/>00093 
<anchor xml:id="__element_crusher_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;ec.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2cb19c0da00422001c8a00b40b7309ee">GetHashCode</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00095"/>00095 
<anchor xml:id="__element_crusher_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad156ccc0e5affd918665dcaed29da756">staticElementCrushers</link>.ContainsKey(hash))
<anchor xml:id="__element_crusher_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad156ccc0e5affd918665dcaed29da756">staticElementCrushers</link>[hash];
<anchor xml:id="__element_crusher_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00100"/>00100 
<anchor xml:id="__element_crusher_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad156ccc0e5affd918665dcaed29da756">staticElementCrushers</link>.Add(hash,&#32;ec);
<anchor xml:id="__element_crusher_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ec;
<anchor xml:id="__element_crusher_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00104"/>00104 
<anchor xml:id="__element_crusher_8cs_source_1l00105"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a19ba87d3d3572253595fd03c6b11dfc5">00105</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a19ba87d3d3572253595fd03c6b11dfc5">defaultUncompressedElementCrusher</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>.Generic)
<anchor xml:id="__element_crusher_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;YCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__element_crusher_8cs_source_1l00112"/>00112 
<anchor xml:id="__element_crusher_8cs_source_1l00113"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac35666621cb60bb5561bf41b326af0e5">00113</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac35666621cb60bb5561bf41b326af0e5">defaultUncompressedPosCrusher</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>.Position)
<anchor xml:id="__element_crusher_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;YCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__element_crusher_8cs_source_1l00120"/>00120 
<anchor xml:id="__element_crusher_8cs_source_1l00121"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a95b4c704bf3525fbb782fd40fc8a459f">00121</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a95b4c704bf3525fbb782fd40fc8a459f">defaultUncompressedSclCrusher</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>.Position)
<anchor xml:id="__element_crusher_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;YCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__element_crusher_8cs_source_1l00128"/>00128 
<anchor xml:id="__element_crusher_8cs_source_1l00129"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aab65acec264b1c0be657c7d47b16b1ad">00129</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aab65acec264b1c0be657c7d47b16b1ad">defaultHalfFloatElementCrusher</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>.Generic)
<anchor xml:id="__element_crusher_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;YCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UCrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__element_crusher_8cs_source_1l00136"/>00136 
<anchor xml:id="__element_crusher_8cs_source_1l00137"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a116d5fa29f9f32572b5c33e0dcf77a10">00137</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a116d5fa29f9f32572b5c33e0dcf77a10">defaultHalfFloatPosCrusher</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>.Position)
<anchor xml:id="__element_crusher_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;YCrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZCrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UCrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__element_crusher_8cs_source_1l00144"/>00144 
<anchor xml:id="__element_crusher_8cs_source_1l00145"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1f793b0b332680fce5f8b74fe114b523">00145</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1f793b0b332680fce5f8b74fe114b523">defaultHalfFloatSclCrusher</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>.Scale)
<anchor xml:id="__element_crusher_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;YCrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZCrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UCrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,
<anchor xml:id="__element_crusher_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__element_crusher_8cs_source_1l00152"/>00152 
<anchor xml:id="__element_crusher_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//static&#32;ElementCrusher()</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;ElementCrusher&#32;defaultUncompressedElementCrusher&#32;=&#32;CheckAgainstStatics(new&#32;ElementCrusher(StaticTRSType.Generic)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;xcrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ycrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;zcrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ucrusher&#32;=&#32;FloatCrusher.defaultUncompressedCrusher,</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;});</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;ElementCrusher&#32;defaultHalfFloatElementCrusher&#32;=&#32;CheckAgainstStatics(new&#32;ElementCrusher(StaticTRSType.Generic)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;xcrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ycrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;zcrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;ucrusher&#32;=&#32;FloatCrusher.defaulHalfFloatCrusher,</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;});</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00172"/>00172 
<anchor xml:id="__element_crusher_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.Log(&quot;STATIC&#32;CONS&#32;EC&#32;&quot;&#32;+&#32;(ElementCrusher.defaultUncompressedElementCrusher&#32;!=&#32;null)&#32;+&#32;&quot;&#32;&quot;&#32;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(ElementCrusher.defaultUncompressedElementCrusher.xcrusher&#32;!=&#32;null));</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00175"/>00175 
<anchor xml:id="__element_crusher_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00177"/>00177 
<anchor xml:id="__element_crusher_8cs_source_1l00178"/>00178 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00179"/>00179 
<anchor xml:id="__element_crusher_8cs_source_1l00180"/>00180 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Inspector</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00181"/>00181 
<anchor xml:id="__element_crusher_8cs_source_1l00182"/>00182 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isExpanded&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00184"/>00184 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00185"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace68fe26880777249835e3f4b9b393e2">00185</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace68fe26880777249835e3f4b9b393e2">hideFieldName</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00186"/>00186 
<anchor xml:id="__element_crusher_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;_trsType;
<anchor xml:id="__element_crusher_8cs_source_1l00188"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">00188</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>
<anchor xml:id="__element_crusher_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_trsType;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_trsType&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_xcrusher.TRSType&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ycrusher.TRSType&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_zcrusher.TRSType&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00199"/>00199 
<anchor xml:id="__element_crusher_8cs_source_1l00200"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1d08654e2adede1fe8836020a782e312">00200</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1d08654e2adede1fe8836020a782e312">defaultTransform</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00201"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">00201</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00202"/>00202 
<anchor xml:id="__element_crusher_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;FloatCrusher&#32;_xcrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;FloatCrusher&#32;_ycrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;FloatCrusher&#32;_zcrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;FloatCrusher&#32;_ucrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_quat_crusher">QuatCrusher</link>&#32;_qcrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00208"/>00208 
<anchor xml:id="__element_crusher_8cs_source_1l00209"/>00209 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Crusher&#32;Properties</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00210"/>00210 
<anchor xml:id="__element_crusher_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;the&#32;XCrusher&#32;property&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__element_crusher_8cs_source_1l00212"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab36a9953657036d90633bf9c2e2b102f">00212</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloatCrusher&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab36a9953657036d90633bf9c2e2b102f">xcrusher</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>;&#32;}&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;value;&#32;}&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;the&#32;YCrusher&#32;property&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__element_crusher_8cs_source_1l00214"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a61903317d6990b9b4c0d033668da8803">00214</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloatCrusher&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a61903317d6990b9b4c0d033668da8803">ycrusher</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>;&#32;}&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;value;&#32;}&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;the&#32;ZCrusher&#32;property&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__element_crusher_8cs_source_1l00216"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1ea9150473c28146615274eea29a645b">00216</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloatCrusher&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1ea9150473c28146615274eea29a645b">zcrusher</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>;&#32;}&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;value;&#32;}&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;the&#32;UCrusher&#32;property&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__element_crusher_8cs_source_1l00218"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a19d4fd85ef394f795c396bd04a767167">00218</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloatCrusher&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a19d4fd85ef394f795c396bd04a767167">ucrusher</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">UCrusher</link>;&#32;}&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">UCrusher</link>&#32;=&#32;value;&#32;}&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;the&#32;QCrusher&#32;property&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__element_crusher_8cs_source_1l00220"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a0f9741f95e8b2b9f4344fa3cde07a1f9">00220</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_quat_crusher">QuatCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a0f9741f95e8b2b9f4344fa3cde07a1f9">qcrusher</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">QCrusher</link>;&#32;}&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">QCrusher</link>&#32;=&#32;value;&#32;}&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00221"/>00221 
<anchor xml:id="__element_crusher_8cs_source_1l00222"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">00222</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloatCrusher&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>
<anchor xml:id="__element_crusher_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_xcrusher;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00227"/>00227 
<anchor xml:id="__element_crusher_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(_xcrusher,&#32;value))
<anchor xml:id="__element_crusher_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00230"/>00230 
<anchor xml:id="__element_crusher_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_xcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_xcrusher.OnRecalculated&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_xcrusher&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_xcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_xcrusher.OnRecalculated&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00234"/>00234 
<anchor xml:id="__element_crusher_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00238"/>00238 
<anchor xml:id="__element_crusher_8cs_source_1l00239"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">00239</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloatCrusher&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>
<anchor xml:id="__element_crusher_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_ycrusher;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(_ycrusher,&#32;value))
<anchor xml:id="__element_crusher_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00246"/>00246 
<anchor xml:id="__element_crusher_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ycrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_ycrusher.OnRecalculated&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ycrusher&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ycrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_ycrusher.OnRecalculated&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00250"/>00250 
<anchor xml:id="__element_crusher_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00254"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">00254</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloatCrusher&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>
<anchor xml:id="__element_crusher_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_zcrusher;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(_zcrusher,&#32;value))
<anchor xml:id="__element_crusher_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00261"/>00261 
<anchor xml:id="__element_crusher_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_zcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_zcrusher.OnRecalculated&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_zcrusher&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_zcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_zcrusher.OnRecalculated&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00265"/>00265 
<anchor xml:id="__element_crusher_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00269"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">00269</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloatCrusher&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">UCrusher</link>
<anchor xml:id="__element_crusher_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_ucrusher;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(_ucrusher,&#32;value))
<anchor xml:id="__element_crusher_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00276"/>00276 
<anchor xml:id="__element_crusher_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ucrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_ucrusher.OnRecalculated&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ucrusher&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ucrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_ucrusher.OnRecalculated&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00280"/>00280 
<anchor xml:id="__element_crusher_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00284"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">00284</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_quat_crusher">QuatCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">QCrusher</link>
<anchor xml:id="__element_crusher_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_qcrusher;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(_qcrusher,&#32;value))
<anchor xml:id="__element_crusher_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00291"/>00291 
<anchor xml:id="__element_crusher_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_qcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_qcrusher.OnRecalculated&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_qcrusher&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_qcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_qcrusher.OnRecalculated&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00295"/>00295 
<anchor xml:id="__element_crusher_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00299"/>00299 
<anchor xml:id="__element_crusher_8cs_source_1l00300"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">00300</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7d15f1f15866f1e425d2fdb7a0bc6cd1">OnCrusherChange</link>(<link linkend="_class_photon_1_1_compression_1_1_quat_crusher">QuatCrusher</link>&#32;crusher)
<anchor xml:id="__element_crusher_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00304"/>00304 
<anchor xml:id="__element_crusher_8cs_source_1l00305"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a53c677c15cf15f7c355efdeea79fa0f5">00305</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a53c677c15cf15f7c355efdeea79fa0f5">OnCrusherChange</link>(FloatCrusher&#32;crusher)
<anchor xml:id="__element_crusher_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00309"/>00309 
<anchor xml:id="__element_crusher_8cs_source_1l00310"/>00310 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00311"/>00311 
<anchor xml:id="__element_crusher_8cs_source_1l00312"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">00312</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useWorldBounds;
<anchor xml:id="__element_crusher_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__element_crusher_8cs_source_1l00315"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a40e3d9976145920b69cff2857919a02d">00315</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a40e3d9976145920b69cff2857919a02d">UseWorldBounds</link>
<anchor xml:id="__element_crusher_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;useWorldBounds;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acb8218c3a55b38237989b2503ecd89c0">ApplyWorldCrusherSettings</link>(value,&#32;boundsGroupId);
<anchor xml:id="__element_crusher_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00323"/>00323 
<anchor xml:id="__element_crusher_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[WorldBoundsSelectAttribute]
<anchor xml:id="__element_crusher_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__element_crusher_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__element_crusher_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;boundsGroupId;
<anchor xml:id="__element_crusher_8cs_source_1l00328"/>00328 
<anchor xml:id="__element_crusher_8cs_source_1l00329"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a61657d3c42f7507fababb02fbc007710">00329</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a61657d3c42f7507fababb02fbc007710">BoundsGroupId</link>
<anchor xml:id="__element_crusher_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;boundsGroupId;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acb8218c3a55b38237989b2503ecd89c0">ApplyWorldCrusherSettings</link>(useWorldBounds,&#32;value);
<anchor xml:id="__element_crusher_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00337"/>00337 
<anchor xml:id="__element_crusher_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnWorldBoundsReady()
<anchor xml:id="__element_crusher_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acb8218c3a55b38237989b2503ecd89c0">ApplyWorldCrusherSettings</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00346"/>00346 
<anchor xml:id="__element_crusher_8cs_source_1l00350"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acb8218c3a55b38237989b2503ecd89c0">00350</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acb8218c3a55b38237989b2503ecd89c0">ApplyWorldCrusherSettings</link>()
<anchor xml:id="__element_crusher_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00352"/>00352 
<anchor xml:id="__element_crusher_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(useWorldBounds)
<anchor xml:id="__element_crusher_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00355"/>00355 
<anchor xml:id="__element_crusher_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_utilities_1_1_settings_scriptable_object_1a35749b4253db701bbc1e38a3717b0eab">single</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_utilities_1_1_settings_scriptable_object_1ae0e4165bd3b28a90011b98521cee20c2">OnSingletonReady</link>&#32;-=&#32;OnWorldBoundsReady;
<anchor xml:id="__element_crusher_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_utilities_1_1_settings_scriptable_object_1ae0e4165bd3b28a90011b98521cee20c2">OnSingletonReady</link>&#32;+=&#32;OnWorldBoundsReady;
<anchor xml:id="__element_crusher_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00363"/>00363 
<anchor xml:id="__element_crusher_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_utilities_1_1_settings_scriptable_object_1ae0e4165bd3b28a90011b98521cee20c2">OnSingletonReady</link>&#32;-=&#32;OnWorldBoundsReady;
<anchor xml:id="__element_crusher_8cs_source_1l00365"/>00365 
<anchor xml:id="__element_crusher_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wbgs&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_utilities_1_1_settings_scriptable_object_1a35749b4253db701bbc1e38a3717b0eab">single</link>.worldBoundsGroups;
<anchor xml:id="__element_crusher_8cs_source_1l00367"/>00367 
<anchor xml:id="__element_crusher_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;bounds&#32;group&#32;is&#32;no&#32;longer&#32;valid,&#32;revert&#32;to&#32;default&#32;(0)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boundsGroupId&#32;&gt;=&#32;wbgs.Count)
<anchor xml:id="__element_crusher_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;WorldBoundsGroup&#32;&quot;</emphasis>&#32;+&#32;boundsGroupId&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;no&#32;longer&#32;exists.&#32;Using&#32;Default(0).&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boundsGroupId&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00374"/>00374 
<anchor xml:id="__element_crusher_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wbg&#32;=&#32;wbgs[boundsGroupId];
<anchor xml:id="__element_crusher_8cs_source_1l00376"/>00376 
<anchor xml:id="__element_crusher_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wbg.OnWorldBoundChanged&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wbg.OnWorldBoundChanged&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00379"/>00379 
<anchor xml:id="__element_crusher_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wbgc&#32;=&#32;wbg.crusher;
<anchor xml:id="__element_crusher_8cs_source_1l00381"/>00381 
<anchor xml:id="__element_crusher_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_xcrusher&#32;!=&#32;wbgc._xcrusher)
<anchor xml:id="__element_crusher_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;wbgc.XCrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00384"/>00384 
<anchor xml:id="__element_crusher_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ycrusher&#32;!=&#32;wbgc._ycrusher)
<anchor xml:id="__element_crusher_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;wbgc.YCrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00387"/>00387 
<anchor xml:id="__element_crusher_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_zcrusher&#32;!=&#32;wbgc._zcrusher)
<anchor xml:id="__element_crusher_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;wbgc.ZCrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00390"/>00390 
<anchor xml:id="__element_crusher_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;=&#32;wbgc.local;
<anchor xml:id="__element_crusher_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00393"/>00393 
<anchor xml:id="__element_crusher_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00395"/>00395 
<anchor xml:id="__element_crusher_8cs_source_1l00399"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a44b5baaefdfa6822a13c99a04184954b">00399</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a44b5baaefdfa6822a13c99a04184954b">ApplyWorldCrusherSettings</link>(<emphasis role="keywordtype">bool</emphasis>&#32;newUseBounds,&#32;<emphasis role="keywordtype">int</emphasis>&#32;newBndsGrpId)
<anchor xml:id="__element_crusher_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newUseBounds&#32;!=&#32;useWorldBounds)
<anchor xml:id="__element_crusher_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;useWorldBounds&#32;=&#32;newUseBounds;
<anchor xml:id="__element_crusher_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!useWorldBounds)
<anchor xml:id="__element_crusher_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1af7b7663ad3e917c11621c861c8e097f9">Defaults</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position);
<anchor xml:id="__element_crusher_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00409"/>00409 
<anchor xml:id="__element_crusher_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_utilities_1_1_settings_scriptable_object_1a35749b4253db701bbc1e38a3717b0eab">single</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Not&#32;Ready&#32;to&#32;Change&#32;the&#32;World&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wbgs&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_utilities_1_1_settings_scriptable_object_1a35749b4253db701bbc1e38a3717b0eab">single</link>.worldBoundsGroups;
<anchor xml:id="__element_crusher_8cs_source_1l00416"/>00416 
<anchor xml:id="__element_crusher_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newBndsGrpId&#32;!=&#32;boundsGroupId)
<anchor xml:id="__element_crusher_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;previous&#32;group&#32;still&#32;exists,&#32;be&#32;sure&#32;we&#32;are&#32;no&#32;longer&#32;subscribed&#32;to&#32;its&#32;OnChange&#32;events</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boundsGroupId&#32;&lt;&#32;wbgs.Count)
<anchor xml:id="__element_crusher_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;prvWBG&#32;=&#32;wbgs[boundsGroupId];
<anchor xml:id="__element_crusher_8cs_source_1l00424"/>00424 
<anchor xml:id="__element_crusher_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prvWBG&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prvWBG.OnWorldBoundChanged&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00428"/>00428 
<anchor xml:id="__element_crusher_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;this&#32;is&#32;no&#32;longer&#32;a&#32;existing&#32;worldbounds&#32;layer,&#32;reset&#32;to&#32;default</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newBndsGrpId&#32;&gt;=&#32;wbgs.Count)
<anchor xml:id="__element_crusher_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boundsGroupId&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boundsGroupId&#32;=&#32;newBndsGrpId;
<anchor xml:id="__element_crusher_8cs_source_1l00434"/>00434 
<anchor xml:id="__element_crusher_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newWBG&#32;=&#32;wbgs[boundsGroupId];
<anchor xml:id="__element_crusher_8cs_source_1l00436"/>00436 
<anchor xml:id="__element_crusher_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newWBG&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;useWorldBounds)
<anchor xml:id="__element_crusher_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newWBG.OnWorldBoundChanged&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00440"/>00440 
<anchor xml:id="__element_crusher_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wbgc&#32;=&#32;newWBG.crusher;
<anchor xml:id="__element_crusher_8cs_source_1l00442"/>00442 
<anchor xml:id="__element_crusher_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_xcrusher&#32;!=&#32;wbgc._xcrusher)
<anchor xml:id="__element_crusher_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;wbgc.XCrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00445"/>00445 
<anchor xml:id="__element_crusher_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ycrusher&#32;!=&#32;wbgc._ycrusher)
<anchor xml:id="__element_crusher_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;wbgc.YCrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00448"/>00448 
<anchor xml:id="__element_crusher_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_zcrusher&#32;!=&#32;wbgc._zcrusher)
<anchor xml:id="__element_crusher_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;wbgc.ZCrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00451"/>00451 
<anchor xml:id="__element_crusher_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;=&#32;wbgc.local;
<anchor xml:id="__element_crusher_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00456"/>00456 
<anchor xml:id="__element_crusher_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_world_bounds_group">WorldBoundsGroup</link>&#32;GetUsedWorldBounds()
<anchor xml:id="__element_crusher_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position&#32;&amp;&amp;&#32;useWorldBounds)
<anchor xml:id="__element_crusher_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;this&#32;is&#32;no&#32;longer&#32;a&#32;existing&#32;worldbounds&#32;layer,&#32;reset&#32;to&#32;default</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boundsGroupId&#32;&gt;=&#32;<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_utilities_1_1_settings_scriptable_object_1a6bfeceb8530ef58fbe223dae7c62bde3">Single</link>.worldBoundsGroups.Count)
<anchor xml:id="__element_crusher_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boundsGroupId&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00464"/>00464 
<anchor xml:id="__element_crusher_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wbs&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_utilities_1_1_settings_scriptable_object_1a6bfeceb8530ef58fbe223dae7c62bde3">Single</link>.worldBoundsGroups[boundsGroupId];
<anchor xml:id="__element_crusher_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;wbs;
<anchor xml:id="__element_crusher_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00470"/>00470 
<anchor xml:id="__element_crusher_8cs_source_1l00471"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a16feb4ab2b28272ba8832706c7d2d5b4">00471</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a16feb4ab2b28272ba8832706c7d2d5b4">enableTRSTypeSelector</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00472"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a46fd89eb2324b7f580d61e2d096153ed">00472</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a46fd89eb2324b7f580d61e2d096153ed">enableLocalSelector</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00473"/>00473 
<anchor xml:id="__element_crusher_8cs_source_1l00474"/>00474 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00475"/>00475 
<anchor xml:id="__element_crusher_8cs_source_1l00476"/>00476 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Cached&#32;values</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00477"/>00477 
<anchor xml:id="__element_crusher_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cache&#32;values</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]
<anchor xml:id="__element_crusher_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;cached;
<anchor xml:id="__element_crusher_8cs_source_1l00481"/>00481 
<anchor xml:id="__element_crusher_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;cache_xEnabled,&#32;cache_yEnabled,&#32;cache_zEnabled,&#32;cache_uEnabled,&#32;cache_qEnabled;
<anchor xml:id="__element_crusher_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;cache_isUniformScale;
<anchor xml:id="__element_crusher_8cs_source_1l00484"/>00484 
<anchor xml:id="__element_crusher_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;cache_xBits&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[4];
<anchor xml:id="__element_crusher_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;cache_yBits&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[4];
<anchor xml:id="__element_crusher_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;cache_zBits&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[4];
<anchor xml:id="__element_crusher_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;cache_uBits&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[4];
<anchor xml:id="__element_crusher_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;cache_TotalBits&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[4];
<anchor xml:id="__element_crusher_8cs_source_1l00490"/>00490 
<anchor xml:id="__element_crusher_8cs_source_1l00491"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">00491</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ReadOnlyCollection&lt;int&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">Cached_TotalBits</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00492"/>00492 
<anchor xml:id="__element_crusher_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;cache_qBits;
<anchor xml:id="__element_crusher_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;cache_mustCorrectRotationX;
<anchor xml:id="__element_crusher_8cs_source_1l00495"/>00495 
<anchor xml:id="__element_crusher_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;ReadOnlyCollection&lt;int&gt;&#32;Cached_TotalBits&#32;{&#32;get&#32;{&#32;return&#32;Array.AsReadOnly(cache_TotalBits);&#32;}&#32;}</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00497"/>00497 
<anchor xml:id="__element_crusher_8cs_source_1l00498"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">00498</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad85de9040535aecb1777e788a7e1e863">Bounds</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad85de9040535aecb1777e788a7e1e863">Bounds</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00499"/>00499 
<anchor xml:id="__element_crusher_8cs_source_1l00503"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad85de9040535aecb1777e788a7e1e863">00503</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad85de9040535aecb1777e788a7e1e863">Bounds</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad85de9040535aecb1777e788a7e1e863">Bounds</link>
<anchor xml:id="__element_crusher_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>.SetMinMax(
<anchor xml:id="__element_crusher_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_xcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;_xcrusher.Min&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_ycrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;_ycrusher.Min&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_zcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;_zcrusher.Min&#32;:&#32;0),
<anchor xml:id="__element_crusher_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_xcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;_xcrusher.Max&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_ycrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;_ycrusher.Max&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_zcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;_zcrusher.Max&#32;:&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l00517"/>00517 
<anchor xml:id="__element_crusher_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4d2d43f765c50264d431f3691ba7c8b2">bounds</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00520"/>00520 
<anchor xml:id="__element_crusher_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_xcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_xcrusher.SetRange(value.min.x,&#32;value.max.x);
<anchor xml:id="__element_crusher_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ycrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ycrusher.SetRange(value.min.y,&#32;value.max.y);
<anchor xml:id="__element_crusher_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_zcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_zcrusher.SetRange(value.min.z,&#32;value.max.z);
<anchor xml:id="__element_crusher_8cs_source_1l00529"/>00529 
<anchor xml:id="__element_crusher_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00533"/>00533 
<anchor xml:id="__element_crusher_8cs_source_1l00534"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1add6264a298c31c2073ce4e0a4dfb060f">00534</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1add6264a298c31c2073ce4e0a4dfb060f">OnBeforeSerialize</link>()&#32;{&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00535"/>00535 
<anchor xml:id="__element_crusher_8cs_source_1l00536"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2e91b9be8d0ff9b5af291ee328e3011d">00536</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2e91b9be8d0ff9b5af291ee328e3011d">OnAfterDeserialize</link>()
<anchor xml:id="__element_crusher_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//ApplyWorldCrusherSettings();</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//CacheValues();</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00541"/>00541 
<anchor xml:id="__element_crusher_8cs_source_1l00542"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">00542</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>()
<anchor xml:id="__element_crusher_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acb8218c3a55b38237989b2503ecd89c0">ApplyWorldCrusherSettings</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00545"/>00545 
<anchor xml:id="__element_crusher_8cs_source_1l00546"/>00546 <emphasis role="preprocessor">#if&#32;!UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NullUnusedCrushers();
<anchor xml:id="__element_crusher_8cs_source_1l00548"/>00548 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00549"/>00549 
<anchor xml:id="__element_crusher_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00552"/>00552 
<anchor xml:id="__element_crusher_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_qEnabled&#32;=&#32;(_qcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1a80032db4b352658be26a22e3a0b636cc">Enabled</link>&#32;&amp;&amp;&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1af838bab9b5229d20ee762154c4b28a61">Bits</link>&#32;&gt;&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_qBits&#32;=&#32;(cache_qEnabled)&#32;?&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1af838bab9b5229d20ee762154c4b28a61">Bits</link>&#32;:&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00555"/>00555 
<anchor xml:id="__element_crusher_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_TotalBits[0]&#32;=&#32;cache_qBits;
<anchor xml:id="__element_crusher_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_TotalBits[1]&#32;=&#32;cache_qBits;
<anchor xml:id="__element_crusher_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_TotalBits[2]&#32;=&#32;cache_qBits;
<anchor xml:id="__element_crusher_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_TotalBits[3]&#32;=&#32;cache_qBits;
<anchor xml:id="__element_crusher_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_isUniformScale&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00561"/>00561 
<anchor xml:id="__element_crusher_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_uEnabled&#32;=&#32;(_ucrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;_ucrusher.Enabled;
<anchor xml:id="__element_crusher_8cs_source_1l00566"/>00566 
<anchor xml:id="__element_crusher_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;++i)
<anchor xml:id="__element_crusher_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;(cache_uEnabled)&#32;?&#32;_ucrusher.GetBits((BitCullingLevel)i)&#32;:&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_uBits[i]&#32;=&#32;bits;
<anchor xml:id="__element_crusher_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_TotalBits[i]&#32;=&#32;bits;
<anchor xml:id="__element_crusher_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_isUniformScale&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00575"/>00575 
<anchor xml:id="__element_crusher_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_mustCorrectRotationX&#32;=&#32;_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler&#32;&amp;&amp;&#32;_xcrusher.UseHalfRangeX;
<anchor xml:id="__element_crusher_8cs_source_1l00579"/>00579 
<anchor xml:id="__element_crusher_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;++i)
<anchor xml:id="__element_crusher_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;=&#32;(_xcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;_xcrusher.Enabled;
<anchor xml:id="__element_crusher_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;=&#32;(_ycrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;_ycrusher.Enabled;
<anchor xml:id="__element_crusher_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;=&#32;(_zcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;_zcrusher.Enabled;
<anchor xml:id="__element_crusher_8cs_source_1l00585"/>00585 
<anchor xml:id="__element_crusher_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xBits[i]&#32;=&#32;(cache_xEnabled)&#32;?&#32;_xcrusher.GetBits((BitCullingLevel)i)&#32;:&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yBits[i]&#32;=&#32;(cache_yEnabled)&#32;?&#32;_ycrusher.GetBits((BitCullingLevel)i)&#32;:&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zBits[i]&#32;=&#32;(cache_zEnabled)&#32;?&#32;_zcrusher.GetBits((BitCullingLevel)i)&#32;:&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_TotalBits[i]&#32;=&#32;cache_xBits[i]&#32;+&#32;cache_yBits[i]&#32;+&#32;cache_zBits[i];
<anchor xml:id="__element_crusher_8cs_source_1l00590"/>00590 
<anchor xml:id="__element_crusher_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_isUniformScale&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00594"/>00594 
<anchor xml:id="__element_crusher_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">Cached_TotalBits</link>&#32;=&#32;Array.AsReadOnly(cache_TotalBits);
<anchor xml:id="__element_crusher_8cs_source_1l00596"/>00596 
<anchor xml:id="__element_crusher_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Cached&#32;may&#32;no&#32;longer&#32;be&#32;needed.&#32;Bootstraps&#32;may&#32;now&#32;ensure&#32;it&#32;is&#32;cached&#32;propertly&#32;100%&#32;of&#32;the&#32;time.</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cached&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00599"/>00599 
<anchor xml:id="__element_crusher_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(OnRecalculated&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnRecalculated(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00604"/>00604 
<anchor xml:id="__element_crusher_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;NullUnusedCrushers()
<anchor xml:id="__element_crusher_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">UCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">QCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">QCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">UCrusher</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00631"/>00631 
<anchor xml:id="__element_crusher_8cs_source_1l00635"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a26947daf68e3c24e17293e9825f9e2a9">00635</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a26947daf68e3c24e17293e9825f9e2a9">Enabled</link>
<anchor xml:id="__element_crusher_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1a80032db4b352658be26a22e3a0b636cc">Enabled</link>&#32;&amp;&amp;&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1af838bab9b5229d20ee762154c4b28a61">Bits</link>&#32;&gt;&#32;0);
<anchor xml:id="__element_crusher_8cs_source_1l00641"/>00641 
<anchor xml:id="__element_crusher_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_ucrusher.Enabled;
<anchor xml:id="__element_crusher_8cs_source_1l00644"/>00644 
<anchor xml:id="__element_crusher_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_xcrusher.Enabled&#32;|&#32;_ycrusher.Enabled&#32;|&#32;_zcrusher.Enabled;
<anchor xml:id="__element_crusher_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1a80032db4b352658be26a22e3a0b636cc">Enabled</link>&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00651"/>00651 
<anchor xml:id="__element_crusher_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ucrusher.Enabled&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00654"/>00654 
<anchor xml:id="__element_crusher_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_xcrusher.Enabled&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ycrusher.Enabled&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_zcrusher.Enabled&#32;=&#32;value;
<anchor xml:id="__element_crusher_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//CacheValues();</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00661"/>00661 
<anchor xml:id="__element_crusher_8cs_source_1l00662"/>00662 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00663"/>00663 
<anchor xml:id="__element_crusher_8cs_source_1l00664"/>00664 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Indexer</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00665"/>00665 
<anchor xml:id="__element_crusher_8cs_source_1l00671"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa6bf3e2fcae0103c9284f55d81855397">00671</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FloatCrusher&#32;<emphasis role="keyword">this</emphasis>[<emphasis role="keywordtype">int</emphasis>&#32;axis]
<anchor xml:id="__element_crusher_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(axis)
<anchor xml:id="__element_crusher_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="__element_crusher_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_xcrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__element_crusher_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_ycrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
<anchor xml:id="__element_crusher_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_zcrusher;
<anchor xml:id="__element_crusher_8cs_source_1l00683"/>00683 
<anchor xml:id="__element_crusher_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;AXIS&#32;&quot;</emphasis>&#32;+&#32;axis&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;should&#32;not&#32;be&#32;calling&#32;happening&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00690"/>00690 
<anchor xml:id="__element_crusher_8cs_source_1l00691"/>00691 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00692"/>00692 
<anchor xml:id="__element_crusher_8cs_source_1l00693"/>00693 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Constructors</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00694"/>00694 
<anchor xml:id="__element_crusher_8cs_source_1l00695"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">00695</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>()
<anchor xml:id="__element_crusher_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1af7b7663ad3e917c11621c861c8e097f9">Defaults</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Generic);
<anchor xml:id="__element_crusher_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00699"/>00699 
<anchor xml:id="__element_crusher_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a42fa4f4b0f74d13c5863800cda111d20">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a512c0bc4e81a1a0c77b28bcec88b3031">StaticTRSType</link>&#32;staticTrsType)
<anchor xml:id="__element_crusher_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_trsType&#32;=&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)staticTrsType;
<anchor xml:id="__element_crusher_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00709"/>00709 
<anchor xml:id="__element_crusher_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructor</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00711"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2a27ead926d41b810aca2e470b53da64">00711</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2a27ead926d41b810aca2e470b53da64">ElementCrusher</link>(<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a16feb4ab2b28272ba8832706c7d2d5b4">enableTRSTypeSelector</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._trsType&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Generic;
<anchor xml:id="__element_crusher_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1af7b7663ad3e917c11621c861c8e097f9">Defaults</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Generic);
<anchor xml:id="__element_crusher_8cs_source_1l00715"/>00715 
<anchor xml:id="__element_crusher_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.enableTRSTypeSelector&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a16feb4ab2b28272ba8832706c7d2d5b4">enableTRSTypeSelector</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00718"/>00718 
<anchor xml:id="__element_crusher_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constructor</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00720"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa6c181095a391ad633c73487ad884d7d">00720</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa6c181095a391ad633c73487ad884d7d">ElementCrusher</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;trsType,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a16feb4ab2b28272ba8832706c7d2d5b4">enableTRSTypeSelector</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._trsType&#32;=&#32;trsType;
<anchor xml:id="__element_crusher_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1af7b7663ad3e917c11621c861c8e097f9">Defaults</link>(trsType);
<anchor xml:id="__element_crusher_8cs_source_1l00724"/>00724 
<anchor xml:id="__element_crusher_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.enableTRSTypeSelector&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a16feb4ab2b28272ba8832706c7d2d5b4">enableTRSTypeSelector</link>;
<anchor xml:id="__element_crusher_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00727"/>00727 
<anchor xml:id="__element_crusher_8cs_source_1l00728"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1af7b7663ad3e917c11621c861c8e097f9">00728</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1af7b7663ad3e917c11621c861c8e097f9">Defaults</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;trs)
<anchor xml:id="__element_crusher_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trs&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion&#32;||&#32;trs&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler)
<anchor xml:id="__element_crusher_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits10,&#32;-90f,&#32;90f,&#32;Axis.X,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits12,&#32;-180f,&#32;180f,&#32;Axis.Y,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits10,&#32;-180f,&#32;180f,&#32;Axis.Z,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//ucrusher&#32;=&#32;new&#32;FloatCrusher(Axis.Uniform,&#32;TRSType.Scale,&#32;true);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa1b5a75602f5298e9149d5dd0cbad1fb">QCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_quat_crusher">QuatCrusher</link>(<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trs&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale)
<anchor xml:id="__element_crusher_8cs_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits12,&#32;0f,&#32;2f,&#32;Axis.X,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits10,&#32;0f,&#32;2f,&#32;Axis.Y,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits10,&#32;0f,&#32;2f,&#32;Axis.Z,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3dc27067413240f9350657cc5f7f5375">UCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits10,&#32;0f,&#32;2f,&#32;Axis.Uniform,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a11ff41fd302a8e6711cae98aa812677c">XCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits12,&#32;-20f,&#32;20f,&#32;Axis.X,&#32;trs,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a59bd551161a338460ed1a6f95ca5d9b8">YCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits10,&#32;-5f,&#32;5f,&#32;Axis.Y,&#32;trs,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a143f4f6f038318652384a3f36cde0517">ZCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits10,&#32;-5f,&#32;5f,&#32;Axis.Z,&#32;trs,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00750"/>00750 
<anchor xml:id="__element_crusher_8cs_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00753"/>00753 
<anchor xml:id="__element_crusher_8cs_source_1l00754"/>00754 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00755"/>00755 
<anchor xml:id="__element_crusher_8cs_source_1l00756"/>00756 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Byte[]&#32;Writers</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00757"/>00757 
<anchor xml:id="__element_crusher_8cs_source_1l00758"/>00758 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TryingToWriteQuatAsEulerError()
<anchor xml:id="__element_crusher_8cs_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;You&#32;seem&#32;to&#32;be&#32;trying&#32;to&#32;compress&#32;a&#32;Quaternion&#32;with&#32;a&#32;crusher&#32;that&#32;is&#32;set&#32;up&#32;for&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__element_crusher_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Enum.GetName(typeof(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>),&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00765"/>00765 
<anchor xml:id="__element_crusher_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TryingToCrushTransformUsingGenericWarning()
<anchor xml:id="__element_crusher_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;You&#32;are&#32;sending&#32;a&#32;transform&#32;to&#32;be&#32;crushed,&#32;but&#32;the&#32;Element&#32;Type&#32;is&#32;Generic&#32;-&#32;did&#32;you&#32;want&#32;Position?&#32;Ideally&#32;change&#32;the&#32;crusher&#32;from&#32;Generic&#32;to&#32;the&#32;correct&#32;TRS.&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00770"/>00770 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00771"/>00771 
<anchor xml:id="__element_crusher_8cs_source_1l00775"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">00775</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Transform&#32;trans,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00777"/>00777 
<anchor xml:id="__element_crusher_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)
<anchor xml:id="__element_crusher_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00780"/>00780 
<anchor xml:id="__element_crusher_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00784"/>00784 
<anchor xml:id="__element_crusher_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localEulerAngles&#32;:&#32;trans.eulerAngles,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00788"/>00788 
<anchor xml:id="__element_crusher_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localRotation&#32;:&#32;trans.rotation,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00792"/>00792 
<anchor xml:id="__element_crusher_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale:
<anchor xml:id="__element_crusher_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;trans.localScale,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00796"/>00796 
<anchor xml:id="__element_crusher_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l00798"/>00798 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToCrushTransformUsingGenericWarning();
<anchor xml:id="__element_crusher_8cs_source_1l00800"/>00800 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__element_crusher_8cs_source_1l00806"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a678ad5aed484fbab3bf0c7c8ac2b7642">00806</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a678ad5aed484fbab3bf0c7c8ac2b7642">Write</link>(Transform&#32;trans,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)
<anchor xml:id="__element_crusher_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00812"/>00812 
<anchor xml:id="__element_crusher_8cs_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localEulerAngles&#32;:&#32;trans.eulerAngles,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00815"/>00815 
<anchor xml:id="__element_crusher_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localRotation&#32;:&#32;trans.rotation,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00818"/>00818 
<anchor xml:id="__element_crusher_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale:
<anchor xml:id="__element_crusher_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(trans.localScale,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00821"/>00821 
<anchor xml:id="__element_crusher_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l00823"/>00823 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToCrushTransformUsingGenericWarning();
<anchor xml:id="__element_crusher_8cs_source_1l00825"/>00825 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00829"/>00829 
<anchor xml:id="__element_crusher_8cs_source_1l00833"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2eebca251f974f19e3bab3c24fce6abd">00833</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2eebca251f974f19e3bab3c24fce6abd">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00837"/>00837 
<anchor xml:id="__element_crusher_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>((ulong)ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ucrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0)&#32;_xcrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0)&#32;_ycrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0)&#32;_zcrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00853"/>00853 
<anchor xml:id="__element_crusher_8cs_source_1l00857"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a88718f7fe426e7c695db0657b835f5b4">00857</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a88718f7fe426e7c695db0657b835f5b4">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00861"/>00861 
<anchor xml:id="__element_crusher_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>((ulong)ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ucrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0)&#32;_xcrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0)&#32;_ycrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0)&#32;_zcrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00877"/>00877 
<anchor xml:id="__element_crusher_8cs_source_1l00881"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aff8af2efc2a801242178841133863312">00881</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aff8af2efc2a801242178841133863312">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00885"/>00885 
<anchor xml:id="__element_crusher_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>((ulong)ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ucrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0)&#32;_xcrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0)&#32;_ycrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0)&#32;_zcrusher.Write(ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00901"/>00901 
<anchor xml:id="__element_crusher_8cs_source_1l00902"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1abbd92e3c80fa15da1ffc4cbfc5ad1f4b">00902</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1abbd92e3c80fa15da1ffc4cbfc5ad1f4b">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Vector3&#32;v3,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;v3,&#32;bytes,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__element_crusher_8cs_source_1l00908"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab9bf4fd57f0f10de3a63d12f7d3a032e">00908</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab9bf4fd57f0f10de3a63d12f7d3a032e">Write</link>(Vector3&#32;v3,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(v3,&#32;bytes,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00913"/>00913 
<anchor xml:id="__element_crusher_8cs_source_1l00922"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a49cc21beff7cd120f3e3a104092b5ad3">00922</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a49cc21beff7cd120f3e3a104092b5ad3">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Vector3&#32;v3,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00926"/>00926 
<anchor xml:id="__element_crusher_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;c&#32;=&#32;_ucrusher.Write(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.YZ&#32;?&#32;v3.y&#32;:&#32;v3.x,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(uint)c.cvalue);
<anchor xml:id="__element_crusher_8cs_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00932"/>00932 
<anchor xml:id="__element_crusher_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;c&#32;=&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>(Quaternion.Euler(v3),&#32;bytes,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;c);
<anchor xml:id="__element_crusher_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_mustCorrectRotationX)
<anchor xml:id="__element_crusher_8cs_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v3&#32;=&#32;FloatCrusherUtilities.GetXCorrectedEuler(v3);
<anchor xml:id="__element_crusher_8cs_source_1l00942"/>00942 
<anchor xml:id="__element_crusher_8cs_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(
<anchor xml:id="__element_crusher_8cs_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>,
<anchor xml:id="__element_crusher_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;?&#32;_xcrusher.Write(v3.x,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(),
<anchor xml:id="__element_crusher_8cs_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;?&#32;_ycrusher.Write(v3.y,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(),
<anchor xml:id="__element_crusher_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;?&#32;_zcrusher.Write(v3.z,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00949"/>00949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__element_crusher_8cs_source_1l00951"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dd96be225faa4357d7d4ccf53a18030">00951</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dd96be225faa4357d7d4ccf53a18030">Write</link>(Vector3&#32;v3,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00955"/>00955 
<anchor xml:id="__element_crusher_8cs_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedValue&#32;c&#32;=&#32;_ucrusher.Write(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.YZ&#32;?&#32;v3.y&#32;:&#32;v3.x,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>(<emphasis role="keyword">this</emphasis>,&#32;(uint)c.cvalue);
<anchor xml:id="__element_crusher_8cs_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00961"/>00961 
<anchor xml:id="__element_crusher_8cs_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;c&#32;=&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>(Quaternion.Euler(v3),&#32;bytes,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>(<emphasis role="keyword">this</emphasis>,&#32;c);
<anchor xml:id="__element_crusher_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00967"/>00967 
<anchor xml:id="__element_crusher_8cs_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_mustCorrectRotationX)
<anchor xml:id="__element_crusher_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v3&#32;=&#32;FloatCrusherUtilities.GetXCorrectedEuler(v3);
<anchor xml:id="__element_crusher_8cs_source_1l00970"/>00970 
<anchor xml:id="__element_crusher_8cs_source_1l00971"/>00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>(
<anchor xml:id="__element_crusher_8cs_source_1l00972"/>00972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>,
<anchor xml:id="__element_crusher_8cs_source_1l00973"/>00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;?&#32;(uint)_xcrusher.Write(v3.x,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l00974"/>00974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;?&#32;(uint)_ycrusher.Write(v3.y,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l00975"/>00975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;?&#32;(uint)_zcrusher.Write(v3.z,&#32;bytes,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;0);
<anchor xml:id="__element_crusher_8cs_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00977"/>00977 
<anchor xml:id="__element_crusher_8cs_source_1l00978"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5b0eea27c1bd69d24cf33ed38beaca5b">00978</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5b0eea27c1bd69d24cf33ed38beaca5b">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Quaternion&#32;quat,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00982"/>00982 
<anchor xml:id="__element_crusher_8cs_source_1l00983"/>00983 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToWriteQuatAsEulerError();
<anchor xml:id="__element_crusher_8cs_source_1l00985"/>00985 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00986"/>00986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>(quat,&#32;bytes,&#32;ref&#32;bitposition));
<anchor xml:id="__element_crusher_8cs_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete()]
<anchor xml:id="__element_crusher_8cs_source_1l00989"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6bfe637703dc98e6004c04ecce49c583">00989</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6bfe637703dc98e6004c04ecce49c583">Write</link>(Quaternion&#32;quat,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l00993"/>00993 
<anchor xml:id="__element_crusher_8cs_source_1l00994"/>00994 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToWriteQuatAsEulerError();
<anchor xml:id="__element_crusher_8cs_source_1l00996"/>00996 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>(<emphasis role="keyword">this</emphasis>,&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>(quat,&#32;bytes,&#32;ref&#32;bitposition));
<anchor xml:id="__element_crusher_8cs_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l00999"/>00999 
<anchor xml:id="__element_crusher_8cs_source_1l01000"/>01000 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01001"/>01001 
<anchor xml:id="__element_crusher_8cs_source_1l01002"/>01002 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ulong[]&#32;Writers</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01003"/>01003 
<anchor xml:id="__element_crusher_8cs_source_1l01004"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6d9e81ad9d6f7167323c0a64848a4548">01004</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6d9e81ad9d6f7167323c0a64848a4548">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Transform&#32;trans,&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)
<anchor xml:id="__element_crusher_8cs_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l01009"/>01009 
<anchor xml:id="__element_crusher_8cs_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01011"/>01011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01012"/>01012 
<anchor xml:id="__element_crusher_8cs_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localEulerAngles&#32;:&#32;trans.eulerAngles,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01015"/>01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01016"/>01016 
<anchor xml:id="__element_crusher_8cs_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l01018"/>01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localRotation&#32;:&#32;trans.rotation,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01020"/>01020 
<anchor xml:id="__element_crusher_8cs_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale:
<anchor xml:id="__element_crusher_8cs_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;trans.localScale,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01023"/>01023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01024"/>01024 
<anchor xml:id="__element_crusher_8cs_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l01026"/>01026 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;You&#32;are&#32;sending&#32;a&#32;transform&#32;to&#32;be&#32;crushed,&#32;but&#32;the&#32;Element&#32;Type&#32;is&#32;Generic&#32;-&#32;did&#32;you&#32;want&#32;Position?&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l01028"/>01028 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01033"/>01033 
<anchor xml:id="__element_crusher_8cs_source_1l01034"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aedf0657b9f09fbc633cc96c5f29df677">01034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aedf0657b9f09fbc633cc96c5f29df677">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Vector3&#32;v3,&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01036"/>01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01037"/>01037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01038"/>01038 
<anchor xml:id="__element_crusher_8cs_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;c&#32;=&#32;_ucrusher.Write(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.YZ&#32;?&#32;v3.y&#32;:&#32;v3.x,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(uint)c.cvalue);
<anchor xml:id="__element_crusher_8cs_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01044"/>01044 
<anchor xml:id="__element_crusher_8cs_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;c&#32;=&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>(Quaternion.Euler(v3),&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;c);
<anchor xml:id="__element_crusher_8cs_source_1l01049"/>01049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_mustCorrectRotationX)
<anchor xml:id="__element_crusher_8cs_source_1l01053"/>01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v3&#32;=&#32;FloatCrusherUtilities.GetXCorrectedEuler(v3);
<anchor xml:id="__element_crusher_8cs_source_1l01054"/>01054 
<anchor xml:id="__element_crusher_8cs_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(
<anchor xml:id="__element_crusher_8cs_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>,
<anchor xml:id="__element_crusher_8cs_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;?&#32;_xcrusher.Write(v3.x,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(),
<anchor xml:id="__element_crusher_8cs_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;?&#32;_ycrusher.Write(v3.y,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(),
<anchor xml:id="__element_crusher_8cs_source_1l01059"/>01059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;?&#32;_zcrusher.Write(v3.z,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01062"/>01062 
<anchor xml:id="__element_crusher_8cs_source_1l01063"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa7315aa40e9fd79451a1fc01c0c57263">01063</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa7315aa40e9fd79451a1fc01c0c57263">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Quaternion&#32;quat,&#32;ulong[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01064"/>01064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01065"/>01065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01066"/>01066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01067"/>01067 
<anchor xml:id="__element_crusher_8cs_source_1l01068"/>01068 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;You&#32;seem&#32;to&#32;be&#32;trying&#32;to&#32;compress&#32;a&#32;Quaternion&#32;with&#32;a&#32;crusher&#32;that&#32;is&#32;set&#32;up&#32;for&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__element_crusher_8cs_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Enum.GetName(typeof(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>),&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l01072"/>01072 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>(quat,&#32;bytes,&#32;ref&#32;bitposition));
<anchor xml:id="__element_crusher_8cs_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01075"/>01075 
<anchor xml:id="__element_crusher_8cs_source_1l01076"/>01076 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01077"/>01077 
<anchor xml:id="__element_crusher_8cs_source_1l01078"/>01078 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;byte[]&#32;Readers</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01079"/>01079 
<anchor xml:id="__element_crusher_8cs_source_1l01083"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">01083</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01085"/>01085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc,&#32;bytes,&#32;ref&#32;bitposition,&#32;ia,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01088"/>01088 
<anchor xml:id="__element_crusher_8cs_source_1l01093"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae4a2539d3a206bd502440dfd6dcffc61">01093</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae4a2539d3a206bd502440dfd6dcffc61">Read</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01094"/>01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01095"/>01095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;ia,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01097"/>01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>;
<anchor xml:id="__element_crusher_8cs_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01099"/>01099 
<anchor xml:id="__element_crusher_8cs_source_1l01103"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a511afbbf43f1cc9c37fc853b541e9e4d">01103</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a511afbbf43f1cc9c37fc853b541e9e4d">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01104"/>01104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01105"/>01105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01106"/>01106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01107"/>01107 
<anchor xml:id="__element_crusher_8cs_source_1l01108"/>01108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(ulong)bytes.Read(ref&#32;bitposition,&#32;cache_qBits));
<anchor xml:id="__element_crusher_8cs_source_1l01111"/>01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01112"/>01112 
<anchor xml:id="__element_crusher_8cs_source_1l01113"/>01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l01114"/>01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01115"/>01115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(uint)bytes.Read(ref&#32;bitposition,&#32;cache_uBits[(<emphasis role="keywordtype">int</emphasis>)bcl]));
<anchor xml:id="__element_crusher_8cs_source_1l01116"/>01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01117"/>01117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01118"/>01118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01119"/>01119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cx,&#32;cy,&#32;cz;
<anchor xml:id="__element_crusher_8cs_source_1l01120"/>01120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ia&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.X)&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01122"/>01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xbits&#32;=&#32;cache_xBits[(int)bcl];
<anchor xml:id="__element_crusher_8cs_source_1l01123"/>01123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cx&#32;=&#32;cache_xEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_xcrusher,&#32;(uint)bytes.Read(ref&#32;bitposition,&#32;xbits))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01124"/>01124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01125"/>01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;cx&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01126"/>01126 
<anchor xml:id="__element_crusher_8cs_source_1l01127"/>01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ia&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.Y)&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01129"/>01129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ybits&#32;=&#32;cache_yBits[(int)bcl];
<anchor xml:id="__element_crusher_8cs_source_1l01130"/>01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cy&#32;=&#32;cache_yEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_ycrusher,&#32;(uint)bytes.Read(ref&#32;bitposition,&#32;ybits))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01131"/>01131 
<anchor xml:id="__element_crusher_8cs_source_1l01132"/>01132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01133"/>01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;cy&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01134"/>01134 
<anchor xml:id="__element_crusher_8cs_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ia&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.Z)&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zbits&#32;=&#32;cache_zBits[(int)bcl];
<anchor xml:id="__element_crusher_8cs_source_1l01138"/>01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cz&#32;=&#32;cache_zEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_zcrusher,&#32;(uint)bytes.Read(ref&#32;bitposition,&#32;zbits))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;cz&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01141"/>01141 
<anchor xml:id="__element_crusher_8cs_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;cx,&#32;cy,&#32;cz);
<anchor xml:id="__element_crusher_8cs_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01144"/>01144 
<anchor xml:id="__element_crusher_8cs_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01146"/>01146 
<anchor xml:id="__element_crusher_8cs_source_1l01152"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a54d7e978c700ae9a77c5b3b825ab6798">01152</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a54d7e978c700ae9a77c5b3b825ab6798">Read</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>,&#32;bytes,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>;
<anchor xml:id="__element_crusher_8cs_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01157"/>01157 
<anchor xml:id="__element_crusher_8cs_source_1l01161"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a76caac25f69dc2446bc7c9769fd56321">01161</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a76caac25f69dc2446bc7c9769fd56321">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01163"/>01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01164"/>01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01165"/>01165 
<anchor xml:id="__element_crusher_8cs_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01167"/>01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(ulong)buffer.Read(ref&#32;bitposition,&#32;cache_qBits));
<anchor xml:id="__element_crusher_8cs_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01170"/>01170 
<anchor xml:id="__element_crusher_8cs_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l01172"/>01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;cache_uBits[(<emphasis role="keywordtype">int</emphasis>)bcl]));
<anchor xml:id="__element_crusher_8cs_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01177"/>01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cx,&#32;cy,&#32;cz;
<anchor xml:id="__element_crusher_8cs_source_1l01178"/>01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ia&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.X)&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l01179"/>01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xbits&#32;=&#32;cache_xBits[(int)bcl];
<anchor xml:id="__element_crusher_8cs_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cx&#32;=&#32;cache_xEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_xcrusher,&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;xbits))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;cx&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01184"/>01184 
<anchor xml:id="__element_crusher_8cs_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ia&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.Y)&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ybits&#32;=&#32;cache_yBits[(int)bcl];
<anchor xml:id="__element_crusher_8cs_source_1l01188"/>01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cy&#32;=&#32;cache_yEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_ycrusher,&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;ybits))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01189"/>01189 
<anchor xml:id="__element_crusher_8cs_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;cy&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01192"/>01192 
<anchor xml:id="__element_crusher_8cs_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ia&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.Z)&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zbits&#32;=&#32;cache_zBits[(int)bcl];
<anchor xml:id="__element_crusher_8cs_source_1l01196"/>01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cz&#32;=&#32;cache_zEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_zcrusher,&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;zbits))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;cz&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01199"/>01199 
<anchor xml:id="__element_crusher_8cs_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;cx,&#32;cy,&#32;cz);
<anchor xml:id="__element_crusher_8cs_source_1l01201"/>01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01202"/>01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01203"/>01203 
<anchor xml:id="__element_crusher_8cs_source_1l01207"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1d118cc7cfd57152d248a61d33749cfc">01207</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1d118cc7cfd57152d248a61d33749cfc">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01211"/>01211 
<anchor xml:id="__element_crusher_8cs_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01213"/>01213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(ulong)buffer.Read(ref&#32;bitposition,&#32;cache_qBits));
<anchor xml:id="__element_crusher_8cs_source_1l01215"/>01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01216"/>01216 
<anchor xml:id="__element_crusher_8cs_source_1l01217"/>01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l01218"/>01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01219"/>01219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;cache_uBits[(<emphasis role="keywordtype">int</emphasis>)bcl]));
<anchor xml:id="__element_crusher_8cs_source_1l01220"/>01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01221"/>01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01222"/>01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01223"/>01223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cx,&#32;cy,&#32;cz;
<anchor xml:id="__element_crusher_8cs_source_1l01224"/>01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ia&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.X)&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l01225"/>01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xbits&#32;=&#32;cache_xBits[(int)bcl];
<anchor xml:id="__element_crusher_8cs_source_1l01227"/>01227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cx&#32;=&#32;cache_xEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_xcrusher,&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;xbits))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01228"/>01228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01229"/>01229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;cx&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01230"/>01230 
<anchor xml:id="__element_crusher_8cs_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ia&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.Y)&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ybits&#32;=&#32;cache_yBits[(int)bcl];
<anchor xml:id="__element_crusher_8cs_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cy&#32;=&#32;cache_yEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_ycrusher,&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;ybits))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01235"/>01235 
<anchor xml:id="__element_crusher_8cs_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01237"/>01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;cy&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01238"/>01238 
<anchor xml:id="__element_crusher_8cs_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ia&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.Z)&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zbits&#32;=&#32;cache_zBits[(int)bcl];
<anchor xml:id="__element_crusher_8cs_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cz&#32;=&#32;cache_zEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_zcrusher,&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;zbits))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01244"/>01244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;cz&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01245"/>01245 
<anchor xml:id="__element_crusher_8cs_source_1l01246"/>01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;cx,&#32;cy,&#32;cz);
<anchor xml:id="__element_crusher_8cs_source_1l01247"/>01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01249"/>01249 
<anchor xml:id="__element_crusher_8cs_source_1l01250"/>01250 
<anchor xml:id="__element_crusher_8cs_source_1l01251"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a967255419d4ccd193621921d60937c70">01251</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a967255419d4ccd193621921d60937c70">ReadAndDecompress</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01253"/>01253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(reusableCE,&#32;bytes,&#32;ref&#32;bitposition,&#32;ia,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(reusableCE);
<anchor xml:id="__element_crusher_8cs_source_1l01255"/>01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01256"/>01256 
<anchor xml:id="__element_crusher_8cs_source_1l01257"/>01257 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01258"/>01258 
<anchor xml:id="__element_crusher_8cs_source_1l01259"/>01259 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ULong&#32;Buffer&#32;Writers</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01260"/>01260 
<anchor xml:id="__element_crusher_8cs_source_1l01264"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a9222a62e7130a274db95f53780202dd2">01264</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a9222a62e7130a274db95f53780202dd2">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Transform&#32;trans,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01266"/>01266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)
<anchor xml:id="__element_crusher_8cs_source_1l01267"/>01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01268"/>01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l01269"/>01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01270"/>01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01271"/>01271 
<anchor xml:id="__element_crusher_8cs_source_1l01272"/>01272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l01273"/>01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localEulerAngles&#32;:&#32;trans.eulerAngles,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01274"/>01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01275"/>01275 
<anchor xml:id="__element_crusher_8cs_source_1l01276"/>01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l01277"/>01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localRotation&#32;:&#32;trans.rotation,&#32;ref&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01278"/>01278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01279"/>01279 
<anchor xml:id="__element_crusher_8cs_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale:
<anchor xml:id="__element_crusher_8cs_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;trans.localScale,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01283"/>01283 
<anchor xml:id="__element_crusher_8cs_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l01285"/>01285 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01286"/>01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToCrushTransformUsingGenericWarning();
<anchor xml:id="__element_crusher_8cs_source_1l01287"/>01287 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01288"/>01288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01289"/>01289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01290"/>01290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01291"/>01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01292"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a901b505509eb74c8192d09fdc391897f">01292</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a901b505509eb74c8192d09fdc391897f">Write</link>(Transform&#32;trans,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01293"/>01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01294"/>01294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)
<anchor xml:id="__element_crusher_8cs_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01299"/>01299 
<anchor xml:id="__element_crusher_8cs_source_1l01300"/>01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localEulerAngles&#32;:&#32;trans.eulerAngles,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01302"/>01302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01303"/>01303 
<anchor xml:id="__element_crusher_8cs_source_1l01304"/>01304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l01305"/>01305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localRotation&#32;:&#32;trans.rotation,&#32;ref&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01306"/>01306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01307"/>01307 
<anchor xml:id="__element_crusher_8cs_source_1l01308"/>01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale:
<anchor xml:id="__element_crusher_8cs_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(trans.localScale,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01311"/>01311 
<anchor xml:id="__element_crusher_8cs_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l01313"/>01313 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01314"/>01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToCrushTransformUsingGenericWarning();
<anchor xml:id="__element_crusher_8cs_source_1l01315"/>01315 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01316"/>01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01317"/>01317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01319"/>01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01320"/>01320 
<anchor xml:id="__element_crusher_8cs_source_1l01321"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae65c56d101e089ffe097b6b5c1e44fff">01321</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae65c56d101e089ffe097b6b5c1e44fff">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Vector3&#32;v3,&#32;ref&#32;ulong&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;v3,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01325"/>01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01326"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a481ce6028404e383c433b9c7f62c8fa5">01326</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a481ce6028404e383c433b9c7f62c8fa5">Write</link>(Vector3&#32;v3,&#32;ref&#32;ulong&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01327"/>01327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01328"/>01328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01329"/>01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(v3,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01330"/>01330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01331"/>01331 
<anchor xml:id="__element_crusher_8cs_source_1l01332"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a425bcff183737530a4434f20fa85f5b9">01332</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a425bcff183737530a4434f20fa85f5b9">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Vector3&#32;v3,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01333"/>01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01334"/>01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01336"/>01336 
<anchor xml:id="__element_crusher_8cs_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cx&#32;=&#32;cache_xEnabled&#32;?&#32;_xcrusher.Write(v3.x,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cy&#32;=&#32;cache_yEnabled&#32;?&#32;_ycrusher.Write(v3.y,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01339"/>01339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cz&#32;=&#32;cache_zEnabled&#32;?&#32;_zcrusher.Write(v3.z,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01340"/>01340 
<anchor xml:id="__element_crusher_8cs_source_1l01341"/>01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;cx,&#32;cy,&#32;cz);
<anchor xml:id="__element_crusher_8cs_source_1l01342"/>01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01343"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8c9e1019f56ff0c2439873d49245b474">01343</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8c9e1019f56ff0c2439873d49245b474">Write</link>(Vector3&#32;v3,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01344"/>01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01346"/>01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01347"/>01347 
<anchor xml:id="__element_crusher_8cs_source_1l01348"/>01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_xEnabled)&#32;_xcrusher.Write(v3.x,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_yEnabled)&#32;_ycrusher.Write(v3.y,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01350"/>01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_zEnabled)&#32;_zcrusher.Write(v3.z,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01351"/>01351 
<anchor xml:id="__element_crusher_8cs_source_1l01352"/>01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01353"/>01353 
<anchor xml:id="__element_crusher_8cs_source_1l01354"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a31b7f6613dd12f53febf03458db3cf3f">01354</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a31b7f6613dd12f53febf03458db3cf3f">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Quaternion&#32;quat,&#32;ref&#32;ulong&#32;buffer)
<anchor xml:id="__element_crusher_8cs_source_1l01355"/>01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01356"/>01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01357"/>01357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc,&#32;quat,&#32;ref&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01358"/>01358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01359"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1ace17b5ad24f930fd9770e539aea81d">01359</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1ace17b5ad24f930fd9770e539aea81d">Write</link>(Quaternion&#32;quat,&#32;ref&#32;ulong&#32;buffer)
<anchor xml:id="__element_crusher_8cs_source_1l01360"/>01360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01362"/>01362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(quat,&#32;ref&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01363"/>01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01364"/>01364 
<anchor xml:id="__element_crusher_8cs_source_1l01365"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acd09e8f265fb024acde28669466f3779">01365</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acd09e8f265fb024acde28669466f3779">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Quaternion&#32;quat,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__element_crusher_8cs_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01369"/>01369 
<anchor xml:id="__element_crusher_8cs_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;cq&#32;=&#32;cache_qEnabled&#32;?&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>(quat,&#32;ref&#32;buffer,&#32;ref&#32;bitposition)&#32;:&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01371"/>01371 
<anchor xml:id="__element_crusher_8cs_source_1l01372"/>01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;cq);
<anchor xml:id="__element_crusher_8cs_source_1l01373"/>01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01374"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4dc65a57925e9158ede8f78c24c87a57">01374</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a4dc65a57925e9158ede8f78c24c87a57">Write</link>(Quaternion&#32;quat,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__element_crusher_8cs_source_1l01375"/>01375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01376"/>01376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01377"/>01377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01378"/>01378 
<anchor xml:id="__element_crusher_8cs_source_1l01379"/>01379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad30dbdb7b4ca33272fd75eb129e615ca">Write</link>(quat,&#32;ref&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01380"/>01380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01381"/>01381 
<anchor xml:id="__element_crusher_8cs_source_1l01382"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adfe9c2eb255345ee0024302ebf7f4e06">01382</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adfe9c2eb255345ee0024302ebf7f4e06">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;ref&#32;ulong&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01383"/>01383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01384"/>01384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01385"/>01385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(ce,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01386"/>01386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01387"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a704bb3598d892ab673264cee7eea484b">01387</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a704bb3598d892ab673264cee7eea484b">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01388"/>01388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01389"/>01389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01390"/>01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01391"/>01391 
<anchor xml:id="__element_crusher_8cs_source_1l01392"/>01392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01393"/>01393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>.<link linkend="_struct_photon_1_1_compression_1_1_compressed_quat_1a694bfe7bb7198d8ff22757aacc452b32">cvalue</link>.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;cache_qBits);
<anchor xml:id="__element_crusher_8cs_source_1l01394"/>01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_uEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01395"/>01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>.cvalue.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;cache_uBits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__element_crusher_8cs_source_1l01396"/>01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_xEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01399"/>01399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>.cvalue.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;cache_xBits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__element_crusher_8cs_source_1l01400"/>01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_yEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01401"/>01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>.cvalue.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;cache_yBits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__element_crusher_8cs_source_1l01402"/>01402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_zEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01403"/>01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>.cvalue.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;cache_zBits[(<emphasis role="keywordtype">int</emphasis>)bcl]);
<anchor xml:id="__element_crusher_8cs_source_1l01404"/>01404 
<anchor xml:id="__element_crusher_8cs_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01406"/>01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ce;
<anchor xml:id="__element_crusher_8cs_source_1l01407"/>01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01408"/>01408 
<anchor xml:id="__element_crusher_8cs_source_1l01409"/>01409 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01410"/>01410 
<anchor xml:id="__element_crusher_8cs_source_1l01411"/>01411 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ULong&#32;Buffer&#32;Readers</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01412"/>01412 
<anchor xml:id="__element_crusher_8cs_source_1l01413"/>01413 
<anchor xml:id="__element_crusher_8cs_source_1l01414"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac0a021fd73b978af1d0293d9b86c7b41">01414</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac0a021fd73b978af1d0293d9b86c7b41">Read</link>(ulong&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01415"/>01415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01416"/>01416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01418"/>01418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01419"/>01419 
<anchor xml:id="__element_crusher_8cs_source_1l01420"/>01420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01421"/>01421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;c&#32;=&#32;buffer.Read(ref&#32;bitposition,&#32;cache_qBits);
<anchor xml:id="__element_crusher_8cs_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1a45e94c17b6f19f46b65a407560ce1711">Decompress</link>(c);
<anchor xml:id="__element_crusher_8cs_source_1l01424"/>01424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01425"/>01425 
<anchor xml:id="__element_crusher_8cs_source_1l01426"/>01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l01427"/>01427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01428"/>01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;val&#32;=&#32;_ucrusher.ReadAndDecompress(buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01429"/>01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(val,&#32;val,&#32;val);
<anchor xml:id="__element_crusher_8cs_source_1l01430"/>01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01431"/>01431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01432"/>01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l01434"/>01434 
<anchor xml:id="__element_crusher_8cs_source_1l01435"/>01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;?&#32;_xcrusher.ReadAndDecompress(buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;0f,
<anchor xml:id="__element_crusher_8cs_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;?&#32;_ycrusher.ReadAndDecompress(buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;0f,
<anchor xml:id="__element_crusher_8cs_source_1l01437"/>01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;?&#32;_zcrusher.ReadAndDecompress(buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;0f
<anchor xml:id="__element_crusher_8cs_source_1l01438"/>01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l01439"/>01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01440"/>01440 
<anchor xml:id="__element_crusher_8cs_source_1l01441"/>01441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01442"/>01442 
<anchor xml:id="__element_crusher_8cs_source_1l01451"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aaebda38cfb0f7789c0d28adc6fbaf86e">01451</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aaebda38cfb0f7789c0d28adc6fbaf86e">Read</link>(ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01452"/>01452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01453"/>01453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01454"/>01454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01455"/>01455 
<anchor xml:id="__element_crusher_8cs_source_1l01456"/>01456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01457"/>01457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01458"/>01458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;val&#32;=&#32;buffer.Read(ref&#32;bitposition,&#32;cache_qBits);
<anchor xml:id="__element_crusher_8cs_source_1l01459"/>01459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1a45e94c17b6f19f46b65a407560ce1711">Decompress</link>(val);
<anchor xml:id="__element_crusher_8cs_source_1l01460"/>01460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01461"/>01461 
<anchor xml:id="__element_crusher_8cs_source_1l01462"/>01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;f&#32;=&#32;_ucrusher.ReadAndDecompress(buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01465"/>01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(f,&#32;f,&#32;f);
<anchor xml:id="__element_crusher_8cs_source_1l01466"/>01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01467"/>01467 
<anchor xml:id="__element_crusher_8cs_source_1l01468"/>01468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l01469"/>01469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;?&#32;_xcrusher.ReadAndDecompress(buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;0f,
<anchor xml:id="__element_crusher_8cs_source_1l01470"/>01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;?&#32;_ycrusher.ReadAndDecompress(buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;0f,
<anchor xml:id="__element_crusher_8cs_source_1l01471"/>01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;?&#32;_zcrusher.ReadAndDecompress(buffer,&#32;ref&#32;bitposition,&#32;bcl)&#32;:&#32;0f
<anchor xml:id="__element_crusher_8cs_source_1l01472"/>01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l01473"/>01473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01474"/>01474 
<anchor xml:id="__element_crusher_8cs_source_1l01475"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab150b3e7a07fb698f92227c6f9a61490">01475</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab150b3e7a07fb698f92227c6f9a61490">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;ulong&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01476"/>01476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01477"/>01477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01478"/>01478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01479"/>01479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01480"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad5e998dd413a6ad6363e79d04e19b21b">01480</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad5e998dd413a6ad6363e79d04e19b21b">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01481"/>01481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01482"/>01482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01483"/>01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01484"/>01484 
<anchor xml:id="__element_crusher_8cs_source_1l01485"/>01485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01486"/>01486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01487"/>01487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(ulong)buffer.Read(ref&#32;bitposition,&#32;cache_qBits));
<anchor xml:id="__element_crusher_8cs_source_1l01488"/>01488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01489"/>01489 
<anchor xml:id="__element_crusher_8cs_source_1l01490"/>01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_isUniformScale)
<anchor xml:id="__element_crusher_8cs_source_1l01491"/>01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01492"/>01492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;cache_uBits[(<emphasis role="keywordtype">int</emphasis>)bcl]));
<anchor xml:id="__element_crusher_8cs_source_1l01493"/>01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01494"/>01494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01495"/>01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01496"/>01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cx&#32;=&#32;cache_xEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_xcrusher,&#32;buffer.Read(ref&#32;bitposition,&#32;cache_xBits[(<emphasis role="keywordtype">int</emphasis>)bcl]))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01497"/>01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cy&#32;=&#32;cache_yEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_ycrusher,&#32;buffer.Read(ref&#32;bitposition,&#32;cache_yBits[(<emphasis role="keywordtype">int</emphasis>)bcl]))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01498"/>01498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cz&#32;=&#32;cache_zEnabled&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat(_zcrusher,&#32;buffer.Read(ref&#32;bitposition,&#32;cache_zBits[(<emphasis role="keywordtype">int</emphasis>)bcl]))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat();
<anchor xml:id="__element_crusher_8cs_source_1l01499"/>01499 
<anchor xml:id="__element_crusher_8cs_source_1l01500"/>01500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;cx,&#32;cy,&#32;cz);
<anchor xml:id="__element_crusher_8cs_source_1l01501"/>01501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01502"/>01502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01503"/>01503 
<anchor xml:id="__element_crusher_8cs_source_1l01504"/>01504 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01505"/>01505 
<anchor xml:id="__element_crusher_8cs_source_1l01506"/>01506 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Fragment&#32;Readers</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01507"/>01507 
<anchor xml:id="__element_crusher_8cs_source_1l01508"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a9b439bf7a7830af947a9369e74ac31f7">01508</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong[]&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a9b439bf7a7830af947a9369e74ac31f7">reusableArray64</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ulong[2];
<anchor xml:id="__element_crusher_8cs_source_1l01509"/>01509 
<anchor xml:id="__element_crusher_8cs_source_1l01510"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1003d7ec1aa014dc22114c9475a6e3a1">01510</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1003d7ec1aa014dc22114c9475a6e3a1">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;ulong&#32;frag0,&#32;ulong&#32;frag1&#32;=&#32;0,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01511"/>01511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01512"/>01512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01513"/>01513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01514"/>01514 
<anchor xml:id="__element_crusher_8cs_source_1l01515"/>01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01516"/>01516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a9b439bf7a7830af947a9369e74ac31f7">reusableArray64</link>.Write(frag0,&#32;ref&#32;bitposition,&#32;64);
<anchor xml:id="__element_crusher_8cs_source_1l01517"/>01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a9b439bf7a7830af947a9369e74ac31f7">reusableArray64</link>.Write(frag1,&#32;ref&#32;bitposition,&#32;64);
<anchor xml:id="__element_crusher_8cs_source_1l01518"/>01518 
<anchor xml:id="__element_crusher_8cs_source_1l01519"/>01519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01520"/>01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a9b439bf7a7830af947a9369e74ac31f7">reusableArray64</link>,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01521"/>01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01522"/>01522 
<anchor xml:id="__element_crusher_8cs_source_1l01523"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a0f97e484ba1a597ea1ed6057e0732f28">01523</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a0f97e484ba1a597ea1ed6057e0732f28">Read</link>(ulong&#32;frag0,&#32;ulong&#32;frag1&#32;=&#32;0,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l01524"/>01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01525"/>01525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>,&#32;frag0,&#32;frag1,&#32;bcl);
<anchor xml:id="__element_crusher_8cs_source_1l01526"/>01526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>;
<anchor xml:id="__element_crusher_8cs_source_1l01527"/>01527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01528"/>01528 
<anchor xml:id="__element_crusher_8cs_source_1l01529"/>01529 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01530"/>01530 
<anchor xml:id="__element_crusher_8cs_source_1l01531"/>01531 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Compress</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01532"/>01532 
<anchor xml:id="__element_crusher_8cs_source_1l01533"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">01533</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Transform&#32;trans)
<anchor xml:id="__element_crusher_8cs_source_1l01534"/>01534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01535"/>01535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(_trsType&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;XCrusher.Bits&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;YCrusher.Bits&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;ZCrusher.Bits&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;Cached_TotalBits[0]);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01536"/>01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)
<anchor xml:id="__element_crusher_8cs_source_1l01537"/>01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01538"/>01538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l01539"/>01539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position);
<anchor xml:id="__element_crusher_8cs_source_1l01540"/>01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01541"/>01541 
<anchor xml:id="__element_crusher_8cs_source_1l01542"/>01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l01543"/>01543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localEulerAngles&#32;:&#32;trans.eulerAngles);
<anchor xml:id="__element_crusher_8cs_source_1l01544"/>01544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01545"/>01545 
<anchor xml:id="__element_crusher_8cs_source_1l01546"/>01546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l01547"/>01547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localRotation&#32;:&#32;trans.rotation);
<anchor xml:id="__element_crusher_8cs_source_1l01548"/>01548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01549"/>01549 
<anchor xml:id="__element_crusher_8cs_source_1l01550"/>01550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale:
<anchor xml:id="__element_crusher_8cs_source_1l01551"/>01551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localScale&#32;:&#32;trans.lossyScale);
<anchor xml:id="__element_crusher_8cs_source_1l01552"/>01552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01553"/>01553 
<anchor xml:id="__element_crusher_8cs_source_1l01554"/>01554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l01555"/>01555 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01556"/>01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToCrushTransformUsingGenericWarning();
<anchor xml:id="__element_crusher_8cs_source_1l01557"/>01557 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01558"/>01558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc,&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position);
<anchor xml:id="__element_crusher_8cs_source_1l01559"/>01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01560"/>01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01561"/>01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01562"/>01562 
<anchor xml:id="__element_crusher_8cs_source_1l01563"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a987183ad9162763decc56c5bb92c0d9e">01563</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a987183ad9162763decc56c5bb92c0d9e">Compress</link>(Transform&#32;trans)
<anchor xml:id="__element_crusher_8cs_source_1l01564"/>01564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01565"/>01565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>,&#32;trans);
<anchor xml:id="__element_crusher_8cs_source_1l01566"/>01566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>;
<anchor xml:id="__element_crusher_8cs_source_1l01567"/>01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01568"/>01568 
<anchor xml:id="__element_crusher_8cs_source_1l01573"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">01573</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(Transform&#32;trans,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__element_crusher_8cs_source_1l01574"/>01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01575"/>01575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>)
<anchor xml:id="__element_crusher_8cs_source_1l01576"/>01576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01577"/>01577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l01578"/>01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01579"/>01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01580"/>01580 
<anchor xml:id="__element_crusher_8cs_source_1l01581"/>01581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l01582"/>01582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localEulerAngles&#32;:&#32;trans.eulerAngles,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01583"/>01583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01584"/>01584 
<anchor xml:id="__element_crusher_8cs_source_1l01585"/>01585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l01586"/>01586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localRotation&#32;:&#32;trans.rotation,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01587"/>01587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01588"/>01588 
<anchor xml:id="__element_crusher_8cs_source_1l01589"/>01589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale:
<anchor xml:id="__element_crusher_8cs_source_1l01590"/>01590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localScale&#32;:&#32;trans.lossyScale,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01591"/>01591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01592"/>01592 
<anchor xml:id="__element_crusher_8cs_source_1l01593"/>01593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l01594"/>01594 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01595"/>01595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToCrushTransformUsingGenericWarning();
<anchor xml:id="__element_crusher_8cs_source_1l01596"/>01596 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01597"/>01597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)&#32;?&#32;trans.localPosition&#32;:&#32;trans.position,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01598"/>01598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01599"/>01599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01600"/>01600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01601"/>01601 
<anchor xml:id="__element_crusher_8cs_source_1l01602"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab41e683e6ee8c32db231af48b943fe79">01602</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab41e683e6ee8c32db231af48b943fe79">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e)
<anchor xml:id="__element_crusher_8cs_source_1l01603"/>01603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01604"/>01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01605"/>01605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc,&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>);
<anchor xml:id="__element_crusher_8cs_source_1l01606"/>01606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc,&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>);
<anchor xml:id="__element_crusher_8cs_source_1l01608"/>01608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01609"/>01609 
<anchor xml:id="__element_crusher_8cs_source_1l01615"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2409ab5f96dd6b7bab405db6ff13bdfa">01615</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2409ab5f96dd6b7bab405db6ff13bdfa">Compress</link>(<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e)
<anchor xml:id="__element_crusher_8cs_source_1l01616"/>01616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01617"/>01617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01618"/>01618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>,&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>);
<anchor xml:id="__element_crusher_8cs_source_1l01619"/>01619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01620"/>01620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>,&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>);
<anchor xml:id="__element_crusher_8cs_source_1l01621"/>01621 
<anchor xml:id="__element_crusher_8cs_source_1l01622"/>01622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>;
<anchor xml:id="__element_crusher_8cs_source_1l01623"/>01623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01624"/>01624 
<anchor xml:id="__element_crusher_8cs_source_1l01629"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a02d061462f8dc414b40b7f23859d6fbb">01629</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a02d061462f8dc414b40b7f23859d6fbb">CompressAndWrite</link>(<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__element_crusher_8cs_source_1l01630"/>01630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01631"/>01631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01632"/>01632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01633"/>01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01634"/>01634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__element_crusher_8cs_source_1l01635"/>01635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01636"/>01636 
<anchor xml:id="__element_crusher_8cs_source_1l01637"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3238415350dec503e656f9a331a4ac12">01637</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3238415350dec503e656f9a331a4ac12">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Rigidbody&#32;rb,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l01638"/>01638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01639"/>01639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01640"/>01640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01641"/>01641 
<anchor xml:id="__element_crusher_8cs_source_1l01642"/>01642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(_trsType)
<anchor xml:id="__element_crusher_8cs_source_1l01643"/>01643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01644"/>01644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale:
<anchor xml:id="__element_crusher_8cs_source_1l01645"/>01645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01646"/>01646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;?&#32;rb.transform.localScale&#32;:&#32;rb.transform.lossyScale,&#32;ia);
<anchor xml:id="__element_crusher_8cs_source_1l01647"/>01647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01648"/>01648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01649"/>01649 
<anchor xml:id="__element_crusher_8cs_source_1l01650"/>01650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l01651"/>01651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01652"/>01652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01653"/>01653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;localizedQ;
<anchor xml:id="__element_crusher_8cs_source_1l01654"/>01654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)
<anchor xml:id="__element_crusher_8cs_source_1l01655"/>01655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01656"/>01656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;par&#32;=&#32;rb.transform.parent;
<anchor xml:id="__element_crusher_8cs_source_1l01657"/>01657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localizedQ&#32;=&#32;(par)&#32;?&#32;(Quaternion.Inverse(par.rotation)&#32;*&#32;rb.rotation)&#32;:&#32;rb.rotation;
<anchor xml:id="__element_crusher_8cs_source_1l01658"/>01658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01659"/>01659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01660"/>01660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localizedQ&#32;=&#32;rb.rotation;
<anchor xml:id="__element_crusher_8cs_source_1l01661"/>01661 
<anchor xml:id="__element_crusher_8cs_source_1l01662"/>01662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad1b29f3dc75f02cf15b19ff2e87cfc5b">Compress</link>(localizedQ));
<anchor xml:id="__element_crusher_8cs_source_1l01663"/>01663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01664"/>01664 
<anchor xml:id="__element_crusher_8cs_source_1l01665"/>01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01666"/>01666 
<anchor xml:id="__element_crusher_8cs_source_1l01667"/>01667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l01668"/>01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01669"/>01669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localizedE;
<anchor xml:id="__element_crusher_8cs_source_1l01670"/>01670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)
<anchor xml:id="__element_crusher_8cs_source_1l01671"/>01671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01672"/>01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;par&#32;=&#32;rb.transform.parent;
<anchor xml:id="__element_crusher_8cs_source_1l01673"/>01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localizedE&#32;=&#32;(par)&#32;?&#32;(Quaternion.Inverse(par.rotation)&#32;*&#32;rb.rotation).eulerAngles&#32;:&#32;rb.rotation.eulerAngles;
<anchor xml:id="__element_crusher_8cs_source_1l01674"/>01674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01675"/>01675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01676"/>01676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localizedE&#32;=&#32;rb.rotation.eulerAngles;
<anchor xml:id="__element_crusher_8cs_source_1l01677"/>01677 
<anchor xml:id="__element_crusher_8cs_source_1l01678"/>01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cx&#32;=&#32;(cache_xEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;_xcrusher.Compress(localizedE.x)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01679"/>01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cy&#32;=&#32;(cache_yEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;_ycrusher.Compress(localizedE.y)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01680"/>01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cz&#32;=&#32;(cache_zEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;_zcrusher.Compress(localizedE.z)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01681"/>01681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;cx,&#32;cy,&#32;cz);
<anchor xml:id="__element_crusher_8cs_source_1l01682"/>01682 
<anchor xml:id="__element_crusher_8cs_source_1l01683"/>01683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01684"/>01684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01685"/>01685 
<anchor xml:id="__element_crusher_8cs_source_1l01686"/>01686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l01687"/>01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01688"/>01688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localizedP;
<anchor xml:id="__element_crusher_8cs_source_1l01689"/>01689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)
<anchor xml:id="__element_crusher_8cs_source_1l01690"/>01690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01691"/>01691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;par&#32;=&#32;rb.transform.parent;
<anchor xml:id="__element_crusher_8cs_source_1l01692"/>01692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localizedP&#32;=&#32;(par)&#32;?&#32;par.InverseTransformPoint(rb.position)&#32;:&#32;rb.position;
<anchor xml:id="__element_crusher_8cs_source_1l01693"/>01693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01694"/>01694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01695"/>01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localizedP&#32;=&#32;rb.position;
<anchor xml:id="__element_crusher_8cs_source_1l01696"/>01696 
<anchor xml:id="__element_crusher_8cs_source_1l01697"/>01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cx&#32;=&#32;(cache_xEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;_xcrusher.Compress(localizedP.x)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01698"/>01698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cy&#32;=&#32;(cache_yEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;_ycrusher.Compress(localizedP.y)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01699"/>01699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cz&#32;=&#32;(cache_zEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;_zcrusher.Compress(localizedP.z)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01700"/>01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;cx,&#32;cy,&#32;cz);
<anchor xml:id="__element_crusher_8cs_source_1l01701"/>01701 
<anchor xml:id="__element_crusher_8cs_source_1l01702"/>01702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01703"/>01703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01704"/>01704 
<anchor xml:id="__element_crusher_8cs_source_1l01705"/>01705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l01706"/>01706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01707"/>01707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a30ee71728d9a37e2d3c03709c8c1e208">Clear</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01708"/>01708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01709"/>01709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01710"/>01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01711"/>01711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01712"/>01712 
<anchor xml:id="__element_crusher_8cs_source_1l01713"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a98565be3d84cf5ae2e0ad9f4af3788f1">01713</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a98565be3d84cf5ae2e0ad9f4af3788f1">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Vector3&#32;v,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l01714"/>01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01715"/>01715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01716"/>01716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01717"/>01717 
<anchor xml:id="__element_crusher_8cs_source_1l01718"/>01718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01719"/>01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01720"/>01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;We&#32;shouldn&apos;t&#32;be&#32;seeing&#32;this.&#32;Quats&#32;should&#32;not&#32;be&#32;getting&#32;compressed&#32;from&#32;Eulers!&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l01721"/>01721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01722"/>01722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad1b29f3dc75f02cf15b19ff2e87cfc5b">Compress</link>(Quaternion.Euler(v)));
<anchor xml:id="__element_crusher_8cs_source_1l01723"/>01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01724"/>01724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l01725"/>01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01726"/>01726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_uEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01727"/>01727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;_ucrusher.Compress((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.YZ)&#32;?&#32;v.y&#32;:&#32;v.x));
<anchor xml:id="__element_crusher_8cs_source_1l01728"/>01728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01729"/>01729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01730"/>01730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01731"/>01731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cx&#32;=&#32;(cache_xEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;_xcrusher.Compress(v.x)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01732"/>01732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cy&#32;=&#32;(cache_yEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;_ycrusher.Compress(v.y)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01733"/>01733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompressedFloat&#32;cz&#32;=&#32;(cache_zEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;_zcrusher.Compress(v.z)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;CompressedFloat());
<anchor xml:id="__element_crusher_8cs_source_1l01734"/>01734 
<anchor xml:id="__element_crusher_8cs_source_1l01735"/>01735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;cx,&#32;cy,&#32;cz);
<anchor xml:id="__element_crusher_8cs_source_1l01736"/>01736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01737"/>01737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01738"/>01738 
<anchor xml:id="__element_crusher_8cs_source_1l01739"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1afa060450e07255b946b06b29f6f4d15a">01739</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1afa060450e07255b946b06b29f6f4d15a">Compress</link>(Vector3&#32;v)
<anchor xml:id="__element_crusher_8cs_source_1l01740"/>01740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01741"/>01741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>,&#32;v);
<anchor xml:id="__element_crusher_8cs_source_1l01742"/>01742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>;
<anchor xml:id="__element_crusher_8cs_source_1l01743"/>01743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01744"/>01744 
<anchor xml:id="__element_crusher_8cs_source_1l01749"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab0136a535ddf995663a869387e7a358f">01749</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab0136a535ddf995663a869387e7a358f">CompressAndWrite</link>(Vector3&#32;v,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l01750"/>01750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01751"/>01751 
<anchor xml:id="__element_crusher_8cs_source_1l01752"/>01752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01753"/>01753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01754"/>01754 
<anchor xml:id="__element_crusher_8cs_source_1l01755"/>01755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l01756"/>01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01757"/>01757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(this&#32;+&#32;&quot;&#32;Compress&#32;&lt;b&gt;UNIFORM&lt;/b&gt;&quot;);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01758"/>01758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;cu&#32;=&#32;(cache_uEnabled)&#32;?&#32;_ucrusher.Compress((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.YZ)&#32;?&#32;v.y&#32;:&#32;v.x)&#32;:&#32;(ulong)0;
<anchor xml:id="__element_crusher_8cs_source_1l01759"/>01759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(cu,&#32;ref&#32;bitposition,&#32;cache_uBits[0]);
<anchor xml:id="__element_crusher_8cs_source_1l01760"/>01760 
<anchor xml:id="__element_crusher_8cs_source_1l01761"/>01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01762"/>01762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01763"/>01763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01764"/>01764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;We&#32;shouldn&apos;t&#32;be&#32;seeing&#32;this.&#32;Quats&#32;should&#32;not&#32;be&#32;getting&#32;compressed&#32;from&#32;Eulers!&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l01765"/>01765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01766"/>01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad1b29f3dc75f02cf15b19ff2e87cfc5b">Compress</link>(Quaternion.Euler(v)),&#32;ref&#32;bitposition,&#32;cache_qBits);
<anchor xml:id="__element_crusher_8cs_source_1l01767"/>01767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01768"/>01768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01769"/>01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01770"/>01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//FloatCrusherUtilities.CheckBitCount(xcrusher.GetBits(0)&#32;+&#32;ycrusher.GetBits(0)&#32;+&#32;zcrusher.GetBits(0),&#32;96);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01771"/>01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_xEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01772"/>01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(_xcrusher.Compress(v.x).cvalue,&#32;ref&#32;bitposition,&#32;cache_xBits[0]);
<anchor xml:id="__element_crusher_8cs_source_1l01773"/>01773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_yEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01774"/>01774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(_ycrusher.Compress(v.y).cvalue,&#32;ref&#32;bitposition,&#32;cache_yBits[0]);
<anchor xml:id="__element_crusher_8cs_source_1l01775"/>01775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_zEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01776"/>01776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(_zcrusher.Compress(v.z).cvalue,&#32;ref&#32;bitposition,&#32;cache_zBits[0]);
<anchor xml:id="__element_crusher_8cs_source_1l01777"/>01777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01778"/>01778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01779"/>01779 
<anchor xml:id="__element_crusher_8cs_source_1l01783"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a668fd959ded9e53cea1fa435eac1f0c5">01783</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a668fd959ded9e53cea1fa435eac1f0c5">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;nonalloc,&#32;Quaternion&#32;quat)
<anchor xml:id="__element_crusher_8cs_source_1l01784"/>01784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01785"/>01785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01786"/>01786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01787"/>01787 
<anchor xml:id="__element_crusher_8cs_source_1l01788"/>01788 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01789"/>01789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToWriteQuatAsEulerError();
<anchor xml:id="__element_crusher_8cs_source_1l01790"/>01790 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01791"/>01791 
<anchor xml:id="__element_crusher_8cs_source_1l01792"/>01792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01793"/>01793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a47039a781e1797b1b7252388d289decb">Set</link>(<emphasis role="keyword">this</emphasis>,&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad1b29f3dc75f02cf15b19ff2e87cfc5b">Compress</link>(quat));
<anchor xml:id="__element_crusher_8cs_source_1l01794"/>01794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01795"/>01795 
<anchor xml:id="__element_crusher_8cs_source_1l01796"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a280ec2fbc28a0b380448d97229064d99">01796</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a280ec2fbc28a0b380448d97229064d99">Compress</link>(Quaternion&#32;quat)
<anchor xml:id="__element_crusher_8cs_source_1l01797"/>01797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01798"/>01798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>,&#32;quat);
<anchor xml:id="__element_crusher_8cs_source_1l01799"/>01799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a994b5f8d4c997e04a9183050a033868e">reusable</link>;
<anchor xml:id="__element_crusher_8cs_source_1l01800"/>01800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01801"/>01801 
<anchor xml:id="__element_crusher_8cs_source_1l01806"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a92511f17a5429d6858a2ac29bfd5a4cc">01806</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a92511f17a5429d6858a2ac29bfd5a4cc">CompressAndWrite</link>(Quaternion&#32;quat,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__element_crusher_8cs_source_1l01807"/>01807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01808"/>01808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01809"/>01809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01810"/>01810 
<anchor xml:id="__element_crusher_8cs_source_1l01811"/>01811 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01812"/>01812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryingToWriteQuatAsEulerError();
<anchor xml:id="__element_crusher_8cs_source_1l01813"/>01813 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01814"/>01814 
<anchor xml:id="__element_crusher_8cs_source_1l01815"/>01815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01816"/>01816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1ad1b29f3dc75f02cf15b19ff2e87cfc5b">Compress</link>(quat),&#32;ref&#32;bitposition,&#32;cache_qBits);
<anchor xml:id="__element_crusher_8cs_source_1l01817"/>01817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01818"/>01818 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01819"/>01819 
<anchor xml:id="__element_crusher_8cs_source_1l01820"/>01820 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Decompress</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01821"/>01821 
<anchor xml:id="__element_crusher_8cs_source_1l01825"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">01825</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;compressed)
<anchor xml:id="__element_crusher_8cs_source_1l01826"/>01826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01827"/>01827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01828"/>01828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01829"/>01829 
<anchor xml:id="__element_crusher_8cs_source_1l01830"/>01830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l01831"/>01831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01832"/>01832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;val&#32;=&#32;_ucrusher.Decompress((uint)compressed.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a84aeb1473ee280848687a56bf7b9498e">cUniform</link>);
<anchor xml:id="__element_crusher_8cs_source_1l01833"/>01833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(val,&#32;val,&#32;val);
<anchor xml:id="__element_crusher_8cs_source_1l01834"/>01834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01835"/>01835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01836"/>01836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01837"/>01837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1a45e94c17b6f19f46b65a407560ce1711">Decompress</link>((ulong)compressed.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>);
<anchor xml:id="__element_crusher_8cs_source_1l01838"/>01838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01839"/>01839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01840"/>01840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01841"/>01841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Issue&#32;log&#32;error&#32;for&#32;trying&#32;to&#32;write&#32;more&#32;than&#32;64&#32;bits&#32;to&#32;the&#32;ulong&#32;buffer</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01842"/>01842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//FloatCrusherUtilities.CheckBitCount(cache_TotalBits[0],&#32;64);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01843"/>01843 
<anchor xml:id="__element_crusher_8cs_source_1l01844"/>01844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l01845"/>01845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;?&#32;(_xcrusher.Decompress((uint)compressed.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>))&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l01846"/>01846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;?&#32;(_ycrusher.Decompress((uint)compressed.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>))&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l01847"/>01847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;?&#32;(_zcrusher.Decompress((uint)compressed.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>))&#32;:&#32;0
<anchor xml:id="__element_crusher_8cs_source_1l01848"/>01848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l01849"/>01849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01850"/>01850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01851"/>01851 
<anchor xml:id="__element_crusher_8cs_source_1l01852"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac60a4996bc93504f987b8351619325a1">01852</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac60a4996bc93504f987b8351619325a1">Decompress</link>(ulong&#32;cval,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l01853"/>01853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01854"/>01854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01855"/>01855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01856"/>01856 
<anchor xml:id="__element_crusher_8cs_source_1l01857"/>01857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l01858"/>01858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01859"/>01859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;val&#32;=&#32;_ucrusher.Decompress((uint)cval);
<anchor xml:id="__element_crusher_8cs_source_1l01860"/>01860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(val,&#32;val,&#32;val);
<anchor xml:id="__element_crusher_8cs_source_1l01861"/>01861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01862"/>01862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l01863"/>01863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01864"/>01864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;We&#32;should&#32;not&#32;see&#32;this!&#32;Quats&#32;should&#32;be&#32;getting&#32;called&#32;to&#32;DecompressToQuat&quot;);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01865"/>01865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1a45e94c17b6f19f46b65a407560ce1711">Decompress</link>(cval);
<anchor xml:id="__element_crusher_8cs_source_1l01866"/>01866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01867"/>01867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01868"/>01868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01869"/>01869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Issue&#32;log&#32;error&#32;for&#32;trying&#32;to&#32;write&#32;more&#32;than&#32;64&#32;bits&#32;to&#32;the&#32;ulong&#32;buffer</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01870"/>01870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//FloatCrusherUtilities.CheckBitCount(cache_TotalBits[0],&#32;64);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01871"/>01871 
<anchor xml:id="__element_crusher_8cs_source_1l01872"/>01872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l01873"/>01873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l01874"/>01874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0)&#32;?&#32;(_xcrusher.ReadAndDecompress(cval,&#32;ref&#32;bitposition))&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l01875"/>01875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0)&#32;?&#32;(_ycrusher.ReadAndDecompress(cval,&#32;ref&#32;bitposition))&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l01876"/>01876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0)&#32;?&#32;(_zcrusher.ReadAndDecompress(cval,&#32;ref&#32;bitposition))&#32;:&#32;0
<anchor xml:id="__element_crusher_8cs_source_1l01877"/>01877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l01878"/>01878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01879"/>01879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01880"/>01880 
<anchor xml:id="__element_crusher_8cs_source_1l01881"/>01881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;Quaternion&#32;DecompressToQuat(CompressedElement&#32;compressed)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01882"/>01882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01883"/>01883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(!cached)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01884"/>01884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;CacheValues();</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01885"/>01885 
<anchor xml:id="__element_crusher_8cs_source_1l01886"/>01886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;DebugX.LogError(&quot;You&#32;seem&#32;to&#32;be&#32;trying&#32;to&#32;decompress&#32;a&#32;Quaternion&#32;from&#32;a&#32;crusher&#32;that&#32;is&#32;set&#32;up&#32;for&#32;&quot;&#32;+</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01887"/>01887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;System.Enum.GetName(typeof(TRSType),&#32;TRSType)&#32;+&#32;&quot;.&#32;This&#32;likely&#32;won&apos;t&#32;end&#32;well.&quot;,&#32;TRSType&#32;!=&#32;TRSType.Quaternion,&#32;true);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01888"/>01888 
<anchor xml:id="__element_crusher_8cs_source_1l01889"/>01889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Quaternion&#32;quat&#32;=&#32;qcrusher.Decompress(compressed.cQuat);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01890"/>01890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;quat;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01891"/>01891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01892"/>01892 
<anchor xml:id="__element_crusher_8cs_source_1l01893"/>01893 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01894"/>01894 
<anchor xml:id="__element_crusher_8cs_source_1l01895"/>01895 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Rigidbody&#32;Set/Move</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01896"/>01896 
<anchor xml:id="__element_crusher_8cs_source_1l01903"/>01903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Apply&#32;for&#32;Rigidbody&#32;has&#32;been&#32;replaced&#32;with&#32;Move&#32;and&#32;Set,&#32;to&#32;indicate&#32;usage&#32;of&#32;MovePosition/Rotation&#32;vs&#32;rb.position/rotation.&quot;</emphasis>)]
<anchor xml:id="__element_crusher_8cs_source_1l01904"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">01904</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l01905"/>01905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01906"/>01906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(ce),&#32;ia);
<anchor xml:id="__element_crusher_8cs_source_1l01907"/>01907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01908"/>01908 
<anchor xml:id="__element_crusher_8cs_source_1l01917"/>01917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Apply&#32;for&#32;Rigidbody&#32;has&#32;been&#32;replaced&#32;with&#32;Move&#32;and&#32;Set,&#32;to&#32;indicate&#32;usage&#32;of&#32;MovePosition/Rotation&#32;vs&#32;rb.position/rotation.&quot;</emphasis>)]
<anchor xml:id="__element_crusher_8cs_source_1l01918"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8d1b63ab5556ee674ac873505e09e8ee">01918</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8d1b63ab5556ee674ac873505e09e8ee">Apply</link>(Rigidbody&#32;rb,&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l01919"/>01919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01920"/>01920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l01921"/>01921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l01922"/>01922 
<anchor xml:id="__element_crusher_8cs_source_1l01923"/>01923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(_trsType)
<anchor xml:id="__element_crusher_8cs_source_1l01924"/>01924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01925"/>01925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l01926"/>01926 
<anchor xml:id="__element_crusher_8cs_source_1l01927"/>01927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l01928"/>01928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01929"/>01929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&amp;&#32;rb.transform.parent)
<anchor xml:id="__element_crusher_8cs_source_1l01930"/>01930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01931"/>01931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.transform.localRotation&#32;=&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>;
<anchor xml:id="__element_crusher_8cs_source_1l01932"/>01932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01933"/>01933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01934"/>01934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01935"/>01935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.MoveRotation(e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>);
<anchor xml:id="__element_crusher_8cs_source_1l01936"/>01936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01937"/>01937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01938"/>01938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01939"/>01939 
<anchor xml:id="__element_crusher_8cs_source_1l01940"/>01940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l01941"/>01941 
<anchor xml:id="__element_crusher_8cs_source_1l01942"/>01942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localized&#32;=&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&#32;rb.transform.parent)&#32;?&#32;rb.transform.TransformPoint(e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>)&#32;:&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>;
<anchor xml:id="__element_crusher_8cs_source_1l01943"/>01943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;curr&#32;=&#32;rb.position;
<anchor xml:id="__element_crusher_8cs_source_1l01944"/>01944 
<anchor xml:id="__element_crusher_8cs_source_1l01945"/>01945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.MovePosition(<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l01946"/>01946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;localized.x&#32;:&#32;curr.x,
<anchor xml:id="__element_crusher_8cs_source_1l01947"/>01947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;localized.y&#32;:&#32;curr.y,
<anchor xml:id="__element_crusher_8cs_source_1l01948"/>01948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;localized.z&#32;:&#32;curr.z
<anchor xml:id="__element_crusher_8cs_source_1l01949"/>01949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;));
<anchor xml:id="__element_crusher_8cs_source_1l01950"/>01950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01951"/>01951 
<anchor xml:id="__element_crusher_8cs_source_1l01952"/>01952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l01953"/>01953 
<anchor xml:id="__element_crusher_8cs_source_1l01954"/>01954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currE&#32;=&#32;rb.rotation.eulerAngles;
<anchor xml:id="__element_crusher_8cs_source_1l01955"/>01955 
<anchor xml:id="__element_crusher_8cs_source_1l01956"/>01956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&amp;&#32;rb.transform.parent)
<anchor xml:id="__element_crusher_8cs_source_1l01957"/>01957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01958"/>01958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//rb.rotation&#32;=&#32;Quaternion.Euler(</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01959"/>01959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.transform.eulerAngles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l01960"/>01960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;currE.x,
<anchor xml:id="__element_crusher_8cs_source_1l01961"/>01961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;currE.y,
<anchor xml:id="__element_crusher_8cs_source_1l01962"/>01962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;currE.z
<anchor xml:id="__element_crusher_8cs_source_1l01963"/>01963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l01964"/>01964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01965"/>01965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01966"/>01966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01967"/>01967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//rb.rotation&#32;=&#32;Quaternion.Euler(</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l01968"/>01968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.MoveRotation(Quaternion.Euler(
<anchor xml:id="__element_crusher_8cs_source_1l01969"/>01969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;currE.x,
<anchor xml:id="__element_crusher_8cs_source_1l01970"/>01970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;currE.y,
<anchor xml:id="__element_crusher_8cs_source_1l01971"/>01971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;currE.z
<anchor xml:id="__element_crusher_8cs_source_1l01972"/>01972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;));
<anchor xml:id="__element_crusher_8cs_source_1l01973"/>01973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01974"/>01974 
<anchor xml:id="__element_crusher_8cs_source_1l01975"/>01975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01976"/>01976 
<anchor xml:id="__element_crusher_8cs_source_1l01977"/>01977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l01978"/>01978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Are&#32;you&#32;trying&#32;to&#32;Apply&#32;scale&#32;to&#32;a&#32;Rigidbody?&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l01979"/>01979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l01980"/>01980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01981"/>01981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01982"/>01982 
<anchor xml:id="__element_crusher_8cs_source_1l01991"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acd3f42c0a25e5cda64f019ce015595f4">01991</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acd3f42c0a25e5cda64f019ce015595f4">Move</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l01992"/>01992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l01993"/>01993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acd3f42c0a25e5cda64f019ce015595f4">Move</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(ce),&#32;ia);
<anchor xml:id="__element_crusher_8cs_source_1l01994"/>01994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l01995"/>01995 
<anchor xml:id="__element_crusher_8cs_source_1l02004"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3ca20ad3dd742cf22d81fcade2fd3b52">02004</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3ca20ad3dd742cf22d81fcade2fd3b52">Move</link>(Rigidbody&#32;rb,&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l02005"/>02005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02006"/>02006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02007"/>02007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l02008"/>02008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l02009"/>02009 
<anchor xml:id="__element_crusher_8cs_source_1l02010"/>02010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(_trsType)
<anchor xml:id="__element_crusher_8cs_source_1l02011"/>02011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02012"/>02012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l02013"/>02013 
<anchor xml:id="__element_crusher_8cs_source_1l02014"/>02014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l02015"/>02015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02016"/>02016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&amp;&#32;rb.transform.parent)
<anchor xml:id="__element_crusher_8cs_source_1l02017"/>02017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.MoveRotation(rb.transform.parent.rotation&#32;*&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>);
<anchor xml:id="__element_crusher_8cs_source_1l02018"/>02018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//rb.transform.localRotation&#32;=&#32;e.quat;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02019"/>02019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02020"/>02020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.MoveRotation(e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>);
<anchor xml:id="__element_crusher_8cs_source_1l02021"/>02021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02022"/>02022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02023"/>02023 
<anchor xml:id="__element_crusher_8cs_source_1l02024"/>02024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l02025"/>02025 
<anchor xml:id="__element_crusher_8cs_source_1l02026"/>02026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localized&#32;=&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&#32;rb.transform.parent)&#32;?&#32;rb.transform.TransformPoint(e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>)&#32;:&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02027"/>02027 
<anchor xml:id="__element_crusher_8cs_source_1l02028"/>02028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.MovePosition(<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02029"/>02029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;localized.x&#32;:&#32;rb.position.x,
<anchor xml:id="__element_crusher_8cs_source_1l02030"/>02030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;localized.y&#32;:&#32;rb.position.y,
<anchor xml:id="__element_crusher_8cs_source_1l02031"/>02031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;localized.z&#32;:&#32;rb.position.z
<anchor xml:id="__element_crusher_8cs_source_1l02032"/>02032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;));
<anchor xml:id="__element_crusher_8cs_source_1l02033"/>02033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02034"/>02034 
<anchor xml:id="__element_crusher_8cs_source_1l02035"/>02035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l02036"/>02036 
<anchor xml:id="__element_crusher_8cs_source_1l02037"/>02037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currE&#32;=&#32;rb.rotation.eulerAngles;
<anchor xml:id="__element_crusher_8cs_source_1l02038"/>02038 
<anchor xml:id="__element_crusher_8cs_source_1l02039"/>02039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&amp;&#32;rb.transform.parent)
<anchor xml:id="__element_crusher_8cs_source_1l02040"/>02040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02041"/>02041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//rb.rotation&#32;=&#32;Quaternion.Euler(</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02042"/>02042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.transform.eulerAngles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02043"/>02043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;currE.x,
<anchor xml:id="__element_crusher_8cs_source_1l02044"/>02044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;currE.y,
<anchor xml:id="__element_crusher_8cs_source_1l02045"/>02045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;currE.z
<anchor xml:id="__element_crusher_8cs_source_1l02046"/>02046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02047"/>02047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02048"/>02048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02049"/>02049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02050"/>02050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//rb.rotation&#32;=&#32;Quaternion.Euler(</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02051"/>02051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.MoveRotation(Quaternion.Euler(
<anchor xml:id="__element_crusher_8cs_source_1l02052"/>02052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;currE.x,
<anchor xml:id="__element_crusher_8cs_source_1l02053"/>02053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;currE.y,
<anchor xml:id="__element_crusher_8cs_source_1l02054"/>02054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;currE.z
<anchor xml:id="__element_crusher_8cs_source_1l02055"/>02055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;));
<anchor xml:id="__element_crusher_8cs_source_1l02056"/>02056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02057"/>02057 
<anchor xml:id="__element_crusher_8cs_source_1l02058"/>02058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02059"/>02059 
<anchor xml:id="__element_crusher_8cs_source_1l02060"/>02060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l02061"/>02061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Are&#32;you&#32;trying&#32;to&#32;Apply&#32;scale&#32;to&#32;a&#32;Rigidbody?&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02062"/>02062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02063"/>02063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02064"/>02064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02065"/>02065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02066"/>02066 
<anchor xml:id="__element_crusher_8cs_source_1l02075"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">02075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l02076"/>02076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02077"/>02077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(ce),&#32;ia);
<anchor xml:id="__element_crusher_8cs_source_1l02078"/>02078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02079"/>02079 
<anchor xml:id="__element_crusher_8cs_source_1l02088"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae347e6c510109f1fb74e84b613af6172">02088</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae347e6c510109f1fb74e84b613af6172">Set</link>(Rigidbody2D&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l02089"/>02089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02090"/>02090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(ce),&#32;ia);
<anchor xml:id="__element_crusher_8cs_source_1l02091"/>02091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02100"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad577c9ac8f3d8d60818a70f577f20202">02100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad577c9ac8f3d8d60818a70f577f20202">Set</link>(Rigidbody&#32;rb,&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l02101"/>02101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02102"/>02102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02103"/>02103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l02104"/>02104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l02105"/>02105 
<anchor xml:id="__element_crusher_8cs_source_1l02106"/>02106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(_trsType)
<anchor xml:id="__element_crusher_8cs_source_1l02107"/>02107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02108"/>02108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l02109"/>02109 
<anchor xml:id="__element_crusher_8cs_source_1l02110"/>02110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l02111"/>02111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02112"/>02112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&amp;&#32;rb.transform.parent)
<anchor xml:id="__element_crusher_8cs_source_1l02113"/>02113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.rotation&#32;=&#32;rb.transform.parent.rotation&#32;*&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02114"/>02114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//rb.transform.localRotation&#32;=&#32;e.quat;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02115"/>02115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02116"/>02116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.rotation&#32;=&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02117"/>02117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02118"/>02118 
<anchor xml:id="__element_crusher_8cs_source_1l02119"/>02119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02120"/>02120 
<anchor xml:id="__element_crusher_8cs_source_1l02121"/>02121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l02122"/>02122 
<anchor xml:id="__element_crusher_8cs_source_1l02123"/>02123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localized&#32;=&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&#32;rb.transform.parent)&#32;?&#32;rb.transform.TransformPoint(e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>)&#32;:&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02124"/>02124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currP&#32;=&#32;rb.position;
<anchor xml:id="__element_crusher_8cs_source_1l02125"/>02125 
<anchor xml:id="__element_crusher_8cs_source_1l02126"/>02126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.position&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02127"/>02127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;localized.x&#32;:&#32;currP.x,
<anchor xml:id="__element_crusher_8cs_source_1l02128"/>02128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;localized.y&#32;:&#32;currP.y,
<anchor xml:id="__element_crusher_8cs_source_1l02129"/>02129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;localized.z&#32;:&#32;currP.z);
<anchor xml:id="__element_crusher_8cs_source_1l02130"/>02130 
<anchor xml:id="__element_crusher_8cs_source_1l02131"/>02131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02132"/>02132 
<anchor xml:id="__element_crusher_8cs_source_1l02133"/>02133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l02134"/>02134 
<anchor xml:id="__element_crusher_8cs_source_1l02135"/>02135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currE&#32;=&#32;rb.rotation.eulerAngles;
<anchor xml:id="__element_crusher_8cs_source_1l02136"/>02136 
<anchor xml:id="__element_crusher_8cs_source_1l02137"/>02137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&amp;&#32;rb.transform.parent)
<anchor xml:id="__element_crusher_8cs_source_1l02138"/>02138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02139"/>02139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.transform.eulerAngles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02140"/>02140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;currE.x,
<anchor xml:id="__element_crusher_8cs_source_1l02141"/>02141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;currE.y,
<anchor xml:id="__element_crusher_8cs_source_1l02142"/>02142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;currE.z
<anchor xml:id="__element_crusher_8cs_source_1l02143"/>02143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02144"/>02144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02145"/>02145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02146"/>02146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02147"/>02147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb.rotation&#32;=&#32;Quaternion.Euler(
<anchor xml:id="__element_crusher_8cs_source_1l02148"/>02148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;currE.x,
<anchor xml:id="__element_crusher_8cs_source_1l02149"/>02149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;currE.y,
<anchor xml:id="__element_crusher_8cs_source_1l02150"/>02150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;currE.z);
<anchor xml:id="__element_crusher_8cs_source_1l02151"/>02151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02152"/>02152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02153"/>02153 
<anchor xml:id="__element_crusher_8cs_source_1l02154"/>02154 
<anchor xml:id="__element_crusher_8cs_source_1l02155"/>02155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l02156"/>02156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Are&#32;you&#32;trying&#32;to&#32;Apply&#32;scale&#32;to&#32;a&#32;Rigidbody?&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02157"/>02157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02158"/>02158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02159"/>02159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02160"/>02160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02161"/>02161 
<anchor xml:id="__element_crusher_8cs_source_1l02170"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b3e75c7ee83c3f1791b8c72628e5f77">02170</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b3e75c7ee83c3f1791b8c72628e5f77">Set</link>(Rigidbody2D&#32;rb2d,&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l02171"/>02171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02172"/>02172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02173"/>02173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l02174"/>02174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l02175"/>02175 
<anchor xml:id="__element_crusher_8cs_source_1l02176"/>02176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(_trsType)
<anchor xml:id="__element_crusher_8cs_source_1l02177"/>02177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02178"/>02178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l02179"/>02179 
<anchor xml:id="__element_crusher_8cs_source_1l02180"/>02180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l02181"/>02181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02182"/>02182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&amp;&#32;rb2d.transform.parent)
<anchor xml:id="__element_crusher_8cs_source_1l02183"/>02183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb2d.transform.localRotation&#32;=&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02184"/>02184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02185"/>02185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb2d.rotation&#32;=&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>.z;
<anchor xml:id="__element_crusher_8cs_source_1l02186"/>02186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02187"/>02187 
<anchor xml:id="__element_crusher_8cs_source_1l02188"/>02188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02189"/>02189 
<anchor xml:id="__element_crusher_8cs_source_1l02190"/>02190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l02191"/>02191 
<anchor xml:id="__element_crusher_8cs_source_1l02192"/>02192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localized&#32;=&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&#32;rb2d.transform.parent)&#32;?&#32;rb2d.transform.TransformPoint(e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>)&#32;:&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02193"/>02193 
<anchor xml:id="__element_crusher_8cs_source_1l02194"/>02194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb2d.position&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(
<anchor xml:id="__element_crusher_8cs_source_1l02195"/>02195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;localized.x&#32;:&#32;rb2d.position.x,
<anchor xml:id="__element_crusher_8cs_source_1l02196"/>02196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;localized.y&#32;:&#32;rb2d.position.y);
<anchor xml:id="__element_crusher_8cs_source_1l02197"/>02197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02198"/>02198 
<anchor xml:id="__element_crusher_8cs_source_1l02199"/>02199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l02200"/>02200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&amp;&#32;rb2d.transform.parent)
<anchor xml:id="__element_crusher_8cs_source_1l02201"/>02201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02202"/>02202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb2d.transform.localEulerAngles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;0,&#32;(cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;rb2d.rotation));
<anchor xml:id="__element_crusher_8cs_source_1l02203"/>02203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02204"/>02204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02205"/>02205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02206"/>02206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb2d.rotation&#32;=&#32;cache_zEnabled&#32;&amp;&amp;&#32;((int)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;rb2d.rotation;
<anchor xml:id="__element_crusher_8cs_source_1l02207"/>02207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02208"/>02208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02209"/>02209 
<anchor xml:id="__element_crusher_8cs_source_1l02210"/>02210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l02211"/>02211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Are&#32;you&#32;trying&#32;to&#32;Apply&#32;scale&#32;to&#32;a&#32;Rigidbody?&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02212"/>02212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02213"/>02213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02214"/>02214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02215"/>02215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02216"/>02216 
<anchor xml:id="__element_crusher_8cs_source_1l02217"/>02217 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02218"/>02218 
<anchor xml:id="__element_crusher_8cs_source_1l02219"/>02219 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Transform&#32;Apply</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02220"/>02220 
<anchor xml:id="__element_crusher_8cs_source_1l02227"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a878ccad5f4f783bef117e88d469017de">02227</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a878ccad5f4f783bef117e88d469017de">Apply</link>(Transform&#32;trans,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;ce,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l02228"/>02228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02229"/>02229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(trans,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(ce),&#32;ia);
<anchor xml:id="__element_crusher_8cs_source_1l02230"/>02230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02231"/>02231 
<anchor xml:id="__element_crusher_8cs_source_1l02232"/>02232 
<anchor xml:id="__element_crusher_8cs_source_1l02236"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6c304a63f8556cfdadfc84815047cc8e">02236</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6c304a63f8556cfdadfc84815047cc8e">Apply</link>(Transform&#32;trans,&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>&#32;e,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>&#32;ia&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ)
<anchor xml:id="__element_crusher_8cs_source_1l02237"/>02237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02238"/>02238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l02239"/>02239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l02240"/>02240 
<anchor xml:id="__element_crusher_8cs_source_1l02241"/>02241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(_trsType)
<anchor xml:id="__element_crusher_8cs_source_1l02242"/>02242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02243"/>02243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion:
<anchor xml:id="__element_crusher_8cs_source_1l02244"/>02244 
<anchor xml:id="__element_crusher_8cs_source_1l02245"/>02245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cache_qEnabled)
<anchor xml:id="__element_crusher_8cs_source_1l02246"/>02246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02247"/>02247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)
<anchor xml:id="__element_crusher_8cs_source_1l02248"/>02248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.localRotation&#32;=&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02249"/>02249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02250"/>02250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.rotation&#32;=&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a0776ab8ff4d41e11eebdb737597062ac">quat</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02251"/>02251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02252"/>02252 
<anchor xml:id="__element_crusher_8cs_source_1l02253"/>02253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02254"/>02254 
<anchor xml:id="__element_crusher_8cs_source_1l02255"/>02255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position:
<anchor xml:id="__element_crusher_8cs_source_1l02256"/>02256 
<anchor xml:id="__element_crusher_8cs_source_1l02257"/>02257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)
<anchor xml:id="__element_crusher_8cs_source_1l02258"/>02258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02259"/>02259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.localPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02260"/>02260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;trans.localPosition.x,
<anchor xml:id="__element_crusher_8cs_source_1l02261"/>02261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;trans.localPosition.y,
<anchor xml:id="__element_crusher_8cs_source_1l02262"/>02262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;trans.localPosition.z
<anchor xml:id="__element_crusher_8cs_source_1l02263"/>02263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02264"/>02264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02265"/>02265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02266"/>02266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02267"/>02267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.position&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02268"/>02268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;trans.position.x,
<anchor xml:id="__element_crusher_8cs_source_1l02269"/>02269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;trans.position.y,
<anchor xml:id="__element_crusher_8cs_source_1l02270"/>02270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;trans.position.z
<anchor xml:id="__element_crusher_8cs_source_1l02271"/>02271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02272"/>02272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02273"/>02273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02274"/>02274 
<anchor xml:id="__element_crusher_8cs_source_1l02275"/>02275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler:
<anchor xml:id="__element_crusher_8cs_source_1l02276"/>02276 
<anchor xml:id="__element_crusher_8cs_source_1l02277"/>02277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)
<anchor xml:id="__element_crusher_8cs_source_1l02278"/>02278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02279"/>02279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.localEulerAngles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02280"/>02280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;trans.localEulerAngles.x,
<anchor xml:id="__element_crusher_8cs_source_1l02281"/>02281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;trans.localEulerAngles.y,
<anchor xml:id="__element_crusher_8cs_source_1l02282"/>02282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;trans.localEulerAngles.z
<anchor xml:id="__element_crusher_8cs_source_1l02283"/>02283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02284"/>02284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02285"/>02285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02286"/>02286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02287"/>02287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.eulerAngles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02288"/>02288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;trans.eulerAngles.x,
<anchor xml:id="__element_crusher_8cs_source_1l02289"/>02289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;trans.eulerAngles.y,
<anchor xml:id="__element_crusher_8cs_source_1l02290"/>02290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;trans.eulerAngles.z
<anchor xml:id="__element_crusher_8cs_source_1l02291"/>02291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02292"/>02292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02293"/>02293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02294"/>02294 
<anchor xml:id="__element_crusher_8cs_source_1l02295"/>02295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__element_crusher_8cs_source_1l02296"/>02296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>)
<anchor xml:id="__element_crusher_8cs_source_1l02297"/>02297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02298"/>02298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l02299"/>02299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02300"/>02300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.localScale&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02301"/>02301 
<anchor xml:id="__element_crusher_8cs_source_1l02302"/>02302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;trans.localScale.x,
<anchor xml:id="__element_crusher_8cs_source_1l02303"/>02303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;trans.localScale.y,
<anchor xml:id="__element_crusher_8cs_source_1l02304"/>02304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;trans.localScale.z
<anchor xml:id="__element_crusher_8cs_source_1l02305"/>02305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02306"/>02306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02307"/>02307 
<anchor xml:id="__element_crusher_8cs_source_1l02308"/>02308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Is&#32;a&#32;uniform&#32;scale</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02309"/>02309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02310"/>02310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02311"/>02311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;uniform&#32;=&#32;((int)<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y;
<anchor xml:id="__element_crusher_8cs_source_1l02312"/>02312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.localScale&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3
<anchor xml:id="__element_crusher_8cs_source_1l02313"/>02313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__element_crusher_8cs_source_1l02314"/>02314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;uniform&#32;:&#32;trans.localScale.x,
<anchor xml:id="__element_crusher_8cs_source_1l02315"/>02315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;uniform&#32;:&#32;trans.localScale.y,
<anchor xml:id="__element_crusher_8cs_source_1l02316"/>02316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;uniform&#32;:&#32;trans.localScale.z
<anchor xml:id="__element_crusher_8cs_source_1l02317"/>02317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02318"/>02318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02319"/>02319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02320"/>02320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02321"/>02321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02322"/>02322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l02323"/>02323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02324"/>02324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.localScale&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02325"/>02325 
<anchor xml:id="__element_crusher_8cs_source_1l02326"/>02326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_xEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;trans.lossyScale.x,
<anchor xml:id="__element_crusher_8cs_source_1l02327"/>02327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_yEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y&#32;:&#32;trans.lossyScale.y,
<anchor xml:id="__element_crusher_8cs_source_1l02328"/>02328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cache_zEnabled&#32;&amp;&amp;&#32;((<emphasis role="keywordtype">int</emphasis>)ia&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.z&#32;:&#32;trans.lossyScale.z
<anchor xml:id="__element_crusher_8cs_source_1l02329"/>02329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02330"/>02330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02331"/>02331 
<anchor xml:id="__element_crusher_8cs_source_1l02332"/>02332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Is&#32;a&#32;uniform&#32;scale</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02333"/>02333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02334"/>02334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02335"/>02335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;uniform&#32;=&#32;((int)<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.x&#32;:&#32;e.<link linkend="_struct_photon_1_1_compression_1_1_element_1a3ae9bea1688cb453a6fbce34118b7449">v</link>.y;
<anchor xml:id="__element_crusher_8cs_source_1l02336"/>02336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.localScale&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3
<anchor xml:id="__element_crusher_8cs_source_1l02337"/>02337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__element_crusher_8cs_source_1l02338"/>02338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;1)&#32;!=&#32;0&#32;?&#32;uniform&#32;:&#32;trans.lossyScale.x,
<anchor xml:id="__element_crusher_8cs_source_1l02339"/>02339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;2)&#32;!=&#32;0&#32;?&#32;uniform&#32;:&#32;trans.lossyScale.y,
<anchor xml:id="__element_crusher_8cs_source_1l02340"/>02340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;4)&#32;!=&#32;0&#32;?&#32;uniform&#32;:&#32;trans.lossyScale.z
<anchor xml:id="__element_crusher_8cs_source_1l02341"/>02341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02342"/>02342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02343"/>02343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02344"/>02344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02345"/>02345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02346"/>02346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02347"/>02347 
<anchor xml:id="__element_crusher_8cs_source_1l02348"/>02348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;void&#32;Apply(Transform&#32;trans,&#32;Quaternion&#32;q)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02349"/>02349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02350"/>02350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(!cached)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02351"/>02351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;CacheValues();</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02352"/>02352 
<anchor xml:id="__element_crusher_8cs_source_1l02353"/>02353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(_trsType&#32;==&#32;TRSType.Quaternion)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02354"/>02354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02355"/>02355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(cache_qEnabled)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02356"/>02356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(local)</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02357"/>02357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.rotation&#32;=&#32;q;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02358"/>02358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02359"/>02359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trans.localRotation&#32;=&#32;q;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02360"/>02360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;return;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02361"/>02361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02362"/>02362 
<anchor xml:id="__element_crusher_8cs_source_1l02363"/>02363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;DebugX.LogError(&quot;You&#32;seem&#32;to&#32;be&#32;trying&#32;to&#32;apply&#32;a&#32;Quaternion&#32;to&#32;&quot;&#32;+&#32;System.Enum.GetName(typeof(TRSType),&#32;_trsType)&#32;+&#32;&quot;.&quot;,&#32;true,&#32;true);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02364"/>02364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02365"/>02365 
<anchor xml:id="__element_crusher_8cs_source_1l02366"/>02366 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02367"/>02367 
<anchor xml:id="__element_crusher_8cs_source_1l02368"/>02368 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;&#32;Utilities</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02369"/>02369 
<anchor xml:id="__element_crusher_8cs_source_1l02375"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae12717135022bf93cbaee29db23ec3a9">02375</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae12717135022bf93cbaee29db23ec3a9">Clamp</link>(Vector3&#32;v3)
<anchor xml:id="__element_crusher_8cs_source_1l02376"/>02376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02377"/>02377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cached)
<anchor xml:id="__element_crusher_8cs_source_1l02378"/>02378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a894e9578f8fe3a6d7b555a4bb2cc1404">CacheValues</link>();
<anchor xml:id="__element_crusher_8cs_source_1l02379"/>02379 
<anchor xml:id="__element_crusher_8cs_source_1l02380"/>02380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l02381"/>02381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02382"/>02382 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02383"/>02383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;You&#32;cannot&#32;clamp&#32;a&#32;quaternion.&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02384"/>02384 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02385"/>02385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;v3;
<anchor xml:id="__element_crusher_8cs_source_1l02386"/>02386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02387"/>02387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale)
<anchor xml:id="__element_crusher_8cs_source_1l02388"/>02388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02389"/>02389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l02390"/>02390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02391"/>02391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02392"/>02392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_xEnabled)&#32;?&#32;_xcrusher.Clamp(v3.x)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l02393"/>02393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_yEnabled)&#32;?&#32;_ycrusher.Clamp(v3.y)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l02394"/>02394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_zEnabled)&#32;?&#32;_zcrusher.Clamp(v3.z)&#32;:&#32;0
<anchor xml:id="__element_crusher_8cs_source_1l02395"/>02395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02396"/>02396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02397"/>02397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02398"/>02398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02399"/>02399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02400"/>02400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>)1)&#32;!=&#32;0)&#32;?&#32;_ucrusher.Clamp(v3.x)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l02401"/>02401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>)2)&#32;!=&#32;0)&#32;?&#32;_ucrusher.Clamp(v3.x)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l02402"/>02402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>)4)&#32;!=&#32;0)&#32;?&#32;_ucrusher.Clamp(v3.x)&#32;:&#32;0
<anchor xml:id="__element_crusher_8cs_source_1l02403"/>02403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02404"/>02404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02405"/>02405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02406"/>02406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Euler)
<anchor xml:id="__element_crusher_8cs_source_1l02407"/>02407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02408"/>02408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02409"/>02409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_xEnabled)&#32;?&#32;_xcrusher.ClampRotation(v3.x)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l02410"/>02410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_yEnabled)&#32;?&#32;_ycrusher.ClampRotation(v3.y)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l02411"/>02411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_zEnabled)&#32;?&#32;_zcrusher.ClampRotation(v3.z)&#32;:&#32;0
<anchor xml:id="__element_crusher_8cs_source_1l02412"/>02412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02413"/>02413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02414"/>02414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02415"/>02415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02416"/>02416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__element_crusher_8cs_source_1l02417"/>02417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_xEnabled)&#32;?&#32;_xcrusher.Clamp(v3.x)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l02418"/>02418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_yEnabled)&#32;?&#32;_ycrusher.Clamp(v3.y)&#32;:&#32;0,
<anchor xml:id="__element_crusher_8cs_source_1l02419"/>02419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(cache_zEnabled)&#32;?&#32;_zcrusher.Clamp(v3.z)&#32;:&#32;0
<anchor xml:id="__element_crusher_8cs_source_1l02420"/>02420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02421"/>02421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02422"/>02422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02426"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa66a3ad9e6b3d070a8bbea80530ed0db">02426</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;BitCullingLevel&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa66a3ad9e6b3d070a8bbea80530ed0db">FindBestBitCullLevel</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b,&#32;BitCullingLevel&#32;maxCulling)
<anchor xml:id="__element_crusher_8cs_source_1l02427"/>02427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02429"/>02429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l02430"/>02430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02431"/>02431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((ulong)a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>&#32;==&#32;(ulong)b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7f1abc23282447b1d28f61616afaf2df">cQuat</link>)
<anchor xml:id="__element_crusher_8cs_source_1l02432"/>02432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropAll;
<anchor xml:id="__element_crusher_8cs_source_1l02433"/>02433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02434"/>02434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__element_crusher_8cs_source_1l02435"/>02435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02436"/>02436 
<anchor xml:id="__element_crusher_8cs_source_1l02437"/>02437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.NoCulling&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;BitCullingLevel.DropThird))
<anchor xml:id="__element_crusher_8cs_source_1l02438"/>02438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.NoCulling;
<anchor xml:id="__element_crusher_8cs_source_1l02439"/>02439 
<anchor xml:id="__element_crusher_8cs_source_1l02440"/>02440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.DropThird&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;BitCullingLevel.DropHalf))
<anchor xml:id="__element_crusher_8cs_source_1l02441"/>02441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropThird;
<anchor xml:id="__element_crusher_8cs_source_1l02442"/>02442 
<anchor xml:id="__element_crusher_8cs_source_1l02443"/>02443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxCulling&#32;==&#32;BitCullingLevel.DropHalf&#32;||&#32;!TestMatchingUpper(a,&#32;b,&#32;BitCullingLevel.DropAll))
<anchor xml:id="__element_crusher_8cs_source_1l02444"/>02444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropHalf;
<anchor xml:id="__element_crusher_8cs_source_1l02445"/>02445 
<anchor xml:id="__element_crusher_8cs_source_1l02446"/>02446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;both&#32;values&#32;are&#32;the&#32;same</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02447"/>02447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;BitCullingLevel.DropAll;
<anchor xml:id="__element_crusher_8cs_source_1l02448"/>02448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02449"/>02449 
<anchor xml:id="__element_crusher_8cs_source_1l02450"/>02450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;TestMatchingUpper(uint&#32;a,&#32;uint&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lowerbits)
<anchor xml:id="__element_crusher_8cs_source_1l02451"/>02451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02452"/>02452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(((a&#32;&gt;&gt;&#32;lowerbits)&#32;&lt;&lt;&#32;lowerbits)&#32;==&#32;((b&#32;&gt;&gt;&#32;lowerbits)&#32;&lt;&lt;&#32;lowerbits));
<anchor xml:id="__element_crusher_8cs_source_1l02453"/>02453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02454"/>02454 
<anchor xml:id="__element_crusher_8cs_source_1l02455"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a9d32127e69b7f0af6069be9e471c9218">02455</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a9d32127e69b7f0af6069be9e471c9218">TestMatchingUpper</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;a,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_element">CompressedElement</link>&#32;b,&#32;BitCullingLevel&#32;bcl)
<anchor xml:id="__element_crusher_8cs_source_1l02456"/>02456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02457"/>02457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02458"/>02458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="__element_crusher_8cs_source_1l02459"/>02459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a8402803adaa2213a472f3a0fc963e729">cx</link>,&#32;_xcrusher.GetBits(bcl))&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02460"/>02460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a79fbe79d4d8bc2e69665aacfe7e7f0a3">cy</link>,&#32;_ycrusher.GetBits(bcl))&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02461"/>02461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TestMatchingUpper(a.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;b.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a7922dec83ec7a36cda6b74216ee9386e">cz</link>,&#32;_zcrusher.GetBits(bcl))
<anchor xml:id="__element_crusher_8cs_source_1l02462"/>02462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__element_crusher_8cs_source_1l02463"/>02463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02464"/>02464 
<anchor xml:id="__element_crusher_8cs_source_1l02468"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad40f5bffbc1283fdc608da977d0443b2">02468</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad40f5bffbc1283fdc608da977d0443b2">TallyBits</link>(BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__element_crusher_8cs_source_1l02469"/>02469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02470"/>02470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Scale&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;!=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.NonUniform)
<anchor xml:id="__element_crusher_8cs_source_1l02471"/>02471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02472"/>02472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(_ucrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;_ucrusher.Enabled)&#32;?&#32;_ucrusher.GetBits(bcl)&#32;:&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l02473"/>02473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02474"/>02474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l02475"/>02475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02476"/>02476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(_qcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1a80032db4b352658be26a22e3a0b636cc">Enabled</link>)&#32;?&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1af838bab9b5229d20ee762154c4b28a61">Bits</link>&#32;:&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l02477"/>02477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02478"/>02478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02479"/>02479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02480"/>02480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_trsType&#32;==&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>.Position&#32;&amp;&amp;&#32;useWorldBounds)
<anchor xml:id="__element_crusher_8cs_source_1l02481"/>02481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02482"/>02482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings">WorldBoundsSettings</link>.<link linkend="_class_photon_1_1_compression_1_1_world_bounds_settings_1a08262abd61b31b217538d9e0052f5099">TallyBits</link>(ref&#32;boundsGroupId);
<anchor xml:id="__element_crusher_8cs_source_1l02483"/>02483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02484"/>02484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02485"/>02485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((_xcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;_xcrusher.Enabled)&#32;?&#32;_xcrusher.GetBits(bcl)&#32;:&#32;0)&#32;+
<anchor xml:id="__element_crusher_8cs_source_1l02486"/>02486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((_ycrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;_ycrusher.Enabled)&#32;?&#32;_ycrusher.GetBits(bcl)&#32;:&#32;0)&#32;+
<anchor xml:id="__element_crusher_8cs_source_1l02487"/>02487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((_zcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;_zcrusher.Enabled)&#32;?&#32;_zcrusher.GetBits(bcl)&#32;:&#32;0);
<anchor xml:id="__element_crusher_8cs_source_1l02488"/>02488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02489"/>02489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02490"/>02490 
<anchor xml:id="__element_crusher_8cs_source_1l02491"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa6987e49732105536d9511e141865b2a">02491</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa6987e49732105536d9511e141865b2a">CopyFrom</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;src)
<anchor xml:id="__element_crusher_8cs_source_1l02492"/>02492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02493"/>02493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_trsType&#32;=&#32;src._trsType;
<anchor xml:id="__element_crusher_8cs_source_1l02494"/>02494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;=&#32;src.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02495"/>02495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_xcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;src._xcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_xcrusher.CopyFrom(src._xcrusher);
<anchor xml:id="__element_crusher_8cs_source_1l02496"/>02496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ycrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;src._ycrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_ycrusher.CopyFrom(src._ycrusher);
<anchor xml:id="__element_crusher_8cs_source_1l02497"/>02497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_zcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;src._zcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_zcrusher.CopyFrom(src._zcrusher);
<anchor xml:id="__element_crusher_8cs_source_1l02498"/>02498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ucrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;src._ucrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_ucrusher.CopyFrom(src._ucrusher);
<anchor xml:id="__element_crusher_8cs_source_1l02499"/>02499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_qcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;src._qcrusher&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1aa8446c327ce179c0beb462dceed37ef5">CopyFrom</link>(src._qcrusher);
<anchor xml:id="__element_crusher_8cs_source_1l02500"/>02500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;=&#32;src.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02501"/>02501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02502"/>02502 
<anchor xml:id="__element_crusher_8cs_source_1l02503"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac246b19246b591434012022b0ad258c3">02503</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac246b19246b591434012022b0ad258c3">ToString</link>()
<anchor xml:id="__element_crusher_8cs_source_1l02504"/>02504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02505"/>02505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;ElementCrusher&#32;[&quot;</emphasis>&#32;+&#32;_trsType&#32;+&#32;<emphasis role="stringliteral">&quot;]&#32;&quot;</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02506"/>02506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02507"/>02507 
<anchor xml:id="__element_crusher_8cs_source_1l02508"/>02508 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02509"/>02509 
<anchor xml:id="__element_crusher_8cs_source_1l02510"/>02510 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;IEquatable</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02511"/>02511 
<anchor xml:id="__element_crusher_8cs_source_1l02512"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6bee2dad4e4d7afe7361fdba20469a5e">02512</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6bee2dad4e4d7afe7361fdba20469a5e">Equals</link>(<emphasis role="keywordtype">object</emphasis>&#32;obj)
<anchor xml:id="__element_crusher_8cs_source_1l02513"/>02513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02514"/>02514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6bee2dad4e4d7afe7361fdba20469a5e">Equals</link>(obj&#32;as&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>);
<anchor xml:id="__element_crusher_8cs_source_1l02515"/>02515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02516"/>02516 
<anchor xml:id="__element_crusher_8cs_source_1l02517"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3ee65aaa567bf6346e35d61721a4fa9d">02517</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3ee65aaa567bf6346e35d61721a4fa9d">Equals</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;other)
<anchor xml:id="__element_crusher_8cs_source_1l02518"/>02518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02519"/>02519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;other&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02520"/>02520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_trsType&#32;==&#32;other._trsType&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02521"/>02521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EqualityComparer&lt;Transform&gt;.Default.Equals(<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1d08654e2adede1fe8836020a782e312">defaultTransform</link>,&#32;other.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1d08654e2adede1fe8836020a782e312">defaultTransform</link>)&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02522"/>02522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;==&#32;other.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02523"/>02523 
<anchor xml:id="__element_crusher_8cs_source_1l02524"/>02524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_xcrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;(other._xcrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;:&#32;_xcrusher.Equals(other._xcrusher))&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02525"/>02525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_ycrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;(other._ycrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;:&#32;_ycrusher.Equals(other._ycrusher))&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02526"/>02526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_zcrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;(other._zcrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;:&#32;_zcrusher.Equals(other._zcrusher))&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02527"/>02527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_ucrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;(other._ucrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;:&#32;_ucrusher.Equals(other._ucrusher))&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02528"/>02528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_qcrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;(other._qcrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;:&#32;_qcrusher.<link linkend="_class_photon_1_1_compression_1_1_quat_crusher_1a136007237e45598dd5588e454a27083a">Equals</link>(other._qcrusher))&#32;&amp;&amp;
<anchor xml:id="__element_crusher_8cs_source_1l02529"/>02529 
<anchor xml:id="__element_crusher_8cs_source_1l02530"/>02530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;==&#32;other.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>;
<anchor xml:id="__element_crusher_8cs_source_1l02531"/>02531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02532"/>02532 
<anchor xml:id="__element_crusher_8cs_source_1l02533"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2cb19c0da00422001c8a00b40b7309ee">02533</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2cb19c0da00422001c8a00b40b7309ee">GetHashCode</link>()
<anchor xml:id="__element_crusher_8cs_source_1l02534"/>02534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02535"/>02535 
<anchor xml:id="__element_crusher_8cs_source_1l02536"/>02536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;hashCode&#32;=&#32;-1042106911;
<anchor xml:id="__element_crusher_8cs_source_1l02537"/>02537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;_trsType.GetHashCode();
<anchor xml:id="__element_crusher_8cs_source_1l02538"/>02538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;EqualityComparer&lt;Transform&gt;.Default.GetHashCode(defaultTransform);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02539"/>02539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8b414b2962fb8659f15e0ad87bc7b4fe">uniformAxes</link>.GetHashCode();
<anchor xml:id="__element_crusher_8cs_source_1l02540"/>02540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;((_xcrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;_xcrusher.GetHashCode());
<anchor xml:id="__element_crusher_8cs_source_1l02541"/>02541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;((_ycrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;_ycrusher.GetHashCode());
<anchor xml:id="__element_crusher_8cs_source_1l02542"/>02542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;((_zcrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;_zcrusher.GetHashCode());
<anchor xml:id="__element_crusher_8cs_source_1l02543"/>02543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;((_ucrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;_ucrusher.GetHashCode());
<anchor xml:id="__element_crusher_8cs_source_1l02544"/>02544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;((_qcrusher&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;_qcrusher.GetHashCode());
<anchor xml:id="__element_crusher_8cs_source_1l02545"/>02545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;EqualityComparer&lt;FloatCrusher&gt;.Default.GetHashCode(ycrusher);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02546"/>02546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;EqualityComparer&lt;FloatCrusher&gt;.Default.GetHashCode(zcrusher);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02547"/>02547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;EqualityComparer&lt;FloatCrusher&gt;.Default.GetHashCode(ucrusher);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02548"/>02548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;EqualityComparer&lt;QuatCrusher&gt;.Default.GetHashCode(qcrusher);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02549"/>02549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>.GetHashCode();
<anchor xml:id="__element_crusher_8cs_source_1l02550"/>02550 
<anchor xml:id="__element_crusher_8cs_source_1l02551"/>02551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hashCode;
<anchor xml:id="__element_crusher_8cs_source_1l02552"/>02552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02553"/>02553 
<anchor xml:id="__element_crusher_8cs_source_1l02554"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae0a43aaaab7aaa1334afc30f3128d04a">02554</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ae0a43aaaab7aaa1334afc30f3128d04a">operator ==</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;crusher1,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;crusher2)
<anchor xml:id="__element_crusher_8cs_source_1l02555"/>02555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02556"/>02556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EqualityComparer&lt;ElementCrusher&gt;.Default.Equals(crusher1,&#32;crusher2);
<anchor xml:id="__element_crusher_8cs_source_1l02557"/>02557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02558"/>02558 
<anchor xml:id="__element_crusher_8cs_source_1l02559"/><link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8dc0830a4ee9fe8f45c73bb44c4c8828">02559</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a8dc0830a4ee9fe8f45c73bb44c4c8828">operator !=</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;crusher1,&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;crusher2)
<anchor xml:id="__element_crusher_8cs_source_1l02560"/>02560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02561"/>02561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(crusher1&#32;==&#32;crusher2);
<anchor xml:id="__element_crusher_8cs_source_1l02562"/>02562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02563"/>02563 
<anchor xml:id="__element_crusher_8cs_source_1l02564"/>02564 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02565"/>02565 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02566"/>02566 
<anchor xml:id="__element_crusher_8cs_source_1l02567"/>02567 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;UnityEditor&#32;Drawer</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02568"/>02568 
<anchor xml:id="__element_crusher_8cs_source_1l02569"/>02569 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02570"/>02570 
<anchor xml:id="__element_crusher_8cs_source_1l02571"/>02571 &#32;&#32;&#32;&#32;[CustomPropertyDrawer(typeof(ElementCrusher))]
<anchor xml:id="__element_crusher_8cs_source_1l02572"/>02572 &#32;&#32;&#32;&#32;[CanEditMultipleObjects]
<anchor xml:id="__element_crusher_8cs_source_1l02573"/>02573 &#32;&#32;&#32;&#32;[AddComponentMenu(<emphasis role="stringliteral">&quot;Crusher/Element&#32;Crusher&quot;</emphasis>)]
<anchor xml:id="__element_crusher_8cs_source_1l02574"/>02574 
<anchor xml:id="__element_crusher_8cs_source_1l02575"/>02575 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>ElementCrusherDrawer&#32;:&#32;CrusherDrawer
<anchor xml:id="__element_crusher_8cs_source_1l02576"/>02576 &#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02577"/>02577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;TOP_PAD&#32;=&#32;2f;
<anchor xml:id="__element_crusher_8cs_source_1l02578"/>02578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;BTM_PAD&#32;=&#32;2f;
<anchor xml:id="__element_crusher_8cs_source_1l02579"/>02579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;const&#32;float&#32;BTM_PAD_SINGLE&#32;=&#32;2f;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02580"/>02580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;TITL_HGHT&#32;=&#32;16f;
<anchor xml:id="__element_crusher_8cs_source_1l02581"/>02581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;haschanged;
<anchor xml:id="__element_crusher_8cs_source_1l02582"/>02582 
<anchor xml:id="__element_crusher_8cs_source_1l02583"/>02583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent&#32;gc_label&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent();
<anchor xml:id="__element_crusher_8cs_source_1l02584"/>02584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;GC_USE_WRLDBNDS_LONG&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Use&#32;World&#32;Bounds&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Use&#32;position&#32;crusher&#32;generated&#32;by&#32;&apos;WorldBounds&apos;&#32;components&#32;attached&#32;to&#32;scene&#32;objects.&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02585"/>02585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;GC_USE_WRLDBNDS_SHRT&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;World&#32;Bnds&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Use&#32;position&#32;crusher&#32;generated&#32;by&#32;&apos;WorldBounds&apos;&#32;components&#32;attached&#32;to&#32;scene&#32;objects.&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02586"/>02586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;readonly&#32;GUIContent&#32;GC_LCL&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Lcl&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02587"/>02587 
<anchor xml:id="__element_crusher_8cs_source_1l02588"/>02588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;holdindent;
<anchor xml:id="__element_crusher_8cs_source_1l02589"/>02589 
<anchor xml:id="__element_crusher_8cs_source_1l02590"/>02590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnGUI(Rect&#32;r,&#32;SerializedProperty&#32;property,&#32;GUIContent&#32;label)
<anchor xml:id="__element_crusher_8cs_source_1l02591"/>02591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02592"/>02592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;haschanged&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02593"/>02593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__element_crusher_8cs_source_1l02594"/>02594 
<anchor xml:id="__element_crusher_8cs_source_1l02595"/>02595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isWorldBounds&#32;=&#32;label.text.Contains(<emphasis role="stringliteral">&quot;World&#32;Bounds&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02596"/>02596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;disableRanges&#32;=&#32;(label.tooltip&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;label.tooltip.Contains(<emphasis role="stringliteral">&quot;DISABLE_RANGES&quot;</emphasis>));
<anchor xml:id="__element_crusher_8cs_source_1l02597"/>02597 
<anchor xml:id="__element_crusher_8cs_source_1l02598"/>02598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gc_label.text&#32;=&#32;label.text;
<anchor xml:id="__element_crusher_8cs_source_1l02599"/>02599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gc_label.tooltip&#32;=&#32;(disableRanges)&#32;?&#32;<emphasis role="keyword">null</emphasis>&#32;:&#32;label.tooltip;
<anchor xml:id="__element_crusher_8cs_source_1l02600"/>02600 
<anchor xml:id="__element_crusher_8cs_source_1l02601"/>02601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnGUI(r,&#32;property,&#32;label);
<anchor xml:id="__element_crusher_8cs_source_1l02602"/>02602 
<anchor xml:id="__element_crusher_8cs_source_1l02603"/>02603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;holdindent&#32;=&#32;EditorGUI.indentLevel;
<anchor xml:id="__element_crusher_8cs_source_1l02604"/>02604 
<anchor xml:id="__element_crusher_8cs_source_1l02605"/>02605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Hacky&#32;way&#32;to&#32;get&#32;the&#32;real&#32;object</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02606"/>02606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ElementCrusher&#32;target&#32;=&#32;(ElementCrusher)DrawerUtils.GetParent(property.FindPropertyRelative(<emphasis role="stringliteral">&quot;_xcrusher&quot;</emphasis>));
<anchor xml:id="__element_crusher_8cs_source_1l02607"/>02607 
<anchor xml:id="__element_crusher_8cs_source_1l02608"/>02608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SerializedProperty&#32;uniformAxes&#32;=&#32;property.FindPropertyRelative(&quot;uniformAxes&quot;);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02609"/>02609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;x&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_xcrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02610"/>02610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;y&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_ycrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02611"/>02611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;z&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_zcrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02612"/>02612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;u&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_ucrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02613"/>02613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;q&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_qcrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02614"/>02614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;hideFieldName&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;hideFieldName&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02615"/>02615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;useWorldBounds&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;useWorldBounds&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02616"/>02616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;boundsGroupId&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;boundsGroupId&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02617"/>02617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;isExpanded&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;isExpanded&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02618"/>02618 
<anchor xml:id="__element_crusher_8cs_source_1l02619"/>02619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;xh&#32;=&#32;EditorGUI.GetPropertyHeight(x);
<anchor xml:id="__element_crusher_8cs_source_1l02620"/>02620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;yh&#32;=&#32;EditorGUI.GetPropertyHeight(y);
<anchor xml:id="__element_crusher_8cs_source_1l02621"/>02621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;zh&#32;=&#32;EditorGUI.GetPropertyHeight(z);
<anchor xml:id="__element_crusher_8cs_source_1l02622"/>02622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;wh&#32;=&#32;EditorGUI.GetPropertyHeight(u);
<anchor xml:id="__element_crusher_8cs_source_1l02623"/>02623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;qh&#32;=&#32;EditorGUI.GetPropertyHeight(q);
<anchor xml:id="__element_crusher_8cs_source_1l02624"/>02624 
<anchor xml:id="__element_crusher_8cs_source_1l02625"/>02625 
<anchor xml:id="__element_crusher_8cs_source_1l02626"/>02626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//bool&#32;isQuatCrush&#32;=&#32;target.TRSType&#32;==&#32;TRSType.Quaternion;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02627"/>02627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//bool&#32;isUniformScale&#32;=&#32;target.TRSType&#32;==&#32;TRSType.Scale&#32;&amp;&amp;&#32;target.uniformAxes&#32;!=&#32;0;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02628"/>02628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isWrappedInTransformCrusher&#32;=&#32;DrawerUtils.GetParent(property)&#32;is&#32;TransformCrusher;
<anchor xml:id="__element_crusher_8cs_source_1l02629"/>02629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;showHeader&#32;=&#32;!hideFieldName.boolValue&#32;&amp;&amp;&#32;!isWrappedInTransformCrusher;
<anchor xml:id="__element_crusher_8cs_source_1l02630"/>02630 
<anchor xml:id="__element_crusher_8cs_source_1l02631"/>02631 
<anchor xml:id="__element_crusher_8cs_source_1l02632"/>02632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;ir&#32;=&#32;EditorGUI.IndentedRect(r);
<anchor xml:id="__element_crusher_8cs_source_1l02633"/>02633 
<anchor xml:id="__element_crusher_8cs_source_1l02634"/>02634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;currentline&#32;=&#32;r.yMin;
<anchor xml:id="__element_crusher_8cs_source_1l02635"/>02635 
<anchor xml:id="__element_crusher_8cs_source_1l02636"/>02636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(showHeader)
<anchor xml:id="__element_crusher_8cs_source_1l02637"/>02637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02638"/>02638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin,&#32;currentline,&#32;r.width,&#32;LINEHEIGHT),&#32;gc_label);&#32;<emphasis role="comment">//*/&#32;property.displayName);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02639"/>02639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentline&#32;+=&#32;LINEHEIGHT&#32;+&#32;SPACING;
<anchor xml:id="__element_crusher_8cs_source_1l02640"/>02640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ir.yMin&#32;+=&#32;LINEHEIGHT;
<anchor xml:id="__element_crusher_8cs_source_1l02641"/>02641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02642"/>02642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02643"/>02643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02644"/>02644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentline&#32;+=&#32;SPACING;
<anchor xml:id="__element_crusher_8cs_source_1l02645"/>02645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02646"/>02646 
<anchor xml:id="__element_crusher_8cs_source_1l02647"/>02647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//ir.yMin&#32;+=&#32;currentline;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02648"/>02648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;framer&#32;=&#32;ir;
<anchor xml:id="__element_crusher_8cs_source_1l02649"/>02649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isWorldBounds)
<anchor xml:id="__element_crusher_8cs_source_1l02650"/>02650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02651"/>02651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framer.height&#32;-=&#32;BTTM_MARGIN;
<anchor xml:id="__element_crusher_8cs_source_1l02652"/>02652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;oframer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(framer.xMin&#32;-&#32;1,&#32;framer.yMin&#32;-&#32;1,&#32;framer.width&#32;+&#32;2,&#32;framer.height&#32;+&#32;2);
<anchor xml:id="__element_crusher_8cs_source_1l02653"/>02653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SolidTextures.DrawTexture(oframer,&#32;SolidTextures.lowcontrast2D);
<anchor xml:id="__element_crusher_8cs_source_1l02654"/>02654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SolidTextures.DrawTexture(framer,&#32;SolidTextures.contrastgray2D);
<anchor xml:id="__element_crusher_8cs_source_1l02655"/>02655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02656"/>02656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02657"/>02657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02658"/>02658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;unpad&#32;=&#32;4;
<anchor xml:id="__element_crusher_8cs_source_1l02659"/>02659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.xMin&#32;-=&#32;unpad;&#32;r.xMax&#32;+=&#32;unpad;
<anchor xml:id="__element_crusher_8cs_source_1l02660"/>02660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ir.xMin&#32;-=&#32;unpad;&#32;ir.xMax&#32;+=&#32;unpad;
<anchor xml:id="__element_crusher_8cs_source_1l02661"/>02661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02662"/>02662 
<anchor xml:id="__element_crusher_8cs_source_1l02663"/>02663 
<anchor xml:id="__element_crusher_8cs_source_1l02664"/>02664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//GUI.Box(new&#32;Rect(ir.xMin&#32;-&#32;2,&#32;currentline&#32;-&#32;2,&#32;ir.width&#32;+&#32;4,&#32;ir.height&#32;-&#32;2),&#32;GUIContent.none,&#32;(GUIStyle)&quot;GroupBox&quot;);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02665"/>02665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SolidTextures.DrawTexture(new&#32;Rect(ir.xMin&#32;-&#32;2,&#32;currentline&#32;-2,&#32;ir.width&#32;+&#32;4,&#32;ir.height),&#32;SolidTextures.highcontrast2D);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02666"/>02666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SolidTextures.DrawTexture(new&#32;Rect(ir.xMin&#32;-&#32;1,&#32;currentline&#32;-&#32;1,&#32;ir.width&#32;+&#32;2,&#32;ir.height&#32;-&#32;1),&#32;SolidTextures.white2D);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02667"/>02667 
<anchor xml:id="__element_crusher_8cs_source_1l02668"/>02668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SolidTextures.DrawTexture(new&#32;Rect(ir.xMin&#32;-&#32;2,&#32;currentline&#32;-&#32;2,&#32;ir.width&#32;+&#32;4,&#32;ir.height&#32;-&#32;BTM_PAD),&#32;SolidTextures.lowcontrast2D);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02669"/>02669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SolidTextures.DrawTexture(new&#32;Rect(ir.xMin,&#32;currentline,&#32;ir.width,&#32;16&#32;+&#32;1/*+&#32;SPACING*/),&#32;SolidTextures.contrastgray2D);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02670"/>02670 
<anchor xml:id="__element_crusher_8cs_source_1l02671"/>02671 <emphasis role="preprocessor">#if&#32;UNITY_2019_3_OR_NEWER</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02672"/>02672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;localtoggleleft&#32;=&#32;74;
<anchor xml:id="__element_crusher_8cs_source_1l02673"/>02673 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02674"/>02674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;localtoggleleft&#32;=&#32;76;
<anchor xml:id="__element_crusher_8cs_source_1l02675"/>02675 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02676"/>02676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fcLeft&#32;=&#32;ir.xMin&#32;+&#32;((isWorldBounds)&#32;?&#32;4&#32;:&#32;15);
<anchor xml:id="__element_crusher_8cs_source_1l02677"/>02677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;enumwidth&#32;=&#32;(ir.width&#32;-&#32;99)&#32;/&#32;2&#32;-&#32;1;
<anchor xml:id="__element_crusher_8cs_source_1l02678"/>02678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fcLeft2&#32;=&#32;fcLeft&#32;+&#32;enumwidth&#32;+&#32;2;
<anchor xml:id="__element_crusher_8cs_source_1l02679"/>02679 
<anchor xml:id="__element_crusher_8cs_source_1l02680"/>02680 
<anchor xml:id="__element_crusher_8cs_source_1l02681"/>02681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isExpanded.boolValue&#32;=&#32;(isWorldBounds)&#32;?&#32;<emphasis role="keyword">true</emphasis>&#32;:
<anchor xml:id="__element_crusher_8cs_source_1l02682"/>02682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Toggle(<emphasis role="keyword">new</emphasis>&#32;Rect(ir.xMin&#32;+&#32;2,&#32;currentline,&#32;16,&#32;LINEHEIGHT),&#32;isExpanded.boolValue,&#32;GUIContent.none,&#32;FOLDOUT_STYLE);
<anchor xml:id="__element_crusher_8cs_source_1l02683"/>02683 
<anchor xml:id="__element_crusher_8cs_source_1l02684"/>02684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.enableTRSTypeSelector)
<anchor xml:id="__element_crusher_8cs_source_1l02685"/>02685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02686"/>02686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l02687"/>02687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;trsType&#32;=&#32;(TRSType)EditorGUI.EnumPopup(<emphasis role="keyword">new</emphasis>&#32;Rect(fcLeft&#32;-&#32;2,&#32;currentline&#32;-&#32;1,&#32;enumwidth,&#32;LINEHEIGHT),&#32;target.TRSType,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;GV&#32;Gizmo&#32;DropDown&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02688"/>02688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;holdindent;
<anchor xml:id="__element_crusher_8cs_source_1l02689"/>02689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.TRSType&#32;!=&#32;trsType)
<anchor xml:id="__element_crusher_8cs_source_1l02690"/>02690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02691"/>02691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;haschanged&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02692"/>02692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(property.serializedObject.targetObject,&#32;<emphasis role="stringliteral">&quot;Select&#32;TRS&#32;Type&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02693"/>02693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.TRSType&#32;=&#32;trsType;
<anchor xml:id="__element_crusher_8cs_source_1l02694"/>02694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02695"/>02695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02696"/>02696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.TRSType&#32;==&#32;TRSType.Quaternion&#32;||&#32;target.TRSType&#32;==&#32;TRSType.Euler)
<anchor xml:id="__element_crusher_8cs_source_1l02697"/>02697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02698"/>02698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l02699"/>02699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;trsType&#32;=&#32;(TRSType)EditorGUI.EnumPopup(<emphasis role="keyword">new</emphasis>&#32;Rect(fcLeft&#32;-&#32;2,&#32;currentline&#32;-&#32;1,&#32;enumwidth,&#32;LINEHEIGHT),&#32;GUIContent.none,&#32;(RotationType)target.TRSType,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;GV&#32;Gizmo&#32;DropDown&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02700"/>02700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;holdindent;
<anchor xml:id="__element_crusher_8cs_source_1l02701"/>02701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.TRSType&#32;!=&#32;trsType)
<anchor xml:id="__element_crusher_8cs_source_1l02702"/>02702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02703"/>02703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;haschanged&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02704"/>02704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(property.serializedObject.targetObject,&#32;<emphasis role="stringliteral">&quot;Select&#32;Rotation&#32;Type&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02705"/>02705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.TRSType&#32;=&#32;trsType;
<anchor xml:id="__element_crusher_8cs_source_1l02706"/>02706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02707"/>02707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02708"/>02708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02709"/>02709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02710"/>02710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUIContent&#32;title&#32;=
<anchor xml:id="__element_crusher_8cs_source_1l02711"/>02711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(isWrappedInTransformCrusher&#32;||&#32;showHeader)&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(Enum.GetName(typeof(TRSType),&#32;target.TRSType))&#32;:&#32;gc_label;&#32;<emphasis role="comment">//&#32;+&#32;&quot;&#32;Crshr&quot;);</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02712"/>02712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Label(<emphasis role="keyword">new</emphasis>&#32;Rect(fcLeft&#32;+&#32;2,&#32;currentline,&#32;r.width,&#32;LINEHEIGHT),&#32;title,&#32;MINI_LBL_STYLE);
<anchor xml:id="__element_crusher_8cs_source_1l02713"/>02713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02714"/>02714 
<anchor xml:id="__element_crusher_8cs_source_1l02716"/>02716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.TRSType&#32;==&#32;TRSType.Position&#32;&amp;&amp;&#32;!isWorldBounds)
<anchor xml:id="__element_crusher_8cs_source_1l02717"/>02717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02718"/>02718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l02719"/>02719 
<anchor xml:id="__element_crusher_8cs_source_1l02720"/>02720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUIContent&#32;wb_gc&#32;=&#32;(r.width&#32;&gt;&#32;320)&#32;?&#32;GC_USE_WRLDBNDS_LONG&#32;:&#32;GC_USE_WRLDBNDS_SHRT;
<anchor xml:id="__element_crusher_8cs_source_1l02721"/>02721 
<anchor xml:id="__element_crusher_8cs_source_1l02722"/>02722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(fcLeft2&#32;+&#32;14,&#32;currentline,&#32;enumwidth&#32;-&#32;10,&#32;LINEHEIGHT),&#32;wb_gc,&#32;MINI_LBL_STYLE);
<anchor xml:id="__element_crusher_8cs_source_1l02723"/>02723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useWrldBnds&#32;=&#32;GUI.Toggle(<emphasis role="keyword">new</emphasis>&#32;Rect(fcLeft2,&#32;currentline,&#32;16,&#32;LINEHEIGHT),&#32;useWorldBounds.boolValue,&#32;GUIContent.none,&#32;MINI_TGL_STYLE);
<anchor xml:id="__element_crusher_8cs_source_1l02724"/>02724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(useWrldBnds&#32;!=&#32;useWorldBounds.boolValue)
<anchor xml:id="__element_crusher_8cs_source_1l02725"/>02725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02726"/>02726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;haschanged&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02727"/>02727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(property.serializedObject.targetObject,&#32;<emphasis role="stringliteral">&quot;Toggle&#32;Use&#32;World&#32;Bounds&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02728"/>02728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.UseWorldBounds&#32;=&#32;useWrldBnds;
<anchor xml:id="__element_crusher_8cs_source_1l02729"/>02729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02730"/>02730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;holdindent;
<anchor xml:id="__element_crusher_8cs_source_1l02731"/>02731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02732"/>02732 
<anchor xml:id="__element_crusher_8cs_source_1l02733"/>02733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.enableLocalSelector&#32;&amp;&amp;&#32;(target.TRSType&#32;!=&#32;TRSType.Position&#32;||&#32;!target.UseWorldBounds))
<anchor xml:id="__element_crusher_8cs_source_1l02734"/>02734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02735"/>02735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l02736"/>02736 
<anchor xml:id="__element_crusher_8cs_source_1l02737"/>02737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Label(<emphasis role="keyword">new</emphasis>&#32;Rect(paddedright&#32;-&#32;localtoggleleft&#32;+&#32;14&#32;<emphasis role="comment">/*+&#32;14*/</emphasis>,&#32;currentline,&#32;80,&#32;LINEHEIGHT),&#32;GC_LCL,&#32;MINI_LBL_STYLE);
<anchor xml:id="__element_crusher_8cs_source_1l02738"/>02738 
<anchor xml:id="__element_crusher_8cs_source_1l02739"/>02739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;local&#32;=&#32;GUI.Toggle(<emphasis role="keyword">new</emphasis>&#32;Rect(paddedright&#32;-&#32;localtoggleleft,&#32;currentline,&#32;20,&#32;LINEHEIGHT),&#32;target.local,&#32;GUIContent.none,&#32;MINI_TGL_STYLE);
<anchor xml:id="__element_crusher_8cs_source_1l02740"/>02740 
<anchor xml:id="__element_crusher_8cs_source_1l02741"/>02741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.local&#32;!=&#32;local)
<anchor xml:id="__element_crusher_8cs_source_1l02742"/>02742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02743"/>02743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;haschanged&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02744"/>02744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(property.serializedObject.targetObject,&#32;<emphasis role="stringliteral">&quot;Toggle&#32;Local&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02745"/>02745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.local&#32;=&#32;local;
<anchor xml:id="__element_crusher_8cs_source_1l02746"/>02746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02747"/>02747 
<anchor xml:id="__element_crusher_8cs_source_1l02748"/>02748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;holdindent;
<anchor xml:id="__element_crusher_8cs_source_1l02749"/>02749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02750"/>02750 
<anchor xml:id="__element_crusher_8cs_source_1l02751"/>02751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(paddedleft,&#32;currentline,&#32;paddedwidth,&#32;16),&#32;target.TallyBits()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;Bits&quot;</emphasis>,&#32;miniLabelRight);
<anchor xml:id="__element_crusher_8cs_source_1l02752"/>02752 
<anchor xml:id="__element_crusher_8cs_source_1l02753"/>02753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Scale&#32;Uniform&#32;Enum</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02754"/>02754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.TRSType&#32;==&#32;TRSType.Scale)
<anchor xml:id="__element_crusher_8cs_source_1l02755"/>02755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02756"/>02756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l02757"/>02757 
<anchor xml:id="__element_crusher_8cs_source_1l02758"/>02758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;uniformAxes&#32;=
<anchor xml:id="__element_crusher_8cs_source_1l02759"/>02759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ElementCrusher.UniformAxes)EditorGUI.EnumPopup(<emphasis role="keyword">new</emphasis>&#32;Rect(fcLeft2,&#32;currentline&#32;-&#32;1,&#32;enumwidth,&#32;LINEHEIGHT),&#32;GUIContent.none,&#32;target.uniformAxes,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;GV&#32;Gizmo&#32;DropDown&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02760"/>02760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.uniformAxes&#32;!=&#32;uniformAxes)
<anchor xml:id="__element_crusher_8cs_source_1l02761"/>02761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02762"/>02762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;haschanged&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02763"/>02763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(property.serializedObject.targetObject,&#32;<emphasis role="stringliteral">&quot;Select&#32;Uniform&#32;Axes&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02764"/>02764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.uniformAxes&#32;=&#32;uniformAxes;
<anchor xml:id="__element_crusher_8cs_source_1l02765"/>02765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02766"/>02766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;holdindent;
<anchor xml:id="__element_crusher_8cs_source_1l02767"/>02767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02768"/>02768 
<anchor xml:id="__element_crusher_8cs_source_1l02769"/>02769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isExpanded.boolValue<emphasis role="comment">/*&#32;&amp;&amp;&#32;(target.TRSType&#32;!=&#32;TRSType.Position&#32;||&#32;!target.useWorldBounds)*/</emphasis>)
<anchor xml:id="__element_crusher_8cs_source_1l02770"/>02770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02771"/>02771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentline&#32;+=&#32;TITL_HGHT&#32;+&#32;SPACING;
<anchor xml:id="__element_crusher_8cs_source_1l02772"/>02772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isSingleElement&#32;=&#32;(target.TRSType&#32;==&#32;TRSType.Scale&#32;&amp;&amp;&#32;target.uniformAxes&#32;!=&#32;0)&#32;||&#32;(target.TRSType&#32;==&#32;TRSType.Quaternion);
<anchor xml:id="__element_crusher_8cs_source_1l02773"/>02773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;propr&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin&#32;+&#32;PADDING,&#32;currentline,&#32;r.width&#32;-&#32;PADDING&#32;*&#32;2,&#32;isSingleElement&#32;?
<anchor xml:id="__element_crusher_8cs_source_1l02774"/>02774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((target.TRSType&#32;==&#32;TRSType.Quaternion)&#32;?&#32;qh&#32;:&#32;wh)&#32;:
<anchor xml:id="__element_crusher_8cs_source_1l02775"/>02775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xh&#32;+&#32;yh&#32;+&#32;zh);
<anchor xml:id="__element_crusher_8cs_source_1l02776"/>02776 
<anchor xml:id="__element_crusher_8cs_source_1l02777"/>02777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.TRSType&#32;==&#32;TRSType.Scale&#32;&amp;&amp;&#32;target.uniformAxes&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l02778"/>02778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02779"/>02779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(propr,&#32;u);
<anchor xml:id="__element_crusher_8cs_source_1l02780"/>02780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02781"/>02781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.TRSType&#32;==&#32;TRSType.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l02782"/>02782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02783"/>02783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(propr,&#32;q);
<anchor xml:id="__element_crusher_8cs_source_1l02784"/>02784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02785"/>02785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02786"/>02786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02787"/>02787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target.UseWorldBounds)
<anchor xml:id="__element_crusher_8cs_source_1l02788"/>02788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02789"/>02789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__element_crusher_8cs_source_1l02790"/>02790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(propr,&#32;boundsGroupId);
<anchor xml:id="__element_crusher_8cs_source_1l02791"/>02791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
<anchor xml:id="__element_crusher_8cs_source_1l02792"/>02792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02793"/>02793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;new&#32;value&#32;as&#32;a&#32;property&#32;in&#32;order&#32;to&#32;trigger&#32;the&#32;property.</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02794"/>02794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target.BoundsGroupId&#32;=&#32;boundsGroupId.intValue;
<anchor xml:id="__element_crusher_8cs_source_1l02795"/>02795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02796"/>02796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02797"/>02797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02798"/>02798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02799"/>02799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fcgc&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;(isWorldBounds&#32;&amp;&amp;&#32;disableRanges)&#32;?&#32;<emphasis role="stringliteral">&quot;DISABLE_RANGE&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02800"/>02800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(propr,&#32;x,&#32;fcgc);
<anchor xml:id="__element_crusher_8cs_source_1l02801"/>02801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;propr.yMin&#32;+=&#32;xh;
<anchor xml:id="__element_crusher_8cs_source_1l02802"/>02802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(propr,&#32;y,&#32;fcgc);
<anchor xml:id="__element_crusher_8cs_source_1l02803"/>02803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;propr.yMin&#32;+=&#32;yh;
<anchor xml:id="__element_crusher_8cs_source_1l02804"/>02804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(propr,&#32;z,&#32;fcgc);
<anchor xml:id="__element_crusher_8cs_source_1l02805"/>02805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02806"/>02806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02807"/>02807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02808"/>02808 
<anchor xml:id="__element_crusher_8cs_source_1l02809"/>02809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck()&#32;||&#32;haschanged)
<anchor xml:id="__element_crusher_8cs_source_1l02810"/>02810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02811"/>02811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.serializedObject.ApplyModifiedProperties();
<anchor xml:id="__element_crusher_8cs_source_1l02812"/>02812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.SetDirty(property.serializedObject.targetObject);
<anchor xml:id="__element_crusher_8cs_source_1l02813"/>02813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02814"/>02814 
<anchor xml:id="__element_crusher_8cs_source_1l02815"/>02815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;holdindent;
<anchor xml:id="__element_crusher_8cs_source_1l02816"/>02816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02817"/>02817 
<anchor xml:id="__element_crusher_8cs_source_1l02818"/>02818 
<anchor xml:id="__element_crusher_8cs_source_1l02819"/>02819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;GetPropertyHeight(SerializedProperty&#32;property,&#32;GUIContent&#32;label)
<anchor xml:id="__element_crusher_8cs_source_1l02820"/>02820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02821"/>02821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;trsType&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_trsType&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02822"/>02822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;uniformAxes&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;uniformAxes&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02823"/>02823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;x&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_xcrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02824"/>02824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;y&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_ycrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02825"/>02825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;z&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_zcrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02826"/>02826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;u&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_ucrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02827"/>02827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;q&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_qcrusher&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02828"/>02828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;useWorldBounds&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;useWorldBounds&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02829"/>02829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;boundsGroupId&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;boundsGroupId&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02830"/>02830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;isExpanded&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;isExpanded&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02831"/>02831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;hideFieldName&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;hideFieldName&quot;</emphasis>);
<anchor xml:id="__element_crusher_8cs_source_1l02832"/>02832 
<anchor xml:id="__element_crusher_8cs_source_1l02833"/>02833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;showHeader&#32;=&#32;!hideFieldName.boolValue&#32;&amp;&amp;&#32;!(DrawerUtils.GetParent(property)&#32;is&#32;TransformCrusher);
<anchor xml:id="__element_crusher_8cs_source_1l02834"/>02834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isexpanded&#32;=&#32;isExpanded.boolValue&#32;<emphasis role="comment">/*&amp;&amp;&#32;(trsType.intValue&#32;!=&#32;(int)TRSType.Position&#32;||&#32;!useWorldBounds.boolValue)*/</emphasis>;
<anchor xml:id="__element_crusher_8cs_source_1l02835"/>02835 
<anchor xml:id="__element_crusher_8cs_source_1l02836"/>02836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;topAndBottom&#32;=&#32;PADDING&#32;+&#32;TITL_HGHT&#32;+&#32;BTTM_MARGIN&#32;+&#32;((showHeader)&#32;?&#32;LINEHEIGHT&#32;:&#32;0);&#32;<emphasis role="comment">//&#32;+&#32;TOP_PAD&#32;:&#32;TOP_PAD;</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02837"/>02837 
<anchor xml:id="__element_crusher_8cs_source_1l02838"/>02838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isexpanded)
<anchor xml:id="__element_crusher_8cs_source_1l02839"/>02839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;topAndBottom;
<anchor xml:id="__element_crusher_8cs_source_1l02840"/>02840 
<anchor xml:id="__element_crusher_8cs_source_1l02841"/>02841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;h;
<anchor xml:id="__element_crusher_8cs_source_1l02842"/>02842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trsType.enumValueIndex&#32;==&#32;(<emphasis role="keywordtype">int</emphasis>)TRSType.Scale&#32;&amp;&amp;&#32;uniformAxes.enumValueIndex&#32;!=&#32;0)
<anchor xml:id="__element_crusher_8cs_source_1l02843"/>02843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02844"/>02844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h&#32;=&#32;EditorGUI.GetPropertyHeight(u);
<anchor xml:id="__element_crusher_8cs_source_1l02845"/>02845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02846"/>02846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trsType.enumValueIndex&#32;==&#32;(<emphasis role="keywordtype">int</emphasis>)TRSType.Quaternion)
<anchor xml:id="__element_crusher_8cs_source_1l02847"/>02847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02848"/>02848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h&#32;=&#32;(isexpanded)&#32;?&#32;EditorGUI.GetPropertyHeight(q)&#32;:&#32;0;
<anchor xml:id="__element_crusher_8cs_source_1l02849"/>02849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02850"/>02850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02851"/>02851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02852"/>02852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(useWorldBounds.boolValue)
<anchor xml:id="__element_crusher_8cs_source_1l02853"/>02853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02854"/>02854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h&#32;=&#32;EditorGUI.GetPropertyHeight(boundsGroupId);
<anchor xml:id="__element_crusher_8cs_source_1l02855"/>02855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02856"/>02856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02857"/>02857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__element_crusher_8cs_source_1l02858"/>02858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;xh&#32;=&#32;EditorGUI.GetPropertyHeight(x);
<anchor xml:id="__element_crusher_8cs_source_1l02859"/>02859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;yh&#32;=&#32;EditorGUI.GetPropertyHeight(y);
<anchor xml:id="__element_crusher_8cs_source_1l02860"/>02860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;zh&#32;=&#32;EditorGUI.GetPropertyHeight(z);
<anchor xml:id="__element_crusher_8cs_source_1l02861"/>02861 
<anchor xml:id="__element_crusher_8cs_source_1l02862"/>02862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h&#32;=&#32;xh&#32;+&#32;yh&#32;+&#32;zh;
<anchor xml:id="__element_crusher_8cs_source_1l02863"/>02863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02864"/>02864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02865"/>02865 
<anchor xml:id="__element_crusher_8cs_source_1l02866"/>02866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;topAndBottom&#32;+&#32;SPACING&#32;+&#32;h&#32;+&#32;PADDING&#32;-&#32;1;
<anchor xml:id="__element_crusher_8cs_source_1l02867"/>02867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02868"/>02868 &#32;&#32;&#32;&#32;}
<anchor xml:id="__element_crusher_8cs_source_1l02869"/>02869 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02870"/>02870 
<anchor xml:id="__element_crusher_8cs_source_1l02871"/>02871 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__element_crusher_8cs_source_1l02872"/>02872 }
</programlisting></section>
