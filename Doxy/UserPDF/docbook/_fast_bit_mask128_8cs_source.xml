<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__fast_bit_mask128_8cs_source" xml:lang="en-US">
<title>FastBitMask128.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/FastBitMask/FastBitMask128.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__fast_bit_mask128_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00005"/>00005 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Text;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00008"/>00008 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00009"/>00009 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_utilities">Photon.Utilities</link>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00010"/>00010 {
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00015"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">00015</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;ulong&#32;seg1,&#32;seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitcount,&#32;seg1bitcount,&#32;seg2bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;ulong&#32;alltrue1,&#32;alltrue2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00020"/>00020 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00021"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab857e51b0597a1a25e1a7dbf9b85cf79">00021</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ulong&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab857e51b0597a1a25e1a7dbf9b85cf79">Seg1</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;seg1;&#32;}&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00022"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a0f99bebf69052b0a3b379d9ade015e13">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ulong&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a0f99bebf69052b0a3b379d9ade015e13">Seg2</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;seg2;&#32;}&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00023"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a986a6ef9eac7adb6383cdd3cd2dbc638">00023</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ulong&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a986a6ef9eac7adb6383cdd3cd2dbc638">AllTrue1</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;alltrue1;&#32;}&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00024"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aebc6131a7df0c31ac08729b066267eb6">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ulong&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aebc6131a7df0c31ac08729b066267eb6">AllTrue2</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;alltrue2;&#32;}&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00025"/>00025 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00029"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1abfb0effd7b7f259038cf07d39804286f">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1abfb0effd7b7f259038cf07d39804286f">BitCount</link>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00035"/>00035 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00038"/>00038 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&gt;&#32;128)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Attempting&#32;to&#32;set&#32;&quot;</emphasis>&#32;+&#32;typeof(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>).Name&#32;+&#32;<emphasis role="stringliteral">&quot;.bitcount&#32;to&#32;&quot;</emphasis>&#32;+&#32;value&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;but&#32;the&#32;max&#32;allowed&#32;is&#32;128.&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitcount&#32;=&#32;128;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Attempting&#32;to&#32;set&#32;&quot;</emphasis>&#32;+&#32;typeof(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>).Name&#32;+&#32;<emphasis role="stringliteral">&quot;.bitcount&#32;to&#32;&quot;</emphasis>&#32;+&#32;value&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;but&#32;the&#32;min&#32;allowed&#32;is&#32;0.&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitcount&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitcount&#32;=&#32;value;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00051"/>00051 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitcount&#32;=&#32;value;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00053"/>00053 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00054"/>00054 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg1bitcount&#32;=&#32;bitcount&#32;&lt;&#32;64&#32;?&#32;bitcount&#32;:&#32;64;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg2bitcount&#32;=&#32;bitcount&#32;&gt;&#32;64&#32;?&#32;bitcount&#32;-&#32;64&#32;:&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00057"/>00057 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alltrue1&#32;=
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(bitcount&#32;&lt;&#32;64)&#32;?&#32;((ulong)1&#32;&lt;&lt;&#32;bitcount)&#32;-&#32;1&#32;:
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong.MaxValue;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alltrue2&#32;=
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(bitcount&#32;==&#32;128)&#32;?&#32;ulong.MaxValue&#32;:
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(bitcount&#32;&gt;&#32;64)&#32;?&#32;((ulong)1&#32;&lt;&lt;&#32;(bitcount&#32;-&#32;64))&#32;-&#32;1&#32;:
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00065"/>00065 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;any&#32;old&#32;bits&#32;that&#32;are&#32;no&#32;longer&#32;in&#32;use&#32;-&#32;allows&#32;for&#32;very&#32;unchecked&#32;testing&#32;if&#32;we&#32;can&#32;assume&#32;they&#32;are&#32;all&#32;zero</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;=&#32;seg1&#32;&amp;&#32;alltrue1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;=&#32;seg2&#32;&amp;&#32;alltrue2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00069"/>00069 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00072"/>00072 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00073"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab05f32fe7c521a16d4efbb53cc597cb7">00073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab05f32fe7c521a16d4efbb53cc597cb7">FastBitMask128</link>(<emphasis role="keywordtype">int</emphasis>&#32;bitcount)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00075"/>00075 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bitcount&#32;&gt;&#32;127&#32;||&#32;bitcount&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RangeError(bitcount);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00078"/>00078 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg1&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg2&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bitcount&#32;=&#32;bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg1bitcount&#32;=&#32;bitcount&#32;&lt;&#32;64&#32;?&#32;bitcount&#32;:&#32;64;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg2bitcount&#32;=&#32;bitcount&#32;&gt;&#32;64&#32;?&#32;bitcount&#32;-&#32;64&#32;:&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00084"/>00084 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alltrue1&#32;=
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(bitcount&#32;&lt;&#32;64)&#32;?&#32;((ulong)1&#32;&lt;&lt;&#32;bitcount)&#32;-&#32;1&#32;:
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong.MaxValue;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alltrue2&#32;=
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(bitcount&#32;==&#32;128)&#32;?&#32;ulong.MaxValue&#32;:
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(bitcount&#32;&gt;&#32;64)&#32;?&#32;((ulong)1&#32;&lt;&lt;&#32;(bitcount&#32;-&#32;64))&#32;-&#32;1&#32;:
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00093"/>00093 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00094"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a2ea078b9cf686594c71a8a220350dd9a">00094</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a2ea078b9cf686594c71a8a220350dd9a">FastBitMask128</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;copyFrom)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg1&#32;=&#32;copyFrom.seg1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg2&#32;=&#32;copyFrom.seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bitcount&#32;=&#32;copyFrom.bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg1bitcount&#32;=&#32;copyFrom.seg1bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.seg2bitcount&#32;=&#32;copyFrom.seg2bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.alltrue1&#32;=&#32;copyFrom.alltrue1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.alltrue2&#32;=&#32;copyFrom.alltrue2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00104"/>00104 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00105"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ad97526ad83919d98c03c047709907361">00105</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<emphasis role="keyword">this</emphasis>[<emphasis role="keywordtype">int</emphasis>&#32;bit]
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00109"/>00109 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&gt;&#32;127&#32;||&#32;bit&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RangeError(bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00112"/>00112 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&lt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(seg1&#32;&amp;&#32;((ulong)1&#32;&lt;&lt;&#32;bit))&#32;!=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(seg2&#32;&amp;&#32;((ulong)1&#32;&lt;&lt;&#32;bit&#32;-&#32;64))&#32;!=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00118"/>00118 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00121"/>00121 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&gt;&#32;127&#32;||&#32;bit&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RangeError(bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00124"/>00124 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&lt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;|=&#32;((ulong)1&#32;&lt;&lt;&#32;bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;|=&#32;((ulong)1&#32;&lt;&lt;&#32;(bit&#32;-&#32;64));
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&lt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;&amp;=&#32;~((ulong)1&#32;&lt;&lt;&#32;bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;&amp;=&#32;~((ulong)1&#32;&lt;&lt;&#32;(bit&#32;-&#32;64));
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00141"/>00141 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00142"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8e3a586d4c2613cc70edad65d14ee0db">00142</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8e3a586d4c2613cc70edad65d14ee0db">Get</link>(<emphasis role="keywordtype">int</emphasis>&#32;bit)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00144"/>00144 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&gt;&#32;127&#32;||&#32;bit&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RangeError(bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00147"/>00147 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&lt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(seg1&#32;&amp;&#32;((ulong)1&#32;&lt;&lt;&#32;bit))&#32;!=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(seg2&#32;&amp;&#32;((ulong)1&#32;&lt;&lt;&#32;bit&#32;-&#32;64))&#32;!=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00153"/>00153 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00154"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a726dce8e3f2698541b171ee5dcc4ce0b">00154</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a726dce8e3f2698541b171ee5dcc4ce0b">Set</link>(<emphasis role="keywordtype">int</emphasis>&#32;bit,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00156"/>00156 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&gt;&#32;127&#32;||&#32;bit&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RangeError(bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00159"/>00159 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&lt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;|=&#32;((ulong)1&#32;&lt;&lt;&#32;bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;|=&#32;((ulong)1&#32;&lt;&lt;&#32;(bit&#32;-&#32;64));
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&lt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;&amp;=&#32;~((ulong)1&#32;&lt;&lt;&#32;bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;&amp;=&#32;~((ulong)1&#32;&lt;&lt;&#32;(bit&#32;-&#32;64));
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00175"/>00175 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00176"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ae317ca134584363171aab7fe429c3aaa">00176</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ae317ca134584363171aab7fe429c3aaa">SetTrue</link>(<emphasis role="keywordtype">int</emphasis>&#32;bit)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00178"/>00178 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&gt;&#32;127&#32;||&#32;bit&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RangeError(bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00181"/>00181 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&lt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;|=&#32;((ulong)1&#32;&lt;&lt;&#32;bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;|=&#32;((ulong)1&#32;&lt;&lt;&#32;(bit&#32;-&#32;64));
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00187"/>00187 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00188"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a55ef5aa2f25f3f16dd083bf4daea8075">00188</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a55ef5aa2f25f3f16dd083bf4daea8075">SetFalse</link>(<emphasis role="keywordtype">int</emphasis>&#32;bit)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00190"/>00190 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&gt;&#32;127&#32;||&#32;bit&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RangeError(bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00193"/>00193 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bit&#32;&lt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;&amp;=&#32;~((ulong)1&#32;&lt;&lt;&#32;bit);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;&amp;=&#32;~((ulong)1&#32;&lt;&lt;&#32;(bit&#32;-&#32;64));
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00199"/>00199 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00200"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a7cc5ccb40c34d4aa2a741272ca026baf">00200</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a7cc5ccb40c34d4aa2a741272ca026baf">SetAllTrue</link>()
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;=&#32;alltrue1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;=&#32;alltrue2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00205"/>00205 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00206"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a22852960773d69428e112cd25b6b2ddc">00206</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a22852960773d69428e112cd25b6b2ddc">SetAllFalse</link>()
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00211"/>00211 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00215"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ac30b8937cbd1047d432ee8a4f6d5c91a">00215</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ac30b8937cbd1047d432ee8a4f6d5c91a">AllAreFalse</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bitcount&#32;!=&#32;0&#32;&amp;&amp;&#32;seg1&#32;==&#32;0&#32;&amp;&amp;&#32;seg2&#32;==&#32;0;&#32;}&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00216"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a5af7e332fa9b8697c37bbe9ab29f6025">00216</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a5af7e332fa9b8697c37bbe9ab29f6025">AllAreTrue</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;bitcount&#32;==&#32;0&#32;||&#32;seg1&#32;==&#32;alltrue1&#32;&amp;&amp;&#32;seg2&#32;==&#32;alltrue2;&#32;}&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00217"/>00217 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00218"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aad5d1bfe8be1928b897d8931f17ec051">00218</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aad5d1bfe8be1928b897d8931f17ec051">OR</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;other)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;|=&#32;other.seg1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;|=&#32;other.seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00223"/>00223 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00224"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aee09b122e0e6bb2a2c7fc51d2e631882">00224</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aee09b122e0e6bb2a2c7fc51d2e631882">OR</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;other,&#32;<emphasis role="keywordtype">int</emphasis>&#32;otherOffset)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00226"/>00226 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(otherOffset&#32;==&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;|=&#32;other.seg1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;|=&#32;other.seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(otherOffset&#32;==&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;|=&#32;other.seg1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(otherOffset&#32;&gt;=&#32;128)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(otherOffset&#32;&gt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;|=&#32;(seg1&#32;&lt;&lt;&#32;(otherOffset&#32;-&#32;64));
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00247"/>00247 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;|=&#32;other.seg1&#32;&lt;&lt;&#32;otherOffset;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;|=&#32;other.seg1&#32;&gt;&gt;&#32;(64&#32;-&#32;otherOffset);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;|=&#32;other.seg2&#32;&lt;&lt;&#32;otherOffset;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00251"/>00251 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00253"/>00253 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00254"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a64ef1ee797646ae1daf67acac6c22057">00254</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a64ef1ee797646ae1daf67acac6c22057">AND</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;other)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;&amp;=&#32;other.seg1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;&amp;=&#32;other.seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00259"/>00259 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00260"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a35ab941effaa700b1d125081980bab48">00260</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a35ab941effaa700b1d125081980bab48">XOR</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;other)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;^=&#32;other.seg1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;^=&#32;other.seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00265"/>00265 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00266"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a4bf6b057b68d16581c62a17443b159b6">00266</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a4bf6b057b68d16581c62a17443b159b6">operator |</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;a,&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;b)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab05f32fe7c521a16d4efbb53cc597cb7">FastBitMask128</link>(a)&#32;{&#32;seg1&#32;=&#32;a.seg1&#32;|&#32;b.seg1,&#32;seg2&#32;=&#32;a.seg2&#32;|&#32;b.seg2&#32;};
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00270"/>00270 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00271"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8ffff637f05a4111b28d7d15b7a95abc">00271</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8ffff637f05a4111b28d7d15b7a95abc">operator &amp;</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;a,&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;b)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab05f32fe7c521a16d4efbb53cc597cb7">FastBitMask128</link>(a)&#32;{&#32;seg1&#32;=&#32;a.seg1&#32;&amp;&#32;b.seg1,&#32;seg2&#32;=&#32;a.seg2&#32;&amp;&#32;b.seg2&#32;};
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00275"/>00275 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00276"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a3e293be67b9278ac19ac9bae34df54a3">00276</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a3e293be67b9278ac19ac9bae34df54a3">operator ^</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;a,&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;b)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab05f32fe7c521a16d4efbb53cc597cb7">FastBitMask128</link>(a)&#32;{&#32;seg1&#32;=&#32;(a.seg1&#32;^&#32;b.seg1)&#32;&amp;&#32;a.alltrue1,&#32;seg2&#32;=&#32;(a.seg2&#32;^&#32;b.seg2)&#32;&amp;&#32;a.alltrue2&#32;};
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00280"/>00280 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00281"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aaf979b1749bb8a8a05bda62933800804">00281</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aaf979b1749bb8a8a05bda62933800804">operator !</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;a)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab05f32fe7c521a16d4efbb53cc597cb7">FastBitMask128</link>(a)&#32;{&#32;seg1&#32;=&#32;(~a.seg1)&#32;&amp;&#32;a.alltrue1,&#32;seg2&#32;=&#32;(~a.seg2)&#32;&amp;&#32;a.alltrue2&#32;};
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00285"/>00285 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00290"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8fa80f028971525e11969a36852a5d07">00290</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8fa80f028971525e11969a36852a5d07">NOT</link>()
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab05f32fe7c521a16d4efbb53cc597cb7">FastBitMask128</link>(<emphasis role="keyword">this</emphasis>)&#32;{&#32;seg1&#32;=&#32;(~seg1&#32;&amp;&#32;alltrue1),&#32;seg2&#32;=&#32;(~seg2&#32;&amp;&#32;alltrue2)&#32;};&#32;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00294"/>00294 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[UnityEditor.InitializeOnLoadMethod]</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;void&#32;Tester()</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;var&#32;test&#32;=&#32;new&#32;FastBitMask128(64)&#32;{&#32;seg1&#32;=&#32;((ulong)1&#32;&lt;&lt;&#32;63),&#32;seg2&#32;=&#32;2&#32;};</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;//test.SetAllTrue();</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.Log(test.seg1&#32;+&#32;&quot;:&quot;&#32;+&#32;test.seg2&#32;+&#32;&quot;&#32;&#32;TestCNT:&#32;&quot;&#32;+&#32;test.CountTrue()&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;test.CountFalse());</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00302"/>00302 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;these&#32;could&#32;be&#32;faster</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00304"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a1c1481e06a72e75e63ce8b1904ca142f">00304</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a1c1481e06a72e75e63ce8b1904ca142f">CountTrue</link>()
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;truecount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00307"/>00307 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seg1&#32;==&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seg1&#32;==&#32;alltrue1)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount&#32;=&#32;seg1bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;scratch&#32;=&#32;seg1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00316"/>00316 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(scratch&#32;!=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((scratch&#32;&amp;&#32;1)&#32;==&#32;1)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount++;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00321"/>00321 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scratch&#32;=&#32;scratch&#32;&gt;&gt;&#32;1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00325"/>00325 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seg2&#32;==&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truecount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seg2&#32;==&#32;alltrue2)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truecount&#32;+&#32;seg2bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;scratch&#32;=&#32;seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00333"/>00333 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(scratch&#32;!=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((scratch&#32;&amp;&#32;1)&#32;==&#32;1)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount++;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00338"/>00338 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scratch&#32;=&#32;scratch&#32;&gt;&gt;&#32;1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00341"/>00341 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truecount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00345"/>00345 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00346"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ac4baa9435e76835f326e2eba3b741d52">00346</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ac4baa9435e76835f326e2eba3b741d52">CountFalse</link>()
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;truecount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00349"/>00349 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seg1&#32;==&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seg1&#32;==&#32;alltrue1)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount&#32;=&#32;seg1bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;scratch&#32;=&#32;seg1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00358"/>00358 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(scratch&#32;!=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((scratch&#32;&amp;&#32;1)&#32;==&#32;1)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount++;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00363"/>00363 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scratch&#32;=&#32;scratch&#32;&gt;&gt;&#32;1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00367"/>00367 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seg2&#32;==&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bitcount&#32;-&#32;truecount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(seg2&#32;==&#32;alltrue2)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bitcount&#32;-&#32;(truecount&#32;+&#32;seg2bitcount);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;scratch&#32;=&#32;seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00375"/>00375 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(scratch&#32;!=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((scratch&#32;&amp;&#32;1)&#32;==&#32;1)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;truecount++;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00380"/>00380 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scratch&#32;=&#32;scratch&#32;&gt;&gt;&#32;1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00383"/>00383 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bitcount&#32;-&#32;truecount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00387"/>00387 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00388"/>00388 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00389"/>00389 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00396"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aa9950170bb2e23bd3a00c7a31dfc6062">00396</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aa9950170bb2e23bd3a00c7a31dfc6062">ClearBitsBefore</link>(<emphasis role="keywordtype">int</emphasis>&#32;start,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00398"/>00398 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(start&#32;&gt;&#32;127&#32;||&#32;start&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RangeError(start);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00401"/>00401 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00402"/>00402 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;count&#32;==&#32;64&#32;?&#32;ulong.MaxValue&#32;:&#32;((ulong)1&#32;&lt;&lt;&#32;count)&#32;-&#32;1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask1,&#32;mask2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset&#32;=&#32;start&#32;-&#32;count;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00406"/>00406 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bitcount&#32;&gt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset&#32;&gt;=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask1&#32;=&#32;mask&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask2&#32;=&#32;mask&#32;&gt;&gt;&#32;(seg2bitcount&#32;-&#32;offset);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;wrapmask&#32;=&#32;mask&#32;&lt;&lt;&#32;(bitcount&#32;+&#32;offset);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask1&#32;=&#32;(mask&#32;&gt;&gt;&#32;-offset)&#32;|&#32;wrapmask;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask2&#32;=&#32;mask&#32;&lt;&lt;&#32;(seg2bitcount&#32;+&#32;offset);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00421"/>00421 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;&amp;=&#32;~mask1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;&amp;=&#32;(~mask2&#32;&amp;&#32;alltrue2);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00425"/>00425 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset&#32;&gt;=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask1&#32;=&#32;mask&#32;&lt;&lt;&#32;offset;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask2&#32;=&#32;mask&#32;&gt;&gt;&#32;(seg1bitcount&#32;-&#32;offset);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask1&#32;=&#32;mask&#32;&gt;&gt;&#32;-offset;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask2&#32;=&#32;mask&#32;&lt;&lt;&#32;(seg1bitcount&#32;+&#32;offset);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00439"/>00439 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;&amp;=&#32;~mask1&#32;&amp;&#32;~mask2&#32;&amp;&#32;alltrue1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00442"/>00442 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00447"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aae2ca192afe22303cc6525e78d49b3d5">00447</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aae2ca192afe22303cc6525e78d49b3d5">CountValidRange</link>(<emphasis role="keywordtype">int</emphasis>&#32;start,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lookahead)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00449"/>00449 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(start&#32;&gt;&#32;127&#32;||&#32;start&#32;&lt;&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RangeError(start);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00452"/>00452 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len&#32;=&#32;bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00454"/>00454 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;lookahead;&#32;i&#32;&gt;=&#32;0;&#32;--i)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b&#32;=&#32;start&#32;+&#32;i;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b&#32;&gt;=&#32;len)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b&#32;-=&#32;len;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00461"/>00461 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b&#32;&lt;&#32;64)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((seg1&#32;&amp;&#32;((ulong)1&#32;&lt;&lt;&#32;b))&#32;!=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i&#32;+&#32;1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((seg2&#32;&amp;&#32;((ulong)1&#32;&lt;&lt;&#32;b&#32;-&#32;64))&#32;!=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i&#32;+&#32;1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00473"/>00473 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00476"/>00476 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00477"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a455e692c15da7a3eb7f6faeb1276f799">00477</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a455e692c15da7a3eb7f6faeb1276f799">Copy</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;other)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitcount&#32;=&#32;other.bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1bitcount&#32;=&#32;other.seg1bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2bitcount&#32;=&#32;other.seg2bitcount;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;=&#32;other.seg1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;=&#32;other.seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alltrue1&#32;=&#32;other.alltrue1;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alltrue2&#32;=&#32;other.alltrue2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00487"/>00487 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00488"/><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a2ab4da234fdca6e6d1f0d650eeb892c6">00488</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a2ab4da234fdca6e6d1f0d650eeb892c6">Compare</link>(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;other)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitcount&#32;==&#32;other.bitcount&#32;&amp;&amp;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg1&#32;==&#32;other.seg1&#32;&amp;&amp;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seg2&#32;==&#32;other.seg2;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00495"/>00495 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00496"/>00496 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00497"/>00497 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RangeError(<emphasis role="keywordtype">int</emphasis>&#32;bit)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Value&#32;of&#32;&quot;</emphasis>&#32;+&#32;bit&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;is&#32;out&#32;of&#32;the&#32;valid&#32;index&#32;range&#32;(0-127)&#32;for&#32;&quot;</emphasis>&#32;+&#32;typeof(<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>).Name&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00502"/>00502 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00504"/>00504 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00505"/><link linkend="_class_photon_1_1_utilities_1_1_fast_bit_mask_ext">00505</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_utilities_1_1_fast_bit_mask_ext">FastBitMaskExt</link>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00507"/>00507 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00508"/>00508 <emphasis role="preprocessor">#if&#32;DEBUG&#32;||&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00509"/>00509 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00510"/>00510 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00511"/>00511 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;str&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder(512);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00513"/>00513 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;PrintMask(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;ba,&#32;<emphasis role="keywordtype">int</emphasis>&#32;greenbit&#32;=&#32;-1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;redbit&#32;=&#32;-1)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Length&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;[&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;ba.<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1abfb0effd7b7f259038cf07d39804286f">BitCount</link>&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;--i)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00520"/>00520 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;greenbit)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;&lt;color=green&gt;&quot;</emphasis>).Append(ba[i]&#32;?&#32;1&#32;:&#32;0).Append(<emphasis role="stringliteral">&quot;&lt;/color&gt;&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;redbit)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;&lt;color=red&gt;&quot;</emphasis>).Append(ba[i]&#32;?&#32;1&#32;:&#32;0).Append(<emphasis role="stringliteral">&quot;&lt;/color&gt;&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(ba[i]&#32;?&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&lt;color=#0f0f0f&gt;0&lt;/color&gt;&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00527"/>00527 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;%&#32;32&#32;==&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append((i&#32;==&#32;0)&#32;?&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;]&#32;[&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;%&#32;8&#32;==&#32;0&#32;&amp;&amp;&#32;i&#32;!=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;:&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00533"/>00533 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00536"/>00536 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;PrintMask(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;ba,&#32;<emphasis role="keywordtype">int</emphasis>&#32;greenbit&#32;=&#32;-1,&#32;<emphasis role="keywordtype">bool</emphasis>[]&#32;redbits&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Length&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;[&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;ba.<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1abfb0effd7b7f259038cf07d39804286f">BitCount</link>&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;--i)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;greenbit)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;&lt;color=green&gt;&quot;</emphasis>).Append(ba[i]&#32;?&#32;1&#32;:&#32;0).Append(<emphasis role="stringliteral">&quot;&lt;/color&gt;&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(redbits&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;i&#32;&lt;&#32;redbits.Length&#32;&amp;&amp;&#32;redbits[i])
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;&lt;color=red&gt;&quot;</emphasis>).Append(ba[i]&#32;?&#32;1&#32;:&#32;0).Append(<emphasis role="stringliteral">&quot;&lt;/color&gt;&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(ba[i]&#32;?&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&lt;color=#0f0f0f&gt;0&lt;/color&gt;&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00549"/>00549 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;%&#32;32&#32;==&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append((i&#32;==&#32;0)&#32;?&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;]&#32;[&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;%&#32;8&#32;==&#32;0&#32;&amp;&amp;&#32;i&#32;!=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;:&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00555"/>00555 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00558"/>00558 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;PrintMask(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;ba,&#32;StringBuilder[]&#32;colorbits&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Length&#32;=&#32;0;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;[&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;ba.<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1abfb0effd7b7f259038cf07d39804286f">BitCount</link>&#32;-&#32;1;&#32;i&#32;&gt;=&#32;0;&#32;--i)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00565"/>00565 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(colorbits&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;i&#32;&lt;&#32;colorbits.Length&#32;&amp;&amp;&#32;colorbits[i]&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;colorbits[i].ToString()&#32;!=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;&lt;b&gt;&lt;color=&quot;</emphasis>&#32;+&#32;colorbits[i].ToString()&#32;+&#32;<emphasis role="stringliteral">&quot;&gt;&quot;</emphasis>&#32;+&#32;(ba[i]&#32;?&#32;1&#32;:&#32;0)&#32;+&#32;<emphasis role="stringliteral">&quot;&lt;/color&gt;&lt;/b&gt;&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(ba[i]&#32;?&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&lt;color=#0f0f0f&gt;0&lt;/color&gt;&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00570"/>00570 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;%&#32;32&#32;==&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append((i&#32;==&#32;0)&#32;?&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;]&#32;[&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;%&#32;8&#32;==&#32;0&#32;&amp;&amp;&#32;i&#32;!=&#32;0)
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str.Append(<emphasis role="stringliteral">&quot;:&quot;</emphasis>);
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00576"/>00576 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str;
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00579"/>00579 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00580"/>00580 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00581"/>00581 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;}
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00583"/>00583 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00584"/>00584 
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00585"/>00585 }
<anchor xml:id="__fast_bit_mask128_8cs_source_1l00586"/>00586 
</programlisting></section>
