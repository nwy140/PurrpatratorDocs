<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__first_person_controller_8cs_source" xml:lang="en-US">
<title>FirstPersonController.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/StarterAssets/FirstPersonController/Scripts/FirstPersonController.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__first_person_controller_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__first_person_controller_8cs_source_1l00002"/>00002 <emphasis role="preprocessor">#if&#32;ENABLE_INPUT_SYSTEM&#32;&amp;&amp;&#32;STARTER_ASSETS_PACKAGES_CHECKED</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.InputSystem;
<anchor xml:id="__first_person_controller_8cs_source_1l00004"/>00004 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00005"/>00005 
<anchor xml:id="__first_person_controller_8cs_source_1l00006"/>00006 <emphasis role="comment">/*&#32;Note:&#32;animations&#32;are&#32;called&#32;via&#32;the&#32;controller&#32;for&#32;both&#32;the&#32;character&#32;and&#32;capsule&#32;using&#32;animator&#32;null&#32;checks</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00007"/>00007 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00008"/>00008 
<anchor xml:id="__first_person_controller_8cs_source_1l00009"/>00009 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_starter_assets">StarterAssets</link>
<anchor xml:id="__first_person_controller_8cs_source_1l00010"/>00010 {
<anchor xml:id="__first_person_controller_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;[RequireComponent(typeof(CharacterController))]
<anchor xml:id="__first_person_controller_8cs_source_1l00012"/>00012 <emphasis role="preprocessor">#if&#32;ENABLE_INPUT_SYSTEM&#32;&amp;&amp;&#32;STARTER_ASSETS_PACKAGES_CHECKED</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;[RequireComponent(typeof(PlayerInput))]
<anchor xml:id="__first_person_controller_8cs_source_1l00014"/>00014 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00015"/><link linkend="_class_starter_assets_1_1_first_person_controller">00015</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_starter_assets_1_1_first_person_controller">FirstPersonController</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__first_person_controller_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Player&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Move&#32;speed&#32;of&#32;the&#32;character&#32;in&#32;m/s&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00019"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a50d72f1a99554c6fbd0d15fdaa4215a8">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a50d72f1a99554c6fbd0d15fdaa4215a8">MoveSpeed</link>&#32;=&#32;4.0f;
<anchor xml:id="__first_person_controller_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Sprint&#32;speed&#32;of&#32;the&#32;character&#32;in&#32;m/s&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00021"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a47b3a36e1b0ec0a0597d2b36a16fa769">00021</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a47b3a36e1b0ec0a0597d2b36a16fa769">SprintSpeed</link>&#32;=&#32;6.0f;
<anchor xml:id="__first_person_controller_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Rotation&#32;speed&#32;of&#32;the&#32;character&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00023"/><link linkend="_class_starter_assets_1_1_first_person_controller_1ac4fca24ba0a740d948bc7c64f227c6ae">00023</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1ac4fca24ba0a740d948bc7c64f227c6ae">RotationSpeed</link>&#32;=&#32;1.0f;
<anchor xml:id="__first_person_controller_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Acceleration&#32;and&#32;deceleration&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00025"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a674ed5100118ec015a5d142804183b27">00025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a674ed5100118ec015a5d142804183b27">SpeedChangeRate</link>&#32;=&#32;10.0f;
<anchor xml:id="__first_person_controller_8cs_source_1l00026"/>00026 
<anchor xml:id="__first_person_controller_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Space(10)]
<anchor xml:id="__first_person_controller_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;height&#32;the&#32;player&#32;can&#32;jump&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00029"/><link linkend="_class_starter_assets_1_1_first_person_controller_1ae0ad5c26f3bc9ab342d77328fd773df1">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1ae0ad5c26f3bc9ab342d77328fd773df1">JumpHeight</link>&#32;=&#32;1.2f;
<anchor xml:id="__first_person_controller_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;character&#32;uses&#32;its&#32;own&#32;gravity&#32;value.&#32;The&#32;engine&#32;default&#32;is&#32;-9.81f&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00031"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a192e42bff03fd1238267665e27fececa">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a192e42bff03fd1238267665e27fececa">Gravity</link>&#32;=&#32;-15.0f;
<anchor xml:id="__first_person_controller_8cs_source_1l00032"/>00032 
<anchor xml:id="__first_person_controller_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Space(10)]
<anchor xml:id="__first_person_controller_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Time&#32;required&#32;to&#32;pass&#32;before&#32;being&#32;able&#32;to&#32;jump&#32;again.&#32;Set&#32;to&#32;0f&#32;to&#32;instantly&#32;jump&#32;again&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00035"/><link linkend="_class_starter_assets_1_1_first_person_controller_1ae9f9ca349a4857bd75b3cf00584ab492">00035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1ae9f9ca349a4857bd75b3cf00584ab492">JumpTimeout</link>&#32;=&#32;0.1f;
<anchor xml:id="__first_person_controller_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Time&#32;required&#32;to&#32;pass&#32;before&#32;entering&#32;the&#32;fall&#32;state.&#32;Useful&#32;for&#32;walking&#32;down&#32;stairs&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00037"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a62781cd260a28664624306d0cbacd153">00037</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a62781cd260a28664624306d0cbacd153">FallTimeout</link>&#32;=&#32;0.15f;
<anchor xml:id="__first_person_controller_8cs_source_1l00038"/>00038 
<anchor xml:id="__first_person_controller_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Player&#32;Grounded&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;If&#32;the&#32;character&#32;is&#32;grounded&#32;or&#32;not.&#32;Not&#32;part&#32;of&#32;the&#32;CharacterController&#32;built&#32;in&#32;grounded&#32;check&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00041"/><link linkend="_class_starter_assets_1_1_first_person_controller_1accc1975453d0864cac05f6dcaa432450">00041</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1accc1975453d0864cac05f6dcaa432450">Grounded</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__first_person_controller_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Useful&#32;for&#32;rough&#32;ground&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00043"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a17433a03422b3d462cda9596294e84c4">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a17433a03422b3d462cda9596294e84c4">GroundedOffset</link>&#32;=&#32;-0.14f;
<anchor xml:id="__first_person_controller_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;radius&#32;of&#32;the&#32;grounded&#32;check.&#32;Should&#32;match&#32;the&#32;radius&#32;of&#32;the&#32;CharacterController&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00045"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a0ecb7649732266bfce901015e5b2b772">00045</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a0ecb7649732266bfce901015e5b2b772">GroundedRadius</link>&#32;=&#32;0.5f;
<anchor xml:id="__first_person_controller_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;What&#32;layers&#32;the&#32;character&#32;uses&#32;as&#32;ground&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00047"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a04b0ed571bb7f19a97399388095997ee">00047</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;LayerMask&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a04b0ed571bb7f19a97399388095997ee">GroundLayers</link>;
<anchor xml:id="__first_person_controller_8cs_source_1l00048"/>00048 
<anchor xml:id="__first_person_controller_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Cinemachine&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;follow&#32;target&#32;set&#32;in&#32;the&#32;Cinemachine&#32;Virtual&#32;Camera&#32;that&#32;the&#32;camera&#32;will&#32;follow&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00051"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a5a4197ec6c1f2eb3e07f9c9800a9a590">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a5a4197ec6c1f2eb3e07f9c9800a9a590">CinemachineCameraTarget</link>;
<anchor xml:id="__first_person_controller_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;How&#32;far&#32;in&#32;degrees&#32;can&#32;you&#32;move&#32;the&#32;camera&#32;up&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00053"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a7ad98aae68ac138582cf829a9fe60126">00053</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a7ad98aae68ac138582cf829a9fe60126">TopClamp</link>&#32;=&#32;90.0f;
<anchor xml:id="__first_person_controller_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;How&#32;far&#32;in&#32;degrees&#32;can&#32;you&#32;move&#32;the&#32;camera&#32;down&quot;</emphasis>)]
<anchor xml:id="__first_person_controller_8cs_source_1l00055"/><link linkend="_class_starter_assets_1_1_first_person_controller_1a6505a295f6685424cd0395b0b6065a96">00055</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a6505a295f6685424cd0395b0b6065a96">BottomClamp</link>&#32;=&#32;-90.0f;
<anchor xml:id="__first_person_controller_8cs_source_1l00056"/>00056 
<anchor xml:id="__first_person_controller_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cinemachine</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_cinemachineTargetPitch;
<anchor xml:id="__first_person_controller_8cs_source_1l00059"/>00059 
<anchor xml:id="__first_person_controller_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;player</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_speed;
<anchor xml:id="__first_person_controller_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_rotationVelocity;
<anchor xml:id="__first_person_controller_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_verticalVelocity;
<anchor xml:id="__first_person_controller_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_terminalVelocity&#32;=&#32;53.0f;
<anchor xml:id="__first_person_controller_8cs_source_1l00065"/>00065 
<anchor xml:id="__first_person_controller_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;timeout&#32;deltatime</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_jumpTimeoutDelta;
<anchor xml:id="__first_person_controller_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_fallTimeoutDelta;
<anchor xml:id="__first_person_controller_8cs_source_1l00069"/>00069 
<anchor xml:id="__first_person_controller_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;CharacterController&#32;_controller;
<anchor xml:id="__first_person_controller_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_starter_assets_1_1_starter_assets_inputs">StarterAssetsInputs</link>&#32;_input;
<anchor xml:id="__first_person_controller_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_mainCamera;
<anchor xml:id="__first_person_controller_8cs_source_1l00073"/>00073 
<anchor xml:id="__first_person_controller_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_threshold&#32;=&#32;0.01f;
<anchor xml:id="__first_person_controller_8cs_source_1l00075"/>00075 
<anchor xml:id="__first_person_controller_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__first_person_controller_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;get&#32;a&#32;reference&#32;to&#32;our&#32;main&#32;camera</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_mainCamera&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__first_person_controller_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_mainCamera&#32;=&#32;GameObject.FindGameObjectWithTag(<emphasis role="stringliteral">&quot;MainCamera&quot;</emphasis>);
<anchor xml:id="__first_person_controller_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00084"/>00084 
<anchor xml:id="__first_person_controller_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__first_person_controller_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_controller&#32;=&#32;GetComponent&lt;CharacterController&gt;();
<anchor xml:id="__first_person_controller_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_input&#32;=&#32;GetComponent&lt;StarterAssetsInputs&gt;();
<anchor xml:id="__first_person_controller_8cs_source_1l00089"/>00089 
<anchor xml:id="__first_person_controller_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;reset&#32;our&#32;timeouts&#32;on&#32;start</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_jumpTimeoutDelta&#32;=&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1ae9f9ca349a4857bd75b3cf00584ab492">JumpTimeout</link>;
<anchor xml:id="__first_person_controller_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_fallTimeoutDelta&#32;=&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a62781cd260a28664624306d0cbacd153">FallTimeout</link>;
<anchor xml:id="__first_person_controller_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00094"/>00094 
<anchor xml:id="__first_person_controller_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__first_person_controller_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;JumpAndGravity();
<anchor xml:id="__first_person_controller_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GroundedCheck();
<anchor xml:id="__first_person_controller_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Move();
<anchor xml:id="__first_person_controller_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00101"/>00101 
<anchor xml:id="__first_person_controller_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;LateUpdate()
<anchor xml:id="__first_person_controller_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CameraRotation();
<anchor xml:id="__first_person_controller_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00106"/>00106 
<anchor xml:id="__first_person_controller_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;GroundedCheck()
<anchor xml:id="__first_person_controller_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;sphere&#32;position,&#32;with&#32;offset</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;spherePosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(transform.position.x,&#32;transform.position.y&#32;-&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a17433a03422b3d462cda9596294e84c4">GroundedOffset</link>,&#32;transform.position.z);
<anchor xml:id="__first_person_controller_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1accc1975453d0864cac05f6dcaa432450">Grounded</link>&#32;=&#32;Physics.CheckSphere(spherePosition,&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a0ecb7649732266bfce901015e5b2b772">GroundedRadius</link>,&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a04b0ed571bb7f19a97399388095997ee">GroundLayers</link>,&#32;QueryTriggerInteraction.Ignore);
<anchor xml:id="__first_person_controller_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00113"/>00113 
<anchor xml:id="__first_person_controller_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CameraRotation()
<anchor xml:id="__first_person_controller_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;there&#32;is&#32;an&#32;input</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1a23cf03252987e1bd5b5ad7ce1531112d">look</link>.sqrMagnitude&#32;&gt;=&#32;_threshold)
<anchor xml:id="__first_person_controller_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_cinemachineTargetPitch&#32;+=&#32;_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1a23cf03252987e1bd5b5ad7ce1531112d">look</link>.y&#32;*&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1ac4fca24ba0a740d948bc7c64f227c6ae">RotationSpeed</link>&#32;*&#32;Time.deltaTime;
<anchor xml:id="__first_person_controller_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_rotationVelocity&#32;=&#32;_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1a23cf03252987e1bd5b5ad7ce1531112d">look</link>.x&#32;*&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1ac4fca24ba0a740d948bc7c64f227c6ae">RotationSpeed</link>&#32;*&#32;Time.deltaTime;
<anchor xml:id="__first_person_controller_8cs_source_1l00121"/>00121 
<anchor xml:id="__first_person_controller_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;clamp&#32;our&#32;pitch&#32;rotation</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_cinemachineTargetPitch&#32;=&#32;ClampAngle(_cinemachineTargetPitch,&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a6505a295f6685424cd0395b0b6065a96">BottomClamp</link>,&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a7ad98aae68ac138582cf829a9fe60126">TopClamp</link>);
<anchor xml:id="__first_person_controller_8cs_source_1l00124"/>00124 
<anchor xml:id="__first_person_controller_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;Cinemachine&#32;camera&#32;target&#32;pitch</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a5a4197ec6c1f2eb3e07f9c9800a9a590">CinemachineCameraTarget</link>.transform.localRotation&#32;=&#32;Quaternion.Euler(_cinemachineTargetPitch,&#32;0.0f,&#32;0.0f);
<anchor xml:id="__first_person_controller_8cs_source_1l00127"/>00127 
<anchor xml:id="__first_person_controller_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rotate&#32;the&#32;player&#32;left&#32;and&#32;right</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.Rotate(Vector3.up&#32;*&#32;_rotationVelocity);
<anchor xml:id="__first_person_controller_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00132"/>00132 
<anchor xml:id="__first_person_controller_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Move()
<anchor xml:id="__first_person_controller_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;target&#32;speed&#32;based&#32;on&#32;move&#32;speed,&#32;sprint&#32;speed&#32;and&#32;if&#32;sprint&#32;is&#32;pressed</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;targetSpeed&#32;=&#32;_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1a5a6682ff95310879175ec67371e69650">sprint</link>&#32;?&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a47b3a36e1b0ec0a0597d2b36a16fa769">SprintSpeed</link>&#32;:&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a50d72f1a99554c6fbd0d15fdaa4215a8">MoveSpeed</link>;
<anchor xml:id="__first_person_controller_8cs_source_1l00137"/>00137 
<anchor xml:id="__first_person_controller_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;a&#32;simplistic&#32;acceleration&#32;and&#32;deceleration&#32;designed&#32;to&#32;be&#32;easy&#32;to&#32;remove,&#32;replace,&#32;or&#32;iterate&#32;upon</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00139"/>00139 
<anchor xml:id="__first_person_controller_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;note:&#32;Vector2&apos;s&#32;==&#32;operator&#32;uses&#32;approximation&#32;so&#32;is&#32;not&#32;floating&#32;point&#32;error&#32;prone,&#32;and&#32;is&#32;cheaper&#32;than&#32;magnitude</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;there&#32;is&#32;no&#32;input,&#32;set&#32;the&#32;target&#32;speed&#32;to&#32;0</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1aba399b3618eea182fba26658c9755c8d">move</link>&#32;==&#32;Vector2.zero)&#32;targetSpeed&#32;=&#32;0.0f;
<anchor xml:id="__first_person_controller_8cs_source_1l00143"/>00143 
<anchor xml:id="__first_person_controller_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;a&#32;reference&#32;to&#32;the&#32;players&#32;current&#32;horizontal&#32;velocity</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;currentHorizontalSpeed&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(_controller.velocity.x,&#32;0.0f,&#32;_controller.velocity.z).magnitude;
<anchor xml:id="__first_person_controller_8cs_source_1l00146"/>00146 
<anchor xml:id="__first_person_controller_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;speedOffset&#32;=&#32;0.1f;
<anchor xml:id="__first_person_controller_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inputMagnitude&#32;=&#32;_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1a2c00f646173fc0e04c114ac952cc6392">analogMovement</link>&#32;?&#32;_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1aba399b3618eea182fba26658c9755c8d">move</link>.magnitude&#32;:&#32;1f;
<anchor xml:id="__first_person_controller_8cs_source_1l00149"/>00149 
<anchor xml:id="__first_person_controller_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;accelerate&#32;or&#32;decelerate&#32;to&#32;target&#32;speed</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentHorizontalSpeed&#32;&lt;&#32;targetSpeed&#32;-&#32;speedOffset&#32;||&#32;currentHorizontalSpeed&#32;&gt;&#32;targetSpeed&#32;+&#32;speedOffset)
<anchor xml:id="__first_person_controller_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;creates&#32;curved&#32;result&#32;rather&#32;than&#32;a&#32;linear&#32;one&#32;giving&#32;a&#32;more&#32;organic&#32;speed&#32;change</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;note&#32;T&#32;in&#32;Lerp&#32;is&#32;clamped,&#32;so&#32;we&#32;don&apos;t&#32;need&#32;to&#32;clamp&#32;our&#32;speed</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_speed&#32;=&#32;Mathf.Lerp(currentHorizontalSpeed,&#32;targetSpeed&#32;*&#32;inputMagnitude,&#32;Time.deltaTime&#32;*&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a674ed5100118ec015a5d142804183b27">SpeedChangeRate</link>);
<anchor xml:id="__first_person_controller_8cs_source_1l00156"/>00156 
<anchor xml:id="__first_person_controller_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;round&#32;speed&#32;to&#32;3&#32;decimal&#32;places</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_speed&#32;=&#32;Mathf.Round(_speed&#32;*&#32;1000f)&#32;/&#32;1000f;
<anchor xml:id="__first_person_controller_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_speed&#32;=&#32;targetSpeed;
<anchor xml:id="__first_person_controller_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00164"/>00164 
<anchor xml:id="__first_person_controller_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;normalise&#32;input&#32;direction</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;inputDirection&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1aba399b3618eea182fba26658c9755c8d">move</link>.x,&#32;0.0f,&#32;_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1aba399b3618eea182fba26658c9755c8d">move</link>.y).normalized;
<anchor xml:id="__first_person_controller_8cs_source_1l00167"/>00167 
<anchor xml:id="__first_person_controller_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;note:&#32;Vector2&apos;s&#32;!=&#32;operator&#32;uses&#32;approximation&#32;so&#32;is&#32;not&#32;floating&#32;point&#32;error&#32;prone,&#32;and&#32;is&#32;cheaper&#32;than&#32;magnitude</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;there&#32;is&#32;a&#32;move&#32;input&#32;rotate&#32;player&#32;when&#32;the&#32;player&#32;is&#32;moving</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1aba399b3618eea182fba26658c9755c8d">move</link>&#32;!=&#32;Vector2.zero)
<anchor xml:id="__first_person_controller_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;move</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputDirection&#32;=&#32;transform.right&#32;*&#32;_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1aba399b3618eea182fba26658c9755c8d">move</link>.x&#32;+&#32;transform.forward&#32;*&#32;_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1aba399b3618eea182fba26658c9755c8d">move</link>.y;
<anchor xml:id="__first_person_controller_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00175"/>00175 
<anchor xml:id="__first_person_controller_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;move&#32;the&#32;player</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_controller.Move(inputDirection.normalized&#32;*&#32;(_speed&#32;*&#32;Time.deltaTime)&#32;+&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0.0f,&#32;_verticalVelocity,&#32;0.0f)&#32;*&#32;Time.deltaTime);
<anchor xml:id="__first_person_controller_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00179"/>00179 
<anchor xml:id="__first_person_controller_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;JumpAndGravity()
<anchor xml:id="__first_person_controller_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_starter_assets_1_1_first_person_controller_1accc1975453d0864cac05f6dcaa432450">Grounded</link>)
<anchor xml:id="__first_person_controller_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;reset&#32;the&#32;fall&#32;timeout&#32;timer</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_fallTimeoutDelta&#32;=&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a62781cd260a28664624306d0cbacd153">FallTimeout</link>;
<anchor xml:id="__first_person_controller_8cs_source_1l00186"/>00186 
<anchor xml:id="__first_person_controller_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stop&#32;our&#32;velocity&#32;dropping&#32;infinitely&#32;when&#32;grounded</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_verticalVelocity&#32;&lt;&#32;0.0f)
<anchor xml:id="__first_person_controller_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_verticalVelocity&#32;=&#32;-2f;
<anchor xml:id="__first_person_controller_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00192"/>00192 
<anchor xml:id="__first_person_controller_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Jump</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1a0684efc1fb5de14bb611de5f35de5a64">jump</link>&#32;&amp;&amp;&#32;_jumpTimeoutDelta&#32;&lt;=&#32;0.0f)
<anchor xml:id="__first_person_controller_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;square&#32;root&#32;of&#32;H&#32;*&#32;-2&#32;*&#32;G&#32;=&#32;how&#32;much&#32;velocity&#32;needed&#32;to&#32;reach&#32;desired&#32;height</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_verticalVelocity&#32;=&#32;Mathf.Sqrt(<link linkend="_class_starter_assets_1_1_first_person_controller_1ae0ad5c26f3bc9ab342d77328fd773df1">JumpHeight</link>&#32;*&#32;-2f&#32;*&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a192e42bff03fd1238267665e27fececa">Gravity</link>);
<anchor xml:id="__first_person_controller_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00199"/>00199 
<anchor xml:id="__first_person_controller_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;jump&#32;timeout</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_jumpTimeoutDelta&#32;&gt;=&#32;0.0f)
<anchor xml:id="__first_person_controller_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_jumpTimeoutDelta&#32;-=&#32;Time.deltaTime;
<anchor xml:id="__first_person_controller_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;reset&#32;the&#32;jump&#32;timeout&#32;timer</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_jumpTimeoutDelta&#32;=&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1ae9f9ca349a4857bd75b3cf00584ab492">JumpTimeout</link>;
<anchor xml:id="__first_person_controller_8cs_source_1l00210"/>00210 
<anchor xml:id="__first_person_controller_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fall&#32;timeout</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_fallTimeoutDelta&#32;&gt;=&#32;0.0f)
<anchor xml:id="__first_person_controller_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_fallTimeoutDelta&#32;-=&#32;Time.deltaTime;
<anchor xml:id="__first_person_controller_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00216"/>00216 
<anchor xml:id="__first_person_controller_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;we&#32;are&#32;not&#32;grounded,&#32;do&#32;not&#32;jump</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_input.<link linkend="_class_starter_assets_1_1_starter_assets_inputs_1a0684efc1fb5de14bb611de5f35de5a64">jump</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__first_person_controller_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00220"/>00220 
<anchor xml:id="__first_person_controller_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;apply&#32;gravity&#32;over&#32;time&#32;if&#32;under&#32;terminal&#32;(multiply&#32;by&#32;delta&#32;time&#32;twice&#32;to&#32;linearly&#32;speed&#32;up&#32;over&#32;time)</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_verticalVelocity&#32;&lt;&#32;_terminalVelocity)
<anchor xml:id="__first_person_controller_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_verticalVelocity&#32;+=&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a192e42bff03fd1238267665e27fececa">Gravity</link>&#32;*&#32;Time.deltaTime;
<anchor xml:id="__first_person_controller_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00227"/>00227 
<anchor xml:id="__first_person_controller_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;ClampAngle(<emphasis role="keywordtype">float</emphasis>&#32;lfAngle,&#32;<emphasis role="keywordtype">float</emphasis>&#32;lfMin,&#32;<emphasis role="keywordtype">float</emphasis>&#32;lfMax)
<anchor xml:id="__first_person_controller_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lfAngle&#32;&lt;&#32;-360f)&#32;lfAngle&#32;+=&#32;360f;
<anchor xml:id="__first_person_controller_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lfAngle&#32;&gt;&#32;360f)&#32;lfAngle&#32;-=&#32;360f;
<anchor xml:id="__first_person_controller_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Clamp(lfAngle,&#32;lfMin,&#32;lfMax);
<anchor xml:id="__first_person_controller_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00234"/>00234 
<anchor xml:id="__first_person_controller_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDrawGizmosSelected()
<anchor xml:id="__first_person_controller_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__first_person_controller_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;transparentGreen&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(0.0f,&#32;1.0f,&#32;0.0f,&#32;0.35f);
<anchor xml:id="__first_person_controller_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;transparentRed&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(1.0f,&#32;0.0f,&#32;0.0f,&#32;0.35f);
<anchor xml:id="__first_person_controller_8cs_source_1l00239"/>00239 
<anchor xml:id="__first_person_controller_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_starter_assets_1_1_first_person_controller_1accc1975453d0864cac05f6dcaa432450">Grounded</link>)&#32;Gizmos.color&#32;=&#32;transparentGreen;
<anchor xml:id="__first_person_controller_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;Gizmos.color&#32;=&#32;transparentRed;
<anchor xml:id="__first_person_controller_8cs_source_1l00242"/>00242 
<anchor xml:id="__first_person_controller_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;when&#32;selected,&#32;draw&#32;a&#32;gizmo&#32;in&#32;the&#32;position&#32;of,&#32;and&#32;matching&#32;radius&#32;of,&#32;the&#32;grounded&#32;collider</emphasis>
<anchor xml:id="__first_person_controller_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gizmos.DrawSphere(<emphasis role="keyword">new</emphasis>&#32;Vector3(transform.position.x,&#32;transform.position.y&#32;-&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a17433a03422b3d462cda9596294e84c4">GroundedOffset</link>,&#32;transform.position.z),&#32;<link linkend="_class_starter_assets_1_1_first_person_controller_1a0ecb7649732266bfce901015e5b2b772">GroundedRadius</link>);
<anchor xml:id="__first_person_controller_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;}
<anchor xml:id="__first_person_controller_8cs_source_1l00247"/>00247 }
</programlisting></section>
