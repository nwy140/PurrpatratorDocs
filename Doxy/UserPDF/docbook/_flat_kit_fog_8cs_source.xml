<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__flat_kit_fog_8cs_source" xml:lang="en-US">
<title>FlatKitFog.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/FlatKit/[Render Pipeline] URP/RenderFeatures/Fog/FlatKitFog.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__flat_kit_fog_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00002"/>00002 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.Rendering;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.Rendering.Universal;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00004"/>00004 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;TODO:&#32;Remove&#32;for&#32;URP&#32;13.</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@13.1/manual/upgrade-guide-2022-1.html</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00007"/>00007 <emphasis role="preprocessor">#pragma&#32;warning&#32;disable&#32;CS0618</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00008"/>00008 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00009"/><link linkend="_namespace_flat_kit">00009</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_flat_kit">FlatKit</link>&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00010"/><link linkend="_class_flat_kit_1_1_flat_kit_fog">00010</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_flat_kit_1_1_flat_kit_fog">FlatKitFog</link>&#32;:&#32;ScriptableRendererFeature&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>EffectPass&#32;:&#32;ScriptableRenderPass&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;ProfilingSampler&#32;_profilingSampler&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProfilingSampler(<emphasis role="stringliteral">&quot;Flat&#32;Kit&#32;Fog&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;RTHandle&#32;_destination;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;Material&#32;_effectMaterial;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;RenderTargetHandle&#32;_temporaryColorTexture;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00016"/>00016 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;EffectPass(Material&#32;effectMaterial)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_effectMaterial&#32;=&#32;effectMaterial;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00020"/>00020 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Setup(RTHandle&#32;destination&#32;=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_destination&#32;=&#32;destination;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00023"/>00023 <emphasis role="preprocessor">#if&#32;UNITY_2020_3_OR_NEWER</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConfigureInput(ScriptableRenderPassInput.Depth);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00025"/>00025 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00027"/>00027 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Execute(ScriptableRenderContext&#32;context,&#32;ref&#32;RenderingData&#32;renderingData)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CommandBuffer&#32;cmd&#32;=&#32;CommandBufferPool.Get();
<anchor xml:id="__flat_kit_fog_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilingScope(cmd,&#32;_profilingSampler))&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RenderTextureDescriptor&#32;opaqueDescriptor&#32;=&#32;renderingData.cameraData.cameraTargetDescriptor;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opaqueDescriptor.depthBufferBits&#32;=&#32;0;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00033"/>00033 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00034"/>00034 <emphasis role="preprocessor">#if&#32;UNITY_2022_1_OR_NEWER</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cameraTargetHandle&#32;=&#32;renderingData.cameraData.renderer.cameraColorTargetHandle;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00036"/>00036 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cameraTargetHandle&#32;=&#32;renderingData.cameraData.renderer.cameraColorTarget;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00038"/>00038 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00039"/>00039 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_destination&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd.GetTemporaryRT(_temporaryColorTexture.id,&#32;opaqueDescriptor,&#32;FilterMode.Point);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd.Blit(cameraTargetHandle,&#32;_temporaryColorTexture.Identifier(),&#32;_effectMaterial);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd.Blit(_temporaryColorTexture.Identifier(),&#32;cameraTargetHandle);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd.Blit(cameraTargetHandle,&#32;_destination,&#32;_effectMaterial);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00048"/>00048 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;context.ExecuteCommandBuffer(cmd);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CommandBufferPool.Release(cmd);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00052"/>00052 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00053"/>00053 <emphasis role="preprocessor">#if&#32;UNITY_2020_3_OR_NEWER</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCameraCleanup(CommandBuffer&#32;cmd)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00055"/>00055 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;FrameCleanup(CommandBuffer&#32;cmd)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00057"/>00057 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd.ReleaseTemporaryRT(_temporaryColorTexture.id);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00061"/>00061 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Create&#32;&gt;&#32;FlatKit&#32;&gt;&#32;Fog&#32;Settings&quot;</emphasis>)]
<anchor xml:id="__flat_kit_fog_8cs_source_1l00063"/><link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_flat_kit_1_1_fog_settings">FogSettings</link>&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00064"/>00064 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;_material;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;EffectPass&#32;_effectPass;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00067"/>00067 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Texture2D&#32;_lutDepth;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Texture2D&#32;_lutHeight;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00070"/>00070 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;ShaderName&#32;=&#32;<emphasis role="stringliteral">&quot;Hidden/FlatKit/FogFilter&quot;</emphasis>;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;DistanceLut&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_DistanceLUT&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;Near&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_Near&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;Far&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_Far&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;UseDistanceFog&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_UseDistanceFog&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;UseDistanceFogOnSky&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_UseDistanceFogOnSky&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;DistanceFogIntensity&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_DistanceFogIntensity&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;HeightLut&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_HeightLUT&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;LowWorldY&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_LowWorldY&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;HighWorldY&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_HighWorldY&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;UseHeightFog&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_UseHeightFog&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;UseHeightFogOnSky&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_UseHeightFogOnSky&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;HeightFogIntensity&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_HeightFogIntensity&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;DistanceHeightBlend&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_DistanceHeightBlend&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00085"/>00085 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00086"/><link linkend="_class_flat_kit_1_1_flat_kit_fog_1a06d57153655441c2da4963bbffccc178">00086</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1a06d57153655441c2da4963bbffccc178">Create</link>()&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;[FlatKit]&#32;Missing&#32;Fog&#32;Settings&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00091"/>00091 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitMaterial();
<anchor xml:id="__flat_kit_fog_8cs_source_1l00093"/>00093 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_effectPass&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;EffectPass(_material)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderPassEvent&#32;=&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1aa67626b954e786e9aa462890d22cd7ed">renderEvent</link>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__flat_kit_fog_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00098"/>00098 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00099"/><link linkend="_class_flat_kit_1_1_flat_kit_fog_1a33667a7c1ebb030a1f6a9da9a2ddf1c9">00099</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1a33667a7c1ebb030a1f6a9da9a2ddf1c9">AddRenderPasses</link>(ScriptableRenderer&#32;renderer,&#32;ref&#32;RenderingData&#32;renderingData)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00100"/>00100 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(renderingData.cameraData.isPreviewCamera)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00104"/>00104 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00105"/>00105 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;[FlatKit]&#32;Missing&#32;Fog&#32;Settings&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00110"/>00110 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitMaterial();
<anchor xml:id="__flat_kit_fog_8cs_source_1l00112"/>00112 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_effectPass.Setup(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderer.EnqueuePass(_effectPass);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00116"/>00116 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00117"/>00117 <emphasis role="preprocessor">#if&#32;UNITY_2020_3_OR_NEWER</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose(<emphasis role="keywordtype">bool</emphasis>&#32;disposing)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CoreUtils.Destroy(_material);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00121"/>00121 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00122"/>00122 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitMaterial()&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00124"/>00124 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShaderIncludeUtilities.AddAlwaysIncludedShader(ShaderName);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00126"/>00126 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00127"/>00127 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_material&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;shader&#32;=&#32;Shader.Find(ShaderName);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shader&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00133"/>00133 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Material(shader);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00136"/>00136 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_material&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;[FlatKit]&#32;Missing&#32;Fog&#32;Material&quot;</emphasis>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00140"/>00140 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateShader();
<anchor xml:id="__flat_kit_fog_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00143"/>00143 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateShader()&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_material&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00148"/>00148 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateDistanceLut();
<anchor xml:id="__flat_kit_fog_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetTexture(DistanceLut,&#32;_lutDepth);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(Near,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a7f00e30f7edb7756da1f50a10e07ce66">near</link>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(Far,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1aa73309252c57726e1bd588938fe0c72b">far</link>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(UseDistanceFog,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1ab9d80ed78a56c7953f7186b987e29533">useDistance</link>&#32;?&#32;1f&#32;:&#32;0f);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(UseDistanceFogOnSky,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1ae20a6618da62078893aa4444c63287ea">useDistanceFogOnSky</link>&#32;?&#32;1f&#32;:&#32;0f);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(DistanceFogIntensity,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a4cd0a3929a45499dafe6c1d6fef2044e">distanceFogIntensity</link>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00156"/>00156 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateHeightLut();
<anchor xml:id="__flat_kit_fog_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetTexture(HeightLut,&#32;_lutHeight);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(LowWorldY,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1aa830c8364d8566bd07a8c059f5c189d1">low</link>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(HighWorldY,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1abbdf90588662206b76c3d1ac878660b7">high</link>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(UseHeightFog,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a7734fb3364a5c2607a582340ea94feb9">useHeight</link>&#32;?&#32;1f&#32;:&#32;0f);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(UseHeightFogOnSky,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a125a6f5d8be8bd438ab3969581f513ff">useHeightFogOnSky</link>&#32;?&#32;1f&#32;:&#32;0f);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(HeightFogIntensity,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a78a5de54edea4c649bec6ed01dea68e6">heightFogIntensity</link>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00164"/>00164 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_material.SetFloat(DistanceHeightBlend,&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a016d6906d362bee628798f16421d1437">distanceHeightBlend</link>);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00167"/>00167 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateDistanceLut()&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a13de8d7b39cc42674757df10ec0a3de2">distanceGradient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00170"/>00170 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_lutDepth&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyImmediate(_lutDepth);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00174"/>00174 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;width&#32;=&#32;256;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;height&#32;=&#32;1;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_lutDepth&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Texture2D(width,&#32;height,&#32;TextureFormat.RGBA32,&#32;<emphasis role="comment">/*mipChain=*/</emphasis><emphasis role="keyword">false</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wrapMode&#32;=&#32;TextureWrapMode.Clamp,
<anchor xml:id="__flat_kit_fog_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hideFlags&#32;=&#32;HideFlags.HideAndDontSave,
<anchor xml:id="__flat_kit_fog_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filterMode&#32;=&#32;FilterMode.Bilinear
<anchor xml:id="__flat_kit_fog_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__flat_kit_fog_8cs_source_1l00182"/>00182 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//22b5f7ed-989d-49d1-90d9-c62d76c3081a</emphasis>
<anchor xml:id="__flat_kit_fog_8cs_source_1l00184"/>00184 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;width;&#32;x++)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;color&#32;=&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a13de8d7b39cc42674757df10ec0a3de2">distanceGradient</link>.Evaluate(x&#32;/&#32;(width&#32;-&#32;1));
<anchor xml:id="__flat_kit_fog_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;y&#32;=&#32;0;&#32;y&#32;&lt;&#32;height;&#32;y++)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_lutDepth.SetPixel(Mathf.CeilToInt(x),&#32;Mathf.CeilToInt(y),&#32;color);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00191"/>00191 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_lutDepth.Apply();
<anchor xml:id="__flat_kit_fog_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00194"/>00194 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateHeightLut()&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a4d14fab62669d65578ccdd792598a7ba">heightGradient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00197"/>00197 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_lutHeight&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyImmediate(_lutHeight);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00201"/>00201 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;width&#32;=&#32;256;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;height&#32;=&#32;1;
<anchor xml:id="__flat_kit_fog_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_lutHeight&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Texture2D(width,&#32;height,&#32;TextureFormat.RGBA32,&#32;<emphasis role="comment">/*mipChain=*/</emphasis><emphasis role="keyword">false</emphasis>)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wrapMode&#32;=&#32;TextureWrapMode.Clamp,
<anchor xml:id="__flat_kit_fog_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hideFlags&#32;=&#32;HideFlags.HideAndDontSave,
<anchor xml:id="__flat_kit_fog_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filterMode&#32;=&#32;FilterMode.Bilinear
<anchor xml:id="__flat_kit_fog_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__flat_kit_fog_8cs_source_1l00209"/>00209 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;width;&#32;x++)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;color&#32;=&#32;<link linkend="_class_flat_kit_1_1_flat_kit_fog_1aabdd4673a7edb2597bf18e6d9cb7d20b">settings</link>.<link linkend="_class_flat_kit_1_1_fog_settings_1a4d14fab62669d65578ccdd792598a7ba">heightGradient</link>.Evaluate(x&#32;/&#32;(width&#32;-&#32;1));
<anchor xml:id="__flat_kit_fog_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;y&#32;=&#32;0;&#32;y&#32;&lt;&#32;height;&#32;y++)&#32;{
<anchor xml:id="__flat_kit_fog_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_lutHeight.SetPixel(Mathf.CeilToInt(x),&#32;Mathf.CeilToInt(y),&#32;color);
<anchor xml:id="__flat_kit_fog_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00216"/>00216 
<anchor xml:id="__flat_kit_fog_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_lutHeight.Apply();
<anchor xml:id="__flat_kit_fog_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;}
<anchor xml:id="__flat_kit_fog_8cs_source_1l00219"/>00219 }
<anchor xml:id="__flat_kit_fog_8cs_source_1l00220"/>00220 }
</programlisting></section>
