<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__ghost_8cs_source" xml:lang="en-US">
<title>Ghost.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Utilities/GhostWorld/Ghost.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__ghost_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00005"/>00005 
<anchor xml:id="__ghost_8cs_source_1l00006"/>00006 <emphasis role="preprocessor">#if&#32;GHOST_WORLD</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00007"/>00007 
<anchor xml:id="__ghost_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__ghost_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_utility_scripts">UtilityScripts</link>;
<anchor xml:id="__ghost_8cs_source_1l00010"/>00010 
<anchor xml:id="__ghost_8cs_source_1l00011"/>00011 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__ghost_8cs_source_1l00013"/>00013 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00014"/>00014 
<anchor xml:id="__ghost_8cs_source_1l00015"/>00015 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_ghost_worlds">Photon.Pun.Simple.GhostWorlds</link>
<anchor xml:id="__ghost_8cs_source_1l00016"/>00016 {
<anchor xml:id="__ghost_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="comment">//[AddComponentMenu(&quot;&quot;)]</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;class&#32;AnimatableMonobehaviour&#32;:&#32;MonoBehaviour</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;[System.NonSerialized]&#32;public&#32;Rigidbody&#32;rb;</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;[System.NonSerialized]&#32;public&#32;Rigidbody2D&#32;rb2d;</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00026"/>00026 
<anchor xml:id="__ghost_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;[AddComponentMenu(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
<anchor xml:id="__ghost_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>Ghost&#32;:&#32;MonoBehaviour
<anchor xml:id="__ghost_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;IHasNetworkID
<anchor xml:id="__ghost_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;IHaunted&#32;haunted;
<anchor xml:id="__ghost_8cs_source_1l00032"/>00032 
<anchor xml:id="__ghost_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;Rigidbody&#32;rb;
<anchor xml:id="__ghost_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;Rigidbody2D&#32;rb2d;
<anchor xml:id="__ghost_8cs_source_1l00035"/>00035 
<anchor xml:id="__ghost_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;uint&#32;viewID;
<anchor xml:id="__ghost_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;uint&#32;ViewID&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;viewID;&#32;}&#32;}
<anchor xml:id="__ghost_8cs_source_1l00038"/>00038 
<anchor xml:id="__ghost_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Initialize(IHaunted&#32;haunted)
<anchor xml:id="__ghost_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.haunted&#32;=&#32;haunted;
<anchor xml:id="__ghost_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;iViewID&#32;=&#32;haunted.GameObject.GetComponent&lt;IHasNetworkID&gt;();
<anchor xml:id="__ghost_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewID&#32;=&#32;(iViewID&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;iViewID.ViewID&#32;:&#32;0;
<anchor xml:id="__ghost_8cs_source_1l00044"/>00044 
<anchor xml:id="__ghost_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;hRB&#32;=&#32;haunted.GameObject.GetComponent&lt;Rigidbody&gt;();
<anchor xml:id="__ghost_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;hRB2D&#32;=&#32;haunted.GameObject.GetComponent&lt;Rigidbody2D&gt;();
<anchor xml:id="__ghost_8cs_source_1l00048"/>00048 
<anchor xml:id="__ghost_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hRB)
<anchor xml:id="__ghost_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb&#32;=&#32;gameObject.AddComponent&lt;Rigidbody&gt;().GetCopyOf(hRB);
<anchor xml:id="__ghost_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hRB2D)
<anchor xml:id="__ghost_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb2d&#32;=&#32;gameObject.AddComponent&lt;Rigidbody2D&gt;().GetCopyOf(hRB2D);
<anchor xml:id="__ghost_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00054"/>00054 
<anchor xml:id="__ghost_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetActive(<emphasis role="keywordtype">bool</emphasis>&#32;active)
<anchor xml:id="__ghost_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gameObject.SetActive(active);
<anchor xml:id="__ghost_8cs_source_1l00058"/>00058 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShowDebugCross(active);
<anchor xml:id="__ghost_8cs_source_1l00060"/>00060 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00062"/>00062 
<anchor xml:id="__ghost_8cs_source_1l00063"/>00063 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00064"/>00064 
<anchor xml:id="__ghost_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a07b20ae970048fc2002d756f27acc863">Renderer</link>[]&#32;debugRenderers;
<anchor xml:id="__ghost_8cs_source_1l00066"/>00066 
<anchor xml:id="__ghost_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ShowDebugCross(<emphasis role="keywordtype">bool</emphasis>&#32;value)
<anchor xml:id="__ghost_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;debugRenderers.Length;&#32;++i)&#32;debugRenderers[i].enabled&#32;=&#32;value;
<anchor xml:id="__ghost_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00071"/>00071 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00073"/>00073 
<anchor xml:id="__ghost_8cs_source_1l00074"/>00074 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00075"/>00075 
<anchor xml:id="__ghost_8cs_source_1l00076"/>00076 
<anchor xml:id="__ghost_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;[CustomEditor(typeof(Ghost))]
<anchor xml:id="__ghost_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;[CanEditMultipleObjects]
<anchor xml:id="__ghost_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>GhostEditor&#32;:&#32;HeaderEditorBase
<anchor xml:id="__ghost_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Instructions
<anchor xml:id="__ghost_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Automatically&#32;attached&#32;component&#32;for&#32;resimulaiton/rewind&#32;objects.&quot;</emphasis>;
<anchor xml:id="__ghost_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00088"/>00088 
<anchor xml:id="__ghost_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;HelpURL
<anchor xml:id="__ghost_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__ghost_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00096"/>00096 
<anchor xml:id="__ghost_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;TextTexturePath
<anchor xml:id="__ghost_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Header/GhostWorldText&quot;</emphasis>;
<anchor xml:id="__ghost_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__ghost_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;BackTexturePath
<anchor xml:id="__ghost_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Header/CyanBack&quot;</emphasis>;
<anchor xml:id="__ghost_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_8cs_source_1l00113"/>00113 
<anchor xml:id="__ghost_8cs_source_1l00114"/>00114 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__ghost_8cs_source_1l00115"/>00115 }
<anchor xml:id="__ghost_8cs_source_1l00116"/>00116 
<anchor xml:id="__ghost_8cs_source_1l00117"/>00117 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
