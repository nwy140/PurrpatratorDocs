<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__ghost_world_8cs_source" xml:lang="en-US">
<title>GhostWorld.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Utilities/GhostWorld/GhostWorld.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__ghost_world_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00005"/>00005 
<anchor xml:id="__ghost_world_8cs_source_1l00006"/>00006 <emphasis role="preprocessor">#if&#32;GHOST_WORLD</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00007"/>00007 
<anchor xml:id="__ghost_world_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_utility_scripts">UtilityScripts</link>;
<anchor xml:id="__ghost_world_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;System.<link linkend="_namespace_system_1_1_collections">Collections</link>.Generic;
<anchor xml:id="__ghost_world_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__ghost_world_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.SceneManagement;
<anchor xml:id="__ghost_world_8cs_source_1l00012"/>00012 
<anchor xml:id="__ghost_world_8cs_source_1l00013"/>00013 
<anchor xml:id="__ghost_world_8cs_source_1l00014"/>00014 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_ghost_worlds">Photon.Pun.Simple.GhostWorlds</link>
<anchor xml:id="__ghost_world_8cs_source_1l00015"/>00015 {
<anchor xml:id="__ghost_world_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>GhostWorld
<anchor xml:id="__ghost_world_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00021"/>00021 
<anchor xml:id="__ghost_world_8cs_source_1l00022"/>00022 <emphasis role="preprocessor">#if&#32;UNITY_2019_1_OR_NEWER</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00023"/>00023 
<anchor xml:id="__ghost_world_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;PhysicsScene&#32;ghostPhysics;
<anchor xml:id="__ghost_world_8cs_source_1l00025"/>00025 
<anchor xml:id="__ghost_world_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
<anchor xml:id="__ghost_world_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CreateGhostWorld()
<anchor xml:id="__ghost_world_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;sceneparams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CreateSceneParameters(LocalPhysicsMode.Physics3D)&#32;{&#32;};
<anchor xml:id="__ghost_world_8cs_source_1l00030"/>00030 
<anchor xml:id="__ghost_world_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ghostScene&#32;=&#32;SceneManager.CreateScene(<emphasis role="stringliteral">&quot;_GhostWorld&quot;</emphasis>,&#32;sceneparams);
<anchor xml:id="__ghost_world_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ghostPhysics&#32;=&#32;PhysicsSceneExtensions.GetPhysicsScene(ghostScene);
<anchor xml:id="__ghost_world_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00034"/>00034 
<anchor xml:id="__ghost_world_8cs_source_1l00035"/>00035 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GHOST_WORLD_LAYER&#32;=&#32;31;
<anchor xml:id="__ghost_world_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GHOST_WORLD_LAYERMASK&#32;=&#32;1&#32;&lt;&lt;&#32;GHOST_WORLD_LAYER;
<anchor xml:id="__ghost_world_8cs_source_1l00038"/>00038 
<anchor xml:id="__ghost_world_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
<anchor xml:id="__ghost_world_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CreateGhostWorld()
<anchor xml:id="__ghost_world_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ghostScene&#32;=&#32;SceneManager.GetActiveScene();
<anchor xml:id="__ghost_world_8cs_source_1l00043"/>00043 
<anchor xml:id="__ghost_world_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;GHOST_WORLD_LAYER;&#32;++i)
<anchor xml:id="__ghost_world_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Physics.IgnoreLayerCollision(GHOST_WORLD_LAYER,&#32;i);
<anchor xml:id="__ghost_world_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00049"/>00049 
<anchor xml:id="__ghost_world_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00051"/>00051 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Scene&#32;ghostScene;
<anchor xml:id="__ghost_world_8cs_source_1l00053"/>00053 
<anchor xml:id="__ghost_world_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;List&lt;Collider&gt;&#32;reusableColliderList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Collider&gt;(4);
<anchor xml:id="__ghost_world_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;List&lt;INeedsGhostGameObject&gt;&#32;reusableNeedsGameObjectClone&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;INeedsGhostGameObject&gt;();
<anchor xml:id="__ghost_world_8cs_source_1l00056"/>00056 
<anchor xml:id="__ghost_world_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;colliderCount&#32;=&#32;0;
<anchor xml:id="__ghost_world_8cs_source_1l00058"/>00058 
<anchor xml:id="__ghost_world_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Ghost&#32;CreateRewindGhost(IHaunted&#32;haunted)
<anchor xml:id="__ghost_world_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scene&#32;holdscene&#32;=&#32;SceneManager.GetActiveScene();
<anchor xml:id="__ghost_world_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SceneManager.SetActiveScene(ghostScene);
<anchor xml:id="__ghost_world_8cs_source_1l00066"/>00066 
<anchor xml:id="__ghost_world_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>&#32;ghostGO&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>(<emphasis role="stringliteral">&quot;ghst.&quot;</emphasis>&#32;+&#32;haunted.GameObject.name);
<anchor xml:id="__ghost_world_8cs_source_1l00069"/>00069 
<anchor xml:id="__ghost_world_8cs_source_1l00070"/>00070 <emphasis role="preprocessor">#if&#32;!UNITY_2019_1_OR_NEWER</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Object.DontDestroyOnLoad(ghostGO);
<anchor xml:id="__ghost_world_8cs_source_1l00073"/>00073 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00074"/>00074 
<anchor xml:id="__ghost_world_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SceneManager.SetActiveScene(holdscene);
<anchor xml:id="__ghost_world_8cs_source_1l00076"/>00076 
<anchor xml:id="__ghost_world_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ghost&#32;ghost&#32;=&#32;ghostGO.AddComponent&lt;Ghost&gt;();
<anchor xml:id="__ghost_world_8cs_source_1l00079"/>00079 
<anchor xml:id="__ghost_world_8cs_source_1l00081"/>00081 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00082"/>00082 
<anchor xml:id="__ghost_world_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;widgetYGO&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>.CreatePrimitive(PrimitiveType.Cylinder);
<anchor xml:id="__ghost_world_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Object.DestroyImmediate(widgetYGO.GetComponent&lt;Collider&gt;());
<anchor xml:id="__ghost_world_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;widgetYGO.transform.localScale&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(.1f,&#32;3f,&#32;.1f);
<anchor xml:id="__ghost_world_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;widgetYGO.transform.parent&#32;=&#32;ghostGO.transform;
<anchor xml:id="__ghost_world_8cs_source_1l00087"/>00087 
<anchor xml:id="__ghost_world_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;widgetXGO&#32;=&#32;Object.Instantiate(widgetYGO,&#32;ghost.transform);
<anchor xml:id="__ghost_world_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;widgetYGO.transform.Rotate(0f,&#32;0f,&#32;90f);
<anchor xml:id="__ghost_world_8cs_source_1l00090"/>00090 
<anchor xml:id="__ghost_world_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;debugCross&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>(<emphasis role="stringliteral">&quot;Debug&#32;Cross&quot;</emphasis>);
<anchor xml:id="__ghost_world_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debugCross.hideFlags&#32;=&#32;HideFlags.HideInHierarchy;
<anchor xml:id="__ghost_world_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debugCross.transform.parent&#32;=&#32;ghostGO.transform;
<anchor xml:id="__ghost_world_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;widgetXGO.transform.parent&#32;=&#32;debugCross.transform;
<anchor xml:id="__ghost_world_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;widgetYGO.transform.parent&#32;=&#32;debugCross.transform;
<anchor xml:id="__ghost_world_8cs_source_1l00096"/>00096 
<anchor xml:id="__ghost_world_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ghost.debugRenderers&#32;=&#32;ghost.GetComponentsInChildren&lt;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a07b20ae970048fc2002d756f27acc863">Renderer</link>&gt;();
<anchor xml:id="__ghost_world_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ghost.ShowDebugCross(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__ghost_world_8cs_source_1l00099"/>00099 
<anchor xml:id="__ghost_world_8cs_source_1l00100"/>00100 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00101"/>00101 
<anchor xml:id="__ghost_world_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ghost.Initialize(haunted);
<anchor xml:id="__ghost_world_8cs_source_1l00104"/>00104 
<anchor xml:id="__ghost_world_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colliderCount&#32;=&#32;0;
<anchor xml:id="__ghost_world_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CloneChildrenAndColliders(haunted.GameObject,&#32;ghostGO,&#32;ghost);
<anchor xml:id="__ghost_world_8cs_source_1l00108"/>00108 
<anchor xml:id="__ghost_world_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ghost;
<anchor xml:id="__ghost_world_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00111"/>00111 
<anchor xml:id="__ghost_world_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CloneChildrenAndColliders(GameObject&#32;srcGO,&#32;GameObject&#32;copyGO,&#32;Ghost&#32;rootGhost)
<anchor xml:id="__ghost_world_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyGO.transform.localPosition&#32;=&#32;srcGO.transform.localPosition;
<anchor xml:id="__ghost_world_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyGO.transform.localScale&#32;=&#32;srcGO.transform.localScale;
<anchor xml:id="__ghost_world_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyGO.transform.localRotation&#32;=&#32;srcGO.transform.localRotation;
<anchor xml:id="__ghost_world_8cs_source_1l00120"/>00120 
<anchor xml:id="__ghost_world_8cs_source_1l00121"/>00121 <emphasis role="preprocessor">#if&#32;!UNITY_2019_1_OR_NEWER</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyGO.layer&#32;=&#32;GHOST_WORLD_LAYER;
<anchor xml:id="__ghost_world_8cs_source_1l00123"/>00123 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyGO.layer&#32;=&#32;srcGO.layer;
<anchor xml:id="__ghost_world_8cs_source_1l00125"/>00125 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00126"/>00126 
<anchor xml:id="__ghost_world_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CloneColliders(rootGhost,&#32;srcGO,&#32;copyGO,&#32;ref&#32;colliderCount);
<anchor xml:id="__ghost_world_8cs_source_1l00129"/>00129 
<anchor xml:id="__ghost_world_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcGO.GetComponents(reusableNeedsGameObjectClone);
<anchor xml:id="__ghost_world_8cs_source_1l00132"/>00132 
<anchor xml:id="__ghost_world_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GhostComponent&#32;ghostComponent&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__ghost_world_8cs_source_1l00134"/>00134 
<anchor xml:id="__ghost_world_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;iNeedsClone&#32;<emphasis role="keywordflow">in</emphasis>&#32;reusableNeedsGameObjectClone)
<anchor xml:id="__ghost_world_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00137"/>00137 
<anchor xml:id="__ghost_world_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IHauntedComponent&#32;ihc&#32;=&#32;iNeedsClone&#32;as&#32;IHauntedComponent;
<anchor xml:id="__ghost_world_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ihc&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__ghost_world_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ghostComponent&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__ghost_world_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ghostComponent&#32;=&#32;copyGO.AddComponent&lt;GhostComponent&gt;();
<anchor xml:id="__ghost_world_8cs_source_1l00143"/>00143 
<anchor xml:id="__ghost_world_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ghostComponent.AddHaunted(ihc,&#32;rootGhost);
<anchor xml:id="__ghost_world_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00146"/>00146 
<anchor xml:id="__ghost_world_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ICopyToGhost&#32;icopy&#32;=&#32;iNeedsClone&#32;as&#32;ICopyToGhost;
<anchor xml:id="__ghost_world_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(icopy&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__ghost_world_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(icopy&#32;as&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a2cb05e4bb7830be982f0922fed86b4cd">Component</link>).ComponentCopy(copyGO);
<anchor xml:id="__ghost_world_8cs_source_1l00151"/>00151 
<anchor xml:id="__ghost_world_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00153"/>00153 
<anchor xml:id="__ghost_world_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//srcGO.GetComponents(reusableCopyToGhostFind);</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//foreach&#32;(var&#32;icopy&#32;in&#32;reusableCopyToGhostFind)</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;(icopy&#32;as&#32;Component).ComponentCopy(copyGO);</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00160"/>00160 
<anchor xml:id="__ghost_world_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;srcGO.transform.childCount;&#32;i++)
<anchor xml:id="__ghost_world_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;orig&#32;=&#32;srcGO.transform.GetChild(i);
<anchor xml:id="__ghost_world_8cs_source_1l00165"/>00165 
<anchor xml:id="__ghost_world_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(orig.GetComponentInChildren&lt;Collider&gt;()&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;
<anchor xml:id="__ghost_world_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orig.GetComponentInChildren&lt;INeedsGhostGameObject&gt;()&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__ghost_world_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__ghost_world_8cs_source_1l00170"/>00170 
<anchor xml:id="__ghost_world_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;copy&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>(orig.name).transform;
<anchor xml:id="__ghost_world_8cs_source_1l00172"/>00172 
<anchor xml:id="__ghost_world_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copy.parent&#32;=&#32;copyGO.transform;
<anchor xml:id="__ghost_world_8cs_source_1l00174"/>00174 
<anchor xml:id="__ghost_world_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CloneChildrenAndColliders(srcGO.transform.GetChild(i).gameObject,&#32;copy.gameObject,&#32;rootGhost);
<anchor xml:id="__ghost_world_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00178"/>00178 
<anchor xml:id="__ghost_world_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;CloneColliders(Ghost&#32;ghost,&#32;GameObject&#32;sourceObj,&#32;GameObject&#32;copyObj,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;colliderCount)
<anchor xml:id="__ghost_world_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceObj.GetComponents(reusableColliderList);
<anchor xml:id="__ghost_world_8cs_source_1l00182"/>00182 
<anchor xml:id="__ghost_world_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;reusableColliderList.Count;&#32;++i)
<anchor xml:id="__ghost_world_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(reusableColliderList[i]&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__ghost_world_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__ghost_world_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copyObj.AddColliderCopy(reusableColliderList[i]);
<anchor xml:id="__ghost_world_8cs_source_1l00188"/>00188 <emphasis role="preprocessor">#if&#32;!UNITY_2019_1_OR_NEWER</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ghostcol&#32;=&#32;copyObj.AddComponent&lt;GhostCollider&gt;();
<anchor xml:id="__ghost_world_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ghostcol.SetLayer(sourceObj.layer);
<anchor xml:id="__ghost_world_8cs_source_1l00191"/>00191 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__ghost_world_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colliderCount++;
<anchor xml:id="__ghost_world_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;reusableColliderList.Count;
<anchor xml:id="__ghost_world_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00197"/>00197 
<anchor xml:id="__ghost_world_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;}
<anchor xml:id="__ghost_world_8cs_source_1l00199"/>00199 }
<anchor xml:id="__ghost_world_8cs_source_1l00200"/>00200 
<anchor xml:id="__ghost_world_8cs_source_1l00201"/>00201 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
