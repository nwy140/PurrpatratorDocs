<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__hitscan_definition_8cs_source" xml:lang="en-US">
<title>HitscanDefinition.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Core/GenericHitscan/HitscanDefinition.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__hitscan_definition_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00005"/>00005 
<anchor xml:id="__hitscan_definition_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__hitscan_definition_8cs_source_1l00007"/>00007 
<anchor xml:id="__hitscan_definition_8cs_source_1l00008"/>00008 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__hitscan_definition_8cs_source_1l00010"/>00010 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00011"/>00011 
<anchor xml:id="__hitscan_definition_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__hitscan_definition_8cs_source_1l00013"/>00013 {
<anchor xml:id="__hitscan_definition_8cs_source_1l00014"/><link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605">Replicate</link>&#32;{&#32;None,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605a5992e2c6ea3ae8b4d17a188a23060e66">CastOnly</link>,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605ab69df945ae986e6b1882cdc87ad19617">Hits</link>,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605a31c15e58d29019df36ef35823df29d71">HitsWithContactGroups</link>&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00015"/>00015 
<anchor xml:id="__hitscan_definition_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;[System.Serializable]
<anchor xml:id="__hitscan_definition_8cs_source_1l00020"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition">HitscanDefinition</link>
<anchor xml:id="__hitscan_definition_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00022"/>00022 
<anchor xml:id="__hitscan_definition_8cs_source_1l00023"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a1b3a9e0f1d81b079a2d1d9cf73f60a00">00023</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605">Replicate</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a1b3a9e0f1d81b079a2d1d9cf73f60a00">ownerToAuthority</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605">Replicate</link>.Hits;
<anchor xml:id="__hitscan_definition_8cs_source_1l00024"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a49225059802005c7f201086085479fe6">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605">Replicate</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a49225059802005c7f201086085479fe6">authorityToAll</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605">Replicate</link>.Hits;
<anchor xml:id="__hitscan_definition_8cs_source_1l00025"/>00025 
<anchor xml:id="__hitscan_definition_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;cast/overlap&#32;test&#32;will&#32;be&#32;done&#32;on&#32;the&#32;initiating&#32;client&#32;against&#32;colliders&#32;on&#32;these&#32;layers.&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__hitscan_definition_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Exclude&#32;layers&#32;that&#32;won&apos;t&#32;include&#32;any&#32;objects&#32;that&#32;you&#32;don&apos;t&#32;want&#32;to&#32;test&#32;(such&#32;as&#32;walls).&quot;</emphasis>)]
<anchor xml:id="__hitscan_definition_8cs_source_1l00028"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a482718b76eb4133549cd195f369b2b8e">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;LayerMask&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a482718b76eb4133549cd195f369b2b8e">layerMask</link>&#32;=&#32;-1;
<anchor xml:id="__hitscan_definition_8cs_source_1l00029"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a10837c9550ee4c55cd4818dcd35f4d80">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a10837c9550ee4c55cd4818dcd35f4d80">useOffset</link>;
<anchor xml:id="__hitscan_definition_8cs_source_1l00030"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1aec7152e443150178277feefdc90a9890">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1aec7152e443150178277feefdc90a9890">offset1</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;0,&#32;0);&#32;<emphasis role="comment">//&#32;Used&#32;offset&#32;and&#32;first&#32;sphere&#32;of&#32;capsule</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00031"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a1f790037471068200865d13fcd586b61">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a1f790037471068200865d13fcd586b61">offset2</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;1,&#32;0);&#32;<emphasis role="comment">//&#32;Used&#32;for&#32;second&#32;sphere&#32;of&#32;capsule</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00032"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a4ce6ae6e122e10bdc8c96504e6e28cd8">00032</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a4ce6ae6e122e10bdc8c96504e6e28cd8">halfExtents</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(1,&#32;1,&#32;1);
<anchor xml:id="__hitscan_definition_8cs_source_1l00033"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a6d5851caa7f3e7ea2a2d91e1454ad514">00033</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a6d5851caa7f3e7ea2a2d91e1454ad514">orientation</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;0,&#32;0);
<anchor xml:id="__hitscan_definition_8cs_source_1l00034"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a9763ffe8911201cbe64c8720fcd2b5d0">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a9763ffe8911201cbe64c8720fcd2b5d0">hitscanType</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>.Raycast;
<anchor xml:id="__hitscan_definition_8cs_source_1l00035"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a771f3bbdd1ec7b10a7f6f69ab4916322">00035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a771f3bbdd1ec7b10a7f6f69ab4916322">distance</link>&#32;=&#32;100f;
<anchor xml:id="__hitscan_definition_8cs_source_1l00036"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a3359e24db3b776d7d81ff421bb3c203e">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a3359e24db3b776d7d81ff421bb3c203e">radius</link>&#32;=&#32;1;
<anchor xml:id="__hitscan_definition_8cs_source_1l00037"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1afab80ca582f3ffd01d7364d6911b2dbc">00037</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1afab80ca582f3ffd01d7364d6911b2dbc">nearestOnly</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hitscan_definition_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;bool&#32;NearestOnly</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;set&#32;{&#32;nearestOnly&#32;=&#32;value;&#32;}</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;get</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(hitscanType.IsOverlap())</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;nearestOnly;</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00049"/>00049 
<anchor xml:id="__hitscan_definition_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00051"/>00051 
<anchor xml:id="__hitscan_definition_8cs_source_1l00052"/>00052 
<anchor xml:id="__hitscan_definition_8cs_source_1l00053"/>00053 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00054"/>00054 
<anchor xml:id="__hitscan_definition_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;[CustomPropertyDrawer(typeof(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition">HitscanDefinition</link>))]
<anchor xml:id="__hitscan_definition_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>HitscanDefinitionDrawer&#32;:&#32;PropertyDrawer
<anchor xml:id="__hitscan_definition_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIStyle&#32;lefttextstyle&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle
<anchor xml:id="__hitscan_definition_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alignment&#32;=&#32;TextAnchor.UpperLeft,
<anchor xml:id="__hitscan_definition_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richText&#32;=&#32;<emphasis role="keyword">true</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__hitscan_definition_8cs_source_1l00063"/>00063 
<anchor xml:id="__hitscan_definition_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;PAD&#32;=&#32;4;
<anchor xml:id="__hitscan_definition_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;SPACING&#32;=&#32;18;
<anchor xml:id="__hitscan_definition_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;FLDHGHT&#32;=&#32;18;
<anchor xml:id="__hitscan_definition_8cs_source_1l00067"/>00067 
<anchor xml:id="__hitscan_definition_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnGUI(Rect&#32;r,&#32;SerializedProperty&#32;_property,&#32;GUIContent&#32;_label)
<anchor xml:id="__hitscan_definition_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.yMax&#32;-=&#32;6;
<anchor xml:id="__hitscan_definition_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Draw&#32;leading&#32;black&#32;separator</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.yMin&#32;+=&#32;2;
<anchor xml:id="__hitscan_definition_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.DrawRect(<emphasis role="keyword">new</emphasis>&#32;Rect(r)&#32;{&#32;height&#32;=&#32;2&#32;},&#32;<emphasis role="keyword">new</emphasis>&#32;Color(.15f,&#32;.15f,&#32;.15f));
<anchor xml:id="__hitscan_definition_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.yMin&#32;+=&#32;4;
<anchor xml:id="__hitscan_definition_8cs_source_1l00075"/>00075 
<anchor xml:id="__hitscan_definition_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginProperty(r,&#32;GUIContent.none,&#32;_property);
<anchor xml:id="__hitscan_definition_8cs_source_1l00077"/>00077 
<anchor xml:id="__hitscan_definition_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;startingIndent&#32;=&#32;EditorGUI.indentLevel;
<anchor xml:id="__hitscan_definition_8cs_source_1l00079"/>00079 
<anchor xml:id="__hitscan_definition_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;layerMask&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;layerMask&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00081"/>00081 
<anchor xml:id="__hitscan_definition_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;useOffset&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;useOffset&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;offset1&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;offset1&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;offset2&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;offset2&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;hitscanType&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;hitscanType&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;distance&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;distance&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;radius&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;radius&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00088"/>00088 
<anchor xml:id="__hitscan_definition_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;halfExtents&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;halfExtents&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;orientation&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;orientation&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00091"/>00091 
<anchor xml:id="__hitscan_definition_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;nearestOnly&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;nearestOnly&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00093"/>00093 
<anchor xml:id="__hitscan_definition_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>&#32;hitscantype&#32;=&#32;(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>)hitscanType.intValue;
<anchor xml:id="__hitscan_definition_8cs_source_1l00095"/>00095 
<anchor xml:id="__hitscan_definition_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(r)&#32;{&#32;height&#32;=&#32;FLDHGHT&#32;},&#32;_label);
<anchor xml:id="__hitscan_definition_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.yMin&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00098"/>00098 
<anchor xml:id="__hitscan_definition_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Box(r,&#32;GUIContent.none,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;HelpBox&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00100"/>00100 
<anchor xml:id="__hitscan_definition_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.xMin&#32;+=&#32;PAD;
<anchor xml:id="__hitscan_definition_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.xMax&#32;-=&#32;PAD;
<anchor xml:id="__hitscan_definition_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.height&#32;=&#32;FLDHGHT;
<anchor xml:id="__hitscan_definition_8cs_source_1l00104"/>00104 
<anchor xml:id="__hitscan_definition_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;PAD;
<anchor xml:id="__hitscan_definition_8cs_source_1l00106"/>00106 
<anchor xml:id="__hitscan_definition_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__hitscan_definition_8cs_source_1l00108"/>00108 
<anchor xml:id="__hitscan_definition_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(r,&#32;hitscanType);
<anchor xml:id="__hitscan_definition_8cs_source_1l00110"/>00110 
<anchor xml:id="__hitscan_definition_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(r,&#32;layerMask);
<anchor xml:id="__hitscan_definition_8cs_source_1l00113"/>00113 
<anchor xml:id="__hitscan_definition_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Show&#32;dist&#32;for&#32;any&#32;of&#32;the&#32;casts</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hitscantype.IsCast())
<anchor xml:id="__hitscan_definition_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(r,&#32;distance);
<anchor xml:id="__hitscan_definition_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00120"/>00120 
<anchor xml:id="__hitscan_definition_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(r,&#32;nearestOnly);
<anchor xml:id="__hitscan_definition_8cs_source_1l00123"/>00123 
<anchor xml:id="__hitscan_definition_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Radius&#32;types</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hitscantype.UsesRadius())
<anchor xml:id="__hitscan_definition_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(r,&#32;radius);
<anchor xml:id="__hitscan_definition_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00130"/>00130 
<anchor xml:id="__hitscan_definition_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Offset&#32;(all&#32;but&#32;capsule)</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!hitscantype.IsCapsule())
<anchor xml:id="__hitscan_definition_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin&#32;+&#32;18,&#32;r.y,&#32;100,&#32;FLDHGHT),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Offset&quot;</emphasis>));
<anchor xml:id="__hitscan_definition_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin,&#32;r.y,&#32;32,&#32;FLDHGHT),&#32;useOffset,&#32;GUIContent.none);
<anchor xml:id="__hitscan_definition_8cs_source_1l00137"/>00137 
<anchor xml:id="__hitscan_definition_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(useOffset.boolValue)
<anchor xml:id="__hitscan_definition_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin&#32;+&#32;100,&#32;r.y,&#32;r.width&#32;-&#32;100,&#32;FLDHGHT),&#32;offset1,&#32;GUIContent.none);
<anchor xml:id="__hitscan_definition_8cs_source_1l00140"/>00140 
<anchor xml:id="__hitscan_definition_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00142"/>00142 
<anchor xml:id="__hitscan_definition_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Show&#32;Point1&#32;and&#32;Point2&#32;for&#32;capsule.</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hitscantype.IsCapsule())
<anchor xml:id="__hitscan_definition_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin,&#32;r.y,&#32;100,&#32;FLDHGHT),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Offset1:&quot;</emphasis>));
<anchor xml:id="__hitscan_definition_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin&#32;+&#32;100,&#32;r.y,&#32;r.width&#32;-&#32;100,&#32;FLDHGHT),&#32;offset1,&#32;GUIContent.none);
<anchor xml:id="__hitscan_definition_8cs_source_1l00149"/>00149 
<anchor xml:id="__hitscan_definition_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin,&#32;r.y,&#32;100,&#32;FLDHGHT),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Offset2:&quot;</emphasis>));
<anchor xml:id="__hitscan_definition_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin&#32;+&#32;100,&#32;r.y,&#32;r.width&#32;-&#32;100,&#32;FLDHGHT),&#32;offset2,&#32;GUIContent.none);
<anchor xml:id="__hitscan_definition_8cs_source_1l00153"/>00153 
<anchor xml:id="__hitscan_definition_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hitscantype.IsBox())
<anchor xml:id="__hitscan_definition_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin,&#32;r.y,&#32;100,&#32;FLDHGHT),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Half&#32;Extents:&quot;</emphasis>));
<anchor xml:id="__hitscan_definition_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin&#32;+&#32;100,&#32;r.y,&#32;r.width&#32;-&#32;100,&#32;FLDHGHT),&#32;halfExtents,&#32;GUIContent.none);
<anchor xml:id="__hitscan_definition_8cs_source_1l00160"/>00160 
<anchor xml:id="__hitscan_definition_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.y&#32;+=&#32;SPACING;
<anchor xml:id="__hitscan_definition_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin,&#32;r.y,&#32;100,&#32;FLDHGHT),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Orientation:&quot;</emphasis>));
<anchor xml:id="__hitscan_definition_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin&#32;+&#32;100,&#32;r.y,&#32;r.width&#32;-&#32;100,&#32;FLDHGHT),&#32;orientation,&#32;GUIContent.none);
<anchor xml:id="__hitscan_definition_8cs_source_1l00164"/>00164 
<anchor xml:id="__hitscan_definition_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00166"/>00166 
<anchor xml:id="__hitscan_definition_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;haschanged&#32;=&#32;EditorGUI.EndChangeCheck();
<anchor xml:id="__hitscan_definition_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(haschanged)
<anchor xml:id="__hitscan_definition_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.SetDirty(_property.serializedObject.targetObject);
<anchor xml:id="__hitscan_definition_8cs_source_1l00171"/>00171 
<anchor xml:id="__hitscan_definition_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndProperty();
<anchor xml:id="__hitscan_definition_8cs_source_1l00173"/>00173 
<anchor xml:id="__hitscan_definition_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Draw&#32;closing&#32;black&#32;separator</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.xMin&#32;-=&#32;PAD;
<anchor xml:id="__hitscan_definition_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.xMax&#32;+=&#32;PAD;
<anchor xml:id="__hitscan_definition_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.DrawRect(<emphasis role="keyword">new</emphasis>&#32;Rect(r)&#32;{&#32;y&#32;=&#32;r.y&#32;+&#32;26,&#32;height&#32;=&#32;2&#32;},&#32;<emphasis role="keyword">new</emphasis>&#32;Color(.15f,&#32;.15f,&#32;.15f));
<anchor xml:id="__hitscan_definition_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00179"/>00179 
<anchor xml:id="__hitscan_definition_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;GetPropertyHeight(SerializedProperty&#32;property,&#32;GUIContent&#32;label)
<anchor xml:id="__hitscan_definition_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hitscan_definition_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;hitscanType&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;hitscanType&quot;</emphasis>);
<anchor xml:id="__hitscan_definition_8cs_source_1l00183"/>00183 
<anchor xml:id="__hitscan_definition_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>&#32;hittype&#32;=&#32;(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>)hitscanType.intValue;
<anchor xml:id="__hitscan_definition_8cs_source_1l00185"/>00185 
<anchor xml:id="__hitscan_definition_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;doesntNeedExtraLine&#32;=&#32;hittype&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>.Raycast&#32;||&#32;hittype&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>.OverlapSphere;
<anchor xml:id="__hitscan_definition_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;needsExtraExtra&#32;=&#32;hittype&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>.CapsuleCast&#32;||&#32;hittype&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447">HitscanType</link>.BoxCast;
<anchor xml:id="__hitscan_definition_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isOverlap&#32;=&#32;hittype.IsOverlap();
<anchor xml:id="__hitscan_definition_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;SEPARATORS&#32;=&#32;12;
<anchor xml:id="__hitscan_definition_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;SEPARATORS&#32;+&#32;(5&#32;*&#32;SPACING&#32;+&#32;PAD&#32;*&#32;2)&#32;+&#32;(isOverlap&#32;?&#32;SPACING&#32;:&#32;0)&#32;+&#32;(doesntNeedExtraLine&#32;?&#32;0&#32;:&#32;(needsExtraExtra&#32;?&#32;SPACING&#32;*&#32;2&#32;:&#32;SPACING))&#32;+&#32;(hittype.IsCast()&#32;?&#32;SPACING&#32;:&#32;0);
<anchor xml:id="__hitscan_definition_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hitscan_definition_8cs_source_1l00193"/>00193 
<anchor xml:id="__hitscan_definition_8cs_source_1l00194"/>00194 
<anchor xml:id="__hitscan_definition_8cs_source_1l00195"/>00195 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__hitscan_definition_8cs_source_1l00196"/>00196 }
<anchor xml:id="__hitscan_definition_8cs_source_1l00197"/>00197 
<anchor xml:id="__hitscan_definition_8cs_source_1l00198"/>00198 
<anchor xml:id="__hitscan_definition_8cs_source_1l00199"/>00199 
</programlisting></section>
