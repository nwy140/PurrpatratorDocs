<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__inspector_utils_8cs_source" xml:lang="en-US">
<title>InspectorUtils.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/EditorTools/InspectorUtils.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__inspector_utils_8cs_source_1l00001"/>00001 
<anchor xml:id="__inspector_utils_8cs_source_1l00002"/>00002 
<anchor xml:id="__inspector_utils_8cs_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__inspector_utils_8cs_source_1l00004"/>00004 <emphasis role="keyword">using</emphasis>&#32;System.Reflection;
<anchor xml:id="__inspector_utils_8cs_source_1l00005"/>00005 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__inspector_utils_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;System.Linq;
<anchor xml:id="__inspector_utils_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
<anchor xml:id="__inspector_utils_8cs_source_1l00008"/>00008 
<anchor xml:id="__inspector_utils_8cs_source_1l00009"/>00009 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__inspector_utils_8cs_source_1l00011"/>00011 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00012"/>00012 
<anchor xml:id="__inspector_utils_8cs_source_1l00013"/>00013 
<anchor xml:id="__inspector_utils_8cs_source_1l00014"/>00014 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_utilities">Photon.Utilities</link>
<anchor xml:id="__inspector_utils_8cs_source_1l00015"/>00015 {
<anchor xml:id="__inspector_utils_8cs_source_1l00016"/>00016 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00017"/>00017 
<anchor xml:id="__inspector_utils_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>PropertyDrawerUtility
<anchor xml:id="__inspector_utils_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;T&#32;GetActualObjectForSerializedProperty&lt;T&gt;(<emphasis role="keyword">this</emphasis>&#32;FieldInfo&#32;fieldInfo,&#32;SerializedProperty&#32;property)&#32;where&#32;T&#32;:&#32;<emphasis role="keyword">class</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;obj&#32;=&#32;fieldInfo.GetValue(property.serializedObject.targetObject);
<anchor xml:id="__inspector_utils_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__inspector_utils_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00028"/>00028 
<anchor xml:id="__inspector_utils_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;actualObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__inspector_utils_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj.GetType().IsArray)
<anchor xml:id="__inspector_utils_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;index&#32;=&#32;Convert.ToInt32(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>(property.propertyPath.Where(c&#32;=&gt;&#32;<emphasis role="keywordtype">char</emphasis>.IsDigit(c)).ToArray()));
<anchor xml:id="__inspector_utils_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actualObject&#32;=&#32;((T[])obj)[index];
<anchor xml:id="__inspector_utils_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actualObject&#32;=&#32;obj&#32;as&#32;T;
<anchor xml:id="__inspector_utils_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;actualObject;
<anchor xml:id="__inspector_utils_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00041"/>00041 
<anchor xml:id="__inspector_utils_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">object</emphasis>&#32;GetParent(SerializedProperty&#32;prop)
<anchor xml:id="__inspector_utils_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;path&#32;=&#32;prop.propertyPath.Replace(<emphasis role="stringliteral">&quot;.Array.data[&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;[&quot;</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;obj&#32;=&#32;prop.serializedObject.targetObject;
<anchor xml:id="__inspector_utils_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;elements&#32;=&#32;path.Split(<emphasis role="charliteral">&apos;.&apos;</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;element&#32;<emphasis role="keywordflow">in</emphasis>&#32;elements.Take(elements.Length&#32;-&#32;1))
<anchor xml:id="__inspector_utils_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.Contains(<emphasis role="stringliteral">&quot;[&quot;</emphasis>))
<anchor xml:id="__inspector_utils_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;elementName&#32;=&#32;element.Substring(0,&#32;element.IndexOf(<emphasis role="stringliteral">&quot;[&quot;</emphasis>));
<anchor xml:id="__inspector_utils_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;index&#32;=&#32;Convert.ToInt32(element.Substring(element.IndexOf(<emphasis role="stringliteral">&quot;[&quot;</emphasis>)).Replace(<emphasis role="stringliteral">&quot;[&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>).Replace(<emphasis role="stringliteral">&quot;]&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>));
<anchor xml:id="__inspector_utils_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj&#32;=&#32;GetValue(obj,&#32;elementName,&#32;index);
<anchor xml:id="__inspector_utils_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj&#32;=&#32;GetValue(obj,&#32;element);
<anchor xml:id="__inspector_utils_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj;
<anchor xml:id="__inspector_utils_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00062"/>00062 
<anchor xml:id="__inspector_utils_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetIndexOfDrawerObject(SerializedProperty&#32;property,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;reportError&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__inspector_utils_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;path&#32;=&#32;<emphasis role="keyword">property</emphasis>.propertyPath;
<anchor xml:id="__inspector_utils_8cs_source_1l00071"/>00071 
<anchor xml:id="__inspector_utils_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;start&#32;=&#32;path.IndexOf(<emphasis role="stringliteral">&quot;[&quot;</emphasis>)&#32;+&#32;1;
<anchor xml:id="__inspector_utils_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len&#32;=&#32;path.IndexOf(<emphasis role="stringliteral">&quot;]&quot;</emphasis>)&#32;-&#32;start;
<anchor xml:id="__inspector_utils_8cs_source_1l00074"/>00074 
<anchor xml:id="__inspector_utils_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;&lt;&#32;1)
<anchor xml:id="__inspector_utils_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__inspector_utils_8cs_source_1l00077"/>00077 
<anchor xml:id="__inspector_utils_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;-1;
<anchor xml:id="__inspector_utils_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((len&#32;&gt;&#32;0&#32;&amp;&amp;&#32;Int32.TryParse(path.Substring(path.IndexOf(<emphasis role="stringliteral">&quot;[&quot;</emphasis>)&#32;+&#32;1,&#32;len),&#32;out&#32;index))&#32;==&#32;<emphasis role="keyword">false</emphasis>&#32;&amp;&amp;&#32;reportError)
<anchor xml:id="__inspector_utils_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;Attempted&#32;to&#32;find&#32;the&#32;index&#32;of&#32;a&#32;non-array&#32;serialized&#32;property.&quot;</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;index;
<anchor xml:id="__inspector_utils_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00085"/>00085 
<anchor xml:id="__inspector_utils_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">object</emphasis>&#32;GetValue(<emphasis role="keywordtype">object</emphasis>&#32;source,&#32;<emphasis role="keywordtype">string</emphasis>&#32;name)
<anchor xml:id="__inspector_utils_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(source&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__inspector_utils_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__inspector_utils_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;source.GetType();
<anchor xml:id="__inspector_utils_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;f&#32;=&#32;type.GetField(name,&#32;BindingFlags.NonPublic&#32;|&#32;BindingFlags.Public&#32;|&#32;BindingFlags.Instance);
<anchor xml:id="__inspector_utils_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(f&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__inspector_utils_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;p&#32;=&#32;type.GetProperty(name,&#32;BindingFlags.NonPublic&#32;|&#32;BindingFlags.Public&#32;|&#32;BindingFlags.Instance&#32;|&#32;BindingFlags.IgnoreCase);
<anchor xml:id="__inspector_utils_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__inspector_utils_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__inspector_utils_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p.GetValue(source,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;f.GetValue(source);
<anchor xml:id="__inspector_utils_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00101"/>00101 
<anchor xml:id="__inspector_utils_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">object</emphasis>&#32;GetValue(<emphasis role="keywordtype">object</emphasis>&#32;source,&#32;<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__inspector_utils_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;enumerable&#32;=&#32;GetValue(source,&#32;name)&#32;as&#32;IEnumerable;
<anchor xml:id="__inspector_utils_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;enm&#32;=&#32;enumerable.GetEnumerator();
<anchor xml:id="__inspector_utils_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(index--&#32;&gt;=&#32;0)
<anchor xml:id="__inspector_utils_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enm.MoveNext();
<anchor xml:id="__inspector_utils_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;enm.Current;
<anchor xml:id="__inspector_utils_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00111"/>00111 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00112"/>00112 
<anchor xml:id="__inspector_utils_8cs_source_1l00113"/>00113 
<anchor xml:id="__inspector_utils_8cs_source_1l00114"/><link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute">00114</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute">MinMaxRangeAttribute</link>&#32;:&#32;PropertyAttribute
<anchor xml:id="__inspector_utils_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00116"/><link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a201bc84c2c391625c71a003512296d7d">00116</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a201bc84c2c391625c71a003512296d7d">max</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00117"/><link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a0f6169cbf609f5cab38410a23fc52195">00117</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a0f6169cbf609f5cab38410a23fc52195">min</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00118"/>00118 
<anchor xml:id="__inspector_utils_8cs_source_1l00119"/><link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a6c173d8e44b2dc33adc22d8def50246c">00119</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a6c173d8e44b2dc33adc22d8def50246c">MinMaxRangeAttribute</link>(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a0f6169cbf609f5cab38410a23fc52195">min</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a201bc84c2c391625c71a003512296d7d">max</link>)
<anchor xml:id="__inspector_utils_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.min&#32;=&#32;<link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a0f6169cbf609f5cab38410a23fc52195">min</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.max&#32;=&#32;<link linkend="_class_photon_1_1_utilities_1_1_min_max_range_attribute_1a201bc84c2c391625c71a003512296d7d">max</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00125"/>00125 
<anchor xml:id="__inspector_utils_8cs_source_1l00126"/>00126 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00127"/>00127 
<anchor xml:id="__inspector_utils_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;[CustomPropertyDrawer(typeof(MinMaxRangeAttribute))]
<anchor xml:id="__inspector_utils_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>MinMaxRangeDrawer&#32;:&#32;PropertyDrawer
<anchor xml:id="__inspector_utils_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00131"/>00131 
<anchor xml:id="__inspector_utils_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnGUI(Rect&#32;position,&#32;SerializedProperty&#32;property,&#32;GUIContent&#32;label)
<anchor xml:id="__inspector_utils_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00134"/>00134 
<anchor xml:id="__inspector_utils_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(property.propertyType&#32;==&#32;SerializedPropertyType.Vector2)
<anchor xml:id="__inspector_utils_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;range&#32;=&#32;<emphasis role="keyword">property</emphasis>.vector2Value;
<anchor xml:id="__inspector_utils_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;min&#32;=&#32;range.x;
<anchor xml:id="__inspector_utils_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;max&#32;=&#32;range.y;
<anchor xml:id="__inspector_utils_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MinMaxRangeAttribute&#32;attr&#32;=&#32;attribute&#32;as&#32;MinMaxRangeAttribute;
<anchor xml:id="__inspector_utils_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__inspector_utils_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.MinMaxSlider(position,&#32;label,&#32;ref&#32;min,&#32;ref&#32;max,&#32;attr.min,&#32;attr.max);
<anchor xml:id="__inspector_utils_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
<anchor xml:id="__inspector_utils_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range.x&#32;=&#32;min;
<anchor xml:id="__inspector_utils_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range.y&#32;=&#32;max;
<anchor xml:id="__inspector_utils_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.vector2Value&#32;=&#32;range;
<anchor xml:id="__inspector_utils_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(position,&#32;label,&#32;<emphasis role="stringliteral">&quot;Use&#32;only&#32;with&#32;Vector2&quot;</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00156"/>00156 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00157"/>00157 
<anchor xml:id="__inspector_utils_8cs_source_1l00161"/><link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute">00161</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute">BitsPerRangeAttribute</link>&#32;:&#32;PropertyAttribute
<anchor xml:id="__inspector_utils_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00163"/><link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1ac598ac148aa108b29e205d2fa28867d5">00163</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1ac598ac148aa108b29e205d2fa28867d5">max</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00164"/><link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1ae78425edfcb9f2ed2168832af4157e24">00164</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1ae78425edfcb9f2ed2168832af4157e24">min</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00165"/><link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a0d5b6350bbd9d6eb8b392b39fb6d4ecd">00165</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a0d5b6350bbd9d6eb8b392b39fb6d4ecd">label</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00166"/><link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a25d7a148f3de30ea4b06555c6aacebf0">00166</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a25d7a148f3de30ea4b06555c6aacebf0">showLabel</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00167"/><link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1af4d09b9b304412d33d149e4065949809">00167</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1af4d09b9b304412d33d149e4065949809">tooltip</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00168"/><link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a8c844a96bbcc3523700690e7e72cacb8">00168</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a8c844a96bbcc3523700690e7e72cacb8">show</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00169"/>00169 
<anchor xml:id="__inspector_utils_8cs_source_1l00170"/><link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a6cec8130ccc167979ed7b282546b5d44">00170</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a6cec8130ccc167979ed7b282546b5d44">BitsPerRangeAttribute</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1ae78425edfcb9f2ed2168832af4157e24">min</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1ac598ac148aa108b29e205d2fa28867d5">max</link>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a8c844a96bbcc3523700690e7e72cacb8">show</link>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;zeroBase&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a0d5b6350bbd9d6eb8b392b39fb6d4ecd">label</link>&#32;=&#32;<emphasis role="stringliteral">&quot;Max:&quot;</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a25d7a148f3de30ea4b06555c6aacebf0">showLabel</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1af4d09b9b304412d33d149e4065949809">tooltip</link>&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="__inspector_utils_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.show&#32;=&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a8c844a96bbcc3523700690e7e72cacb8">show</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.min&#32;=&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1ae78425edfcb9f2ed2168832af4157e24">min</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.max&#32;=&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1ac598ac148aa108b29e205d2fa28867d5">max</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.label&#32;=&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a0d5b6350bbd9d6eb8b392b39fb6d4ecd">label</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.showLabel&#32;=&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1a25d7a148f3de30ea4b06555c6aacebf0">showLabel</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.tooltip&#32;=&#32;<link linkend="_class_photon_1_1_utilities_1_1_bits_per_range_attribute_1af4d09b9b304412d33d149e4065949809">tooltip</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00180"/>00180 
<anchor xml:id="__inspector_utils_8cs_source_1l00181"/>00181 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00182"/>00182 
<anchor xml:id="__inspector_utils_8cs_source_1l00183"/>00183 
<anchor xml:id="__inspector_utils_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;[CustomPropertyDrawer(typeof(BitsPerRangeAttribute))]
<anchor xml:id="__inspector_utils_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>BitsPerRangeDrawer&#32;:&#32;PropertyDrawer
<anchor xml:id="__inspector_utils_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;labelHeight&#32;=&#32;20;
<anchor xml:id="__inspector_utils_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;GetPropertyHeight(SerializedProperty&#32;property,&#32;GUIContent&#32;label)
<anchor xml:id="__inspector_utils_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__inspector_utils_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BitsPerRangeAttribute&#32;attr&#32;=&#32;attribute&#32;as&#32;BitsPerRangeAttribute;
<anchor xml:id="__inspector_utils_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attr.show)
<anchor xml:id="__inspector_utils_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;attr.showLabel&#32;?&#32;66&#32;:&#32;(66&#32;-&#32;labelHeight);&#32;<emphasis role="comment">//EditorGUI.GetPropertyHeight(property,&#32;label,&#32;true);</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__inspector_utils_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00197"/>00197 
<anchor xml:id="__inspector_utils_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnGUI(Rect&#32;r,&#32;SerializedProperty&#32;property,&#32;GUIContent&#32;label)
<anchor xml:id="__inspector_utils_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00200"/>00200 
<anchor xml:id="__inspector_utils_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BitsPerRangeAttribute&#32;attr&#32;=&#32;attribute&#32;as&#32;BitsPerRangeAttribute;
<anchor xml:id="__inspector_utils_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!attr.show)
<anchor xml:id="__inspector_utils_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__inspector_utils_8cs_source_1l00204"/>00204 
<anchor xml:id="__inspector_utils_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;ir&#32;=&#32;EditorGUI.IndentedRect(r);
<anchor xml:id="__inspector_utils_8cs_source_1l00206"/>00206 
<anchor xml:id="__inspector_utils_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUIContent&#32;emptyContent&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;attr.tooltip);
<anchor xml:id="__inspector_utils_8cs_source_1l00208"/>00208 
<anchor xml:id="__inspector_utils_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_labelheight&#32;=&#32;attr.showLabel&#32;?&#32;labelHeight&#32;:&#32;0;
<anchor xml:id="__inspector_utils_8cs_source_1l00210"/>00210 
<anchor xml:id="__inspector_utils_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attr.showLabel)
<anchor xml:id="__inspector_utils_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Label(<emphasis role="keyword">new</emphasis>&#32;Rect(ir.xMin,&#32;ir.yMin,&#32;ir.width&#32;-&#32;1,&#32;17),&#32;property.displayName&#32;+&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;OL&#32;Title&quot;</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00213"/>00213 
<anchor xml:id="__inspector_utils_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Box(<emphasis role="keyword">new</emphasis>&#32;Rect(ir.xMin,&#32;ir.yMin&#32;+&#32;_labelheight,&#32;ir.width,&#32;ir.height&#32;-&#32;22),&#32;GUIContent.none,&#32;<emphasis role="stringliteral">&quot;GroupBox&quot;</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00215"/>00215 
<anchor xml:id="__inspector_utils_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;padding&#32;=&#32;6f;
<anchor xml:id="__inspector_utils_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;row&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(ir.xMin&#32;+&#32;padding,&#32;ir.yMin&#32;+&#32;_labelheight&#32;+&#32;padding,&#32;ir.width&#32;-&#32;padding&#32;*&#32;2,&#32;17);
<anchor xml:id="__inspector_utils_8cs_source_1l00218"/>00218 
<anchor xml:id="__inspector_utils_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=&#32;<emphasis role="keyword">property</emphasis>.intValue;
<anchor xml:id="__inspector_utils_8cs_source_1l00220"/>00220 
<anchor xml:id="__inspector_utils_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//GUI.Label(row,&#32;property.displayName&#32;+&#32;&quot;:&quot;,&#32;&quot;BoldLabel&quot;);</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00222"/>00222 
<anchor xml:id="__inspector_utils_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row.width&#32;-=&#32;28;
<anchor xml:id="__inspector_utils_8cs_source_1l00224"/>00224 
<anchor xml:id="__inspector_utils_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;holdindent&#32;=&#32;EditorGUI.indentLevel;
<anchor xml:id="__inspector_utils_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;0;
<anchor xml:id="__inspector_utils_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.intValue&#32;=&#32;EditorGUI.IntSlider(row,&#32;emptyContent,&#32;property.intValue,&#32;attr.min,&#32;attr.max);
<anchor xml:id="__inspector_utils_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;holdindent;
<anchor xml:id="__inspector_utils_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row.width&#32;+=&#32;28;
<anchor xml:id="__inspector_utils_8cs_source_1l00230"/>00230 
<anchor xml:id="__inspector_utils_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Label(row,&#32;<emphasis role="stringliteral">&quot;bits&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;RightLabel&quot;</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00232"/>00232 
<anchor xml:id="__inspector_utils_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row.y&#32;+=&#32;17f;
<anchor xml:id="__inspector_utils_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row.height&#32;=&#32;17f;
<anchor xml:id="__inspector_utils_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Label(row,&#32;attr.label&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;((uint)System.Math.Pow(2,&#32;property.intValue)).ToString());
<anchor xml:id="__inspector_utils_8cs_source_1l00236"/>00236 
<anchor xml:id="__inspector_utils_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00239"/>00239 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00240"/>00240 
<anchor xml:id="__inspector_utils_8cs_source_1l00244"/><link linkend="_class_photon_1_1_utilities_1_1_read_only_attribute">00244</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_utilities_1_1_read_only_attribute">ReadOnlyAttribute</link>&#32;:&#32;PropertyAttribute
<anchor xml:id="__inspector_utils_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00246"/>00246 
<anchor xml:id="__inspector_utils_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00248"/>00248 
<anchor xml:id="__inspector_utils_8cs_source_1l00249"/>00249 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;[CustomPropertyDrawer(typeof(<link linkend="_class_photon_1_1_utilities_1_1_read_only_attribute">ReadOnlyAttribute</link>))]
<anchor xml:id="__inspector_utils_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>ReadOnlyDrawer&#32;:&#32;PropertyDrawer
<anchor xml:id="__inspector_utils_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;GetPropertyHeight(SerializedProperty&#32;property,&#32;GUIContent&#32;label)
<anchor xml:id="__inspector_utils_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EditorGUI.GetPropertyHeight(property,&#32;label,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00257"/>00257 
<anchor xml:id="__inspector_utils_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnGUI(Rect&#32;r,&#32;SerializedProperty&#32;property,&#32;GUIContent&#32;label)
<anchor xml:id="__inspector_utils_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__inspector_utils_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//EditorGUI.PropertyField(position,&#32;property,&#32;label,&#32;true);</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(r,&#32;label);
<anchor xml:id="__inspector_utils_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(<emphasis role="keyword">new</emphasis>&#32;Rect(r.width&#32;-&#32;50&#32;+&#32;14,&#32;r.yMin,&#32;50,&#32;r.height),&#32;property,&#32;GUIContent.none,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__inspector_utils_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00267"/>00267 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00268"/>00268 
<anchor xml:id="__inspector_utils_8cs_source_1l00269"/>00269 
<anchor xml:id="__inspector_utils_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;[System.Serializable]
<anchor xml:id="__inspector_utils_8cs_source_1l00274"/><link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer">00274</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer">SingleUnityLayer</link>
<anchor xml:id="__inspector_utils_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__inspector_utils_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__inspector_utils_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_LayerIndex&#32;=&#32;0;
<anchor xml:id="__inspector_utils_8cs_source_1l00279"/>00279 
<anchor xml:id="__inspector_utils_8cs_source_1l00280"/><link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer_1abbc209aea3ec11a0b8aa5f2839a2514b">00280</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer_1abbc209aea3ec11a0b8aa5f2839a2514b">LayerIndex</link>
<anchor xml:id="__inspector_utils_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_LayerIndex;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00284"/>00284 
<anchor xml:id="__inspector_utils_8cs_source_1l00285"/><link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer_1ad7d9bb3e15bcb8b434145685e0e52228">00285</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer_1ad7d9bb3e15bcb8b434145685e0e52228">Set</link>(<emphasis role="keywordtype">int</emphasis>&#32;_layerIndex)
<anchor xml:id="__inspector_utils_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_layerIndex&#32;&gt;&#32;0&#32;&amp;&amp;&#32;_layerIndex&#32;&lt;&#32;32)
<anchor xml:id="__inspector_utils_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_LayerIndex&#32;=&#32;_layerIndex;
<anchor xml:id="__inspector_utils_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00292"/>00292 
<anchor xml:id="__inspector_utils_8cs_source_1l00293"/><link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer_1a1afc55a68910937504d2a880d3f8c97a">00293</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer_1a1afc55a68910937504d2a880d3f8c97a">Mask</link>
<anchor xml:id="__inspector_utils_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;1&#32;&lt;&lt;&#32;m_LayerIndex;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00297"/>00297 
<anchor xml:id="__inspector_utils_8cs_source_1l00298"/><link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer_1a4981b9bb3d5a9d6c8def538104e7982f">00298</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;int(<link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer">SingleUnityLayer</link>&#32;m)
<anchor xml:id="__inspector_utils_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m.<link linkend="_class_photon_1_1_utilities_1_1_single_unity_layer_1abbc209aea3ec11a0b8aa5f2839a2514b">LayerIndex</link>;
<anchor xml:id="__inspector_utils_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00303"/>00303 
<anchor xml:id="__inspector_utils_8cs_source_1l00304"/>00304 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;[CustomPropertyDrawer(typeof(SingleUnityLayer))]
<anchor xml:id="__inspector_utils_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>SingleUnityLayerPropertyDrawer&#32;:&#32;PropertyDrawer
<anchor xml:id="__inspector_utils_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnGUI(Rect&#32;_position,&#32;SerializedProperty&#32;_property,&#32;GUIContent&#32;_label)
<anchor xml:id="__inspector_utils_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginProperty(_position,&#32;GUIContent.none,&#32;_property);
<anchor xml:id="__inspector_utils_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;layerIndex&#32;=&#32;_property.FindPropertyRelative(<emphasis role="stringliteral">&quot;m_LayerIndex&quot;</emphasis>);
<anchor xml:id="__inspector_utils_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_position&#32;=&#32;EditorGUI.PrefixLabel(_position,&#32;GUIUtility.GetControlID(FocusType.Passive),&#32;_label);
<anchor xml:id="__inspector_utils_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(layerIndex&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__inspector_utils_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__inspector_utils_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;layerIndex.intValue&#32;=&#32;EditorGUI.LayerField(_position,&#32;layerIndex.intValue);
<anchor xml:id="__inspector_utils_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndProperty();
<anchor xml:id="__inspector_utils_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;}
<anchor xml:id="__inspector_utils_8cs_source_1l00320"/>00320 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__inspector_utils_8cs_source_1l00321"/>00321 
<anchor xml:id="__inspector_utils_8cs_source_1l00322"/>00322 
<anchor xml:id="__inspector_utils_8cs_source_1l00323"/>00323 }
<anchor xml:id="__inspector_utils_8cs_source_1l00324"/>00324 
</programlisting></section>
