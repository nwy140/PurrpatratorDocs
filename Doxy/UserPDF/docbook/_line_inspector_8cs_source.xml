<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__line_inspector_8cs_source" xml:lang="en-US">
<title>LineInspector.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Demos/DemoSlotRacer/Scripts/BezierCurve/Editor/LineInspector.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__line_inspector_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;LineInspector.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;Part&#32;of:&#32;Photon&#32;Unity&#32;Networking&#32;Demos</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;Original:&#32;http://catlikecoding.com/unity/tutorials/curves-and-splines/</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&#32;Used&#32;in&#32;SlotRacer&#32;Demo</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00010"/>00010 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__line_inspector_8cs_source_1l00011"/>00011 
<anchor xml:id="__line_inspector_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__line_inspector_8cs_source_1l00013"/>00013 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__line_inspector_8cs_source_1l00014"/>00014 
<anchor xml:id="__line_inspector_8cs_source_1l00015"/>00015 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils">Photon.Pun.Demo.SlotRacer.Utils</link>
<anchor xml:id="__line_inspector_8cs_source_1l00016"/>00016 {
<anchor xml:id="__line_inspector_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;[CustomEditor(typeof(Line))]
<anchor xml:id="__line_inspector_8cs_source_1l00018"/><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_line_inspector">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_line_inspector">LineInspector</link>&#32;:&#32;Editor
<anchor xml:id="__line_inspector_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;{
<anchor xml:id="__line_inspector_8cs_source_1l00020"/>00020 
<anchor xml:id="__line_inspector_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnSceneGUI()
<anchor xml:id="__line_inspector_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__line_inspector_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_line">Line</link>&#32;line&#32;=&#32;target&#32;as&#32;<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_line">Line</link>;
<anchor xml:id="__line_inspector_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;handleTransform&#32;=&#32;line.transform;
<anchor xml:id="__line_inspector_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;handleRotation&#32;=&#32;Tools.pivotRotation&#32;==&#32;PivotRotation.Local&#32;?&#32;handleTransform.rotation&#32;:&#32;Quaternion.identity;
<anchor xml:id="__line_inspector_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;p0&#32;=&#32;handleTransform.TransformPoint(line.<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_line_1ad65d3ce0e87eb81bfce740fa023f1331">p0</link>);
<anchor xml:id="__line_inspector_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;p1&#32;=&#32;handleTransform.TransformPoint(line.<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_line_1a6f05cddc8c1dc888763f235ca542d48a">p1</link>);
<anchor xml:id="__line_inspector_8cs_source_1l00028"/>00028 
<anchor xml:id="__line_inspector_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.color&#32;=&#32;Color.white;
<anchor xml:id="__line_inspector_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLine(p0,&#32;p1);
<anchor xml:id="__line_inspector_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__line_inspector_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p0&#32;=&#32;Handles.DoPositionHandle(p0,&#32;handleRotation);
<anchor xml:id="__line_inspector_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())&#32;{
<anchor xml:id="__line_inspector_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(line,&#32;<emphasis role="stringliteral">&quot;Move&#32;Point&quot;</emphasis>);
<anchor xml:id="__line_inspector_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.SetDirty(line);
<anchor xml:id="__line_inspector_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;line.<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_line_1ad65d3ce0e87eb81bfce740fa023f1331">p0</link>&#32;=&#32;handleTransform.InverseTransformPoint(p0);
<anchor xml:id="__line_inspector_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__line_inspector_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__line_inspector_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p1&#32;=&#32;Handles.DoPositionHandle(p1,&#32;handleRotation);
<anchor xml:id="__line_inspector_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())&#32;{
<anchor xml:id="__line_inspector_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(line,&#32;<emphasis role="stringliteral">&quot;Move&#32;Point&quot;</emphasis>);
<anchor xml:id="__line_inspector_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.SetDirty(line);
<anchor xml:id="__line_inspector_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;line.<link linkend="_class_photon_1_1_pun_1_1_demo_1_1_slot_racer_1_1_utils_1_1_line_1a6f05cddc8c1dc888763f235ca542d48a">p1</link>&#32;=&#32;handleTransform.InverseTransformPoint(p1);
<anchor xml:id="__line_inspector_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__line_inspector_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__line_inspector_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;}
<anchor xml:id="__line_inspector_8cs_source_1l00047"/>00047 }
</programlisting></section>
