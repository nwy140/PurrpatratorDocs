<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__lite_crusher_8cs_source" xml:lang="en-US">
<title>LiteCrusher.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/LiteCrusher/LiteCrusher.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__lite_crusher_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__lite_crusher_8cs_source_1l00002"/>00002 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__lite_crusher_8cs_source_1l00003"/>00003 
<anchor xml:id="__lite_crusher_8cs_source_1l00004"/>00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__lite_crusher_8cs_source_1l00005"/>00005 {
<anchor xml:id="__lite_crusher_8cs_source_1l00006"/>00006 &#32;&#32;&#32;&#32;[Serializable]
<anchor xml:id="__lite_crusher_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>LiteCrusher
<anchor xml:id="__lite_crusher_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;{
<anchor xml:id="__lite_crusher_8cs_source_1l00009"/><link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1a038ac79696e6caec297b87ec68cfbccf">00009</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1a038ac79696e6caec297b87ec68cfbccf">bits</link>;
<anchor xml:id="__lite_crusher_8cs_source_1l00010"/>00010 
<anchor xml:id="__lite_crusher_8cs_source_1l00014"/><link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1a629450e8b107ba5a2ed689e7706ce19b">00014</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1a629450e8b107ba5a2ed689e7706ce19b">GetBitsForMaxValue</link>(uint&#32;maxvalue)
<anchor xml:id="__lite_crusher_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__lite_crusher_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;32;&#32;++i)
<anchor xml:id="__lite_crusher_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxvalue&#32;&gt;&gt;&#32;i&#32;==&#32;0)
<anchor xml:id="__lite_crusher_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
<anchor xml:id="__lite_crusher_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;32;
<anchor xml:id="__lite_crusher_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__lite_crusher_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="__lite_crusher_8cs_source_1l00022"/>00022 
<anchor xml:id="__lite_crusher_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;[Serializable]
<anchor xml:id="__lite_crusher_8cs_source_1l00024"/><link linkend="_class_photon_1_1_compression_1_1_lite_crusher">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_lite_crusher">LiteCrusher</link>&lt;TComp,&#32;T&gt;&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_lite_crusher">LiteCrusher</link>&#32;where&#32;T&#32;:&#32;struct&#32;where&#32;TComp&#32;:&#32;struct
<anchor xml:id="__lite_crusher_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;{
<anchor xml:id="__lite_crusher_8cs_source_1l00026"/><link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1aa1151992dfc5362a99a000734e8b9d62">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;TComp&#32;<link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1aa1151992dfc5362a99a000734e8b9d62">Encode</link>(T&#32;val);
<anchor xml:id="__lite_crusher_8cs_source_1l00027"/><link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1ab162a07e708a80538186d30d109b0060">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;T&#32;<link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1ab162a07e708a80538186d30d109b0060">Decode</link>(uint&#32;val);
<anchor xml:id="__lite_crusher_8cs_source_1l00028"/>00028 
<anchor xml:id="__lite_crusher_8cs_source_1l00029"/><link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1a1e2d6f55cb94ab999f058b052aa13c6d">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;TComp&#32;<link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1a1e2d6f55cb94ab999f058b052aa13c6d">WriteValue</link>(T&#32;val,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition);
<anchor xml:id="__lite_crusher_8cs_source_1l00030"/><link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1a975c9d23e389bc8f27adf7e930972a87">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1a975c9d23e389bc8f27adf7e930972a87">WriteCValue</link>(uint&#32;val,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition);
<anchor xml:id="__lite_crusher_8cs_source_1l00031"/><link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1af2e25948d108366181a5331e54c48539">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;T&#32;<link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1af2e25948d108366181a5331e54c48539">ReadValue</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition);
<anchor xml:id="__lite_crusher_8cs_source_1l00032"/><link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1af5bf203d199d19660b6e0f07a2c11d4f">00032</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;TComp&#32;<link linkend="_class_photon_1_1_compression_1_1_lite_crusher_1af5bf203d199d19660b6e0f07a2c11d4f">ReadCValue</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition);
<anchor xml:id="__lite_crusher_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;}
<anchor xml:id="__lite_crusher_8cs_source_1l00034"/>00034 }
</programlisting></section>
