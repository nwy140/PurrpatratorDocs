<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__net_object_8cs_source" xml:lang="en-US">
<title>NetObject.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Core/NetObject.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__net_object_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00005"/>00005 
<anchor xml:id="__net_object_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__net_object_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__net_object_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple">Simple</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal">Internal</link>;
<anchor xml:id="__net_object_8cs_source_1l00009"/>00009 
<anchor xml:id="__net_object_8cs_source_1l00010"/>00010 <emphasis role="preprocessor">#if&#32;GHOST_WORLD</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple">Simple</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_ghost_worlds">GhostWorlds</link>;
<anchor xml:id="__net_object_8cs_source_1l00012"/>00012 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00013"/>00013 
<anchor xml:id="__net_object_8cs_source_1l00014"/>00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_realtime">Realtime</link>;
<anchor xml:id="__net_object_8cs_source_1l00015"/>00015 <emphasis role="keyword">using</emphasis>&#32;ExitGames.Client.<link linkend="_namespace_exit_games_1_1_client_1_1_photon">Photon</link>;
<anchor xml:id="__net_object_8cs_source_1l00016"/>00016 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_utilities">Utilities</link>;
<anchor xml:id="__net_object_8cs_source_1l00017"/>00017 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_compression">Compression</link>.<link linkend="_namespace_photon_1_1_compression_1_1_internal">Internal</link>;
<anchor xml:id="__net_object_8cs_source_1l00018"/>00018 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_compression">Compression</link>;
<anchor xml:id="__net_object_8cs_source_1l00019"/>00019 
<anchor xml:id="__net_object_8cs_source_1l00020"/>00020 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00021"/>00021 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__net_object_8cs_source_1l00022"/>00022 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00023"/>00023 
<anchor xml:id="__net_object_8cs_source_1l00024"/>00024 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__net_object_8cs_source_1l00025"/>00025 
<anchor xml:id="__net_object_8cs_source_1l00026"/>00026 {
<anchor xml:id="__net_object_8cs_source_1l00027"/><link linkend="_namespace_photon_1_1_pun_1_1_simple_1a9e44d0bc38ecc98862b2dbe9ded51247">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a9e44d0bc38ecc98862b2dbe9ded51247">RigidbodyType</link>&#32;{&#32;None,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a9e44d0bc38ecc98862b2dbe9ded51247ac8ee22e1fc2165dfd3d2b04aef93b2f2">RB</link>,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a9e44d0bc38ecc98862b2dbe9ded51247a5ca365be79b93852b4604ac389ec32d2">RB2D</link>&#32;}
<anchor xml:id="__net_object_8cs_source_1l00028"/>00028 
<anchor xml:id="__net_object_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;[DisallowMultipleComponent]
<anchor xml:id="__net_object_8cs_source_1l00030"/>00030 
<anchor xml:id="__net_object_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;[HelpURL(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_simple_docs_u_r_l_s">SimpleDocsURLS</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_simple_docs_u_r_l_s_1ad99a2f1f6a39fed16f6c439bdd10a5d3">OVERVIEW_PATH</link>)]
<anchor xml:id="__net_object_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;[RequireComponent(typeof(<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>))]
<anchor xml:id="__net_object_8cs_source_1l00033"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">00033</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__net_object_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks">IMatchmakingCallbacks</link>
<anchor xml:id="__net_object_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_i_on_photon_view_pre_net_destroy">IOnPhotonViewPreNetDestroy</link>
<anchor xml:id="__net_object_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_i_on_photon_view_owner_change">IOnPhotonViewOwnerChange</link>
<anchor xml:id="__net_object_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_i_on_photon_view_controller_change">IOnPhotonViewControllerChange</link>
<anchor xml:id="__net_object_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_pre_update">IOnPreUpdate</link>
<anchor xml:id="__net_object_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_pre_simulate">IOnPreSimulate</link>
<anchor xml:id="__net_object_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_post_simulate">IOnPostSimulate</link>
<anchor xml:id="__net_object_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_quantize">IOnQuantize</link>
<anchor xml:id="__net_object_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_increment_frame">IOnIncrementFrame</link>
<anchor xml:id="__net_object_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_pre_quit">IOnPreQuit</link>
<anchor xml:id="__net_object_8cs_source_1l00044"/>00044 
<anchor xml:id="__net_object_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00046"/>00046 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Inspector&#32;Fields</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00047"/>00047 
<anchor xml:id="__net_object_8cs_source_1l00048"/>00048 
<anchor xml:id="__net_object_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__net_object_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__net_object_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Enabling&#32;this&#32;will&#32;tell&#32;the&#32;serializer&#32;to&#32;completely&#32;exclude&#32;this&#32;net&#32;object&#32;from&#32;serialization&#32;if&#32;none&#32;of&#32;its&#32;content&#32;has&#32;changed.&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__net_object_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;While&#32;this&#32;will&#32;remove&#32;heartbeat&#32;data,&#32;It&#32;may&#32;also&#32;produce&#32;undesirable&#32;extrapolation&#32;and&#32;buffer&#32;resizing&#32;behavior,&#32;as&#32;receiving&#32;clients&#32;will&#32;see&#32;this&#32;as&#32;a&#32;network&#32;failure.&quot;</emphasis>)]
<anchor xml:id="__net_object_8cs_source_1l00053"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a6f85993cfd609f175ed298c7c3eeded2">00053</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a6f85993cfd609f175ed298c7c3eeded2">skipWhenEmpty</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00054"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa3e0a7b8cec45e8bad48b8c9692c0e43">00054</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa3e0a7b8cec45e8bad48b8c9692c0e43">SkipWhenEmpty</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a6f85993cfd609f175ed298c7c3eeded2">skipWhenEmpty</link>;&#32;}&#32;}
<anchor xml:id="__net_object_8cs_source_1l00055"/>00055 
<anchor xml:id="__net_object_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__net_object_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__net_object_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Controls&#32;if&#32;incoming&#32;NetObject&#32;updates&#32;from&#32;a&#32;current&#32;non-owner/controller&#32;should&#32;be&#32;ignored.&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__net_object_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;The&#32;exception&#32;to&#32;this&#32;is&#32;if&#32;the&#32;controller&#32;is&#32;currently&#32;null/-1,&#32;which&#32;indicates&#32;that&#32;the&#32;initial&#32;ownership&#32;messages&#32;from&#32;the&#32;Master&#32;has&#32;not&#32;yet&#32;arrived&#32;or&#32;been&#32;applied,&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__net_object_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;in&#32;which&#32;case&#32;the&#32;first&#32;arriving&#32;updates&#32;originating&#32;Player&#32;will&#32;be&#32;treated&#32;as&#32;the&#32;current&#32;Controller,&#32;regardless&#32;of&#32;this&#32;setting.&quot;</emphasis>)]
<anchor xml:id="__net_object_8cs_source_1l00061"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a35ac20091a2a4705c8ca53f552a38ad9">00061</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a35ac20091a2a4705c8ca53f552a38ad9">ignoreNonControllerUpdates</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00062"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1affc6d3e54e1eacc288cd66d65743a56a">00062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1affc6d3e54e1eacc288cd66d65743a56a">IgnoreNonControllerUpdates</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a35ac20091a2a4705c8ca53f552a38ad9">ignoreNonControllerUpdates</link>;&#32;}&#32;}
<anchor xml:id="__net_object_8cs_source_1l00063"/>00063 
<anchor xml:id="__net_object_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__net_object_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__net_object_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;When&#32;enabled,&#32;if&#32;a&#32;frame&#32;update&#32;for&#32;this&#32;Net&#32;Object&#32;arrives&#32;AFTER&#32;that&#32;frame&#32;number&#32;has&#32;already&#32;been&#32;applied&#32;(it&#32;will&#32;have&#32;been&#32;reconstructed/extrapolated&#32;with&#32;a&#32;best&#32;guess),&quot;</emphasis>&#32;+
<anchor xml:id="__net_object_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;the&#32;incoming&#32;update&#32;will&#32;be&#32;immediately&#32;applied,&#32;and&#32;all&#32;frames&#32;between&#32;that&#32;frame&#32;and&#32;the&#32;current&#32;snapshot&#32;will&#32;be&#32;reapplied.&quot;</emphasis>)]
<anchor xml:id="__net_object_8cs_source_1l00068"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9528c5b802effbacfd0740c8ffb0fbc8">00068</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9528c5b802effbacfd0740c8ffb0fbc8">resimulateLateArrivals</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00069"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab0f269205b204fc7ea3435c327dfb3ba">00069</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab0f269205b204fc7ea3435c327dfb3ba">ResimulateLateArrivals</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9528c5b802effbacfd0740c8ffb0fbc8">resimulateLateArrivals</link>;&#32;}&#32;}
<anchor xml:id="__net_object_8cs_source_1l00070"/>00070 
<anchor xml:id="__net_object_8cs_source_1l00071"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa5cd234a4b8df583162774371ed00d62">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Rigidbody&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa5cd234a4b8df583162774371ed00d62">_rigidbody</link>;
<anchor xml:id="__net_object_8cs_source_1l00072"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ada49d7fac0526ab253b62580f42b9ed1">00072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Rigidbody&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ada49d7fac0526ab253b62580f42b9ed1">Rb</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa5cd234a4b8df583162774371ed00d62">_rigidbody</link>;&#32;}&#32;}
<anchor xml:id="__net_object_8cs_source_1l00073"/>00073 
<anchor xml:id="__net_object_8cs_source_1l00074"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0b8e62f2ee390949322f6168abfc95a3">00074</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Rigidbody2D&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0b8e62f2ee390949322f6168abfc95a3">_rigidbody2D</link>;
<anchor xml:id="__net_object_8cs_source_1l00075"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aae24722b5382226cce495f45dd644b73">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Rigidbody2D&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aae24722b5382226cce495f45dd644b73">Rb2D</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0b8e62f2ee390949322f6168abfc95a3">_rigidbody2D</link>;&#32;}&#32;}
<anchor xml:id="__net_object_8cs_source_1l00076"/>00076 
<anchor xml:id="__net_object_8cs_source_1l00077"/>00077 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00078"/>00078 
<anchor xml:id="__net_object_8cs_source_1l00079"/>00079 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Static&#32;NetObject&#32;Lookups&#32;and&#32;Pools</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00080"/>00080 
<anchor xml:id="__net_object_8cs_source_1l00081"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a9894ff54c49536a9714bcc94e165c5">00081</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;NonAllocDictionary&lt;int,&#32;NetObject&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a9894ff54c49536a9714bcc94e165c5">activeControlledNetObjs</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;NonAllocDictionary&lt;int,&#32;NetObject&gt;();
<anchor xml:id="__net_object_8cs_source_1l00082"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac8c3a922671cea92c81b253cbb1d3f2d">00082</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;NonAllocDictionary&lt;int,&#32;NetObject&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac8c3a922671cea92c81b253cbb1d3f2d">activeUncontrolledNetObjs</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;NonAllocDictionary&lt;int,&#32;NetObject&gt;();
<anchor xml:id="__net_object_8cs_source_1l00083"/>00083 
<anchor xml:id="__net_object_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Queue&lt;NetObject&gt;&#32;pendingActiveNetObjDictChanges&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Queue&lt;NetObject&gt;();
<anchor xml:id="__net_object_8cs_source_1l00085"/>00085 
<anchor xml:id="__net_object_8cs_source_1l00089"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ae3f615b0e92e5f18033f56d7537d0e33">00089</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ae3f615b0e92e5f18033f56d7537d0e33">NetObjDictsLocked</link>
<anchor xml:id="__net_object_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;netObjDictsLocked&#32;=&#32;value;
<anchor xml:id="__net_object_8cs_source_1l00094"/>00094 
<anchor xml:id="__net_object_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!value)
<anchor xml:id="__net_object_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;pendingActiveNetObjDictChanges.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;no&#32;=&#32;pendingActiveNetObjDictChanges.Dequeue();
<anchor xml:id="__net_object_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;no.DetermineActiveAndControlled(no.photonView.IsMine);
<anchor xml:id="__net_object_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;netObjDictsLocked;
<anchor xml:id="__net_object_8cs_source_1l00106"/>00106 
<anchor xml:id="__net_object_8cs_source_1l00107"/>00107 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00108"/>00108 
<anchor xml:id="__net_object_8cs_source_1l00109"/>00109 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Collider&#32;Lookup</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00110"/>00110 
<anchor xml:id="__net_object_8cs_source_1l00112"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9558de0c78c6a076ff060670a625c7c2">00112</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;Component,&#32;int&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9558de0c78c6a076ff060670a625c7c2">colliderLookup</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;Component,&#32;int&gt;();
<anchor xml:id="__net_object_8cs_source_1l00113"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac9ed71fe97bcb91fce23e359f3127e74">00113</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Component&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac9ed71fe97bcb91fce23e359f3127e74">indexedColliders</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Component&gt;();
<anchor xml:id="__net_object_8cs_source_1l00114"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab80e9784a9eb3d9c5bb5c7d1d82c33fa">00114</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab80e9784a9eb3d9c5bb5c7d1d82c33fa">bitsForColliderIndex</link>;
<anchor xml:id="__net_object_8cs_source_1l00115"/>00115 
<anchor xml:id="__net_object_8cs_source_1l00116"/>00116 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00117"/>00117 
<anchor xml:id="__net_object_8cs_source_1l00118"/>00118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ObjReady</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00119"/>00119 
<anchor xml:id="__net_object_8cs_source_1l00120"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">00120</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>;
<anchor xml:id="__net_object_8cs_source_1l00124"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1afb76b21c3d78d4f42857ffa864c920aa">00124</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1afb76b21c3d78d4f42857ffa864c920aa">originHistory</link>;
<anchor xml:id="__net_object_8cs_source_1l00125"/>00125 
<anchor xml:id="__net_object_8cs_source_1l00126"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a3395c8f6470dcbfa633034fae53aec1b">00126</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a3395c8f6470dcbfa633034fae53aec1b">syncObjReadyMask</link>;
<anchor xml:id="__net_object_8cs_source_1l00127"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be324c8f907cb0047027dda938337a8">00127</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be324c8f907cb0047027dda938337a8">packObjReadyMask</link>;
<anchor xml:id="__net_object_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;Dictionary&lt;Component,&#32;int&gt;&#32;packObjIndexLookup&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;Component,&#32;int&gt;();
<anchor xml:id="__net_object_8cs_source_1l00129"/>00129 
<anchor xml:id="__net_object_8cs_source_1l00130"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a1790bbaf6a5de718d570143c31a457">00130</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a1790bbaf6a5de718d570143c31a457">OnSyncObjReadyChange</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object">SyncObject</link>&#32;sobj,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a3a9d2aa15970f527d5e8920133cd458d">ReadyStateEnum</link>&#32;readyState)
<anchor xml:id="__net_object_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;syncObjIndex&#32;=&#32;sobj.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a45b906ce2d92ab748cb2076acf6c0c2e">SyncObjIndex</link>;
<anchor xml:id="__net_object_8cs_source_1l00133"/>00133 
<anchor xml:id="__net_object_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(readyState&#32;!=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a3a9d2aa15970f527d5e8920133cd458d">ReadyStateEnum</link>.Unready)
<anchor xml:id="__net_object_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a3395c8f6470dcbfa633034fae53aec1b">syncObjReadyMask</link>[syncObjIndex]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a3395c8f6470dcbfa633034fae53aec1b">syncObjReadyMask</link>[syncObjIndex]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00142"/>00142 
<anchor xml:id="__net_object_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab959fbfe7a7068698db58b5cec1b0db6">AllObjsAreReady</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a3395c8f6470dcbfa633034fae53aec1b">syncObjReadyMask</link>.<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a5af7e332fa9b8697c37bbe9ab29f6025">AllAreTrue</link>&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be324c8f907cb0047027dda938337a8">packObjReadyMask</link>.<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a5af7e332fa9b8697c37bbe9ab29f6025">AllAreTrue</link>;
<anchor xml:id="__net_object_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00145"/>00145 
<anchor xml:id="__net_object_8cs_source_1l00146"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1abe4da2a021d3a463efacd2685ad05812">00146</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1abe4da2a021d3a463efacd2685ad05812">OnPackObjReadyChange</link>(Component&#32;pobj,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a3a9d2aa15970f527d5e8920133cd458d">ReadyStateEnum</link>&#32;readyState)
<anchor xml:id="__net_object_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;packObjIndex&#32;=&#32;packObjIndexLookup[pobj];
<anchor xml:id="__net_object_8cs_source_1l00149"/>00149 
<anchor xml:id="__net_object_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(readyState&#32;!=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a3a9d2aa15970f527d5e8920133cd458d">ReadyStateEnum</link>.Unready)
<anchor xml:id="__net_object_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be324c8f907cb0047027dda938337a8">packObjReadyMask</link>[packObjIndex]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be324c8f907cb0047027dda938337a8">packObjReadyMask</link>[packObjIndex]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00158"/>00158 
<anchor xml:id="__net_object_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab959fbfe7a7068698db58b5cec1b0db6">AllObjsAreReady</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a3395c8f6470dcbfa633034fae53aec1b">syncObjReadyMask</link>.<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a5af7e332fa9b8697c37bbe9ab29f6025">AllAreTrue</link>&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be324c8f907cb0047027dda938337a8">packObjReadyMask</link>.<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a5af7e332fa9b8697c37bbe9ab29f6025">AllAreTrue</link>;
<anchor xml:id="__net_object_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00161"/>00161 
<anchor xml:id="__net_object_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_allObjsAreReady;
<anchor xml:id="__net_object_8cs_source_1l00163"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab959fbfe7a7068698db58b5cec1b0db6">00163</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab959fbfe7a7068698db58b5cec1b0db6">AllObjsAreReady</link>
<anchor xml:id="__net_object_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>&#32;?&#32;true&#32;:&#32;_allObjsAreReady;
<anchor xml:id="__net_object_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(GetComponent&lt;SyncPickup&gt;())</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(name&#32;+&#32;&quot;&#32;&lt;b&gt;ALL&#32;READY&#32;Try&lt;/b&gt;&#32;&quot;&#32;+&#32;_allObjsAreReady&#32;+&#32;&quot;&#32;:&#32;&quot;&#32;+&#32;value);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00173"/>00173 
<anchor xml:id="__net_object_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_allObjsAreReady&#32;==&#32;value)
<anchor xml:id="__net_object_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00176"/>00176 
<anchor xml:id="__net_object_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_allObjsAreReady&#32;=&#32;value;
<anchor xml:id="__net_object_8cs_source_1l00178"/>00178 
<anchor xml:id="__net_object_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;onNetObjReadyCallbacks.Count;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onNetObjReadyCallbacks[i].OnNetObjReadyChange(value);
<anchor xml:id="__net_object_8cs_source_1l00181"/>00181 
<anchor xml:id="__net_object_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be324c8f907cb0047027dda938337a8">packObjReadyMask</link>.<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a7cc5ccb40c34d4aa2a741272ca026baf">SetAllTrue</link>();
<anchor xml:id="__net_object_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a3395c8f6470dcbfa633034fae53aec1b">syncObjReadyMask</link>.<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a7cc5ccb40c34d4aa2a741272ca026baf">SetAllTrue</link>();
<anchor xml:id="__net_object_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00186"/>00186 
<anchor xml:id="__net_object_8cs_source_1l00187"/>00187 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;ObjReady</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00188"/>00188 
<anchor xml:id="__net_object_8cs_source_1l00189"/>00189 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Cached</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00190"/>00190 
<anchor xml:id="__net_object_8cs_source_1l00191"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9341b529b4c140a1e452d837a6f7ef05">00191</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9341b529b4c140a1e452d837a6f7ef05">viewID</link>;
<anchor xml:id="__net_object_8cs_source_1l00192"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab4235e9ff49bde0b20b1375e714626f0">00192</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab4235e9ff49bde0b20b1375e714626f0">ViewID</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9341b529b4c140a1e452d837a6f7ef05">viewID</link>;&#32;}&#32;}
<anchor xml:id="__net_object_8cs_source_1l00193"/>00193 
<anchor xml:id="__net_object_8cs_source_1l00194"/>00194 <emphasis role="preprocessor">#if&#32;GHOST_WORLD</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">private</emphasis>&#32;Haunted&#32;haunted;
<anchor xml:id="__net_object_8cs_source_1l00196"/>00196 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00197"/>00197 
<anchor xml:id="__net_object_8cs_source_1l00198"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">00198</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>;
<anchor xml:id="__net_object_8cs_source_1l00199"/>00199 
<anchor xml:id="__net_object_8cs_source_1l00200"/>00200 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00201"/>00201 
<anchor xml:id="__net_object_8cs_source_1l00202"/>00202 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Startup&#32;/&#32;Shutdown</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00203"/>00203 
<anchor xml:id="__net_object_8cs_source_1l00204"/>00204 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00205"/>00205 
<anchor xml:id="__net_object_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Reset()
<anchor xml:id="__net_object_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEditorInternal.InternalEditorUtility.SetIsInspectorExpanded(<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00209"/>00209 
<anchor xml:id="__net_object_8cs_source_1l00210"/>00210 
<anchor xml:id="__net_object_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa5cd234a4b8df583162774371ed00d62">_rigidbody</link>)
<anchor xml:id="__net_object_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa5cd234a4b8df583162774371ed00d62">_rigidbody</link>&#32;=&#32;transform.GetNestedComponentInChildren&lt;Rigidbody,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&gt;(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00213"/>00213 
<anchor xml:id="__net_object_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa5cd234a4b8df583162774371ed00d62">_rigidbody</link>)
<anchor xml:id="__net_object_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0b8e62f2ee390949322f6168abfc95a3">_rigidbody2D</link>&#32;=&#32;transform.GetNestedComponentInChildren&lt;Rigidbody2D,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&gt;(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00217"/>00217 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00218"/>00218 
<anchor xml:id="__net_object_8cs_source_1l00219"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ad23b60845b83c95498223049d20d6b5a">00219</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ad23b60845b83c95498223049d20d6b5a">Awake</link>()
<anchor xml:id="__net_object_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//validFrames&#32;=&#32;new&#32;BitArray(SimpleSyncSettings.frameCount&#32;+&#32;1);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1a7feaad83116bd66166a5d2de35ff10a8">frameCount</link>);
<anchor xml:id="__net_object_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1afb76b21c3d78d4f42857ffa864c920aa">originHistory</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1a7feaad83116bd66166a5d2de35ff10a8">frameCount</link>];
<anchor xml:id="__net_object_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1a7feaad83116bd66166a5d2de35ff10a8">frameCount</link>;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1afb76b21c3d78d4f42857ffa864c920aa">originHistory</link>[i]&#32;=&#32;-1;
<anchor xml:id="__net_object_8cs_source_1l00226"/>00226 
<anchor xml:id="__net_object_8cs_source_1l00227"/>00227 
<anchor xml:id="__net_object_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa5cd234a4b8df583162774371ed00d62">_rigidbody</link>)
<anchor xml:id="__net_object_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa5cd234a4b8df583162774371ed00d62">_rigidbody</link>&#32;=&#32;transform.GetNestedComponentInChildren&lt;Rigidbody,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&gt;(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00230"/>00230 
<anchor xml:id="__net_object_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa5cd234a4b8df583162774371ed00d62">_rigidbody</link>)
<anchor xml:id="__net_object_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0b8e62f2ee390949322f6168abfc95a3">_rigidbody2D</link>&#32;=&#32;transform.GetNestedComponentInChildren&lt;Rigidbody2D,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&gt;(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00233"/>00233 
<anchor xml:id="__net_object_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>&#32;=&#32;GetComponent&lt;PhotonView&gt;();
<anchor xml:id="__net_object_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__net_object_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;PhotonView&#32;missing&#32;from&#32;NetObject&#32;on&#32;GameObject&#32;&apos;&quot;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;.&#32;One&#32;will&#32;be&#32;added&#32;to&#32;suppress&#32;errors,&#32;but&#32;this&#32;object&#32;will&#32;likely&#32;not&#32;be&#32;networked&#32;correctly.&quot;</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>&#32;=&#32;gameObject.AddComponent&lt;<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&gt;();
<anchor xml:id="__net_object_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00240"/>00240 
<anchor xml:id="__net_object_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CollectAndReorderInterfaces();
<anchor xml:id="__net_object_8cs_source_1l00242"/>00242 
<anchor xml:id="__net_object_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.IndexColliders();
<anchor xml:id="__net_object_8cs_source_1l00244"/>00244 
<anchor xml:id="__net_object_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.GetNestedComponentsInChildren&lt;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_awake">IOnAwake</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&gt;(onAwakeCallbacks,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00246"/>00246 
<anchor xml:id="__net_object_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;onAwakeCallbacks.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onAwakeCallbacks[i].OnAwake();
<anchor xml:id="__net_object_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00251"/>00251 
<anchor xml:id="__net_object_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__net_object_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.GetNestedComponentsInChildren&lt;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_start">IOnStart</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&gt;(onStartCallbacks,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00255"/>00255 
<anchor xml:id="__net_object_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;onStartCallbacks.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onStartCallbacks[i].OnStart();
<anchor xml:id="__net_object_8cs_source_1l00259"/>00259 
<anchor xml:id="__net_object_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>)
<anchor xml:id="__net_object_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac6a0adbd408967923cba3ecfeb78bfc8">OnChangeAuthority</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00262"/>00262 
<anchor xml:id="__net_object_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9341b529b4c140a1e452d837a6f7ef05">viewID</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>;
<anchor xml:id="__net_object_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00265"/>00265 
<anchor xml:id="__net_object_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__net_object_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NetMasterCallbacks.RegisterCallbackInterfaces(<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00269"/>00269 
<anchor xml:id="__net_object_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ab6df1ed60be8a3f494683b8faa28ee4a">AddCallbackTarget</link>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5b0e4145cc798671d52326c5068eac7e">AddCallbackTarget</link>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00272"/>00272 
<anchor xml:id="__net_object_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DetermineActiveAndControlled(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>);
<anchor xml:id="__net_object_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;onEnableCallbacks.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onEnableCallbacks[i].OnPostEnable();
<anchor xml:id="__net_object_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00278"/>00278 
<anchor xml:id="__net_object_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable()
<anchor xml:id="__net_object_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonNetwork.RemoveCallbackTarget(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a831c5a478f8e2c0f586f9fc52339dedb">RemoveCallbackTarget</link>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NetMasterCallbacks.RegisterCallbackInterfaces(<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00284"/>00284 
<anchor xml:id="__net_object_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DetermineActiveAndControlled(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>);
<anchor xml:id="__net_object_8cs_source_1l00286"/>00286 
<anchor xml:id="__net_object_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;onDisableCallbacks.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onDisableCallbacks[i].OnPostDisable();
<anchor xml:id="__net_object_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00291"/>00291 
<anchor xml:id="__net_object_8cs_source_1l00292"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ad7cc53ead99f00a2108d8c9f9827da3b">00292</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ad7cc53ead99f00a2108d8c9f9827da3b">OnPreQuit</link>()
<anchor xml:id="__net_object_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab3bcf86d759dab5a91112610760a30ba">onPreQuitCallbacks</link>.Count;&#32;i&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab3bcf86d759dab5a91112610760a30ba">onPreQuitCallbacks</link>.Count;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab3bcf86d759dab5a91112610760a30ba">onPreQuitCallbacks</link>[i].OnPreQuit();
<anchor xml:id="__net_object_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00298"/>00298 
<anchor xml:id="__net_object_8cs_source_1l00299"/>00299 
<anchor xml:id="__net_object_8cs_source_1l00300"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7cd5f1eec051da732a11fbbcb9df1e99">00300</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7cd5f1eec051da732a11fbbcb9df1e99">OnPreNetDestroy</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;rootView)
<anchor xml:id="__net_object_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rootNetObj&#32;=&#32;rootView.GetComponent&lt;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&gt;();
<anchor xml:id="__net_object_8cs_source_1l00303"/>00303 
<anchor xml:id="__net_object_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rootNetObj&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__net_object_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00306"/>00306 
<anchor xml:id="__net_object_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a1a16b494f878fea3d707db50a74b83a8">onPreNetDestroyCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a1a16b494f878fea3d707db50a74b83a8">onPreNetDestroyCallbacks</link>[i].OnPreNetDestroy(rootNetObj);
<anchor xml:id="__net_object_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00311"/>00311 
<anchor xml:id="__net_object_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDestroy()
<anchor xml:id="__net_object_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a9894ff54c49536a9714bcc94e165c5">activeControlledNetObjs</link>.ContainsKey(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>))
<anchor xml:id="__net_object_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a9894ff54c49536a9714bcc94e165c5">activeControlledNetObjs</link>.Remove(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>);
<anchor xml:id="__net_object_8cs_source_1l00316"/>00316 
<anchor xml:id="__net_object_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac8c3a922671cea92c81b253cbb1d3f2d">activeUncontrolledNetObjs</link>.ContainsKey(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>))
<anchor xml:id="__net_object_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac8c3a922671cea92c81b253cbb1d3f2d">activeUncontrolledNetObjs</link>.Remove(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>);
<anchor xml:id="__net_object_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00320"/>00320 
<anchor xml:id="__net_object_8cs_source_1l00325"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aba76938f91968c4ba5739ba0aae71e9c">00325</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aba76938f91968c4ba5739ba0aae71e9c">PrepareForDestroy</link>()
<anchor xml:id="__net_object_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mounts&#32;=&#32;GetComponent&lt;MountsManager&gt;();
<anchor xml:id="__net_object_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mounts)
<anchor xml:id="__net_object_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mounts.UnmountAll();
<anchor xml:id="__net_object_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00331"/>00331 
<anchor xml:id="__net_object_8cs_source_1l00332"/>00332 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;PUN&#32;Callbacks</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00333"/>00333 
<anchor xml:id="__net_object_8cs_source_1l00334"/>00334 
<anchor xml:id="__net_object_8cs_source_1l00335"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aab0aea813d6e91b3200a92fc3e6841af">00335</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aab0aea813d6e91b3200a92fc3e6841af">OnOwnerChange</link>(<link linkend="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33aa5ff58bda67e2160b5e5d5a47a4333c3">Realtime</link>.Player&#32;newOwner,&#32;<link linkend="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33aa5ff58bda67e2160b5e5d5a47a4333c3">Realtime</link>.Player&#32;previousOwner)
<anchor xml:id="__net_object_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00337"/>00337 
<anchor xml:id="__net_object_8cs_source_1l00338"/>00338 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(Time.time&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&apos;&quot;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;&#32;ViewId:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&lt;b&gt;Owner&#32;changed&lt;/b&gt;&#32;from&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__net_object_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(previousOwner&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<emphasis role="stringliteral">&quot;null&quot;</emphasis>&#32;:&#32;previousOwner.ActorNumber.ToString())&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;to&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__net_object_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(newOwner&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<emphasis role="stringliteral">&quot;null&quot;</emphasis>&#32;:&#32;newOwner.ActorNumber.ToString())&#32;+
<anchor xml:id="__net_object_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;IsMine:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>);
<anchor xml:id="__net_object_8cs_source_1l00343"/>00343 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00344"/>00344 
<anchor xml:id="__net_object_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac6a0adbd408967923cba3ecfeb78bfc8">OnChangeAuthority</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00347"/>00347 
<anchor xml:id="__net_object_8cs_source_1l00348"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a00f5ce5f6043929b85023f5bcfb198d8">00348</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a00f5ce5f6043929b85023f5bcfb198d8">OnControllerChange</link>(<link linkend="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33aa5ff58bda67e2160b5e5d5a47a4333c3">Realtime</link>.Player&#32;newController,&#32;<link linkend="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33aa5ff58bda67e2160b5e5d5a47a4333c3">Realtime</link>.Player&#32;previousController)
<anchor xml:id="__net_object_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00350"/>00350 
<anchor xml:id="__net_object_8cs_source_1l00351"/>00351 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(Time.time&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&apos;&quot;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;&#32;ViewId:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&lt;b&gt;Controller&#32;changed&lt;/b&gt;&#32;from&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__net_object_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(previousController&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<emphasis role="stringliteral">&quot;null&quot;</emphasis>&#32;:&#32;previousController.ActorNumber.ToString())&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;to&#32;&quot;</emphasis>&#32;+&#32;
<anchor xml:id="__net_object_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(newController&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<emphasis role="stringliteral">&quot;null&quot;</emphasis>&#32;:&#32;newController.ActorNumber.ToString())&#32;+&#32;
<anchor xml:id="__net_object_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;IsMine:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>);
<anchor xml:id="__net_object_8cs_source_1l00356"/>00356 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00357"/>00357 
<anchor xml:id="__net_object_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac6a0adbd408967923cba3ecfeb78bfc8">OnChangeAuthority</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00360"/>00360 
<anchor xml:id="__net_object_8cs_source_1l00361"/>00361 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;public&#32;void&#32;OnOwnershipRequest(PhotonView&#32;targetView,&#32;Photon.Realtime.Player&#32;requestingPlayer)&#32;{&#32;}</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00362"/>00362 
<anchor xml:id="__net_object_8cs_source_1l00363"/>00363 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;public&#32;void&#32;OnOwnershipTransferred(PhotonView&#32;targetView,&#32;Photon.Realtime.Player&#32;previousOwner)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00364"/>00364 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00365"/>00365 
<anchor xml:id="__net_object_8cs_source_1l00366"/>00366 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//if&#32;(GetComponent&lt;SyncPickup&gt;())</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00367"/>00367 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;Debug.LogError(Time.time&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;name&#32;+&#32;&quot;&#32;Ownership&#32;Transfer&quot;);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00368"/>00368 
<anchor xml:id="__net_object_8cs_source_1l00369"/>00369 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;///&#32;Only&#32;respond&#32;if&#32;this&#32;pv&#32;changed&#32;owners</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00370"/>00370 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(targetView&#32;!=&#32;photonView)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00371"/>00371 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00372"/>00372 
<anchor xml:id="__net_object_8cs_source_1l00373"/>00373 <emphasis role="comment">//#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00374"/>00374 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(Time.time&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;name&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;photonView.ViewID&#32;+&#32;&quot;&#32;&lt;b&gt;Ownership&#32;Changed&lt;/b&gt;&#32;&quot;&#32;+&#32;photonView.OwnerActorNr);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00375"/>00375 <emphasis role="comment">//#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00376"/>00376 
<anchor xml:id="__net_object_8cs_source_1l00377"/>00377 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnChangeAuthority(photonView.IsMine,&#32;true);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00378"/>00378 
<anchor xml:id="__net_object_8cs_source_1l00379"/>00379 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00380"/>00380 
<anchor xml:id="__net_object_8cs_source_1l00381"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1af935e335f32f20bb7715b40aff9f1e35">00381</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1af935e335f32f20bb7715b40aff9f1e35">OnFriendListUpdate</link>(List&lt;FriendInfo&gt;&#32;friendList)&#32;{&#32;}
<anchor xml:id="__net_object_8cs_source_1l00382"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1af366aa7c90bd0dab9be6b5338e299ca3">00382</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1af366aa7c90bd0dab9be6b5338e299ca3">OnCreatedRoom</link>()&#32;{&#32;}
<anchor xml:id="__net_object_8cs_source_1l00383"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be72394454eafa3454ce4e45577a046">00383</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be72394454eafa3454ce4e45577a046">OnCreateRoomFailed</link>(<emphasis role="keywordtype">short</emphasis>&#32;returnCode,&#32;<emphasis role="keywordtype">string</emphasis>&#32;message)&#32;{&#32;}
<anchor xml:id="__net_object_8cs_source_1l00384"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a20ed8ec367f6bcb4d85d0ea5695b8f1e">00384</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a20ed8ec367f6bcb4d85d0ea5695b8f1e">OnJoinedRoom</link>()
<anchor xml:id="__net_object_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00386"/>00386 
<anchor xml:id="__net_object_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.GetNestedComponentsInChildren&lt;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_joined_room">IOnJoinedRoom</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&gt;(onJoinedRoomCallbacks,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00388"/>00388 
<anchor xml:id="__net_object_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;onJoinedRoomCallbacks.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onJoinedRoomCallbacks[i].<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a20ed8ec367f6bcb4d85d0ea5695b8f1e">OnJoinedRoom</link>();
<anchor xml:id="__net_object_8cs_source_1l00392"/>00392 
<anchor xml:id="__net_object_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac6a0adbd408967923cba3ecfeb78bfc8">OnChangeAuthority</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00395"/>00395 
<anchor xml:id="__net_object_8cs_source_1l00396"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1afdc46e2cedf46b6f7bbc70c2f626d326">00396</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1afdc46e2cedf46b6f7bbc70c2f626d326">OnJoinRoomFailed</link>(<emphasis role="keywordtype">short</emphasis>&#32;returnCode,&#32;<emphasis role="keywordtype">string</emphasis>&#32;message)&#32;{&#32;}
<anchor xml:id="__net_object_8cs_source_1l00397"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ada1722396453f561a053aeaf5da5ce23">00397</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ada1722396453f561a053aeaf5da5ce23">OnJoinRandomFailed</link>(<emphasis role="keywordtype">short</emphasis>&#32;returnCode,&#32;<emphasis role="keywordtype">string</emphasis>&#32;message)&#32;{&#32;}
<anchor xml:id="__net_object_8cs_source_1l00398"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a01294bcc89a9ee6c2ca106a9a710e117">00398</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a01294bcc89a9ee6c2ca106a9a710e117">OnLeftRoom</link>()&#32;{&#32;}
<anchor xml:id="__net_object_8cs_source_1l00399"/>00399 
<anchor xml:id="__net_object_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DetermineActiveAndControlled(<emphasis role="keywordtype">bool</emphasis>&#32;amController)
<anchor xml:id="__net_object_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;key&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>;
<anchor xml:id="__net_object_8cs_source_1l00407"/>00407 
<anchor xml:id="__net_object_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(netObjDictsLocked)
<anchor xml:id="__net_object_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pendingActiveNetObjDictChanges.Enqueue(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00413"/>00413 
<anchor xml:id="__net_object_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;InControllerOfList&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a9894ff54c49536a9714bcc94e165c5">activeControlledNetObjs</link>.ContainsKey(key);
<anchor xml:id="__net_object_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;InOthersList&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac8c3a922671cea92c81b253cbb1d3f2d">activeUncontrolledNetObjs</link>.ContainsKey(key);
<anchor xml:id="__net_object_8cs_source_1l00416"/>00416 
<anchor xml:id="__net_object_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isActiveAndEnabled)
<anchor xml:id="__net_object_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(amController)
<anchor xml:id="__net_object_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!InControllerOfList)
<anchor xml:id="__net_object_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a9894ff54c49536a9714bcc94e165c5">activeControlledNetObjs</link>.Add(key,&#32;<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00423"/>00423 
<anchor xml:id="__net_object_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(InOthersList)
<anchor xml:id="__net_object_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac8c3a922671cea92c81b253cbb1d3f2d">activeUncontrolledNetObjs</link>.Remove(key);
<anchor xml:id="__net_object_8cs_source_1l00426"/>00426 
<anchor xml:id="__net_object_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00430"/>00430 
<anchor xml:id="__net_object_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(InControllerOfList)
<anchor xml:id="__net_object_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a9894ff54c49536a9714bcc94e165c5">activeControlledNetObjs</link>.Remove(key);
<anchor xml:id="__net_object_8cs_source_1l00433"/>00433 
<anchor xml:id="__net_object_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!InOthersList)
<anchor xml:id="__net_object_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac8c3a922671cea92c81b253cbb1d3f2d">activeUncontrolledNetObjs</link>.Add(key,&#32;<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__net_object_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(InControllerOfList)
<anchor xml:id="__net_object_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a9894ff54c49536a9714bcc94e165c5">activeControlledNetObjs</link>.Remove(key);
<anchor xml:id="__net_object_8cs_source_1l00443"/>00443 
<anchor xml:id="__net_object_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(InOthersList)
<anchor xml:id="__net_object_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac8c3a922671cea92c81b253cbb1d3f2d">activeUncontrolledNetObjs</link>.Remove(key);
<anchor xml:id="__net_object_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00447"/>00447 
<anchor xml:id="__net_object_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(GetComponent&lt;SyncPickup&gt;())</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(Time.time&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;name&#32;+&#32;&quot;&#32;&lt;b&gt;Change&#32;Controller&lt;/b&gt;&quot;&#32;+&#32;amController);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00451"/>00451 
<anchor xml:id="__net_object_8cs_source_1l00452"/>00452 
<anchor xml:id="__net_object_8cs_source_1l00453"/>00453 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00454"/>00454 
<anchor xml:id="__net_object_8cs_source_1l00455"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac6a0adbd408967923cba3ecfeb78bfc8">00455</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ac6a0adbd408967923cba3ecfeb78bfc8">OnChangeAuthority</link>(<emphasis role="keywordtype">bool</emphasis>&#32;isMine,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;controllerHasChanged)
<anchor xml:id="__net_object_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DetermineActiveAndControlled(isMine);
<anchor xml:id="__net_object_8cs_source_1l00458"/>00458 
<anchor xml:id="__net_object_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ad8bb07b04706c7f1f5a443108f6cad63">onAuthorityChangedCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ad8bb07b04706c7f1f5a443108f6cad63">onAuthorityChangedCallbacks</link>[i].OnAuthorityChanged(isMine,&#32;controllerHasChanged);
<anchor xml:id="__net_object_8cs_source_1l00462"/>00462 
<anchor xml:id="__net_object_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isMine)
<anchor xml:id="__net_object_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab959fbfe7a7068698db58b5cec1b0db6">AllObjsAreReady</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00469"/>00469 
<anchor xml:id="__net_object_8cs_source_1l00470"/>00470 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00471"/>00471 
<anchor xml:id="__net_object_8cs_source_1l00472"/>00472 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Outgoing&#32;Callbacks</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00473"/>00473 
<anchor xml:id="__net_object_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;Component&gt;&#32;reusableComponents&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Component&gt;();
<anchor xml:id="__net_object_8cs_source_1l00475"/>00475 
<anchor xml:id="__net_object_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;List&lt;IOnJoinedRoom&gt;&#32;onJoinedRoomCallbacks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnJoinedRoom&gt;();
<anchor xml:id="__net_object_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;List&lt;IOnAwake&gt;&#32;onAwakeCallbacks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnAwake&gt;();
<anchor xml:id="__net_object_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;List&lt;IOnStart&gt;&#32;onStartCallbacks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnStart&gt;();
<anchor xml:id="__net_object_8cs_source_1l00479"/>00479 
<anchor xml:id="__net_object_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;List&lt;IOnEnable&gt;&#32;onEnableCallbacks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnEnable&gt;();
<anchor xml:id="__net_object_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;List&lt;IOnDisable&gt;&#32;onDisableCallbacks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnDisable&gt;();
<anchor xml:id="__net_object_8cs_source_1l00482"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a03a563398efe8c7712ffbc82b29122fb">00482</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnPreUpdate&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a03a563398efe8c7712ffbc82b29122fb">onPreUpdateCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnPreUpdate&gt;();
<anchor xml:id="__net_object_8cs_source_1l00483"/>00483 
<anchor xml:id="__net_object_8cs_source_1l00484"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ad8bb07b04706c7f1f5a443108f6cad63">00484</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnAuthorityChanged&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ad8bb07b04706c7f1f5a443108f6cad63">onAuthorityChangedCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnAuthorityChanged&gt;();
<anchor xml:id="__net_object_8cs_source_1l00485"/>00485 
<anchor xml:id="__net_object_8cs_source_1l00486"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7ac95af4b1fb4bfd61c3c6be8c626ec0">00486</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnNetSerialize&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7ac95af4b1fb4bfd61c3c6be8c626ec0">onNetSerializeCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnNetSerialize&gt;();
<anchor xml:id="__net_object_8cs_source_1l00487"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aed17c03ce40129b3daf84935b1fa6cce">00487</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnCriticallyLateFrame&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aed17c03ce40129b3daf84935b1fa6cce">onCriticallyLateFrameCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnCriticallyLateFrame&gt;();
<anchor xml:id="__net_object_8cs_source_1l00488"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1acba2ee807302336a9680515a58002e19">00488</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnIncrementFrame&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1acba2ee807302336a9680515a58002e19">onIncrementFramesCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnIncrementFrame&gt;();
<anchor xml:id="__net_object_8cs_source_1l00489"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aae4ace0531b6f385efaf27f9b6a86b73">00489</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnSnapshot&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aae4ace0531b6f385efaf27f9b6a86b73">onSnapshotCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnSnapshot&gt;();
<anchor xml:id="__net_object_8cs_source_1l00490"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1af3e70f16501c9d9a75ad7695e9857989">00490</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnQuantize&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1af3e70f16501c9d9a75ad7695e9857989">onQuantizeCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnQuantize&gt;();
<anchor xml:id="__net_object_8cs_source_1l00491"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a73ae6de2bbe0f93778fcb298d8807adf">00491</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnInterpolate&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a73ae6de2bbe0f93778fcb298d8807adf">onInterpolateCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnInterpolate&gt;();
<anchor xml:id="__net_object_8cs_source_1l00492"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9dbcd8017227be36faef7182b3567122">00492</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnCaptureState&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9dbcd8017227be36faef7182b3567122">onCaptureCurrentStateCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnCaptureState&gt;();
<anchor xml:id="__net_object_8cs_source_1l00493"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1adaba90cd3c9db9dff12535adead776a0">00493</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnPreSimulate&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1adaba90cd3c9db9dff12535adead776a0">onPreSimulateCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnPreSimulate&gt;();
<anchor xml:id="__net_object_8cs_source_1l00494"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1abed45b433fdf73f805dbf09b066c37ea">00494</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnPostSimulate&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1abed45b433fdf73f805dbf09b066c37ea">onPostSimulateCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnPostSimulate&gt;();
<anchor xml:id="__net_object_8cs_source_1l00495"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab3bcf86d759dab5a91112610760a30ba">00495</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnPreQuit&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab3bcf86d759dab5a91112610760a30ba">onPreQuitCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnPreQuit&gt;();
<anchor xml:id="__net_object_8cs_source_1l00496"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a1a16b494f878fea3d707db50a74b83a8">00496</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;IOnPreNetDestroy&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a1a16b494f878fea3d707db50a74b83a8">onPreNetDestroyCallbacks</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnPreNetDestroy&gt;();
<anchor xml:id="__net_object_8cs_source_1l00497"/>00497 
<anchor xml:id="__net_object_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;List&lt;IOnNetObjReady&gt;&#32;onNetObjReadyCallbacks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IOnNetObjReady&gt;();
<anchor xml:id="__net_object_8cs_source_1l00499"/>00499 
<anchor xml:id="__net_object_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;List&lt;SyncObject&gt;&#32;syncObjects&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;SyncObject&gt;();
<anchor xml:id="__net_object_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;List&lt;PackObjRecord&gt;&#32;packObjects&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;PackObjRecord&gt;();
<anchor xml:id="__net_object_8cs_source_1l00502"/>00502 
<anchor xml:id="__net_object_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>PackObjRecord
<anchor xml:id="__net_object_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a2cb05e4bb7830be982f0922fed86b4cd">Component</link>&#32;component;
<anchor xml:id="__net_object_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_object_database">PackObjectDatabase</link>.<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_object_database_1_1_pack_object_info">PackObjectInfo</link>&#32;info;
<anchor xml:id="__net_object_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_frame">PackFrame</link>[]&#32;packFrames;
<anchor xml:id="__net_object_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;prevReadyMask;
<anchor xml:id="__net_object_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;readyMask;
<anchor xml:id="__net_object_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_interface_photon_1_1_compression_1_1_i_pack_obj_on_ready_change">IPackObjOnReadyChange</link>&#32;onReadyCallback;
<anchor xml:id="__net_object_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00512"/>00512 
<anchor xml:id="__net_object_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CollectAndReorderInterfaces()
<anchor xml:id="__net_object_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00518"/>00518 
<anchor xml:id="__net_object_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//GetComponentsInChildren(true,&#32;reusableFindSyncObjs);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.GetNestedComponentsInChildren&lt;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a2cb05e4bb7830be982f0922fed86b4cd">Component</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link>&gt;(reusableComponents);
<anchor xml:id="__net_object_8cs_source_1l00522"/>00522 
<anchor xml:id="__net_object_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;order&#32;=&#32;0,&#32;cnt&#32;=&#32;reusableComponents.Count;&#32;order&#32;&lt;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_apply_order_constants">ApplyOrderConstants</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_apply_order_constants_1ad53ea48cd90c3560ae0e72cb19f7adc8">MAX_ORDER_VAL</link>;&#32;++order)
<anchor xml:id="__net_object_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;&#32;index&#32;&lt;&#32;cnt;&#32;++index)
<anchor xml:id="__net_object_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;comp&#32;=&#32;reusableComponents[index];
<anchor xml:id="__net_object_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(comp&#32;==&#32;<emphasis role="keyword">this</emphasis>)
<anchor xml:id="__net_object_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00531"/>00531 
<anchor xml:id="__net_object_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;iApplyOrder&#32;=&#32;comp&#32;as&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_apply_order">IApplyOrder</link>;
<anchor xml:id="__net_object_8cs_source_1l00533"/>00533 
<anchor xml:id="__net_object_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(iApplyOrder,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__net_object_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(order&#32;==&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_apply_order_constants">ApplyOrderConstants</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_apply_order_constants_1ab8107fc022f7477ec030412b074e7755">DEFAULT</link>)
<anchor xml:id="__net_object_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__net_object_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaces(comp);
<anchor xml:id="__net_object_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddPackObjects(comp);
<anchor xml:id="__net_object_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iApplyOrder.ApplyOrder&#32;==&#32;order)
<anchor xml:id="__net_object_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaces(comp);
<anchor xml:id="__net_object_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00551"/>00551 
<anchor xml:id="__net_object_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a3395c8f6470dcbfa633034fae53aec1b">syncObjReadyMask</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>(syncObjects.Count);
<anchor xml:id="__net_object_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7be324c8f907cb0047027dda938337a8">packObjReadyMask</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>(packObjects.Count);
<anchor xml:id="__net_object_8cs_source_1l00554"/>00554 
<anchor xml:id="__net_object_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;syncObjects.Count;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;so&#32;=&#32;syncObjects[i];
<anchor xml:id="__net_object_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;so.SyncObjIndex&#32;=&#32;i;
<anchor xml:id="__net_object_8cs_source_1l00559"/>00559 
<anchor xml:id="__net_object_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//so.onReadyCallbacks&#32;+=&#32;OnSyncObjReadyChange;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0a1790bbaf6a5de718d570143c31a457">OnSyncObjReadyChange</link>(so,&#32;so.ReadyState);
<anchor xml:id="__net_object_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00565"/>00565 
<anchor xml:id="__net_object_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00567"/>00567 
<anchor xml:id="__net_object_8cs_source_1l00568"/>00568 
<anchor xml:id="__net_object_8cs_source_1l00569"/>00569 
<anchor xml:id="__net_object_8cs_source_1l00574"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a44ea2cb3d170378f4492e17a058bf3a0">00574</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a44ea2cb3d170378f4492e17a058bf3a0">RemoveInterfaces</link>(Component&#32;comp)&#32;{&#32;AddInterfaces(comp,&#32;<emphasis role="keyword">true</emphasis>);&#32;}
<anchor xml:id="__net_object_8cs_source_1l00575"/>00575 
<anchor xml:id="__net_object_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddInterfaces(Component&#32;comp,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<emphasis role="keyword">remove</emphasis>&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__net_object_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;onEnableCallbacks,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;onDisableCallbacks,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a03a563398efe8c7712ffbc82b29122fb">onPreUpdateCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00581"/>00581 
<anchor xml:id="__net_object_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ad8bb07b04706c7f1f5a443108f6cad63">onAuthorityChangedCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00583"/>00583 
<anchor xml:id="__net_object_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9dbcd8017227be36faef7182b3567122">onCaptureCurrentStateCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00585"/>00585 
<anchor xml:id="__net_object_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7ac95af4b1fb4bfd61c3c6be8c626ec0">onNetSerializeCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1af3e70f16501c9d9a75ad7695e9857989">onQuantizeCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1acba2ee807302336a9680515a58002e19">onIncrementFramesCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aae4ace0531b6f385efaf27f9b6a86b73">onSnapshotCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aed17c03ce40129b3daf84935b1fa6cce">onCriticallyLateFrameCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a73ae6de2bbe0f93778fcb298d8807adf">onInterpolateCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00592"/>00592 
<anchor xml:id="__net_object_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1adaba90cd3c9db9dff12535adead776a0">onPreSimulateCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1abed45b433fdf73f805dbf09b066c37ea">onPostSimulateCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab3bcf86d759dab5a91112610760a30ba">onPreQuitCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a1a16b494f878fea3d707db50a74b83a8">onPreNetDestroyCallbacks</link>,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00597"/>00597 
<anchor xml:id="__net_object_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;onNetObjReadyCallbacks,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddInterfaceToList(comp,&#32;syncObjects,&#32;<emphasis role="keyword">remove</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00600"/>00600 
<anchor xml:id="__net_object_8cs_source_1l00601"/>00601 
<anchor xml:id="__net_object_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00603"/>00603 
<anchor xml:id="__net_object_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddInterfaceToList&lt;T&gt;(<emphasis role="keywordtype">object</emphasis>&#32;comp,&#32;List&lt;T&gt;&#32;list,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<emphasis role="keyword">remove</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;checkSerializationOptional&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;where&#32;T&#32;:&#32;class
<anchor xml:id="__net_object_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;cb&#32;=&#32;comp&#32;as&#32;T;
<anchor xml:id="__net_object_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ReferenceEquals(cb,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__net_object_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(checkSerializationOptional)
<anchor xml:id="__net_object_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;optionalCB&#32;=&#32;cb&#32;as&#32;ISerializationOptional;
<anchor xml:id="__net_object_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ReferenceEquals(optionalCB,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__net_object_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(optionalCB.IncludeInSerialization&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__net_object_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00619"/>00619 
<anchor xml:id="__net_object_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;tcomp&#32;=&#32;comp&#32;as&#32;T;
<anchor xml:id="__net_object_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">remove</emphasis>&#32;&amp;&amp;&#32;list.Contains(tcomp))
<anchor xml:id="__net_object_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Remove(tcomp);
<anchor xml:id="__net_object_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(tcomp);
<anchor xml:id="__net_object_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00626"/>00626 
<anchor xml:id="__net_object_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00628"/>00628 
<anchor xml:id="__net_object_8cs_source_1l00629"/>00629 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;PackObjects</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00630"/>00630 
<anchor xml:id="__net_object_8cs_source_1l00631"/>00631 
<anchor xml:id="__net_object_8cs_source_1l00632"/>00632 
<anchor xml:id="__net_object_8cs_source_1l00633"/>00633 
<anchor xml:id="__net_object_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddPackObjects(Component&#32;comp)
<anchor xml:id="__net_object_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(comp&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__net_object_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00641"/>00641 
<anchor xml:id="__net_object_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Type&#32;compType&#32;=&#32;comp.GetType();
<anchor xml:id="__net_object_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(comp.GetType().GetCustomAttributes(typeof(<link linkend="_class_photon_1_1_compression_1_1_pack_object_attribute">PackObjectAttribute</link>),&#32;<emphasis role="keyword">false</emphasis>).Length&#32;!=&#32;0)
<anchor xml:id="__net_object_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;packObjInfo&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_object_database">PackObjectDatabase</link>.<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_object_database_1aaae3ffed99334bd69dd1ac7e14e5a35e">GetPackObjectInfo</link>(compType);
<anchor xml:id="__net_object_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(packObjInfo&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__net_object_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00649"/>00649 
<anchor xml:id="__net_object_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newrecord&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;PackObjRecord()
<anchor xml:id="__net_object_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;component&#32;=&#32;comp,
<anchor xml:id="__net_object_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onReadyCallback&#32;=&#32;comp&#32;as&#32;<link linkend="_interface_photon_1_1_compression_1_1_i_pack_obj_on_ready_change">IPackObjOnReadyChange</link>,
<anchor xml:id="__net_object_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info&#32;=&#32;packObjInfo,
<anchor xml:id="__net_object_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;packFrames&#32;=&#32;packObjInfo.FactoryFramesObj(comp,&#32;TickEngineSettings.frameCount),
<anchor xml:id="__net_object_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevReadyMask&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>(packObjInfo.fieldCount),
<anchor xml:id="__net_object_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;readyMask&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>(packObjInfo.fieldCount)
<anchor xml:id="__net_object_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__net_object_8cs_source_1l00659"/>00659 
<anchor xml:id="__net_object_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;any&#32;readyMask&#32;bits&#32;that&#32;are&#32;triggers&#32;to&#32;true&#32;-&#32;they&#32;are&#32;always&#32;ready.</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;packObjIndexLookup.Add(comp,&#32;packObjects.Count);
<anchor xml:id="__net_object_8cs_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;packObjects.Add(newrecord);
<anchor xml:id="__net_object_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00665"/>00665 
<anchor xml:id="__net_object_8cs_source_1l00666"/>00666 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;PackObjs</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00667"/>00667 
<anchor xml:id="__net_object_8cs_source_1l00668"/>00668 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;Interfaces</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00669"/>00669 
<anchor xml:id="__net_object_8cs_source_1l00670"/>00670 
<anchor xml:id="__net_object_8cs_source_1l00671"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa4d49843b36a0b062e0ac447ae1d52cc">00671</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa4d49843b36a0b062e0ac447ae1d52cc">OnPreUpdate</link>()
<anchor xml:id="__net_object_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a03a563398efe8c7712ffbc82b29122fb">onPreUpdateCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a03a563398efe8c7712ffbc82b29122fb">onPreUpdateCallbacks</link>[i].OnPreUpdate();
<anchor xml:id="__net_object_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00677"/>00677 
<anchor xml:id="__net_object_8cs_source_1l00678"/>00678 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Logging</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00679"/>00679 
<anchor xml:id="__net_object_8cs_source_1l00680"/>00680 
<anchor xml:id="__net_object_8cs_source_1l00681"/>00681 
<anchor xml:id="__net_object_8cs_source_1l00682"/>00682 <emphasis role="preprocessor">#if&#32;TICKS_TO_UICONSOLE&#32;&amp;&amp;&#32;(DEBUG&#32;||&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00683"/>00683 
<anchor xml:id="__net_object_8cs_source_1l00685"/>00685 
<anchor xml:id="__net_object_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastConsoleTick;
<anchor xml:id="__net_object_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;consoleRefreshing;
<anchor xml:id="__net_object_8cs_source_1l00688"/>00688 
<anchor xml:id="__net_object_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__net_object_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;consoleRefreshing&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00693"/>00693 
<anchor xml:id="__net_object_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;LateUpdate()
<anchor xml:id="__net_object_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00696"/>00696 
<anchor xml:id="__net_object_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>)
<anchor xml:id="__net_object_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lastConsoleTick&#32;==&#32;NetMaster.CurrentFrameId)
<anchor xml:id="__net_object_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00701"/>00701 
<anchor xml:id="__net_object_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!consoleRefreshing)
<anchor xml:id="__net_object_8cs_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debugging.UIConsole.Clear();
<anchor xml:id="__net_object_8cs_source_1l00704"/>00704 
<anchor xml:id="__net_object_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;consoleRefreshing&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastConsoleTick&#32;=&#32;NetMaster.CurrentFrameId;
<anchor xml:id="__net_object_8cs_source_1l00707"/>00707 
<anchor xml:id="__net_object_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager">TickManager</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager_1a2a06c860825c0b3af890f85131fbc67c">connections</link>.Count;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;offsetinfo&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager">TickManager</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager_1a2f960228457dcd2812e72bc7621370d8">perConnOffsets</link>[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager">TickManager</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager_1a2a06c860825c0b3af890f85131fbc67c">connections</link>[i]];
<anchor xml:id="__net_object_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debugging.UIConsole.Refresh();
<anchor xml:id="__net_object_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00715"/>00715 
<anchor xml:id="__net_object_8cs_source_1l00716"/>00716 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00717"/>00717 
<anchor xml:id="__net_object_8cs_source_1l00718"/>00718 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00719"/>00719 
<anchor xml:id="__net_object_8cs_source_1l00720"/>00720 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Serialization</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00721"/>00721 
<anchor xml:id="__net_object_8cs_source_1l00726"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a079b9660bc749f9b3df1648e81cc65d2">00726</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a079b9660bc749f9b3df1648e81cc65d2">GenerateMessage</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__net_object_8cs_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(GetComponent&lt;SyncPickup&gt;())</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(frameId&#32;&#32;+&#32;&quot;&#32;&lt;b&gt;CaptureStates...&#32;&lt;/b&gt;&quot;&#32;);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00730"/>00730 
<anchor xml:id="__net_object_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ace5874c2464194888f405ec2039922b4">OnCaptureCurrentState</link>(frameId);
<anchor xml:id="__net_object_8cs_source_1l00732"/>00732 
<anchor xml:id="__net_object_8cs_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a85e0e6f6792ed544a676b1bf8fdfa9cd">OnQuantize</link>(frameId);
<anchor xml:id="__net_object_8cs_source_1l00734"/>00734 
<anchor xml:id="__net_object_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(GetComponent&lt;SyncPickup&gt;())</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(frameId&#32;+&#32;&quot;&#32;&lt;b&gt;OnSerialize...&#32;&lt;/b&gt;&quot;);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00737"/>00737 
<anchor xml:id="__net_object_8cs_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;flags&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0d3e4455b35daf1c2dfcb163bd732690">OnSerialize</link>(frameId,&#32;buffer,&#32;ref&#32;bitposition,&#32;writeFlags);
<anchor xml:id="__net_object_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__net_object_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00742"/>00742 
<anchor xml:id="__net_object_8cs_source_1l00743"/>00743 <emphasis role="preprocessor">#if&#32;SNS_WARNINGS</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">float</emphasis>?[]&#32;bufferAddTime&#32;=
<anchor xml:id="__net_object_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>?[(int)((<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1aa0d0390b469778684cbaaf06faf27981">FrameCountEnum</link>[])System.Enum.GetValues(typeof(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.FrameCountEnum)))[((<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.FrameCountEnum[])System.Enum.GetValues(typeof(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.FrameCountEnum))).Length&#32;-&#32;1]&#32;+&#32;1];
<anchor xml:id="__net_object_8cs_source_1l00749"/>00749 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00750"/>00750 
<anchor xml:id="__net_object_8cs_source_1l00754"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0d3e4455b35daf1c2dfcb163bd732690">00754</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a0d3e4455b35daf1c2dfcb163bd732690">OnSerialize</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__net_object_8cs_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;((writeFlags&#32;&amp;&#32;SerializationFlags.NewConnection)&#32;!=&#32;0)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.LogError(&quot;NEW&#32;CONN&#32;&quot;&#32;+&#32;writeFlags);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00758"/>00758 
<anchor xml:id="__net_object_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;writeFlags;
<anchor xml:id="__net_object_8cs_source_1l00760"/>00760 
<anchor xml:id="__net_object_8cs_source_1l00761"/>00761 <emphasis role="preprocessor">#if&#32;SNS_WARNINGS</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(111,&#32;ref&#32;bitposition,&#32;8);
<anchor xml:id="__net_object_8cs_source_1l00764"/>00764 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00765"/>00765 
<anchor xml:id="__net_object_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;prevFrameId&#32;=&#32;((frameId&#32;==&#32;0)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1a7feaad83116bd66166a5d2de35ff10a8">frameCount</link>&#32;:&#32;frameId)&#32;-&#32;1;
<anchor xml:id="__net_object_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pcnt&#32;=&#32;packObjects.Count;
<anchor xml:id="__net_object_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pcnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;p&#32;=&#32;packObjects[i];
<anchor xml:id="__net_object_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;pframe&#32;=&#32;p.packFrames[frameId];
<anchor xml:id="__net_object_8cs_source_1l00773"/>00773 
<anchor xml:id="__net_object_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;mcnt&#32;=&#32;p.info.fieldCount;
<anchor xml:id="__net_object_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maskpos&#32;=&#32;bitposition;
<anchor xml:id="__net_object_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;mcnt;
<anchor xml:id="__net_object_8cs_source_1l00778"/>00778 
<anchor xml:id="__net_object_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maskOffset&#32;=&#32;0;
<anchor xml:id="__net_object_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;p.info.PackFrameToBuffer(pframe,&#32;p.packFrames[prevFrameId],&#32;ref&#32;pframe.mask,&#32;ref&#32;maskOffset,&#32;buffer,&#32;ref&#32;bitposition,&#32;frameId,&#32;writeFlags);
<anchor xml:id="__net_object_8cs_source_1l00781"/>00781 
<anchor xml:id="__net_object_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;0;&#32;m&#32;&lt;&#32;mcnt;&#32;++m)
<anchor xml:id="__net_object_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(pframe.mask[m],&#32;ref&#32;maskpos);
<anchor xml:id="__net_object_8cs_source_1l00785"/>00785 
<anchor xml:id="__net_object_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00787"/>00787 
<anchor xml:id="__net_object_8cs_source_1l00788"/>00788 <emphasis role="preprocessor">#if&#32;SNS_WARNINGS</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(123,&#32;ref&#32;bitposition,&#32;8);
<anchor xml:id="__net_object_8cs_source_1l00791"/>00791 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00792"/>00792 
<anchor xml:id="__net_object_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7ac95af4b1fb4bfd61c3c6be8c626ec0">onNetSerializeCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00796"/>00796 
<anchor xml:id="__net_object_8cs_source_1l00797"/>00797 <emphasis role="preprocessor">#if&#32;SNS_REPORTS&#32;&amp;&amp;&#32;(UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;holdpos&#32;=&#32;bitposition;
<anchor xml:id="__net_object_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;onNetSerialize[i].OnNetSerialize(frameId,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__net_object_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SimpleDataMonitor.AddData(onNetSerialize[i]&#32;as&#32;ISyncObject,&#32;bitposition&#32;-&#32;holdpos);
<anchor xml:id="__net_object_8cs_source_1l00801"/>00801 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7ac95af4b1fb4bfd61c3c6be8c626ec0">onNetSerializeCallbacks</link>[i].OnNetSerialize(frameId,&#32;buffer,&#32;ref&#32;bitposition,&#32;writeFlags);
<anchor xml:id="__net_object_8cs_source_1l00803"/>00803 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00804"/>00804 
<anchor xml:id="__net_object_8cs_source_1l00805"/>00805 <emphasis role="preprocessor">#if&#32;SNS_WARNINGS</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(234,&#32;ref&#32;bitposition,&#32;8);
<anchor xml:id="__net_object_8cs_source_1l00808"/>00808 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__net_object_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00812"/>00812 
<anchor xml:id="__net_object_8cs_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;processedInitialBacklog;
<anchor xml:id="__net_object_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;firstDeserializeTime;
<anchor xml:id="__net_object_8cs_source_1l00815"/>00815 
<anchor xml:id="__net_object_8cs_source_1l00816"/>00816 
<anchor xml:id="__net_object_8cs_source_1l00817"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a2e68a9021761fa7ceb4d02d9840663f6">00817</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a2e68a9021761fa7ceb4d02d9840663f6">OnDeserialize</link>(<emphasis role="keywordtype">int</emphasis>&#32;connId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;originFrameId,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasData,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1afad021fc5045c5c4d2a18701c296c9db">FrameArrival</link>&#32;arrival)
<anchor xml:id="__net_object_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00819"/>00819 
<anchor xml:id="__net_object_8cs_source_1l00820"/>00820 <emphasis role="preprocessor">#if&#32;SNS_WARNINGS</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00821"/>00821 
<anchor xml:id="__net_object_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bufferAddTime[originFrameId]&#32;=&#32;Time.time;
<anchor xml:id="__net_object_8cs_source_1l00823"/>00823 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00824"/>00824 
<anchor xml:id="__net_object_8cs_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasData)
<anchor xml:id="__net_object_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00827"/>00827 
<anchor xml:id="__net_object_8cs_source_1l00828"/>00828 
<anchor xml:id="__net_object_8cs_source_1l00829"/>00829 <emphasis role="preprocessor">#if&#32;SNS_WARNINGS</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(buffer.Read(ref&#32;bitposition,&#32;8)&#32;!=&#32;111)
<anchor xml:id="__net_object_8cs_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Failed&#32;Integrity&#32;check&#32;pre&#32;PackObjs.&quot;</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l00833"/>00833 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00834"/>00834 
<anchor xml:id="__net_object_8cs_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[originFrameId]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1afb76b21c3d78d4f42857ffa864c920aa">originHistory</link>[originFrameId]&#32;=&#32;connId;
<anchor xml:id="__net_object_8cs_source_1l00837"/>00837 
<anchor xml:id="__net_object_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//int&#32;prevFrameId&#32;=&#32;((localframeId&#32;==&#32;0)&#32;?&#32;SimpleSyncSettings.FrameCount&#32;:&#32;localframeId)&#32;-&#32;1;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pcnt&#32;=&#32;packObjects.Count;
<anchor xml:id="__net_object_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pcnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;p&#32;=&#32;packObjects[i];
<anchor xml:id="__net_object_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;pframe&#32;=&#32;p.packFrames[originFrameId];
<anchor xml:id="__net_object_8cs_source_1l00845"/>00845 
<anchor xml:id="__net_object_8cs_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;mcnt&#32;=&#32;p.info.fieldCount;
<anchor xml:id="__net_object_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;0;&#32;m&#32;&lt;&#32;mcnt;&#32;++m)
<anchor xml:id="__net_object_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pframe.mask[m]&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__net_object_8cs_source_1l00849"/>00849 
<anchor xml:id="__net_object_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maskOffset&#32;=&#32;0;
<anchor xml:id="__net_object_8cs_source_1l00851"/>00851 
<anchor xml:id="__net_object_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(Time.time&#32;+&#32;&quot;&#32;PRE&#32;-------------------&#32;&quot;);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;flag&#32;=&#32;p.info.UnpackFrameFromBuffer(pframe,&#32;ref&#32;pframe.mask,&#32;ref&#32;pframe.isCompleteMask,&#32;ref&#32;maskOffset,&#32;buffer,&#32;ref&#32;bitposition,&#32;originFrameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None);
<anchor xml:id="__net_object_8cs_source_1l00854"/>00854 
<anchor xml:id="__net_object_8cs_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(localframeId&#32;+&#32;&quot;&#32;Des&#32;READY?&#32;flg:&#32;&quot;&#32;+&#32;flag&#32;+&#32;&quot;&#32;&#32;readymaskAllTrue:&#32;&quot;&#32;+&#32;p.readyMask.AllAreTrue&#32;+&#32;&quot;&#32;complete&#32;frame:&#32;&quot;&#32;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;+&#32;pframe.isCompleteMask.PrintMask(null)&#32;+&#32;&quot;&#32;ready:&#32;&quot;&#32;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;+&#32;p.readyMask.PrintMask(null));</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00858"/>00858 
<anchor xml:id="__net_object_8cs_source_1l00860"/>00860 
<anchor xml:id="__net_object_8cs_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arrival&#32;&gt;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1afad021fc5045c5c4d2a18701c296c9db">FrameArrival</link>.IsSnap&#32;&amp;&amp;&#32;!p.readyMask.AllAreTrue&#32;&amp;&amp;&#32;(flag&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete)&#32;!=&#32;0)
<anchor xml:id="__net_object_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.readyMask.OR(p.info.defaultReadyMask);
<anchor xml:id="__net_object_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.readyMask.OR(pframe.isCompleteMask);
<anchor xml:id="__net_object_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link>&#32;newchangesmask&#32;=&#32;!p.readyMask&#32;&amp;&#32;pframe.mask;
<anchor xml:id="__net_object_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maskOffset&#32;=&#32;0;
<anchor xml:id="__net_object_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.info.CopyFrameToObj(pframe,&#32;p.component,&#32;ref&#32;newchangesmask,&#32;ref&#32;maskOffset);
<anchor xml:id="__net_object_8cs_source_1l00870"/>00870 
<anchor xml:id="__net_object_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BroadcastReadyMaskChange(p);
<anchor xml:id="__net_object_8cs_source_1l00872"/>00872 
<anchor xml:id="__net_object_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(localframeId&#32;+&#32;&quot;&lt;b&gt;&#32;Des&#32;PRE&#32;COMPLETE?&#32;&lt;/b&gt;&quot;&#32;+&#32;p.readyMask.AllAreTrue&#32;+&#32;&quot;&#32;changes:&#32;&quot;&#32;+&#32;newchangesmask.PrintMask(null));</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00876"/>00876 
<anchor xml:id="__net_object_8cs_source_1l00877"/>00877 
<anchor xml:id="__net_object_8cs_source_1l00878"/>00878 <emphasis role="preprocessor">#if&#32;SNS_WARNINGS</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(buffer.Read(ref&#32;bitposition,&#32;8)&#32;!=&#32;123)
<anchor xml:id="__net_object_8cs_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;Failed&#32;Integrity&#32;check&#32;post&#32;PackObjs.&#32;OrigFid:&#32;&quot;</emphasis>&#32;+&#32;originFrameId);
<anchor xml:id="__net_object_8cs_source_1l00882"/>00882 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7ac95af4b1fb4bfd61c3c6be8c626ec0">onNetSerializeCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7ac95af4b1fb4bfd61c3c6be8c626ec0">onNetSerializeCallbacks</link>[i].OnNetDeserialize(originFrameId,&#32;buffer,&#32;ref&#32;bitposition,&#32;arrival);
<anchor xml:id="__net_object_8cs_source_1l00887"/>00887 
<anchor xml:id="__net_object_8cs_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(arrival&#32;==&#32;FrameArrival.IsLate&#32;&amp;&amp;&#32;(flag&#32;&amp;&#32;SerializationFlags.IsComplete)&#32;!=&#32;0&#32;&amp;&amp;&#32;!syncObjReadyMask[i])</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.Log(&quot;Call&#32;an&#32;early&#32;Apply&#32;here&#32;when&#32;a&#32;method&#32;exists&#32;for&#32;that.&quot;);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00891"/>00891 
<anchor xml:id="__net_object_8cs_source_1l00892"/>00892 <emphasis role="preprocessor">#if&#32;SNS_WARNINGS</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(buffer.Read(ref&#32;bitposition,&#32;8)&#32;!=&#32;234)
<anchor xml:id="__net_object_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;Failed&#32;Integrity&#32;check&#32;post&#32;SyncObjs.&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a7ac95af4b1fb4bfd61c3c6be8c626ec0">onNetSerializeCallbacks</link>[i].GetType().Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;origFid:&#32;&quot;</emphasis>&#32;+&#32;originFrameId);
<anchor xml:id="__net_object_8cs_source_1l00896"/>00896 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00898"/>00898 
<anchor xml:id="__net_object_8cs_source_1l00899"/>00899 
<anchor xml:id="__net_object_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9528c5b802effbacfd0740c8ffb0fbc8">resimulateLateArrivals</link>)
<anchor xml:id="__net_object_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arrival&#32;&gt;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1afad021fc5045c5c4d2a18701c296c9db">FrameArrival</link>.IsSnap)
<anchor xml:id="__net_object_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;framecount&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1a7feaad83116bd66166a5d2de35ff10a8">frameCount</link>;
<anchor xml:id="__net_object_8cs_source_1l00905"/>00905 
<anchor xml:id="__net_object_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;targFid&#32;=&#32;originFrameId&#32;+&#32;1;
<anchor xml:id="__net_object_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targFid&#32;&gt;=&#32;framecount)
<anchor xml:id="__net_object_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targFid&#32;-=&#32;framecount;
<anchor xml:id="__net_object_8cs_source_1l00909"/>00909 
<anchor xml:id="__net_object_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;snapFid&#32;=&#32;originFrameId;
<anchor xml:id="__net_object_8cs_source_1l00911"/>00911 
<anchor xml:id="__net_object_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;prevFid&#32;=&#32;originFrameId&#32;-&#32;1;
<anchor xml:id="__net_object_8cs_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prevFid&#32;&lt;&#32;0)
<anchor xml:id="__net_object_8cs_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevFid&#32;+=&#32;framecount;
<anchor xml:id="__net_object_8cs_source_1l00915"/>00915 
<anchor xml:id="__net_object_8cs_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;r&#32;=&#32;0,&#32;rcnt&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>)arrival;&#32;r&#32;&lt;=&#32;rcnt;&#32;r++)
<anchor xml:id="__net_object_8cs_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(name&#32;+&#32;&quot;&#32;&lt;b&gt;Reapplying&#32;Snapshots&#32;due&#32;to&#32;late&#32;arrival&#32;&lt;/b&gt;&#32;(&quot;&#32;+&#32;rcnt&#32;+&#32;&quot;)&#32;&quot;&#32;+&#32;snapFid&#32;+&#32;&quot;&#32;&gt;&#32;&quot;&#32;+&#32;targFid);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aae4ace0531b6f385efaf27f9b6a86b73">onSnapshotCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;prevIsValid,&#32;snapIsValid,&#32;targIsValid;
<anchor xml:id="__net_object_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(ignoreNonControllerUpdates)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;controllerActorNr&#32;=&#32;photonView.ControllerActorNr;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;prevIsValid&#32;=&#32;frameValidMask[prevFid]&#32;&amp;&amp;&#32;originHistory[prevFid]&#32;==&#32;controllerActorNr;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;snapIsValid&#32;=&#32;frameValidMask[snapFid]&#32;&amp;&amp;&#32;originHistory[snapFid]&#32;==&#32;controllerActorNr;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;targIsValid&#32;=&#32;frameValidMask[targFid]&#32;&amp;&amp;&#32;originHistory[targFid]&#32;==&#32;controllerActorNr;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevIsValid&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[prevFid];
<anchor xml:id="__net_object_8cs_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;snapIsValid&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[snapFid];
<anchor xml:id="__net_object_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targIsValid&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[targFid];
<anchor xml:id="__net_object_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00935"/>00935 
<anchor xml:id="__net_object_8cs_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aae4ace0531b6f385efaf27f9b6a86b73">onSnapshotCallbacks</link>[i].OnSnapshot(prevFid,&#32;snapFid,&#32;targFid,&#32;prevIsValid,&#32;snapIsValid,&#32;targIsValid);
<anchor xml:id="__net_object_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00938"/>00938 
<anchor xml:id="__net_object_8cs_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;==&#32;rcnt)
<anchor xml:id="__net_object_8cs_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l00941"/>00941 
<anchor xml:id="__net_object_8cs_source_1l00942"/>00942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevFid&#32;=&#32;snapFid;
<anchor xml:id="__net_object_8cs_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;snapFid&#32;=&#32;targFid;
<anchor xml:id="__net_object_8cs_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targFid++;
<anchor xml:id="__net_object_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targFid&#32;&gt;=&#32;framecount)
<anchor xml:id="__net_object_8cs_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targFid&#32;-=&#32;framecount;
<anchor xml:id="__net_object_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00948"/>00948 
<anchor xml:id="__net_object_8cs_source_1l00949"/>00949 
<anchor xml:id="__net_object_8cs_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aed17c03ce40129b3daf84935b1fa6cce">onCriticallyLateFrameCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aed17c03ce40129b3daf84935b1fa6cce">onCriticallyLateFrameCallbacks</link>[i].HandleCriticallyLateFrame(originFrameId);
<anchor xml:id="__net_object_8cs_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00957"/>00957 
<anchor xml:id="__net_object_8cs_source_1l00958"/>00958 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00959"/>00959 
<anchor xml:id="__net_object_8cs_source_1l00960"/>00960 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;NetMaster&#32;Events</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00961"/>00961 
<anchor xml:id="__net_object_8cs_source_1l00962"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a8e1cdded911b3a968f7214c9fd634e4d">00962</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a8e1cdded911b3a968f7214c9fd634e4d">OnPreSimulate</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;_currSubFrameId)
<anchor xml:id="__net_object_8cs_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1adaba90cd3c9db9dff12535adead776a0">onPreSimulateCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cb&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1adaba90cd3c9db9dff12535adead776a0">onPreSimulateCallbacks</link>[i];
<anchor xml:id="__net_object_8cs_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;b&#32;=&#32;cb&#32;as&#32;Behaviour;
<anchor xml:id="__net_object_8cs_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b.enabled&#32;&amp;&amp;&#32;b.gameObject.activeInHierarchy)
<anchor xml:id="__net_object_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cb.OnPreSimulate(frameId,&#32;_currSubFrameId);
<anchor xml:id="__net_object_8cs_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00971"/>00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00972"/>00972 
<anchor xml:id="__net_object_8cs_source_1l00973"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a4bc621b8a9985b8dd0b9c49925bee43d">00973</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a4bc621b8a9985b8dd0b9c49925bee43d">OnPostSimulate</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;subFrameId,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isNetTick)
<anchor xml:id="__net_object_8cs_source_1l00974"/>00974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00975"/>00975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1abed45b433fdf73f805dbf09b066c37ea">onPostSimulateCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cb&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1abed45b433fdf73f805dbf09b066c37ea">onPostSimulateCallbacks</link>[i];
<anchor xml:id="__net_object_8cs_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;b&#32;=&#32;cb&#32;as&#32;Behaviour;
<anchor xml:id="__net_object_8cs_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b.enabled&#32;&amp;&amp;&#32;b.gameObject.activeInHierarchy)
<anchor xml:id="__net_object_8cs_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cb.OnPostSimulate(frameId,&#32;subFrameId,&#32;isNetTick);
<anchor xml:id="__net_object_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00982"/>00982 
<anchor xml:id="__net_object_8cs_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(GetComponent&lt;SyncPickup&gt;())</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.LogError(pv.OwnerActorNr&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;pv.IsMine);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l00986"/>00986 
<anchor xml:id="__net_object_8cs_source_1l00987"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a987022a86bd9904ed0f938c23f19e055">00987</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a987022a86bd9904ed0f938c23f19e055">OnNetSerialize</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__net_object_8cs_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(name&#32;+&#32;&quot;&#32;OnNetSerialize&#32;NO&#32;&quot;&#32;+&#32;pv.IsMine&#32;+&#32;&quot;&#32;/&#32;&quot;&#32;+&#32;pv.IsMine);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(!photonView.IsMine)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;return&#32;SerializationFlags.None;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00993"/>00993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00994"/>00994 
<anchor xml:id="__net_object_8cs_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(controllerHasChanged)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00996"/>00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;writeFlags&#32;|=&#32;SerializationFlags.ForceReliable;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;controllerHasChanged&#32;=&#32;false;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01000"/>01000 
<anchor xml:id="__net_object_8cs_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;((writeFlags&#32;&amp;&#32;SerializationFlags.Force)&#32;!=&#32;0)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.LogError(&quot;FORCE&#32;&quot;&#32;+&#32;writeFlags);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01003"/>01003 
<anchor xml:id="__net_object_8cs_source_1l01004"/>01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a449aad3553d332c2b8e4d52e4996ba79">Group</link>&#32;!=&#32;0)
<anchor xml:id="__net_object_8cs_source_1l01005"/>01005 
<anchor xml:id="__net_object_8cs_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01009"/>01009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_net_msg_sends">NetMsgSends</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_net_msg_sends_1a0e1c5cce89a30923df6640579437e26a">reusableNetObjBuffer</link>;
<anchor xml:id="__net_object_8cs_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;localbitposition&#32;=&#32;0;
<anchor xml:id="__net_object_8cs_source_1l01011"/>01011 
<anchor xml:id="__net_object_8cs_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)frameId,&#32;ref&#32;localbitposition,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1a2aed6dcab6008025238743107c222a55">frameCountBits</link>);
<anchor xml:id="__net_object_8cs_source_1l01014"/>01014 
<anchor xml:id="__net_object_8cs_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//buffer.WriteBool(true,&#32;ref&#32;localbitposition);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01017"/>01017 
<anchor xml:id="__net_object_8cs_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WritePackedBytes((uint)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9341b529b4c140a1e452d837a6f7ef05">viewID</link>,&#32;ref&#32;localbitposition,&#32;32);
<anchor xml:id="__net_object_8cs_source_1l01020"/>01020 
<anchor xml:id="__net_object_8cs_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;holdHasDataPos&#32;=&#32;localbitposition;
<anchor xml:id="__net_object_8cs_source_1l01023"/>01023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;localbitposition);
<anchor xml:id="__net_object_8cs_source_1l01024"/>01024 
<anchor xml:id="__net_object_8cs_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;holdDataSizePos&#32;=&#32;localbitposition;
<anchor xml:id="__net_object_8cs_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localbitposition&#32;+=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_master">NetMaster</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_master_1a270353c83ace5c91aa11c6054d1dbba5">BITS_FOR_NETOBJ_SIZE</link>;
<anchor xml:id="__net_object_8cs_source_1l01028"/>01028 
<anchor xml:id="__net_object_8cs_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;lclflags&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a079b9660bc749f9b3df1648e81cc65d2">GenerateMessage</link>(frameId,&#32;buffer,&#32;ref&#32;localbitposition,&#32;writeFlags);
<anchor xml:id="__net_object_8cs_source_1l01030"/>01030 
<anchor xml:id="__net_object_8cs_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lclflags&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None)
<anchor xml:id="__net_object_8cs_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a6f85993cfd609f175ed298c7c3eeded2">skipWhenEmpty</link>)
<anchor xml:id="__net_object_8cs_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__net_object_8cs_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01036"/>01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localbitposition&#32;=&#32;holdHasDataPos;
<anchor xml:id="__net_object_8cs_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__net_object_8cs_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01042"/>01042 
<anchor xml:id="__net_object_8cs_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lclflags&#32;!=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None&#32;||&#32;!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aa3e0a7b8cec45e8bad48b8c9692c0e43">SkipWhenEmpty</link>)
<anchor xml:id="__net_object_8cs_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)(localbitposition&#32;-&#32;holdDataSizePos),&#32;ref&#32;holdDataSizePos,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_master">NetMaster</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_master_1a270353c83ace5c91aa11c6054d1dbba5">BITS_FOR_NETOBJ_SIZE</link>);
<anchor xml:id="__net_object_8cs_source_1l01047"/>01047 
<anchor xml:id="__net_object_8cs_source_1l01049"/>01049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WritePackedBytes(0,&#32;ref&#32;localbitposition,&#32;32);
<anchor xml:id="__net_object_8cs_source_1l01050"/>01050 
<anchor xml:id="__net_object_8cs_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_net_msg_sends">NetMsgSends</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_net_msg_sends_1afeedc157bec40fcf4bf8cf225bc4c1e7">Send</link>(buffer,&#32;localbitposition,&#32;gameObject,&#32;lclflags,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01053"/>01053 
<anchor xml:id="__net_object_8cs_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__net_object_8cs_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;flags&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a079b9660bc749f9b3df1648e81cc65d2">GenerateMessage</link>(frameId,&#32;buffer,&#32;ref&#32;bitposition,&#32;writeFlags);
<anchor xml:id="__net_object_8cs_source_1l01058"/>01058 
<anchor xml:id="__net_object_8cs_source_1l01059"/>01059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__net_object_8cs_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01061"/>01061 
<anchor xml:id="__net_object_8cs_source_1l01062"/>01062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;void&#32;OnNetDeserialize(int&#32;sourceFrameId,&#32;int&#32;originFrameId,&#32;int&#32;localFrameId,&#32;byte[]&#32;buffer,&#32;ref&#32;int&#32;bitposition)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01063"/>01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01064"/>01064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;throw&#32;new&#32;System.NotImplementedException();</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01065"/>01065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01066"/>01066 
<anchor xml:id="__net_object_8cs_source_1l01067"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ace5874c2464194888f405ec2039922b4">01067</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ace5874c2464194888f405ec2039922b4">OnCaptureCurrentState</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId)
<anchor xml:id="__net_object_8cs_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pcnt&#32;=&#32;packObjects.Count;
<anchor xml:id="__net_object_8cs_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pcnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l01072"/>01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;p&#32;=&#32;packObjects[i];
<anchor xml:id="__net_object_8cs_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.info.CaptureObj(p.component,&#32;p.packFrames[frameId]);
<anchor xml:id="__net_object_8cs_source_1l01075"/>01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01076"/>01076 
<anchor xml:id="__net_object_8cs_source_1l01078"/>01078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9dbcd8017227be36faef7182b3567122">onCaptureCurrentStateCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l01079"/>01079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a9dbcd8017227be36faef7182b3567122">onCaptureCurrentStateCallbacks</link>[i].OnCaptureCurrentState(frameId);
<anchor xml:id="__net_object_8cs_source_1l01080"/>01080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01081"/>01081 
<anchor xml:id="__net_object_8cs_source_1l01082"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a85e0e6f6792ed544a676b1bf8fdfa9cd">01082</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a85e0e6f6792ed544a676b1bf8fdfa9cd">OnQuantize</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId)
<anchor xml:id="__net_object_8cs_source_1l01083"/>01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1af3e70f16501c9d9a75ad7695e9857989">onQuantizeCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l01085"/>01085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cb&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1af3e70f16501c9d9a75ad7695e9857989">onQuantizeCallbacks</link>[i];
<anchor xml:id="__net_object_8cs_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;b&#32;=&#32;cb&#32;as&#32;Behaviour;
<anchor xml:id="__net_object_8cs_source_1l01088"/>01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b.enabled&#32;&amp;&amp;&#32;b.gameObject.activeInHierarchy)
<anchor xml:id="__net_object_8cs_source_1l01089"/>01089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cb.OnQuantize(frameId);
<anchor xml:id="__net_object_8cs_source_1l01090"/>01090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01092"/>01092 
<anchor xml:id="__net_object_8cs_source_1l01093"/>01093 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01094"/>01094 
<anchor xml:id="__net_object_8cs_source_1l01095"/>01095 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Snapshot&#32;/&#32;Interpolate&#32;Events</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01096"/>01096 
<anchor xml:id="__net_object_8cs_source_1l01097"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a37e38fbcd4a1dee0b1da06afc824e4e2">01097</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a37e38fbcd4a1dee0b1da06afc824e4e2">OnIncrementFrame</link>(<emphasis role="keywordtype">int</emphasis>&#32;newFrameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;newSubFrameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;previousFrameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;prevSubFrameId)
<anchor xml:id="__net_object_8cs_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01099"/>01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1acba2ee807302336a9680515a58002e19">onIncrementFramesCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l01100"/>01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1acba2ee807302336a9680515a58002e19">onIncrementFramesCallbacks</link>[i].OnIncrementFrame(newFrameId,&#32;newSubFrameId,&#32;previousFrameId,&#32;prevSubFrameId);
<anchor xml:id="__net_object_8cs_source_1l01101"/>01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01102"/>01102 
<anchor xml:id="__net_object_8cs_source_1l01103"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a32e478aded96d94261680310b0ad72a7">01103</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a32e478aded96d94261680310b0ad72a7">OnSnapshot</link>(<emphasis role="keywordtype">int</emphasis>&#32;localTargFrameId)
<anchor xml:id="__net_object_8cs_source_1l01104"/>01104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01105"/>01105 
<anchor xml:id="__net_object_8cs_source_1l01106"/>01106 
<anchor xml:id="__net_object_8cs_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>)
<anchor xml:id="__net_object_8cs_source_1l01108"/>01108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01109"/>01109 
<anchor xml:id="__net_object_8cs_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(pv.IsMine)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01111"/>01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01112"/>01112 
<anchor xml:id="__net_object_8cs_source_1l01113"/>01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.enabled)
<anchor xml:id="__net_object_8cs_source_1l01114"/>01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01115"/>01115 
<anchor xml:id="__net_object_8cs_source_1l01117"/>01117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_connection_tick_offsets">ConnectionTickOffsets</link>&#32;connectionOffsets;
<anchor xml:id="__net_object_8cs_source_1l01118"/>01118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager">TickManager</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager_1a2f960228457dcd2812e72bc7621370d8">perConnOffsets</link>.TryGetValue(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a7c9e7fa78f8f945d275ce425be0d1cab">ControllerActorNr</link>,&#32;out&#32;connectionOffsets))
<anchor xml:id="__net_object_8cs_source_1l01119"/>01119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01120"/>01120 
<anchor xml:id="__net_object_8cs_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(connectionOffsets,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__net_object_8cs_source_1l01122"/>01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01123"/>01123 
<anchor xml:id="__net_object_8cs_source_1l01124"/>01124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!connectionOffsets.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_connection_tick_offsets_1a328b9a8a485f0e4d63fc93c459ddc93c">hadInitialSnapshot</link>)
<anchor xml:id="__net_object_8cs_source_1l01125"/>01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01126"/>01126 
<anchor xml:id="__net_object_8cs_source_1l01127"/>01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;advanceCount&#32;=&#32;connectionOffsets.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_connection_tick_offsets_1a9f93c8ba5f75d3e58a9357f4718bac1c">advanceCount</link>;
<anchor xml:id="__net_object_8cs_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(advanceCount&#32;==&#32;0)
<anchor xml:id="__net_object_8cs_source_1l01129"/>01129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01130"/>01130 
<anchor xml:id="__net_object_8cs_source_1l01131"/>01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;framecount&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1a7feaad83116bd66166a5d2de35ff10a8">frameCount</link>;
<anchor xml:id="__net_object_8cs_source_1l01132"/>01132 
<anchor xml:id="__net_object_8cs_source_1l01133"/>01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;originTargFrameId&#32;=&#32;connectionOffsets.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_connection_tick_offsets_1a56b25c8243eb22a295fccd7d72bed7b1">ConvertFrameLocalToOrigin</link>(localTargFrameId);
<anchor xml:id="__net_object_8cs_source_1l01134"/>01134 
<anchor xml:id="__net_object_8cs_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;snapFid&#32;=&#32;originTargFrameId&#32;-&#32;1;
<anchor xml:id="__net_object_8cs_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(snapFid&#32;&lt;&#32;0)
<anchor xml:id="__net_object_8cs_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;snapFid&#32;+=&#32;framecount;
<anchor xml:id="__net_object_8cs_source_1l01138"/>01138 
<anchor xml:id="__net_object_8cs_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;prevFid&#32;=&#32;originTargFrameId&#32;-&#32;2;
<anchor xml:id="__net_object_8cs_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prevFid&#32;&lt;&#32;0)
<anchor xml:id="__net_object_8cs_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevFid&#32;+=&#32;framecount;
<anchor xml:id="__net_object_8cs_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//int&#32;snapFid&#32;=&#32;NetMaster.PreviousFrameId;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01143"/>01143 
<anchor xml:id="__net_object_8cs_source_1l01144"/>01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(GetType().Name&#32;+&#32;&quot;&#32;OnSnap&#32;-&#32;passed&#32;&#32;-&#32;advance&#32;count:&#32;&quot;&#32;+&#32;offsets.advanceCount);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01145"/>01145 
<anchor xml:id="__net_object_8cs_source_1l01146"/>01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(advanceCount&#32;!=&#32;1)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01147"/>01147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(&quot;&lt;b&gt;ADVANCE&#32;&lt;/b&gt;&quot;&#32;+&#32;snapFid&#32;+&#32;&quot;&#32;&gt;&#32;&quot;&#32;+&#32;originTargFrameId&#32;+&#32;&quot;&#32;:&#32;&quot;&#32;+&#32;advanceCount);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(&quot;ADVANCE&#32;&quot;&#32;+&#32;snapFid&#32;+&#32;&quot;&#32;&gt;&#32;&quot;&#32;+&#32;originTargFrameId&#32;+&#32;&quot;&#32;:&#32;&quot;&#32;+&#32;advanceCount);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01150"/>01150 
<anchor xml:id="__net_object_8cs_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameCount&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1a7feaad83116bd66166a5d2de35ff10a8">frameCount</link>;
<anchor xml:id="__net_object_8cs_source_1l01152"/>01152 
<anchor xml:id="__net_object_8cs_source_1l01153"/>01153 
<anchor xml:id="__net_object_8cs_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;a&#32;=&#32;0,&#32;targFid&#32;=&#32;originTargFrameId;&#32;a&#32;&lt;&#32;advanceCount;&#32;++a)
<anchor xml:id="__net_object_8cs_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targFid&#32;=&#32;originTargFrameId&#32;+&#32;a;
<anchor xml:id="__net_object_8cs_source_1l01157"/>01157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targFid&#32;&gt;=&#32;frameCount)
<anchor xml:id="__net_object_8cs_source_1l01158"/>01158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targFid&#32;-=&#32;frameCount;
<anchor xml:id="__net_object_8cs_source_1l01159"/>01159 
<anchor xml:id="__net_object_8cs_source_1l01160"/>01160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;invalidateFId&#32;=&#32;targFid&#32;-&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1abf83120d172b3ae879dc7fe04e866712">halfFrameCount</link>;
<anchor xml:id="__net_object_8cs_source_1l01161"/>01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(invalidateFId&#32;&lt;&#32;0)
<anchor xml:id="__net_object_8cs_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;invalidateFId&#32;+=&#32;frameCount;
<anchor xml:id="__net_object_8cs_source_1l01163"/>01163 
<anchor xml:id="__net_object_8cs_source_1l01164"/>01164 
<anchor xml:id="__net_object_8cs_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isFrameValid&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[snapFid];
<anchor xml:id="__net_object_8cs_source_1l01167"/>01167 
<anchor xml:id="__net_object_8cs_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(packSnapIsValid/*&#32;||&#32;packTargIsValid*/)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;packTargIsValid&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[targFid];
<anchor xml:id="__net_object_8cs_source_1l01171"/>01171 
<anchor xml:id="__net_object_8cs_source_1l01172"/>01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pcnt&#32;=&#32;packObjects.Count;
<anchor xml:id="__net_object_8cs_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pcnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PackObjRecord&#32;p&#32;=&#32;packObjects[i];
<anchor xml:id="__net_object_8cs_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;snapf&#32;=&#32;p.packFrames[snapFid];
<anchor xml:id="__net_object_8cs_source_1l01177"/>01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;targpf&#32;=&#32;p.packFrames[targFid];
<anchor xml:id="__net_object_8cs_source_1l01178"/>01178 
<anchor xml:id="__net_object_8cs_source_1l01179"/>01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(advanceCount&#32;!=&#32;1)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(snapFid&#32;+&#32;&quot;&#32;&gt;&#32;&quot;&#32;+&#32;targFid);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01181"/>01181 
<anchor xml:id="__net_object_8cs_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.readyMask.OR(p.info.defaultReadyMask);
<anchor xml:id="__net_object_8cs_source_1l01184"/>01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.readyMask.OR(snapf.isCompleteMask);
<anchor xml:id="__net_object_8cs_source_1l01185"/>01185 
<anchor xml:id="__net_object_8cs_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(Time.time&#32;+&#32;&quot;&#32;snap&#32;&quot;&#32;+&#32;snapFid&#32;+&#32;&quot;&#32;-&#32;&quot;&#32;+&#32;p.readyMask.PrintMask(null)&#32;+&#32;&quot;&#32;:&#32;&quot;&#32;+&#32;p.info.defaultReadyMask.PrintMask(null)&#32;+&#32;&quot;&#32;:&#32;&quot;&#32;+&#32;snapf.isCompleteMask.PrintMask(null));</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01187"/>01187 
<anchor xml:id="__net_object_8cs_source_1l01189"/>01189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!packTargIsValid)
<anchor xml:id="__net_object_8cs_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.info.CopyFrameToFrame(snapf,&#32;targpf);
<anchor xml:id="__net_object_8cs_source_1l01191"/>01191 
<anchor xml:id="__net_object_8cs_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maskOffset&#32;=&#32;0;
<anchor xml:id="__net_object_8cs_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.info.SnapObject(snapf,&#32;targpf,&#32;p.component,&#32;ref&#32;p.readyMask,&#32;ref&#32;maskOffset);
<anchor xml:id="__net_object_8cs_source_1l01195"/>01195 
<anchor xml:id="__net_object_8cs_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isFrameValid)
<anchor xml:id="__net_object_8cs_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01199"/>01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maskOffset&#32;=&#32;0;
<anchor xml:id="__net_object_8cs_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.info.CopyFrameToObj(snapf,&#32;p.component,&#32;ref&#32;snapf.mask,&#32;ref&#32;maskOffset);
<anchor xml:id="__net_object_8cs_source_1l01201"/>01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01202"/>01202 
<anchor xml:id="__net_object_8cs_source_1l01204"/>01204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p.readyMask.Compare(p.prevReadyMask)&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__net_object_8cs_source_1l01205"/>01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01206"/>01206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BroadcastReadyMaskChange(p);
<anchor xml:id="__net_object_8cs_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01210"/>01210 
<anchor xml:id="__net_object_8cs_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(GetType().Name&#32;+&#32;&quot;&#32;OnSnap&#32;-&#32;callback&#32;count&#32;&quot;&#32;+&#32;onSnapshot.Count);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01212"/>01212 
<anchor xml:id="__net_object_8cs_source_1l01213"/>01213 
<anchor xml:id="__net_object_8cs_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;prevIsValid,&#32;snapIsValid,&#32;targIsValid;
<anchor xml:id="__net_object_8cs_source_1l01215"/>01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(ignoreNonControllerUpdates)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01216"/>01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01217"/>01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;controllerActorNr&#32;=&#32;photonView.ControllerActorNr;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01218"/>01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;prevIsValid&#32;=&#32;frameValidMask[prevFid]&#32;&amp;&amp;&#32;originHistory[prevFid]&#32;==&#32;controllerActorNr;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01219"/>01219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;snapIsValid&#32;=&#32;frameValidMask[snapFid]&#32;&amp;&amp;&#32;originHistory[snapFid]&#32;==&#32;controllerActorNr;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01220"/>01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;targIsValid&#32;=&#32;frameValidMask[targFid]&#32;&amp;&amp;&#32;originHistory[targFid]&#32;==&#32;controllerActorNr;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01221"/>01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01222"/>01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01223"/>01223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01224"/>01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevIsValid&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[prevFid];
<anchor xml:id="__net_object_8cs_source_1l01225"/>01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;snapIsValid&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[snapFid];
<anchor xml:id="__net_object_8cs_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targIsValid&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[targFid];
<anchor xml:id="__net_object_8cs_source_1l01227"/>01227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01228"/>01228 
<anchor xml:id="__net_object_8cs_source_1l01230"/>01230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aae4ace0531b6f385efaf27f9b6a86b73">onSnapshotCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1aae4ace0531b6f385efaf27f9b6a86b73">onSnapshotCallbacks</link>[i].OnSnapshot(prevFid,&#32;snapFid,&#32;targFid,&#32;prevIsValid,&#32;snapIsValid,&#32;targIsValid);
<anchor xml:id="__net_object_8cs_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01234"/>01234 
<anchor xml:id="__net_object_8cs_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevFid&#32;=&#32;snapFid;
<anchor xml:id="__net_object_8cs_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;snapFid&#32;=&#32;targFid;
<anchor xml:id="__net_object_8cs_source_1l01237"/>01237 
<anchor xml:id="__net_object_8cs_source_1l01239"/>01239 
<anchor xml:id="__net_object_8cs_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a425aaf88c265e60c678373e056214017">frameValidMask</link>[invalidateFId]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01241"/>01241 
<anchor xml:id="__net_object_8cs_source_1l01242"/>01242 <emphasis role="preprocessor">#if&#32;SNS_WARNINGS</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(currTargFrameId&#32;+&#32;&quot;&#32;New&#32;Target&#32;Time&#32;on&#32;Buffer&#32;&quot;&#32;+&#32;(bufferAddTime[currTargFrameId].HasValue&#32;?&#32;(Time.time&#32;-&#32;bufferAddTime[currTargFrameId]).ToString()&#32;:&#32;&quot;NULL&quot;));</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01244"/>01244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bufferAddTime[targFid]&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01245"/>01245 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01246"/>01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01247"/>01247 
<anchor xml:id="__net_object_8cs_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(advanceCount&#32;!=&#32;1)</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01249"/>01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(&quot;&lt;b&gt;END&#32;ADVANCE&#32;&lt;/b&gt;&quot;&#32;+&#32;snapFid&#32;+&#32;&quot;&#32;:&#32;&quot;&#32;+&#32;advanceCount);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01250"/>01250 
<anchor xml:id="__net_object_8cs_source_1l01251"/>01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01253"/>01253 
<anchor xml:id="__net_object_8cs_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;BroadcastReadyMaskChange(PackObjRecord&#32;p)
<anchor xml:id="__net_object_8cs_source_1l01255"/>01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;Ready&#32;change&#32;&quot;&#32;+&#32;p.readyMask.AllAreTrue);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01257"/>01257 
<anchor xml:id="__net_object_8cs_source_1l01258"/>01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1abe4da2a021d3a463efacd2685ad05812">OnPackObjReadyChange</link>(p.component,&#32;p.readyMask.AllAreTrue&#32;?&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a3a9d2aa15970f527d5e8920133cd458d">ReadyStateEnum</link>.Ready&#32;:&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a3a9d2aa15970f527d5e8920133cd458d">ReadyStateEnum</link>.Unready);
<anchor xml:id="__net_object_8cs_source_1l01259"/>01259 
<anchor xml:id="__net_object_8cs_source_1l01260"/>01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_i_pack_obj_on_ready_change">IPackObjOnReadyChange</link>&#32;onReadyCallback&#32;=&#32;p.onReadyCallback;
<anchor xml:id="__net_object_8cs_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ReferenceEquals(onReadyCallback,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__net_object_8cs_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onReadyCallback.<link linkend="_interface_photon_1_1_compression_1_1_i_pack_obj_on_ready_change_1a30bdbbbc4ec5adf87e901f30a8d1ca93">OnPackObjReadyChange</link>(p.readyMask,&#32;p.readyMask.AllAreTrue);
<anchor xml:id="__net_object_8cs_source_1l01263"/>01263 
<anchor xml:id="__net_object_8cs_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.prevReadyMask.Copy(p.readyMask);
<anchor xml:id="__net_object_8cs_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01266"/>01266 
<anchor xml:id="__net_object_8cs_source_1l01267"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a1a0ddeac6ead4e32fc6a31cefd55f39e">01267</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a1a0ddeac6ead4e32fc6a31cefd55f39e">OnInterpolate</link>(<emphasis role="keywordtype">int</emphasis>&#32;localSnapFrameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;localTargFrameId,&#32;<emphasis role="keywordtype">float</emphasis>&#32;t)
<anchor xml:id="__net_object_8cs_source_1l01268"/>01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01269"/>01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//return&#32;false;</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01270"/>01270 
<anchor xml:id="__net_object_8cs_source_1l01271"/>01271 
<anchor xml:id="__net_object_8cs_source_1l01272"/>01272 
<anchor xml:id="__net_object_8cs_source_1l01274"/>01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_connection_tick_offsets">ConnectionTickOffsets</link>&#32;offsets;
<anchor xml:id="__net_object_8cs_source_1l01275"/>01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager">TickManager</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_tick_manager_1a2f960228457dcd2812e72bc7621370d8">perConnOffsets</link>.TryGetValue(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1ab6dd9d636d899d49cfb7bfe72a69ce13">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a7c9e7fa78f8f945d275ce425be0d1cab">ControllerActorNr</link>,&#32;out&#32;offsets))
<anchor xml:id="__net_object_8cs_source_1l01276"/>01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01277"/>01277 
<anchor xml:id="__net_object_8cs_source_1l01278"/>01278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Not&#32;sure&#32;why&#32;this&#32;is&#32;needed,&#32;but&#32;it&#32;is.</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01279"/>01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(offsets,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__net_object_8cs_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01281"/>01281 
<anchor xml:id="__net_object_8cs_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!offsets.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_connection_tick_offsets_1a328b9a8a485f0e4d63fc93c459ddc93c">hadInitialSnapshot</link>)
<anchor xml:id="__net_object_8cs_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01284"/>01284 
<anchor xml:id="__net_object_8cs_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;originSnapFrameId&#32;=&#32;offsets.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_connection_tick_offsets_1a56b25c8243eb22a295fccd7d72bed7b1">ConvertFrameLocalToOrigin</link>(localSnapFrameId);
<anchor xml:id="__net_object_8cs_source_1l01286"/>01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;originTargFrameId&#32;=&#32;offsets.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_connection_tick_offsets_1a56b25c8243eb22a295fccd7d72bed7b1">ConvertFrameLocalToOrigin</link>(localTargFrameId);
<anchor xml:id="__net_object_8cs_source_1l01287"/>01287 
<anchor xml:id="__net_object_8cs_source_1l01288"/>01288 
<anchor xml:id="__net_object_8cs_source_1l01291"/>01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offsets.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_connection_tick_offsets_1a4056ad752584f659aa53c65f97a44fd0">validFrameMask</link>[originTargFrameId])
<anchor xml:id="__net_object_8cs_source_1l01292"/>01292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01293"/>01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;NOBJ&#32;Interp&#32;&quot;&#32;+&#32;snapFId&#32;+&#32;&quot;&#32;:&#32;&quot;&#32;+&#32;targFId&#32;+&#32;packObjValidMask[snapFId]&#32;+&#32;&quot;&#32;:&#32;&quot;&#32;+&#32;packObjValidMask[targFId]);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01294"/>01294 
<anchor xml:id="__net_object_8cs_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pcnt&#32;=&#32;packObjects.Count;
<anchor xml:id="__net_object_8cs_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;pcnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;p&#32;=&#32;packObjects[i];
<anchor xml:id="__net_object_8cs_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;snappf&#32;=&#32;p.packFrames[originSnapFrameId];
<anchor xml:id="__net_object_8cs_source_1l01300"/>01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;targpf&#32;=&#32;p.packFrames[originTargFrameId];
<anchor xml:id="__net_object_8cs_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maskOffset&#32;=&#32;0;
<anchor xml:id="__net_object_8cs_source_1l01302"/>01302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(name&#32;+&#32;&quot;Interp&#32;initialized&#32;&quot;&#32;+&#32;frameValidMask[originSnapFrameId]&#32;+&#32;&quot;&#32;&gt;&#32;&quot;&#32;+&#32;frameValidMask[originTargFrameId]);</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01303"/>01303 
<anchor xml:id="__net_object_8cs_source_1l01304"/>01304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.info.InterpFrameToObj(snappf,&#32;targpf,&#32;p.component,&#32;t,&#32;ref&#32;p.readyMask,&#32;ref&#32;maskOffset);
<anchor xml:id="__net_object_8cs_source_1l01305"/>01305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01306"/>01306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01307"/>01307 
<anchor xml:id="__net_object_8cs_source_1l01308"/>01308 
<anchor xml:id="__net_object_8cs_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a73ae6de2bbe0f93778fcb298d8807adf">onInterpolateCallbacks</link>.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__net_object_8cs_source_1l01311"/>01311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cb&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object_1a73ae6de2bbe0f93778fcb298d8807adf">onInterpolateCallbacks</link>[i];
<anchor xml:id="__net_object_8cs_source_1l01313"/>01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;b&#32;=&#32;cb&#32;as&#32;Behaviour;
<anchor xml:id="__net_object_8cs_source_1l01314"/>01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b.enabled&#32;&amp;&amp;&#32;b.gameObject.activeInHierarchy)
<anchor xml:id="__net_object_8cs_source_1l01315"/>01315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cb.OnInterpolate(originSnapFrameId,&#32;originTargFrameId,&#32;t);
<anchor xml:id="__net_object_8cs_source_1l01316"/>01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01317"/>01317 
<anchor xml:id="__net_object_8cs_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01319"/>01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01320"/>01320 
<anchor xml:id="__net_object_8cs_source_1l01321"/>01321 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01322"/>01322 &#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01323"/>01323 
<anchor xml:id="__net_object_8cs_source_1l01324"/>01324 
<anchor xml:id="__net_object_8cs_source_1l01325"/>01325 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01326"/>01326 &#32;&#32;&#32;&#32;[CustomEditor(typeof(NetObject))]
<anchor xml:id="__net_object_8cs_source_1l01327"/>01327 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>NetObjectEditor&#32;:&#32;NetCoreHeaderEditor
<anchor xml:id="__net_object_8cs_source_1l01328"/>01328 &#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01329"/>01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;HelpURL
<anchor xml:id="__net_object_8cs_source_1l01330"/>01330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01331"/>01331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_simple_docs_u_r_l_s">SimpleDocsURLS</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_simple_docs_u_r_l_s_1a61b538e9bb6a1849141ccbf6a2bb1b73">CORE_OBJS_PATH</link>&#32;+&#32;<emphasis role="stringliteral">@&quot;#netobject&quot;</emphasis>;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01332"/>01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01333"/>01333 
<anchor xml:id="__net_object_8cs_source_1l01334"/>01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;TextTexturePath
<anchor xml:id="__net_object_8cs_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Header/NetObjectText&quot;</emphasis>;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01338"/>01338 
<anchor xml:id="__net_object_8cs_source_1l01339"/>01339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Instructions
<anchor xml:id="__net_object_8cs_source_1l01340"/>01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01341"/>01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01342"/>01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01343"/>01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Extends&#32;functionality&#32;of&#32;PhotonView&#32;component.&#32;Collects&#32;all&#32;networking&#32;interfaces&#32;from&#32;child&#32;components,&quot;</emphasis>&#32;+
<anchor xml:id="__net_object_8cs_source_1l01344"/>01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;and&#32;relays&#32;network&#32;callbacks,&#32;serialization,&#32;and&#32;events&#32;between&#32;the&#32;NetMaster&#32;and&#32;synced&#32;components&#32;on&#32;this&#32;object.&quot;</emphasis>;
<anchor xml:id="__net_object_8cs_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01346"/>01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01347"/>01347 
<anchor xml:id="__net_object_8cs_source_1l01348"/>01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnInspectorGUI()
<anchor xml:id="__net_object_8cs_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01350"/>01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnInspectorGUI();
<anchor xml:id="__net_object_8cs_source_1l01351"/>01351 
<anchor xml:id="__net_object_8cs_source_1l01352"/>01352 
<anchor xml:id="__net_object_8cs_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Iterate&#32;all&#32;Bool&#32;members,&#32;we&#32;want&#32;them&#32;as&#32;ToggleLeft&#32;since&#32;the&#32;names&#32;are&#32;so&#32;long.</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;iterator&#32;=&#32;serializedObject.GetIterator();
<anchor xml:id="__net_object_8cs_source_1l01355"/>01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterator.Next(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l01356"/>01356 
<anchor xml:id="__net_object_8cs_source_1l01357"/>01357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__net_object_8cs_source_1l01358"/>01358 
<anchor xml:id="__net_object_8cs_source_1l01359"/>01359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(iterator.Next(<emphasis role="keyword">false</emphasis>))
<anchor xml:id="__net_object_8cs_source_1l01360"/>01360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iterator.propertyType&#32;==&#32;SerializedPropertyType.Boolean&#32;&amp;&amp;&#32;iterator.name&#32;!=&#32;<emphasis role="stringliteral">&quot;m_Enabled&quot;</emphasis>)
<anchor xml:id="__net_object_8cs_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01362"/>01362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterator.boolValue&#32;=&#32;EditorGUILayout.ToggleLeft(GetGUIContent(iterator),&#32;iterator.boolValue);
<anchor xml:id="__net_object_8cs_source_1l01363"/>01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01364"/>01364 
<anchor xml:id="__net_object_8cs_source_1l01365"/>01365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
<anchor xml:id="__net_object_8cs_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__net_object_8cs_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serializedObject.ApplyModifiedProperties();
<anchor xml:id="__net_object_8cs_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01369"/>01369 
<anchor xml:id="__net_object_8cs_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
<anchor xml:id="__net_object_8cs_source_1l01371"/>01371 
<anchor xml:id="__net_object_8cs_source_1l01372"/>01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TickEngineSettings.Single.DrawGui(target,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__net_object_8cs_source_1l01373"/>01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01374"/>01374 &#32;&#32;&#32;&#32;}
<anchor xml:id="__net_object_8cs_source_1l01375"/>01375 
<anchor xml:id="__net_object_8cs_source_1l01376"/>01376 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__net_object_8cs_source_1l01377"/>01377 }
</programlisting></section>
