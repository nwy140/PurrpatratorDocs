<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__network_hit_8cs_source" xml:lang="en-US">
<title>NetworkHit.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Utilities/Networking/NetworkHit.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__network_hit_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__network_hit_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__network_hit_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__network_hit_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__network_hit_8cs_source_1l00005"/>00005 
<anchor xml:id="__network_hit_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_compression">Compression</link>;
<anchor xml:id="__network_hit_8cs_source_1l00007"/>00007 
<anchor xml:id="__network_hit_8cs_source_1l00008"/>00008 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__network_hit_8cs_source_1l00009"/>00009 {
<anchor xml:id="__network_hit_8cs_source_1l00010"/>00010 
<anchor xml:id="__network_hit_8cs_source_1l00014"/><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit">NetworkHit</link>
<anchor xml:id="__network_hit_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hit_8cs_source_1l00016"/><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1af7a36e92b3aefd4d2de5e9592dc36826">00016</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1af7a36e92b3aefd4d2de5e9592dc36826">netObjId</link>;
<anchor xml:id="__network_hit_8cs_source_1l00017"/><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a31f9204db64a2f37bf632f8ac3082a48">00017</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a31f9204db64a2f37bf632f8ac3082a48">hitMask</link>;
<anchor xml:id="__network_hit_8cs_source_1l00018"/><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1aa309c488e1b7189f67d2a9b9d27750f7">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1aa309c488e1b7189f67d2a9b9d27750f7">colliderId</link>;
<anchor xml:id="__network_hit_8cs_source_1l00019"/>00019 
<anchor xml:id="__network_hit_8cs_source_1l00020"/><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a3c4141f12bd1527933f72fc886670d4b">00020</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a3c4141f12bd1527933f72fc886670d4b">NetworkHit</link>(<emphasis role="keywordtype">int</emphasis>&#32;objectID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a31f9204db64a2f37bf632f8ac3082a48">hitMask</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1aa309c488e1b7189f67d2a9b9d27750f7">colliderId</link>)
<anchor xml:id="__network_hit_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hit_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.netObjId&#32;=&#32;objectID;
<anchor xml:id="__network_hit_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hitMask&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a31f9204db64a2f37bf632f8ac3082a48">hitMask</link>;
<anchor xml:id="__network_hit_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.colliderId&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1aa309c488e1b7189f67d2a9b9d27750f7">colliderId</link>;
<anchor xml:id="__network_hit_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hit_8cs_source_1l00026"/>00026 
<anchor xml:id="__network_hit_8cs_source_1l00027"/><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1ab8f3292cb19b56b1157234c2fff43100">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1ab8f3292cb19b56b1157234c2fff43100">Serialize</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForHitmask,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForColliderId)
<anchor xml:id="__network_hit_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hit_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WritePackedBytes((ulong)<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1af7a36e92b3aefd4d2de5e9592dc36826">netObjId</link>,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__network_hit_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((ulong)<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a31f9204db64a2f37bf632f8ac3082a48">hitMask</link>,&#32;ref&#32;bitposition,&#32;bitsForHitmask);
<anchor xml:id="__network_hit_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((ulong)<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1aa309c488e1b7189f67d2a9b9d27750f7">colliderId</link>,&#32;ref&#32;bitposition,&#32;bitsForColliderId);
<anchor xml:id="__network_hit_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hit_8cs_source_1l00033"/>00033 
<anchor xml:id="__network_hit_8cs_source_1l00034"/><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a603f5d597cf179b2a91ef52eee050196">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit">NetworkHit</link>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a603f5d597cf179b2a91ef52eee050196">Deserialize</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForHitmask,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForColliderId)
<anchor xml:id="__network_hit_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hit_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;objectId&#32;=&#32;(int)buffer.ReadPackedBytes(ref&#32;bitposition,&#32;32);
<anchor xml:id="__network_hit_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hitmask&#32;=&#32;(int)buffer.Read(ref&#32;bitposition,&#32;bitsForHitmask);
<anchor xml:id="__network_hit_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1aa309c488e1b7189f67d2a9b9d27750f7">colliderId</link>&#32;=&#32;(int)buffer.Read(ref&#32;bitposition,&#32;bitsForColliderId);
<anchor xml:id="__network_hit_8cs_source_1l00039"/>00039 
<anchor xml:id="__network_hit_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a3c4141f12bd1527933f72fc886670d4b">NetworkHit</link>(objectId,&#32;hitmask,&#32;<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1aa309c488e1b7189f67d2a9b9d27750f7">colliderId</link>);
<anchor xml:id="__network_hit_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hit_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hit_8cs_source_1l00043"/>00043 
<anchor xml:id="__network_hit_8cs_source_1l00044"/>00044 }
<anchor xml:id="__network_hit_8cs_source_1l00045"/>00045 
</programlisting></section>
