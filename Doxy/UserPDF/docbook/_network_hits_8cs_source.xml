<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__network_hits_8cs_source" xml:lang="en-US">
<title>NetworkHits.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Utilities/Networking/NetworkHits.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__network_hits_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__network_hits_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__network_hits_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__network_hits_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__network_hits_8cs_source_1l00005"/>00005 
<anchor xml:id="__network_hits_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_compression">Compression</link>;
<anchor xml:id="__network_hits_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__network_hits_8cs_source_1l00008"/>00008 
<anchor xml:id="__network_hits_8cs_source_1l00009"/>00009 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__network_hits_8cs_source_1l00010"/>00010 {
<anchor xml:id="__network_hits_8cs_source_1l00014"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits">NetworkHits</link>
<anchor xml:id="__network_hits_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00016"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">00016</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;List&lt;NetworkHit&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;NetworkHit&gt;();
<anchor xml:id="__network_hits_8cs_source_1l00017"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ab522e427653a25090d38ffcc61fe9c05">00017</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ab522e427653a25090d38ffcc61fe9c05">nearestOnly</link>;
<anchor xml:id="__network_hits_8cs_source_1l00018"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ac47f9f9f9761e024427c93c7ee1f3877">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ac47f9f9f9761e024427c93c7ee1f3877">nearestIndex</link>&#32;=&#32;-1;
<anchor xml:id="__network_hits_8cs_source_1l00019"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">bitsForContactGroupMask</link>;
<anchor xml:id="__network_hits_8cs_source_1l00020"/>00020 
<anchor xml:id="__network_hits_8cs_source_1l00021"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a52baff34b6a21e74af5f04b09ee2f8de">00021</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a52baff34b6a21e74af5f04b09ee2f8de">NetworkHits</link>(<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ab522e427653a25090d38ffcc61fe9c05">nearestOnly</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">bitsForContactGroupMask</link>)
<anchor xml:id="__network_hits_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.nearestOnly&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ab522e427653a25090d38ffcc61fe9c05">nearestOnly</link>;
<anchor xml:id="__network_hits_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bitsForContactGroupMask&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">bitsForContactGroupMask</link>;
<anchor xml:id="__network_hits_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00026"/>00026 
<anchor xml:id="__network_hits_8cs_source_1l00027"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a43530353dd9f776fdcb5bd9935a911cf">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a43530353dd9f776fdcb5bd9935a911cf">Reset</link>(<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ab522e427653a25090d38ffcc61fe9c05">nearestOnly</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">bitsForContactGroupMask</link>)
<anchor xml:id="__network_hits_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.nearestOnly&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ab522e427653a25090d38ffcc61fe9c05">nearestOnly</link>;
<anchor xml:id="__network_hits_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.bitsForContactGroupMask&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">bitsForContactGroupMask</link>;
<anchor xml:id="__network_hits_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>.Clear();
<anchor xml:id="__network_hits_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ac47f9f9f9761e024427c93c7ee1f3877">nearestIndex</link>&#32;=&#32;-1;
<anchor xml:id="__network_hits_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00034"/>00034 
<anchor xml:id="__network_hits_8cs_source_1l00035"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a25080d8b59b546fd8a5f3d308dd1f9b8">00035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a25080d8b59b546fd8a5f3d308dd1f9b8">Clear</link>()
<anchor xml:id="__network_hits_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>.Clear();
<anchor xml:id="__network_hits_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ac47f9f9f9761e024427c93c7ee1f3877">nearestIndex</link>&#32;=&#32;-1;
<anchor xml:id="__network_hits_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00040"/>00040 
<anchor xml:id="__network_hits_8cs_source_1l00041"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1aff97ead30067672b98487d249f2e6f30">00041</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1aff97ead30067672b98487d249f2e6f30">Serialize</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForColliderId)
<anchor xml:id="__network_hits_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__network_hits_8cs_source_1l00044"/>00044 
<anchor xml:id="__network_hits_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ab522e427653a25090d38ffcc61fe9c05">nearestOnly</link>)
<anchor xml:id="__network_hits_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ac47f9f9f9761e024427c93c7ee1f3877">nearestIndex</link>&#32;!=&#32;-1)
<anchor xml:id="__network_hits_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__network_hits_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ac47f9f9f9761e024427c93c7ee1f3877">nearestIndex</link>].Serialize(buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">bitsForContactGroupMask</link>,&#32;bitsForColliderId);
<anchor xml:id="__network_hits_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__network_hits_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__network_hits_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__network_hits_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__network_hits_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>.Count;&#32;i&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>.Count;&#32;++i)
<anchor xml:id="__network_hits_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__network_hits_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>[i].Serialize(buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">bitsForContactGroupMask</link>,&#32;bitsForColliderId);
<anchor xml:id="__network_hits_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__network_hits_8cs_source_1l00063"/>00063 
<anchor xml:id="__network_hits_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__network_hits_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00067"/>00067 
<anchor xml:id="__network_hits_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__network_hits_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00070"/>00070 
<anchor xml:id="__network_hits_8cs_source_1l00071"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ae149b0ddd2ec33a0af51254fbd3b7533">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ae149b0ddd2ec33a0af51254fbd3b7533">Deserialize</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForColliderId)
<anchor xml:id="__network_hits_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>.Clear();
<anchor xml:id="__network_hits_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__network_hits_8cs_source_1l00075"/>00075 
<anchor xml:id="__network_hits_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//bool&#32;nearestOnly&#32;=&#32;definition.hitscanType.IsCast()&#32;&amp;&amp;&#32;definition.nearestOnly;</emphasis>
<anchor xml:id="__network_hits_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ab522e427653a25090d38ffcc61fe9c05">nearestOnly</link>)
<anchor xml:id="__network_hits_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(buffer.ReadBool(ref&#32;bitposition))
<anchor xml:id="__network_hits_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>.Add(<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit">NetworkHit</link>.<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a603f5d597cf179b2a91ef52eee050196">Deserialize</link>(buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">bitsForContactGroupMask</link>,&#32;bitsForColliderId));
<anchor xml:id="__network_hits_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__network_hits_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ac47f9f9f9761e024427c93c7ee1f3877">nearestIndex</link>&#32;=&#32;0;
<anchor xml:id="__network_hits_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__network_hits_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1ac47f9f9f9761e024427c93c7ee1f3877">nearestIndex</link>&#32;=&#32;-1;
<anchor xml:id="__network_hits_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__network_hits_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(buffer.ReadBool(ref&#32;bitposition))
<anchor xml:id="__network_hits_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>.Add(<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit">NetworkHit</link>.<link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_network_hit_1a603f5d597cf179b2a91ef52eee050196">Deserialize</link>(buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a4b0d6c0c0d06c2daaa352d22ebbbf480">bitsForContactGroupMask</link>,&#32;bitsForColliderId));
<anchor xml:id="__network_hits_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__network_hits_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00096"/>00096 
<anchor xml:id="__network_hits_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__network_hits_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00099"/>00099 
<anchor xml:id="__network_hits_8cs_source_1l00100"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1afdf858c6af69913ed68d9f7ef98fffc7">00100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1afdf858c6af69913ed68d9f7ef98fffc7">ToString</link>()
<anchor xml:id="__network_hits_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__network_hits_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;str&#32;=&#32;GetType().Name;
<anchor xml:id="__network_hits_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>.Count;&#32;++i)
<anchor xml:id="__network_hits_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str&#32;+=&#32;<emphasis role="stringliteral">&quot;\nObj:&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>[i].netObjId&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;Mask:&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_network_hits_1a1bfa04c39180efa96a969cb69b83f5bb">hits</link>[i].hitMask;
<anchor xml:id="__network_hits_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__network_hits_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str;
<anchor xml:id="__network_hits_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;}
<anchor xml:id="__network_hits_8cs_source_1l00109"/>00109 }
<anchor xml:id="__network_hits_8cs_source_1l00110"/>00110 
</programlisting></section>
