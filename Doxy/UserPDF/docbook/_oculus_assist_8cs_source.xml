<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__oculus_assist_8cs_source" xml:lang="en-US">
<title>OculusAssist.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/SyncOculus/Assistants/OculusAssist.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__oculus_assist_8cs_source_1l00001"/>00001 
<anchor xml:id="__oculus_assist_8cs_source_1l00002"/>00002 <emphasis role="preprocessor">#if&#32;OCULUS</emphasis>
<anchor xml:id="__oculus_assist_8cs_source_1l00003"/>00003 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__oculus_assist_8cs_source_1l00004"/>00004 
<anchor xml:id="__oculus_assist_8cs_source_1l00005"/>00005 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_utility_scripts">UtilityScripts</link>;
<anchor xml:id="__oculus_assist_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__oculus_assist_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__oculus_assist_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__oculus_assist_8cs_source_1l00009"/>00009 
<anchor xml:id="__oculus_assist_8cs_source_1l00010"/>00010 <emphasis role="keyword">namespace&#32;</emphasis>Photon.Pun.Simple.Assists
<anchor xml:id="__oculus_assist_8cs_source_1l00011"/>00011 {
<anchor xml:id="__oculus_assist_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>OculusAssist
<anchor xml:id="__oculus_assist_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;{
<anchor xml:id="__oculus_assist_8cs_source_1l00014"/>00014 
<anchor xml:id="__oculus_assist_8cs_source_1l00015"/>00015 
<anchor xml:id="__oculus_assist_8cs_source_1l00016"/>00016 
<anchor xml:id="__oculus_assist_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[MenuItem(AssistHelpers.CONVERT_TO_FOLDER&#32;+&#32;<emphasis role="stringliteral">&quot;Oculus&quot;</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;-999)]
<anchor xml:id="__oculus_assist_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConvertOculus()
<anchor xml:id="__oculus_assist_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__oculus_assist_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selection&#32;=&#32;NetObjectAssists.ConvertToBasicNetObject(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00021"/>00021 
<anchor xml:id="__oculus_assist_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(selection&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__oculus_assist_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__oculus_assist_8cs_source_1l00024"/>00024 
<anchor xml:id="__oculus_assist_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;t&#32;=&#32;selection.transform;
<anchor xml:id="__oculus_assist_8cs_source_1l00026"/>00026 
<anchor xml:id="__oculus_assist_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HasOculusController(t))
<anchor xml:id="__oculus_assist_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection.transform.Add3dPosOnly().transform.Add3dEulerOnly();
<anchor xml:id="__oculus_assist_8cs_source_1l00030"/>00030 
<anchor xml:id="__oculus_assist_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection.EnsureComponentExists&lt;AutoDisableOculusObjects&gt;();
<anchor xml:id="__oculus_assist_8cs_source_1l00032"/>00032 
<anchor xml:id="__oculus_assist_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;trackingSpace&#32;=&#32;t.RecursiveFind(<emphasis role="stringliteral">&quot;TrackingSpace&quot;</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingSpace.Add3dEulerOnly();
<anchor xml:id="__oculus_assist_8cs_source_1l00036"/>00036 
<anchor xml:id="__oculus_assist_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;leftHandAnchor&#32;=&#32;t.RecursiveFind(<emphasis role="stringliteral">&quot;LeftHandAnchor&quot;</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rghtHandAnchor&#32;=&#32;t.RecursiveFind(<emphasis role="stringliteral">&quot;RightHandAnchor&quot;</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftHandAnchor.Add3DHandsPos().transform.Add3DHandsRot();
<anchor xml:id="__oculus_assist_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rghtHandAnchor.Add3DHandsPos().transform.Add3DHandsRot();
<anchor xml:id="__oculus_assist_8cs_source_1l00042"/>00042 
<anchor xml:id="__oculus_assist_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cameraRig&#32;=&#32;t.RecursiveFind(<emphasis role="stringliteral">&quot;OVRCameraRig&quot;</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cameraRig)
<anchor xml:id="__oculus_assist_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cameraRig.gameObject.EnsureComponentExists&lt;AutoOwnerComponentEnable&gt;();
<anchor xml:id="__oculus_assist_8cs_source_1l00047"/>00047 
<anchor xml:id="__oculus_assist_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.EnsureComponentExists&lt;SyncAnimator,&#32;Animator&gt;(<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00050"/>00050 
<anchor xml:id="__oculus_assist_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection.EnsureComponentExists&lt;AutoDestroyUnspawned&gt;();
<anchor xml:id="__oculus_assist_8cs_source_1l00052"/>00052 
<anchor xml:id="__oculus_assist_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Type&#32;ovrManagerType&#32;=&#32;Type.GetType(&quot;OVRManager&quot;);</emphasis>
<anchor xml:id="__oculus_assist_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(ovrManagerType&#32;==&#32;null)</emphasis>
<anchor xml:id="__oculus_assist_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;ovrManagerType&#32;=&#32;Type.GetType(&quot;OVRManager,&#32;Oculus.VR,&#32;Version=0.0.0.0,&#32;Culture=neutral,&#32;PublicKeyToken=null&quot;);</emphasis>
<anchor xml:id="__oculus_assist_8cs_source_1l00056"/>00056 
<anchor xml:id="__oculus_assist_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(ovrManagerType&#32;!=&#32;null)</emphasis>
<anchor xml:id="__oculus_assist_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__oculus_assist_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;manager&#32;=&#32;t.GetComponentInChildren&lt;OVRManager&gt;();
<anchor xml:id="__oculus_assist_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(manager)
<anchor xml:id="__oculus_assist_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__oculus_assist_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;founds&#32;=&#32;UnityEngine.Object.FindObjectsOfType&lt;OVRManager&gt;();
<anchor xml:id="__oculus_assist_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Object&#32;existing&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__oculus_assist_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;found&#32;<emphasis role="keywordflow">in</emphasis>&#32;founds)
<anchor xml:id="__oculus_assist_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(found&#32;!=&#32;manager)
<anchor xml:id="__oculus_assist_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__oculus_assist_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;OVRManager&#32;exists&#32;in&#32;scene,&#32;removing&#32;from&#32;&apos;&quot;</emphasis>&#32;+&#32;selection.name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;&quot;</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;existing&#32;=&#32;found;
<anchor xml:id="__oculus_assist_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__oculus_assist_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__oculus_assist_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(founds&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__oculus_assist_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__oculus_assist_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;OVRManager&#32;moved&#32;from&#32;&quot;</emphasis>&#32;+&#32;selection.name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;&#32;to&#32;scene.&quot;</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manager.ComponentCopy(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>(<emphasis role="stringliteral">&quot;OVRManager&quot;</emphasis>));
<anchor xml:id="__oculus_assist_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>.DestroyImmediate(manager);
<anchor xml:id="__oculus_assist_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__oculus_assist_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__oculus_assist_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__oculus_assist_8cs_source_1l00080"/>00080 
<anchor xml:id="__oculus_assist_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection.EnsureComponentExists&lt;SimpleOculusAutomation&gt;();
<anchor xml:id="__oculus_assist_8cs_source_1l00082"/>00082 
<anchor xml:id="__oculus_assist_8cs_source_1l00083"/>00083 
<anchor xml:id="__oculus_assist_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Type&#32;ovrGrabberType&#32;=&#32;Type.GetType(<emphasis role="stringliteral">&quot;OVRGrabber&quot;</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ovrGrabberType&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__oculus_assist_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ovrGrabberType&#32;=&#32;Type.GetType(<emphasis role="stringliteral">&quot;OVRGrabber,&#32;Oculus.VR,&#32;Version=0.0.0.0,&#32;Culture=neutral,&#32;PublicKeyToken=null&quot;</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00087"/>00087 
<anchor xml:id="__oculus_assist_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;foundGrabbers&#32;=&#32;selection.transform.GetNestedComponentsInChildren&lt;OVRGrabber,&#32;NetObject&gt;(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__oculus_assist_8cs_source_1l00089"/>00089 
<anchor xml:id="__oculus_assist_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(OVRGrabber&#32;grabber&#32;<emphasis role="keywordflow">in</emphasis>&#32;foundGrabbers)
<anchor xml:id="__oculus_assist_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__oculus_assist_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Oculus&#32;was&#32;kind&#32;enough&#32;to&#32;make&#32;all&#32;of&#32;these&#32;vars&#32;protected&#32;and&#32;private...&#32;so&#32;we&#32;get&#32;to&#32;do&#32;all&#32;of&#32;this&#32;reflection&#32;trash.</emphasis>
<anchor xml:id="__oculus_assist_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Type&#32;type&#32;=&#32;grabber.GetType();
<anchor xml:id="__oculus_assist_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;gripTransformFieldInfo&#32;=&#32;type.GetField(<emphasis role="stringliteral">&quot;m_gripTransform&quot;</emphasis>,&#32;System.Reflection.BindingFlags.NonPublic&#32;|&#32;System.Reflection.BindingFlags.Public&#32;|&#32;System.Reflection.BindingFlags.Instance);
<anchor xml:id="__oculus_assist_8cs_source_1l00095"/>00095 
<anchor xml:id="__oculus_assist_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;grip&#32;=&#32;(gripTransformFieldInfo.GetValue(grabber)&#32;as&#32;Transform);
<anchor xml:id="__oculus_assist_8cs_source_1l00097"/>00097 
<anchor xml:id="__oculus_assist_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mount&#32;mount;
<anchor xml:id="__oculus_assist_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(grip)
<anchor xml:id="__oculus_assist_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mount&#32;=&#32;grip.gameObject.EnsureComponentExists&lt;Mount&gt;();
<anchor xml:id="__oculus_assist_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__oculus_assist_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mount&#32;=&#32;grabber.gameObject.EnsureComponentExists&lt;Mount&gt;();
<anchor xml:id="__oculus_assist_8cs_source_1l00103"/>00103 
<anchor xml:id="__oculus_assist_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mount.mountType&#32;=&#32;MountSettings.GetOrCreate(grabber.name);
<anchor xml:id="__oculus_assist_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__oculus_assist_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__oculus_assist_8cs_source_1l00107"/>00107 
<anchor xml:id="__oculus_assist_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasOculusController(Transform&#32;t)
<anchor xml:id="__oculus_assist_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__oculus_assist_8cs_source_1l00110"/>00110 
<anchor xml:id="__oculus_assist_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.HasComponent(<emphasis role="stringliteral">&quot;SimpleCapsuleWithStickMovement&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;SimpleCapsuleWithStickMovement,&#32;Assembly-CSharp,&#32;Version=0.0.0.0,&#32;Culture=neutral,&#32;PublicKeyToken=null&quot;</emphasis>))
<anchor xml:id="__oculus_assist_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__oculus_assist_8cs_source_1l00114"/>00114 
<anchor xml:id="__oculus_assist_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__oculus_assist_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__oculus_assist_8cs_source_1l00117"/>00117 
<anchor xml:id="__oculus_assist_8cs_source_1l00118"/>00118 
<anchor xml:id="__oculus_assist_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;}
<anchor xml:id="__oculus_assist_8cs_source_1l00120"/>00120 }
<anchor xml:id="__oculus_assist_8cs_source_1l00121"/>00121 
<anchor xml:id="__oculus_assist_8cs_source_1l00122"/>00122 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__oculus_assist_8cs_source_1l00123"/>00123 
<anchor xml:id="__oculus_assist_8cs_source_1l00124"/>00124 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
