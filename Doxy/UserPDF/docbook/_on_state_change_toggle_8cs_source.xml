<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__on_state_change_toggle_8cs_source" xml:lang="en-US">
<title>OnStateChangeToggle.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/SyncState/OnStateChangeToggle.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__on_state_change_toggle_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00005"/>00005 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00007"/>00007 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00008"/>00008 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00010"/>00010 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00011"/>00011 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00013"/>00013 {
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00014"/>00014 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00015"/><link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">00015</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>&#32;{&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a2cb05e4bb7830be982f0922fed86b4cd">Component</link>,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a07b20ae970048fc2002d756f27acc863">Renderer</link>&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00016"/>00016 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00017"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle">OnStateChangeToggle</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component">NetComponent</link>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_state_change">IOnStateChange</link>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00020"/>00020 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;How&#32;this&#32;object&#32;should&#32;be&#32;toggled.&#32;GameObject&#32;toggles&#32;gameObject.SetActive(),&#32;Renderer&#32;toggles&#32;renderer.enabled,&#32;and&#32;Component&#32;toggles&#32;component.enabled.&quot;</emphasis>)]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00023"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a84a1e882d44ed9cd8cc8aae97ff06f08">00023</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a84a1e882d44ed9cd8cc8aae97ff06f08">toggle</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>.GameObject;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00024"/>00024 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;User&#32;specified&#32;component&#32;to&#32;toggle&#32;enabled.&quot;</emphasis>)]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00027"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a184b4e3a7a1d1a4ce3bc893cc7aed7d9">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a2cb05e4bb7830be982f0922fed86b4cd">Component</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a184b4e3a7a1d1a4ce3bc893cc7aed7d9">component</link>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00028"/>00028 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00030"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1acc793488d384a4cff782e1ea45200311">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1acc793488d384a4cff782e1ea45200311">_gameObject</link>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00031"/>00031 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00033"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1ac0678071ae6f280d2144b7c5fcae137c">00033</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a07b20ae970048fc2002d756f27acc863">Renderer</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1ac0678071ae6f280d2144b7c5fcae137c">_renderer</link>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00034"/>00034 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00036"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1afe19f3567392fdf1f096e270ff2786fa">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_obj_state_logic">ObjStateLogic</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1afe19f3567392fdf1f096e270ff2786fa">stateLogic</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_obj_state_logic">ObjStateLogic</link>();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00037"/>00037 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Cached</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;reactToAttached;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MonoBehaviour&#32;monob;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00041"/>00041 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;show;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00043"/>00043 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00044"/>00044 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00045"/>00045 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Utilities.VersaMask(<emphasis role="keyword">true</emphasis>,&#32;typeof(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae1225b6269a82eaa220663841e4b6605">ObjStateEditor</link>))]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1aaea6b78ed8489e0aef0d0440da7979a6">ObjState</link>&#32;currentState&#32;=&#32;(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1aaea6b78ed8489e0aef0d0440da7979a6">ObjState</link>)(-1);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00049"/>00049 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00050"/>00050 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a8c23a7659fce7cbddf605cb4d2ae487c">Reset</link>()
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1acc793488d384a4cff782e1ea45200311">_gameObject</link>&#32;=&#32;gameObject;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1ac0678071ae6f280d2144b7c5fcae137c">_renderer</link>&#32;=&#32;GetComponent&lt;Renderer&gt;();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00056"/>00056 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00057"/>00057 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00058"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a81e584c4ff492319767e1618abf1709d">00058</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a81e584c4ff492319767e1618abf1709d">OnAwake</link>()
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnAwake();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a84a1e882d44ed9cd8cc8aae97ff06f08">toggle</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>.Renderer)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1ac0678071ae6f280d2144b7c5fcae137c">_renderer</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1ac0678071ae6f280d2144b7c5fcae137c">_renderer</link>&#32;=&#32;GetComponent&lt;Renderer&gt;();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a84a1e882d44ed9cd8cc8aae97ff06f08">toggle</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>.Component)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monob&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a184b4e3a7a1d1a4ce3bc893cc7aed7d9">component</link>&#32;as&#32;MonoBehaviour;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1acc793488d384a4cff782e1ea45200311">_gameObject</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1acc793488d384a4cff782e1ea45200311">_gameObject</link>&#32;=&#32;gameObject;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00076"/>00076 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1afe19f3567392fdf1f096e270ff2786fa">stateLogic</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mask_logic_1a7ba9cce76487fc481cf9597bc58d43d5">RecalculateMasks</link>();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00078"/>00078 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reactToAttached&#32;=&#32;(((<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1afe19f3567392fdf1f096e270ff2786fa">stateLogic</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mask_logic_1a4f0a9baedd399b74308b69adb0e6a84e">notMask</link>&#32;&amp;&#32;(int)<link linkend="_namespace_photon_1_1_pun_1_1_simple_1aaea6b78ed8489e0aef0d0440da7979a6">ObjState</link>.Mounted)&#32;==&#32;0)&#32;&amp;&amp;&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1afe19f3567392fdf1f096e270ff2786fa">stateLogic</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mask_logic_1a03f3593b03862bdb763215493aaa4d3b">stateMask</link>&#32;&amp;&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_photon_1_1_pun_1_1_simple_1aaea6b78ed8489e0aef0d0440da7979a6">ObjState</link>.Mounted)&#32;!=&#32;0);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00080"/>00080 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00083"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a5503f3243301d5f6a2d4a39eab233320">00083</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a5503f3243301d5f6a2d4a39eab233320">OnStateChange</link>(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1aaea6b78ed8489e0aef0d0440da7979a6">ObjState</link>&#32;newState,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1aaea6b78ed8489e0aef0d0440da7979a6">ObjState</link>&#32;previousState,&#32;Transform&#32;pickup,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mount">Mount</link>&#32;attachedTo&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isReady&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00085"/>00085 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(transform.root.name&#32;+&#32;&quot;:&quot;&#32;+&#32;name&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;photonView.ControllerActorNr&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;state&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;attachedTo);</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00087"/>00087 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentState&#32;=&#32;newState;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00089"/>00089 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isReady)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(transform.root.name&#32;+&#32;&quot;:&quot;&#32;+&#32;name&#32;+&#32;&quot;&#32;not&#32;ready!&quot;);</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;show&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;match&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1afe19f3567392fdf1f096e270ff2786fa">stateLogic</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mask_logic_1ad48690ce3c1f55ae6bc1336fb90de27e">Evaluate</link>((<emphasis role="keywordtype">int</emphasis>)newState);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00098"/>00098 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(match)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;show&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00102"/>00102 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(reactToAttached)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attachedTo&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;(newState&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1aaea6b78ed8489e0aef0d0440da7979a6">ObjState</link>.Mounted)&#32;!=&#32;0)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;show&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;show&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00111"/>00111 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(!photonView.IsMine)</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.Log(photonView.ViewID&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;photonView.name&#32;+&#32;&quot;&#32;:&#32;&quot;&#32;+&#32;GetType().Name&#32;+&#32;&quot;&#32;&quot;&#32;</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;state&#32;+&#32;&#32;&quot;&#32;show:&#32;&quot;&#32;+&#32;show&#32;+&#32;&quot;&#32;match:&#32;&quot;&#32;+&#32;stateLogic.Evaluate((int)state));</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DeferredEnable();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//NetMasterCallbacks.postCallbackActions.Enqueue(DeferredEnable);</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00118"/>00118 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DeferredEnable()
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1a84a1e882d44ed9cd8cc8aae97ff06f08">toggle</link>)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00123"/>00123 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>.GameObject:
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1acc793488d384a4cff782e1ea45200311">_gameObject</link>.SetActive(show);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00129"/>00129 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>.Component:
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monob)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monob.enabled&#32;=&#32;show;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00136"/>00136 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>.Renderer:
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1ac0678071ae6f280d2144b7c5fcae137c">_renderer</link>)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_on_state_change_toggle_1ac0678071ae6f280d2144b7c5fcae137c">_renderer</link>.enabled&#32;=&#32;show;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00146"/>00146 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00147"/>00147 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00148"/>00148 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;[CustomEditor(typeof(OnStateChangeToggle))]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;[CanEditMultipleObjects]
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>OnStateChangeToggleEditor&#32;:&#32;StateReactorHeaderEditor
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00153"/>00153 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Instructions
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Ties&#32;object&#32;toggles&#32;to&#32;OnStateChange&#32;callbacks.&quot;</emphasis>;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00158"/>00158 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;stateValues&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>[])System.Enum.GetValues(typeof(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1aaea6b78ed8489e0aef0d0440da7979a6">ObjState</link>));
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;stateNames&#32;=&#32;System.Enum.GetNames(typeof(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1aaea6b78ed8489e0aef0d0440da7979a6">ObjState</link>));
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00161"/>00161 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;SerializedProperty&#32;stateMask,&#32;notMask;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;SerializedProperty&#32;toggle,&#32;operation,&#32;currentState;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00164"/>00164 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnEnable();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stateMask&#32;=&#32;serializedObject.FindProperty(<emphasis role="stringliteral">&quot;stateMask&quot;</emphasis>);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notMask&#32;=&#32;serializedObject.FindProperty(<emphasis role="stringliteral">&quot;notMask&quot;</emphasis>);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toggle&#32;=&#32;serializedObject.FindProperty(<emphasis role="stringliteral">&quot;toggle&quot;</emphasis>);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;operation&#32;=&#32;serializedObject.FindProperty(<emphasis role="stringliteral">&quot;operation&quot;</emphasis>);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentState&#32;=&#32;serializedObject.FindProperty(<emphasis role="stringliteral">&quot;currentState&quot;</emphasis>);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentState.isExpanded&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00175"/>00175 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnInspectorGUI()
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnInspectorGUI();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;_target&#32;=&#32;target&#32;as&#32;OnStateChangeToggle;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00181"/>00181 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00183"/>00183 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00185"/>00185 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(toggle);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(toggle.enumValueIndex&#32;==&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>.Component)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(serializedObject.FindProperty(<emphasis role="stringliteral">&quot;component&quot;</emphasis>));
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(toggle.enumValueIndex&#32;==&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>.GameObject)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(serializedObject.FindProperty(<emphasis role="stringliteral">&quot;_gameObject&quot;</emphasis>));
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(toggle.enumValueIndex&#32;==&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547">DisplayToggle</link>.Renderer)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(serializedObject.FindProperty(<emphasis role="stringliteral">&quot;_renderer&quot;</emphasis>));
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00194"/>00194 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.stateLogic.DrawGUI(serializedObject.FindProperty(<emphasis role="stringliteral">&quot;stateLogic&quot;</emphasis>));
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00196"/>00196 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00197"/>00197 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_target.GetComponent&lt;NetObject&gt;())
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(<emphasis role="stringliteral">&quot;&lt;b&gt;NetObject&#32;detected&#32;on&#32;this&#32;GameObject!&lt;/b&gt;\n\nThis&#32;component&#32;OnPickup&#32;will&#32;disable&#32;the&#32;entire&#32;net&#32;object&#32;(including&#32;the&#32;respawn&#32;timer),&#32;which&#32;is&#32;likely&#32;unintentional.&quot;</emphasis>&#32;+
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;Make&#32;the&#32;NetObject&#32;root&#32;an&#32;empty&#32;object&#32;and&#32;put&#32;the&#32;mesh&#32;and&#32;this&#32;component&#32;on&#32;a&#32;child&#32;instead,&#32;so&#32;that&#32;networked&#32;object&#32;remains&#32;active.&quot;</emphasis>,&#32;MessageType.Warning);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00201"/>00201 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Application.isPlaying)
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(currentState);
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndDisabledGroup();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00208"/>00208 
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serializedObject.ApplyModifiedProperties();
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;}
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00215"/>00215 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__on_state_change_toggle_8cs_source_1l00216"/>00216 }
</programlisting></section>
