<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__orbit_motion_8cs_source" xml:lang="en-US">
<title>OrbitMotion.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/FlatKit/Demos/Common/Scripts/Motion/OrbitMotion.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__orbit_motion_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__orbit_motion_8cs_source_1l00002"/>00002 
<anchor xml:id="__orbit_motion_8cs_source_1l00003"/>00003 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_dustyroom">Dustyroom</link>&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00004"/><link linkend="_class_dustyroom_1_1_orbit_motion">00004</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_dustyroom_1_1_orbit_motion">OrbitMotion</link>&#32;:&#32;MonoBehaviour&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00005"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a0bc8d19c57e0b5556bb09675e79ac00f">00005</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a0bc8d19c57e0b5556bb09675e79ac00f">TargetMode</link>&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00006"/>00006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform,
<anchor xml:id="__orbit_motion_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Position
<anchor xml:id="__orbit_motion_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00009"/>00009 
<anchor xml:id="__orbit_motion_8cs_source_1l00010"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a2a6e5fe04773fb2770a03d65e4765d0c">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a0bc8d19c57e0b5556bb09675e79ac00f">TargetMode</link>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a2a6e5fe04773fb2770a03d65e4765d0c">targetMode</link>&#32;=&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a0bc8d19c57e0b5556bb09675e79ac00f">TargetMode</link>.Position;
<anchor xml:id="__orbit_motion_8cs_source_1l00011"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a467072cc9a0b933a605f79e5f9d1e827">00011</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a467072cc9a0b933a605f79e5f9d1e827">targetTransform</link>;
<anchor xml:id="__orbit_motion_8cs_source_1l00012"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a1162ac5dc837bee7a383a1c5996ada54">00012</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a1162ac5dc837bee7a383a1c5996ada54">followTargetTransform</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__orbit_motion_8cs_source_1l00013"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a0506e51a3b28c0ef96403b39814b02ab">00013</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a0506e51a3b28c0ef96403b39814b02ab">targetOffset</link>&#32;=&#32;Vector3.zero;
<anchor xml:id="__orbit_motion_8cs_source_1l00014"/><link linkend="_class_dustyroom_1_1_orbit_motion_1aee019083b5c9f852ec1168e5bec2b05d">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aee019083b5c9f852ec1168e5bec2b05d">targetPosition</link>;
<anchor xml:id="__orbit_motion_8cs_source_1l00015"/>00015 
<anchor xml:id="__orbit_motion_8cs_source_1l00016"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a6fe9eb02f6ca7baa4178715a4d696837">00016</link> &#32;&#32;&#32;&#32;[Space]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a6fe9eb02f6ca7baa4178715a4d696837">distanceHorizontal</link>&#32;=&#32;60.0f;
<anchor xml:id="__orbit_motion_8cs_source_1l00017"/><link linkend="_class_dustyroom_1_1_orbit_motion_1abcd7ae2b1b6fcc6d28b29bbd669a6760">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1abcd7ae2b1b6fcc6d28b29bbd669a6760">distanceVertical</link>&#32;=&#32;60.0f;
<anchor xml:id="__orbit_motion_8cs_source_1l00018"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a061e0e23f40a6de3144fcc938af4d172">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a061e0e23f40a6de3144fcc938af4d172">xSpeed</link>&#32;=&#32;120.0f;
<anchor xml:id="__orbit_motion_8cs_source_1l00019"/><link linkend="_class_dustyroom_1_1_orbit_motion_1aa44f7848e426e28a7016d945f553868a">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aa44f7848e426e28a7016d945f553868a">ySpeed</link>&#32;=&#32;120.0f;
<anchor xml:id="__orbit_motion_8cs_source_1l00020"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a773bb4371a65e9260ee32de322cc1ba6">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a773bb4371a65e9260ee32de322cc1ba6">damping</link>&#32;=&#32;3f;
<anchor xml:id="__orbit_motion_8cs_source_1l00021"/>00021 
<anchor xml:id="__orbit_motion_8cs_source_1l00022"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a4916ecd7caf1c16aaf28a516483b8a95">00022</link> &#32;&#32;&#32;&#32;[Space]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a4916ecd7caf1c16aaf28a516483b8a95">clampAngle</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__orbit_motion_8cs_source_1l00023"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a720350f2b81a4356be1299ec2cb5a361">00023</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a720350f2b81a4356be1299ec2cb5a361">yMinLimit</link>&#32;=&#32;-20f;
<anchor xml:id="__orbit_motion_8cs_source_1l00024"/><link linkend="_class_dustyroom_1_1_orbit_motion_1abce673753d6f819696b282b0918dac47">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1abce673753d6f819696b282b0918dac47">yMaxLimit</link>&#32;=&#32;80f;
<anchor xml:id="__orbit_motion_8cs_source_1l00025"/>00025 
<anchor xml:id="__orbit_motion_8cs_source_1l00026"/><link linkend="_class_dustyroom_1_1_orbit_motion_1af5336096c2e6a68846b198b90cd9c4a4">00026</link> &#32;&#32;&#32;&#32;[Space]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1af5336096c2e6a68846b198b90cd9c4a4">allowZoom</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__orbit_motion_8cs_source_1l00027"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a4adbd737c9271d472622e5f8ebc7fa0d">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a4adbd737c9271d472622e5f8ebc7fa0d">distanceMin</link>&#32;=&#32;.5f;
<anchor xml:id="__orbit_motion_8cs_source_1l00028"/><link linkend="_class_dustyroom_1_1_orbit_motion_1adae899f9f0b2d8cc5953cd61994e6862">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1adae899f9f0b2d8cc5953cd61994e6862">distanceMax</link>&#32;=&#32;15f;
<anchor xml:id="__orbit_motion_8cs_source_1l00029"/>00029 
<anchor xml:id="__orbit_motion_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_x&#32;=&#32;0.0f;
<anchor xml:id="__orbit_motion_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_y&#32;=&#32;0.0f;
<anchor xml:id="__orbit_motion_8cs_source_1l00032"/>00032 
<anchor xml:id="__orbit_motion_8cs_source_1l00033"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a9fa2528f1cbacf07f6bd3ab444191bbf">00033</link> &#32;&#32;&#32;&#32;[Space]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a9fa2528f1cbacf07f6bd3ab444191bbf">autoMovement</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__orbit_motion_8cs_source_1l00034"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a97ed5869a3ecf2e784f305de66ed5f33">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a97ed5869a3ecf2e784f305de66ed5f33">autoSpeedX</link>&#32;=&#32;0.2f;
<anchor xml:id="__orbit_motion_8cs_source_1l00035"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a478ebf17897670882d0efb38ba0a2a04">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a478ebf17897670882d0efb38ba0a2a04">autoSpeedY</link>&#32;=&#32;0.1f;
<anchor xml:id="__orbit_motion_8cs_source_1l00036"/><link linkend="_class_dustyroom_1_1_orbit_motion_1aceb1f0c2dfc282258bcf63b18e6f7e6c">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aceb1f0c2dfc282258bcf63b18e6f7e6c">autoSpeedDistance</link>&#32;=&#32;-0.1f;
<anchor xml:id="__orbit_motion_8cs_source_1l00037"/>00037 
<anchor xml:id="__orbit_motion_8cs_source_1l00038"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a0e964b4bd16d4c8a6d3331d5166f5246">00038</link> &#32;&#32;&#32;&#32;[Space]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a0e964b4bd16d4c8a6d3331d5166f5246">interactive</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__orbit_motion_8cs_source_1l00039"/>00039 
<anchor xml:id="__orbit_motion_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_lastMoveTime;
<anchor xml:id="__orbit_motion_8cs_source_1l00041"/><link linkend="_class_dustyroom_1_1_orbit_motion_1a9dde1455658ce0b61ecc9b2bb1ecea96">00041</link> &#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a9dde1455658ce0b61ecc9b2bb1ecea96">timeSinceLastMove</link>;
<anchor xml:id="__orbit_motion_8cs_source_1l00042"/>00042 
<anchor xml:id="__orbit_motion_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;angles&#32;=&#32;transform.eulerAngles;
<anchor xml:id="__orbit_motion_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;=&#32;angles.y;
<anchor xml:id="__orbit_motion_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_y&#32;=&#32;angles.x;
<anchor xml:id="__orbit_motion_8cs_source_1l00047"/>00047 
<anchor xml:id="__orbit_motion_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;the&#32;rigid&#32;body&#32;not&#32;change&#32;rotation</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;rigidbody&#32;=&#32;GetComponent&lt;Rigidbody&gt;();
<anchor xml:id="__orbit_motion_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rigidbody&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.freezeRotation&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__orbit_motion_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00053"/>00053 
<anchor xml:id="__orbit_motion_8cs_source_1l00054"/>00054 <emphasis role="preprocessor">#if&#32;(UNITY_ANDROID&#32;||&#32;UNITY_IOS)&#32;&amp;&amp;&#32;!UNITY_EDITOR</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a061e0e23f40a6de3144fcc938af4d172">xSpeed</link>&#32;*=&#32;0.2f;
<anchor xml:id="__orbit_motion_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aa44f7848e426e28a7016d945f553868a">ySpeed</link>&#32;*=&#32;0.2f;
<anchor xml:id="__orbit_motion_8cs_source_1l00057"/>00057 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00058"/>00058 
<anchor xml:id="__orbit_motion_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_dustyroom_1_1_orbit_motion_1a2a6e5fe04773fb2770a03d65e4765d0c">targetMode</link>&#32;==&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a0bc8d19c57e0b5556bb09675e79ac00f">TargetMode</link>.Transform)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_dustyroom_1_1_orbit_motion_1a467072cc9a0b933a605f79e5f9d1e827">targetTransform</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aee019083b5c9f852ec1168e5bec2b05d">targetPosition</link>&#32;=&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a467072cc9a0b933a605f79e5f9d1e827">targetTransform</link>.position&#32;+&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a0506e51a3b28c0ef96403b39814b02ab">targetOffset</link>;
<anchor xml:id="__orbit_motion_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Reference&#32;transform&#32;is&#32;not&#32;set.&quot;</emphasis>);
<anchor xml:id="__orbit_motion_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00068"/>00068 
<anchor xml:id="__orbit_motion_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_dustyroom_1_1_orbit_motion_1a2a6e5fe04773fb2770a03d65e4765d0c">targetMode</link>&#32;==&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a0bc8d19c57e0b5556bb09675e79ac00f">TargetMode</link>.Transform&#32;&amp;&amp;&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a1162ac5dc837bee7a383a1c5996ada54">followTargetTransform</link>)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_dustyroom_1_1_orbit_motion_1a467072cc9a0b933a605f79e5f9d1e827">targetTransform</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aee019083b5c9f852ec1168e5bec2b05d">targetPosition</link>&#32;=&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a467072cc9a0b933a605f79e5f9d1e827">targetTransform</link>.position&#32;+&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a0506e51a3b28c0ef96403b39814b02ab">targetOffset</link>;
<anchor xml:id="__orbit_motion_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Reference&#32;transform&#32;is&#32;not&#32;set.&quot;</emphasis>);
<anchor xml:id="__orbit_motion_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00078"/>00078 
<anchor xml:id="__orbit_motion_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//*</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isCameraMoving&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__orbit_motion_8cs_source_1l00081"/>00081 <emphasis role="preprocessor">#if&#32;((UNITY_ANDROID&#32;||&#32;UNITY_IOS)&#32;&amp;&amp;&#32;!UNITY_EDITOR)</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCameraMoving&#32;=&#32;Input.GetTouch(0).deltaPosition.sqrMagnitude&#32;&gt;&#32;0f;
<anchor xml:id="__orbit_motion_8cs_source_1l00083"/>00083 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCameraMoving&#32;=&#32;Mathf.Abs(Input.GetAxis(<emphasis role="stringliteral">&quot;Mouse&#32;X&quot;</emphasis>))&#32;+&#32;Mathf.Abs(Input.GetAxis(<emphasis role="stringliteral">&quot;Mouse&#32;Y&quot;</emphasis>))&#32;&gt;&#32;0f;
<anchor xml:id="__orbit_motion_8cs_source_1l00085"/>00085 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isCameraMoving)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_lastMoveTime&#32;=&#32;Time.time;
<anchor xml:id="__orbit_motion_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00089"/>00089 
<anchor xml:id="__orbit_motion_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a9dde1455658ce0b61ecc9b2bb1ecea96">timeSinceLastMove</link>&#32;=&#32;Time.time&#32;-&#32;_lastMoveTime;
<anchor xml:id="__orbit_motion_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//*/</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00092"/>00092 
<anchor xml:id="__orbit_motion_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_dustyroom_1_1_orbit_motion_1a0e964b4bd16d4c8a6d3331d5166f5246">interactive</link>&#32;&amp;&amp;&#32;Input.GetMouseButton(0))&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00094"/>00094 <emphasis role="preprocessor">#if&#32;((UNITY_ANDROID&#32;||&#32;UNITY_IOS)&#32;&amp;&amp;&#32;!UNITY_EDITOR)</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;+=&#32;Input.GetTouch(0).deltaPosition.x&#32;*&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a061e0e23f40a6de3144fcc938af4d172">xSpeed</link>&#32;*&#32;40f&#32;*&#32;0.02f;
<anchor xml:id="__orbit_motion_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_y&#32;-=&#32;Input.GetTouch(0).deltaPosition.y&#32;*&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aa44f7848e426e28a7016d945f553868a">ySpeed</link>&#32;*&#32;40f&#32;*&#32;0.02f;
<anchor xml:id="__orbit_motion_8cs_source_1l00097"/>00097 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;+=&#32;Input.GetAxis(<emphasis role="stringliteral">&quot;Mouse&#32;X&quot;</emphasis>)&#32;*&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a061e0e23f40a6de3144fcc938af4d172">xSpeed</link>&#32;*&#32;40f&#32;*&#32;0.02f;
<anchor xml:id="__orbit_motion_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_y&#32;-=&#32;Input.GetAxis(<emphasis role="stringliteral">&quot;Mouse&#32;Y&quot;</emphasis>)&#32;*&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aa44f7848e426e28a7016d945f553868a">ySpeed</link>&#32;*&#32;40f&#32;*&#32;0.02f;
<anchor xml:id="__orbit_motion_8cs_source_1l00100"/>00100 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__orbit_motion_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_dustyroom_1_1_orbit_motion_1a9fa2528f1cbacf07f6bd3ab444191bbf">autoMovement</link>)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_x&#32;+=&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a97ed5869a3ecf2e784f305de66ed5f33">autoSpeedX</link>&#32;*&#32;40f&#32;*&#32;Time.deltaTime&#32;*&#32;10f;
<anchor xml:id="__orbit_motion_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_y&#32;-=&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a478ebf17897670882d0efb38ba0a2a04">autoSpeedY</link>&#32;*&#32;40f&#32;*&#32;Time.deltaTime&#32;*&#32;10f;
<anchor xml:id="__orbit_motion_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a6fe9eb02f6ca7baa4178715a4d696837">distanceHorizontal</link>&#32;+=&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aceb1f0c2dfc282258bcf63b18e6f7e6c">autoSpeedDistance</link>;
<anchor xml:id="__orbit_motion_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00107"/>00107 
<anchor xml:id="__orbit_motion_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_dustyroom_1_1_orbit_motion_1a4916ecd7caf1c16aaf28a516483b8a95">clampAngle</link>)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_y&#32;=&#32;ClampAngle(_y,&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a720350f2b81a4356be1299ec2cb5a361">yMinLimit</link>,&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1abce673753d6f819696b282b0918dac47">yMaxLimit</link>);
<anchor xml:id="__orbit_motion_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00111"/>00111 
<anchor xml:id="__orbit_motion_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotation&#32;=&#32;Quaternion.Slerp(transform.rotation,&#32;Quaternion.Euler(_y,&#32;_x,&#32;0),
<anchor xml:id="__orbit_motion_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Time.deltaTime&#32;*&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a773bb4371a65e9260ee32de322cc1ba6">damping</link>);
<anchor xml:id="__orbit_motion_8cs_source_1l00114"/>00114 
<anchor xml:id="__orbit_motion_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_dustyroom_1_1_orbit_motion_1af5336096c2e6a68846b198b90cd9c4a4">allowZoom</link>)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a6fe9eb02f6ca7baa4178715a4d696837">distanceHorizontal</link>&#32;=&#32;Mathf.Clamp(
<anchor xml:id="__orbit_motion_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a6fe9eb02f6ca7baa4178715a4d696837">distanceHorizontal</link>&#32;-&#32;Input.GetAxis(<emphasis role="stringliteral">&quot;Mouse&#32;ScrollWheel&quot;</emphasis>)&#32;*&#32;5,&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1a4adbd737c9271d472622e5f8ebc7fa0d">distanceMin</link>,&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1adae899f9f0b2d8cc5953cd61994e6862">distanceMax</link>);
<anchor xml:id="__orbit_motion_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00119"/>00119 
<anchor xml:id="__orbit_motion_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;rotationX&#32;=&#32;rotation.eulerAngles.x;
<anchor xml:id="__orbit_motion_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rotationX&#32;&gt;&#32;90f)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotationX&#32;-=&#32;360f;
<anchor xml:id="__orbit_motion_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00124"/>00124 
<anchor xml:id="__orbit_motion_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;usedDistance&#32;=&#32;Mathf.Lerp(<link linkend="_class_dustyroom_1_1_orbit_motion_1a6fe9eb02f6ca7baa4178715a4d696837">distanceHorizontal</link>,&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1abcd7ae2b1b6fcc6d28b29bbd669a6760">distanceVertical</link>,&#32;Mathf.Abs(rotationX&#32;/&#32;90f));
<anchor xml:id="__orbit_motion_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;negDistance&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0.0f,&#32;0.0f,&#32;-usedDistance);
<anchor xml:id="__orbit_motion_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;position&#32;=&#32;rotation&#32;*&#32;negDistance&#32;+&#32;<link linkend="_class_dustyroom_1_1_orbit_motion_1aee019083b5c9f852ec1168e5bec2b05d">targetPosition</link>;
<anchor xml:id="__orbit_motion_8cs_source_1l00128"/>00128 
<anchor xml:id="__orbit_motion_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.rotation&#32;=&#32;rotation;
<anchor xml:id="__orbit_motion_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.position&#32;=&#32;position;
<anchor xml:id="__orbit_motion_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00132"/>00132 
<anchor xml:id="__orbit_motion_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;ClampAngle(<emphasis role="keywordtype">float</emphasis>&#32;angle,&#32;<emphasis role="keywordtype">float</emphasis>&#32;min,&#32;<emphasis role="keywordtype">float</emphasis>&#32;max)&#32;{
<anchor xml:id="__orbit_motion_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(angle&#32;&lt;&#32;-360f)
<anchor xml:id="__orbit_motion_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angle&#32;+=&#32;360f;
<anchor xml:id="__orbit_motion_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(angle&#32;&gt;&#32;360f)
<anchor xml:id="__orbit_motion_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angle&#32;-=&#32;360f;
<anchor xml:id="__orbit_motion_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Clamp(angle,&#32;min,&#32;max);
<anchor xml:id="__orbit_motion_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;}
<anchor xml:id="__orbit_motion_8cs_source_1l00140"/>00140 }
<anchor xml:id="__orbit_motion_8cs_source_1l00141"/>00141 }
</programlisting></section>
