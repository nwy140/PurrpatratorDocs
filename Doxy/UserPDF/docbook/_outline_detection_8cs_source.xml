<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__outline_detection_8cs_source" xml:lang="en-US">
<title>OutlineDetection.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/_Developers/Euan/Scripts/Human Chores/OutlineDetection.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__outline_detection_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>;
<anchor xml:id="__outline_detection_8cs_source_1l00002"/>00002 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_s_int">SInt</link>.<link linkend="_namespace_s_int_1_1_mission_objectives">MissionObjectives</link>;
<anchor xml:id="__outline_detection_8cs_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
<anchor xml:id="__outline_detection_8cs_source_1l00004"/>00004 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__outline_detection_8cs_source_1l00005"/>00005 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__outline_detection_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.UI;
<anchor xml:id="__outline_detection_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.Events;
<anchor xml:id="__outline_detection_8cs_source_1l00008"/>00008 
<anchor xml:id="__outline_detection_8cs_source_1l00009"/><link linkend="_class_outline_detection">00009</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_outline_detection">OutlineDetection</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__outline_detection_8cs_source_1l00010"/>00010 {
<anchor xml:id="__outline_detection_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__outline_detection_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Camera&#32;playerCamera;
<anchor xml:id="__outline_detection_8cs_source_1l00013"/>00013 
<anchor xml:id="__outline_detection_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__outline_detection_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Button&#32;choreButton;
<anchor xml:id="__outline_detection_8cs_source_1l00016"/>00016 
<anchor xml:id="__outline_detection_8cs_source_1l00017"/><link linkend="_class_outline_detection_1a4552f57c6af57375f71cda4484107d55">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;LayerMask&#32;<link linkend="_class_outline_detection_1a4552f57c6af57375f71cda4484107d55">layerMask</link>;
<anchor xml:id="__outline_detection_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;List&lt;string&gt;&#32;allowedTags;</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00019"/>00019 
<anchor xml:id="__outline_detection_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;UnityEvent&#32;TaskComplete;</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00021"/>00021 
<anchor xml:id="__outline_detection_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;PV;
<anchor xml:id="__outline_detection_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<link linkend="_class_button_hold_down">ButtonHoldDown</link>&#32;choreButtonHoldDownComp;
<anchor xml:id="__outline_detection_8cs_source_1l00024"/>00024 
<anchor xml:id="__outline_detection_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Human&#32;Only</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<link linkend="_class_chores">Chores</link>&#32;chores;
<anchor xml:id="__outline_detection_8cs_source_1l00027"/>00027 
<anchor xml:id="__outline_detection_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__outline_detection_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PV&#32;=&#32;GetComponent&lt;PhotonView&gt;();
<anchor xml:id="__outline_detection_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//animator&#32;=&#32;GetComponent&lt;Animator&gt;();</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;choreButtonHoldDownComp&#32;=&#32;choreButton.GetComponent&lt;<link linkend="_class_button_hold_down">ButtonHoldDown</link>&gt;();
<anchor xml:id="__outline_detection_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TryGetComponent(out&#32;chores);
<anchor xml:id="__outline_detection_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00035"/>00035 
<anchor xml:id="__outline_detection_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__outline_detection_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rayCast&#32;=&#32;playerCamera.ViewportPointToRay(Vector3.one&#32;*&#32;0.5f);
<anchor xml:id="__outline_detection_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RaycastHit&#32;camTrigger;
<anchor xml:id="__outline_detection_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.DrawRay(rayCast.origin,&#32;rayCast.direction);</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00041"/>00041 
<anchor xml:id="__outline_detection_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PV.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>)
<anchor xml:id="__outline_detection_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Physics.Raycast(rayCast,&#32;out&#32;camTrigger,&#32;5f,&#32;Physics.AllLayers,&#32;QueryTriggerInteraction.Collide))
<anchor xml:id="__outline_detection_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;hits&#32;=&#32;Physics.RaycastAll(rayCast,&#32;5f,&#32;layerMask,&#32;QueryTriggerInteraction.Collide);</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(hits.Length&#32;&gt;&#32;0)</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//foreach&#32;(var&#32;h&#32;in&#32;hits)</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;HandleOutlineRaycast(h.collider.gameObject);</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_outline_detection_1af7af64e105914e0419b24b4b4867b46f">HandleOutlineRaycast</link>(camTrigger.collider.gameObject);
<anchor xml:id="__outline_detection_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_outline_detection_1af7af64e105914e0419b24b4b4867b46f">HandleOutlineRaycast</link>(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__outline_detection_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__outline_detection_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Outline&#32;Colors&#32;(Detected&#32;Requires&#32;Chore&#32;Layer&#32;Mask)&quot;</emphasis>)]
<anchor xml:id="__outline_detection_8cs_source_1l00064"/>00064 
<anchor xml:id="__outline_detection_8cs_source_1l00065"/><link linkend="_class_outline_detection_1a52661f2448b4df1a49cf4b5693b5552b">00065</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;OutlinePUN&gt;&#32;<link linkend="_class_outline_detection_1a52661f2448b4df1a49cf4b5693b5552b">outlinePUNComponents</link>;
<anchor xml:id="__outline_detection_8cs_source_1l00066"/><link linkend="_class_outline_detection_1ab71adb84b117cb998d0bafb41911688b">00066</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_outline_detection_1ab71adb84b117cb998d0bafb41911688b">outlineWidth</link>&#32;=&#32;10f;
<anchor xml:id="__outline_detection_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;Color&#32;outsideRangeColor;</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;float&#32;outsideRangeMaxDist&#32;=&#32;7f;</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00069"/><link linkend="_class_outline_detection_1a112e3a3e2de343e1bc19ec885ffb6223">00069</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;<link linkend="_class_outline_detection_1a112e3a3e2de343e1bc19ec885ffb6223">withinRangeColor</link>;
<anchor xml:id="__outline_detection_8cs_source_1l00070"/><link linkend="_class_outline_detection_1afcc3085cb0a604844fd07ecc96547a85">00070</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_outline_detection_1afcc3085cb0a604844fd07ecc96547a85">withinRangeMaxDist</link>&#32;=&#32;3f;
<anchor xml:id="__outline_detection_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;Color&#32;disabledOutlineColor;</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00072"/><link linkend="_class_outline_detection_1af7af64e105914e0419b24b4b4867b46f">00072</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_outline_detection_1af7af64e105914e0419b24b4b4867b46f">HandleOutlineRaycast</link>(GameObject&#32;detectedObj)
<anchor xml:id="__outline_detection_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00074"/>00074 
<anchor xml:id="__outline_detection_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_outline_p_u_n">OutlinePUN</link>&#32;outlinePUN&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__outline_detection_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(detectedObj&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;detectedObj!=this.gameObject)
<anchor xml:id="__outline_detection_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;conditionHuman&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__outline_detection_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;conditionHuman&#32;=&#32;chores!=<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;(detectedObj.GetComponent&lt;<link linkend="_class_fix_destroyed_furniture">FixDestroyedFurniture</link>&gt;()<emphasis role="comment">/*GetComponent&lt;PhotonView&gt;()*/</emphasis>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;<link linkend="_class_outline_detection_1a4552f57c6af57375f71cda4484107d55">layerMask</link>&#32;==&#32;(<link linkend="_class_outline_detection_1a4552f57c6af57375f71cda4484107d55">layerMask</link>&#32;|&#32;(1&#32;&lt;&lt;&#32;detectedObj.layer)));
<anchor xml:id="__outline_detection_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//conditionHuman&#32;=&#32;chores!=null&#32;</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&amp;&amp;</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;(detectedObj.GetComponent&lt;FixDestroyedFurniture&gt;()&#32;!=&#32;null&#32;&#32;</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;||&#32;detectedObj.GetComponent&lt;Sink&gt;()&#32;!=&#32;false&#32;&amp;&amp;&#32;chores.washDishTask&#32;==&#32;false</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;||&#32;detectedObj.GetComponent&lt;Cabinet&gt;()&#32;!=&#32;false&#32;&amp;&amp;&#32;chores.washDishTask</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;||&#32;</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;conditionCat&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__outline_detection_8cs_source_1l00087"/>00087 
<anchor xml:id="__outline_detection_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(conditionHuman&#32;||&#32;conditionCat)
<anchor xml:id="__outline_detection_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasOutlinePUN&#32;=&#32;detectedObj.TryGetComponent(out&#32;outlinePUN);
<anchor xml:id="__outline_detection_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasOutlinePUN&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__outline_detection_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00093"/>00093 
<anchor xml:id="__outline_detection_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outlinePUN&#32;=&#32;detectedObj.AddComponent&lt;<link linkend="_class_outline_p_u_n">OutlinePUN</link>&gt;();
<anchor xml:id="__outline_detection_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_outline_detection_1a52661f2448b4df1a49cf4b5693b5552b">outlinePUNComponents</link>.Contains(outlinePUN)&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__outline_detection_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_outline_detection_1a52661f2448b4df1a49cf4b5693b5552b">outlinePUNComponents</link>.Add(outlinePUN);
<anchor xml:id="__outline_detection_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00101"/>00101 
<anchor xml:id="__outline_detection_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_outline_p_u_n">OutlinePUN</link>&#32;o&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_outline_detection_1a52661f2448b4df1a49cf4b5693b5552b">outlinePUNComponents</link>)
<anchor xml:id="__outline_detection_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Vector3.Distance(<emphasis role="keyword">this</emphasis>.transform.position,&#32;o.transform.position)&#32;&lt;=&#32;<link linkend="_class_outline_detection_1afcc3085cb0a604844fd07ecc96547a85">withinRangeMaxDist</link>&#32;&amp;&amp;&#32;choreButton.interactable&#32;==&#32;<emphasis role="keyword">true</emphasis><emphasis role="comment">/*&amp;&amp;&#32;o&#32;==&#32;outlinePUN*/</emphasis>)
<anchor xml:id="__outline_detection_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__outline_detection_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_outline_detection_1a112e3a3e2de343e1bc19ec885ffb6223">withinRangeColor</link>&#32;==&#32;<emphasis role="keywordflow">default</emphasis>)&#32;<emphasis role="comment">//&#32;if&#32;unset,&#32;set&#32;color&#32;via&#32;hexadecimal</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ColorUtility.TryParseHtmlString(<emphasis role="stringliteral">&quot;#53FF40&quot;</emphasis>,&#32;out&#32;<link linkend="_class_outline_detection_1a112e3a3e2de343e1bc19ec885ffb6223">withinRangeColor</link>);
<anchor xml:id="__outline_detection_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.<link linkend="_class_outline_p_u_n_1a88b0aa25b696747c4bf43be494d15422">OutlineColor</link>&#32;=&#32;<link linkend="_class_outline_detection_1a112e3a3e2de343e1bc19ec885ffb6223">withinRangeColor</link>;
<anchor xml:id="__outline_detection_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outlinePUN.OutlineWidth&#32;=&#32;<link linkend="_class_outline_detection_1ab71adb84b117cb998d0bafb41911688b">outlineWidth</link>;
<anchor xml:id="__outline_detection_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__outline_detection_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__outline_detection_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;o.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__outline_detection_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;}
<anchor xml:id="__outline_detection_8cs_source_1l00121"/>00121 
<anchor xml:id="__outline_detection_8cs_source_1l00122"/>00122 }
</programlisting></section>
