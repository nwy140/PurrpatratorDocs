<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__pack_field_interfaces_8cs_source" xml:lang="en-US">
<title>PackFieldInterfaces.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/PackObject/Interfaces/PackFieldInterfaces.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__pack_field_interfaces_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00005"/>00005 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;System.Text;
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00011"/>00011 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression_1_1_internal">Photon.Compression.Internal</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00013"/>00013 {
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00014"/>00014 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;[AttributeUsage(AttributeTargets.Interface)]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00016"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_supported_types_attribute">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_supported_types_attribute">PackSupportedTypesAttribute</link>&#32;:&#32;Attribute
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00018"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_supported_types_attribute_1af623603aba4dfcd8fa2875b4efd74b91">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Type&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_supported_types_attribute_1af623603aba4dfcd8fa2875b4efd74b91">supportedType</link>;
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00019"/>00019 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00020"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_supported_types_attribute_1a662581b66d759934dab7c56ab4a3edc1">00020</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_supported_types_attribute_1a662581b66d759934dab7c56ab4a3edc1">PackSupportedTypesAttribute</link>(Type&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_supported_types_attribute_1af623603aba4dfcd8fa2875b4efd74b91">supportedType</link>)
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.supportedType&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_pack_supported_types_attribute_1af623603aba4dfcd8fa2875b4efd74b91">supportedType</link>;
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00025"/>00025 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00026"/><link linkend="_namespace_photon_1_1_compression_1_1_internal_1a2af8d8d2e8d91eccf021644f721ae387">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;delegate&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_namespace_photon_1_1_compression_1_1_internal_1a2af8d8d2e8d91eccf021644f721ae387">PackDelegate&lt;T&gt;</link>(ref&#32;T&#32;value,&#32;T&#32;prevvalue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00027"/><link linkend="_namespace_photon_1_1_compression_1_1_internal_1a00a7bc64ff295370800c1a30c2b81b7b">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;delegate&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_namespace_photon_1_1_compression_1_1_internal_1a00a7bc64ff295370800c1a30c2b81b7b">UnpackDelegate&lt;T&gt;</link>(ref&#32;T&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00028"/><link linkend="_namespace_photon_1_1_compression_1_1_internal_1ac80fa69b4633d64c9cc6a879e67dd5e9">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;delegate&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_namespace_photon_1_1_compression_1_1_internal_1ac80fa69b4633d64c9cc6a879e67dd5e9">PackListDelegate&lt;T&gt;</link>(ref&#32;List&lt;T&gt;&#32;value,&#32;List&lt;T&gt;&#32;prevvalue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)&#32;where&#32;T&#32;:&#32;<emphasis role="keyword">struct</emphasis>;
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00029"/><link linkend="_namespace_photon_1_1_compression_1_1_internal_1a4b00907158e7c05b6851983a30e3ca2f">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;delegate&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_namespace_photon_1_1_compression_1_1_internal_1a4b00907158e7c05b6851983a30e3ca2f">UnpackListDelegate&lt;T&gt;</link>(ref&#32;List&lt;T&gt;&#32;value,&#32;BitArray&#32;mask,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)&#32;where&#32;T&#32;:&#32;<emphasis role="keyword">struct</emphasis>;
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00030"/>00030 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;delegate&#32;SerializationFlags&#32;PackEnumDelegate(ref&#32;Int32&#32;value,&#32;Int32&#32;prevvalue,&#32;byte[]&#32;buffer,&#32;ref&#32;int&#32;bitposition,&#32;int&#32;frameId,&#32;SerializationFlags&#32;writeFlags);</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//[PackSupportedTypes(typeof(Enum))]</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;interface&#32;IPackBEnum</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;SerializationFlags&#32;Pack(ref&#32;Int32&#32;value,&#32;Int32&#32;prevvalue,&#32;byte[]&#32;buffer,&#32;ref&#32;int&#32;bitposition,&#32;int&#32;frameId,&#32;SerializationFlags&#32;writeFlags);</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;SerializationFlags&#32;Unpack(ref&#32;Int32&#32;value,&#32;Int32&#32;prevvalue,&#32;byte[]&#32;buffer,&#32;ref&#32;int&#32;bitposition,&#32;int&#32;frameId,&#32;SerializationFlags&#32;writeFlags);</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00038"/>00038 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(List&lt;&gt;))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00040"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_list">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_list">IPackList</link>&lt;T&gt;&#32;where&#32;T&#32;:&#32;struct
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00042"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_list_1a5de1808dddeb9931688daa6c18ee96c9">00042</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_list_1a5de1808dddeb9931688daa6c18ee96c9">Pack</link>(ref&#32;List&lt;T&gt;&#32;value,&#32;List&lt;T&gt;&#32;prevvalue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00043"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_list_1a4a2cc14cc71da241700074da0ba88087">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_list_1a4a2cc14cc71da241700074da0ba88087">Unpack</link>(ref&#32;List&lt;T&gt;&#32;value,&#32;BitArray&#32;mask,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00045"/>00045 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Boolean))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00047"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_boolean">00047</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_boolean">IPackBoolean</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00049"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_boolean_1a895bd46d51a03548fec9039f93f0d612">00049</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_boolean_1a895bd46d51a03548fec9039f93f0d612">Pack</link>(ref&#32;Boolean&#32;value,&#32;Boolean&#32;prevvalue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00050"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_boolean_1a5ec2314725ba45533df84c62a35e9ac9">00050</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_boolean_1a5ec2314725ba45533df84c62a35e9ac9">Unpack</link>(ref&#32;Boolean&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00052"/>00052 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Char))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00054"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_char">00054</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_char">IPackChar</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00056"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_char_1aa04421cba866ca391c770cb2a343e4ef">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_char_1aa04421cba866ca391c770cb2a343e4ef">Pack</link>(ref&#32;Char&#32;value,&#32;Char&#32;prevvalue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00057"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_char_1a23c5f772afa889a0a63defba8891d374">00057</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_char_1a23c5f772afa889a0a63defba8891d374">Unpack</link>(ref&#32;Char&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00059"/>00059 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Byte))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00061"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_byte">00061</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_byte">IPackByte</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00063"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_byte_1a96165bd972b4cd99e470c3c82150a282">00063</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_byte_1a96165bd972b4cd99e470c3c82150a282">Pack</link>(ref&#32;Byte&#32;value,&#32;Byte&#32;prevvalue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00064"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_byte_1a91e3538bdf38c794e6c2d4cdbf74ffda">00064</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_byte_1a91e3538bdf38c794e6c2d4cdbf74ffda">Unpack</link>(ref&#32;Byte&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00066"/>00066 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(SByte))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00068"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_s_byte">00068</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_s_byte">IPackSByte</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00070"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_s_byte_1a287a0dfb481fc03276471e9f2bb14404">00070</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_s_byte_1a287a0dfb481fc03276471e9f2bb14404">Pack</link>(ref&#32;SByte&#32;value,&#32;SByte&#32;prevvalue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00071"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_s_byte_1a8e2ca2e1744428eb2c9664fbe89150d3">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_s_byte_1a8e2ca2e1744428eb2c9664fbe89150d3">Unpack</link>(ref&#32;SByte&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00073"/>00073 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(UInt16))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00075"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int16">00075</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int16">IPackUInt16</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00077"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int16_1a792054395cb3c5925294da0a1a48119b">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int16_1a792054395cb3c5925294da0a1a48119b">Pack</link>(ref&#32;UInt16&#32;value,&#32;UInt16&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00078"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int16_1a5145e4505911080c4e4ef0f76655b2b7">00078</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int16_1a5145e4505911080c4e4ef0f76655b2b7">Unpack</link>(ref&#32;UInt16&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00080"/>00080 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Int16))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00082"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int16">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int16">IPackInt16</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00084"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int16_1afd297c97881df4c0f88528aabe87d132">00084</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int16_1afd297c97881df4c0f88528aabe87d132">Pack</link>(ref&#32;Int16&#32;value,&#32;Int16&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00085"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int16_1a3fb1189f4880d61bab63265c53e2f9e4">00085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int16_1a3fb1189f4880d61bab63265c53e2f9e4">Unpack</link>(ref&#32;Int16&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00087"/>00087 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(UInt32))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00089"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int32">00089</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int32">IPackUInt32</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00091"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int32_1ab9ed29add9be08cc625d93980b100d58">00091</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int32_1ab9ed29add9be08cc625d93980b100d58">Pack</link>(ref&#32;UInt32&#32;value,&#32;UInt32&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00092"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int32_1a26648b17a6301c19bf634a4fb76e34e8">00092</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int32_1a26648b17a6301c19bf634a4fb76e34e8">Unpack</link>(ref&#32;UInt32&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00094"/>00094 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Int32))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00096"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int32">00096</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int32">IPackInt32</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00098"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int32_1a31897697d5c6140c2d911848c118cbbe">00098</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int32_1a31897697d5c6140c2d911848c118cbbe">Pack</link>(ref&#32;Int32&#32;value,&#32;Int32&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00099"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int32_1a3ece1a90105ca28b8fe2ecfa9343dfec">00099</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int32_1a3ece1a90105ca28b8fe2ecfa9343dfec">Unpack</link>(ref&#32;Int32&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00101"/>00101 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(UInt64))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00103"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int64">00103</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int64">IPackUInt64</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00105"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int64_1aa21da23fd440d03bd9b2b1fa034520bb">00105</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int64_1aa21da23fd440d03bd9b2b1fa034520bb">Pack</link>(ref&#32;UInt64&#32;value,&#32;UInt64&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00106"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int64_1ae0ef5965ae002705968349b4f3d84ce6">00106</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int64_1ae0ef5965ae002705968349b4f3d84ce6">Unpack</link>(ref&#32;UInt64&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00108"/>00108 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Int64))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00110"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int64">00110</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int64">IPackInt64</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00112"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int64_1a0f953b0ccd19dc9cc3063ed1454a8473">00112</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int64_1a0f953b0ccd19dc9cc3063ed1454a8473">Pack</link>(ref&#32;Int64&#32;value,&#32;Int64&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00113"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int64_1af24df116889fa8ac658a6b2eed88f098">00113</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int64_1af24df116889fa8ac658a6b2eed88f098">Unpack</link>(ref&#32;Int64&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00115"/>00115 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00116"/><link linkend="_namespace_photon_1_1_compression_1_1_internal_1a5408d2aa6b690964eb5b7d9d9a483094">00116</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;delegate&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_namespace_photon_1_1_compression_1_1_internal_1a5408d2aa6b690964eb5b7d9d9a483094">PackSingleDelegate</link>(ref&#32;Single&#32;value,&#32;Single&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Single))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00118"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_single">00118</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_single">IPackSingle</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00120"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_single_1ae40d23a8b9b1057c92e0763b7bdaf564">00120</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_single_1ae40d23a8b9b1057c92e0763b7bdaf564">Pack</link>(ref&#32;Single&#32;value,&#32;Single&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00121"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_single_1a29eb028f54714d6f8f7b46daa714da0e">00121</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_single_1a29eb028f54714d6f8f7b46daa714da0e">Unpack</link>(ref&#32;Single&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00123"/>00123 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Double))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00125"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_double">00125</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_double">IPackDouble</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00127"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_double_1aa60c889d4ea00e34410d8a0b2c9983e3">00127</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_double_1aa60c889d4ea00e34410d8a0b2c9983e3">Pack</link>(ref&#32;Double&#32;value,&#32;Double&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00128"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_double_1ae64f74bb994c78f9cf9a37e5a0edfab7">00128</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_double_1ae64f74bb994c78f9cf9a37e5a0edfab7">Unpack</link>(ref&#32;Double&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00130"/>00130 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(String))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00132"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string">00132</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string">IPackString</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00134"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_1a91f00192f04ac11ffd1f5cb1fa84454b">00134</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_1a91f00192f04ac11ffd1f5cb1fa84454b">Pack</link>(ref&#32;String&#32;value,&#32;String&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00135"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_1a79e9105e889f14a7941830b7c5cefdc7">00135</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_1a79e9105e889f14a7941830b7c5cefdc7">Unpack</link>(ref&#32;String&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00137"/>00137 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(StringBuilder))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00139"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_builder">00139</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_builder">IPackStringBuilder</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00141"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_builder_1a0158d556a0e0ae6dcc031fa52881fbb4">00141</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_builder_1a0158d556a0e0ae6dcc031fa52881fbb4">Pack</link>(ref&#32;StringBuilder&#32;value,&#32;StringBuilder&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00142"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_builder_1a6a2ea0fbb1ff031cdf2f9eda4fae3f23">00142</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_builder_1a6a2ea0fbb1ff031cdf2f9eda4fae3f23">Unpack</link>(ref&#32;StringBuilder&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00144"/>00144 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00145"/>00145 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Unity&#32;Types</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00146"/>00146 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Vector2))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00148"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2">00148</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2">IPackVector2</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00150"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_1a24bdda1bb86168d16ad20bf4ae26daee">00150</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_1a24bdda1bb86168d16ad20bf4ae26daee">Pack</link>(ref&#32;Vector2&#32;value,&#32;Vector2&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00151"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_1af7bdc299beb6f082782c556c4c15feaa">00151</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_1af7bdc299beb6f082782c556c4c15feaa">Unpack</link>(ref&#32;Vector2&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00153"/>00153 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Vector3))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00155"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3">00155</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3">IPackVector3</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00157"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_1a99445ab440f4bb9ec9480f0a92c47904">00157</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_1a99445ab440f4bb9ec9480f0a92c47904">Pack</link>(ref&#32;Vector3&#32;value,&#32;Vector3&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00158"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_1a97a856ca17218df574648d2c9e3d5fff">00158</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_1a97a856ca17218df574648d2c9e3d5fff">Unpack</link>(ref&#32;Vector3&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00160"/>00160 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Vector2Int))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00162"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_int">00162</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_int">IPackVector2Int</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00164"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_int_1af44b541172d24aa041dab2f946d0b669">00164</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_int_1af44b541172d24aa041dab2f946d0b669">Pack</link>(ref&#32;Vector2Int&#32;value,&#32;Vector2Int&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00165"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_int_1acbe758d06c4d99c981718e52740422db">00165</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_int_1acbe758d06c4d99c981718e52740422db">Unpack</link>(ref&#32;Vector2Int&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00167"/>00167 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;[PackSupportedTypes(typeof(Vector3Int))]
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00169"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_int">00169</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_int">IPackVector3Int</link>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00171"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_int_1a0a9859fed2539930576802d092785077">00171</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_int_1a0a9859fed2539930576802d092785077">Pack</link>(ref&#32;Vector3Int&#32;value,&#32;Vector3Int&#32;preValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00172"/><link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_int_1a39bd4477f2d298942f6e79fa4d0be245">00172</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_int_1a39bd4477f2d298942f6e79fa4d0be245">Unpack</link>(ref&#32;Vector3Int&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags);
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00174"/>00174 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00175"/>00175 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00176"/>00176 
<anchor xml:id="__pack_field_interfaces_8cs_source_1l00177"/>00177 }
</programlisting></section>
