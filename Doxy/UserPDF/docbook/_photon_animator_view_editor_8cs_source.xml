<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__photon_animator_view_editor_8cs_source" xml:lang="en-US">
<title>PhotonAnimatorViewEditor.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Editor/Views/PhotonAnimatorViewEditor.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__photon_animator_view_editor_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;PhotonAnimatorViewEditor.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2018&#32;Exit&#32;Games&#32;GmbH</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;&#32;This&#32;is&#32;a&#32;custom&#32;editor&#32;for&#32;the&#32;AnimatorView&#32;component.</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00010"/>00010 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00011"/>00011 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun">Photon.Pun</link>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00013"/>00013 {
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.<link linkend="_namespace_system_1_1_collections">Collections</link>.Generic;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEditor.Animations;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00018"/>00018 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00019"/>00019 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;[CustomEditor(typeof(PhotonAnimatorView))]
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00021"/><link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_editor">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_editor">PhotonAnimatorViewEditor</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_editor">MonoBehaviourPunEditor</link>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Animator&#32;m_Animator;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view">PhotonAnimatorView</link>&#32;m_Target;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;AnimatorController&#32;m_Controller;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00026"/>00026 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00027"/><link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_editor_1aad6c249b63a243cefe9cddb67450ba9f">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_editor_1aad6c249b63a243cefe9cddb67450ba9f">OnInspectorGUI</link>()
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnInspectorGUI();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00030"/>00030 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Animator&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(<emphasis role="stringliteral">&quot;GameObject&#32;doesn&apos;t&#32;have&#32;an&#32;Animator&#32;component&#32;to&#32;synchronize&quot;</emphasis>,&#32;MessageType.Warning);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00036"/>00036 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DrawWeightInspector();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00038"/>00038 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.GetLayerCount()&#32;==&#32;0)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(<emphasis role="stringliteral">&quot;Animator&#32;doesn&apos;t&#32;have&#32;any&#32;layers&#32;setup&#32;to&#32;synchronize&quot;</emphasis>,&#32;MessageType.Warning);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00043"/>00043 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DrawParameterInspector();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00045"/>00045 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.GetParameterCount()&#32;==&#32;0)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(<emphasis role="stringliteral">&quot;Animator&#32;doesn&apos;t&#32;have&#32;any&#32;parameters&#32;setup&#32;to&#32;synchronize&quot;</emphasis>,&#32;MessageType.Warning);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00050"/>00050 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.serializedObject.ApplyModifiedProperties();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00052"/>00052 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//GUILayout.Label(&#32;&quot;m_SynchronizeLayers&#32;&quot;&#32;+&#32;serializedObject.FindProperty(&#32;&quot;m_SynchronizeLayers&quot;&#32;).arraySize&#32;);</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//GUILayout.Label(&#32;&quot;m_SynchronizeParameters&#32;&quot;&#32;+&#32;serializedObject.FindProperty(&#32;&quot;m_SynchronizeParameters&quot;&#32;).arraySize&#32;);</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00056"/>00056 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00057"/>00057 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetLayerCount()
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this.m_Controller&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;this.m_Controller.layers.Length;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00062"/>00062 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetParameterCount()
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this.m_Controller&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;this.m_Controller.parameters.Length;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00067"/>00067 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;AnimatorControllerParameter&#32;GetAnimatorControllerParameter(<emphasis role="keywordtype">int</emphasis>&#32;i)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.m_Controller.parameters[i];
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00072"/>00072 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00073"/>00073 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;RuntimeAnimatorController&#32;GetEffectiveController(Animator&#32;animator)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RuntimeAnimatorController&#32;controller&#32;=&#32;animator.runtimeAnimatorController;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00077"/>00077 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimatorOverrideController&#32;overrideController&#32;=&#32;controller&#32;as&#32;AnimatorOverrideController;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(overrideController&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controller&#32;=&#32;overrideController.runtimeAnimatorController;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overrideController&#32;=&#32;controller&#32;as&#32;AnimatorOverrideController;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00084"/>00084 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;controller;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00087"/>00087 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target&#32;=&#32;(PhotonAnimatorView)this.target;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Animator&#32;=&#32;this.m_Target.GetComponent&lt;Animator&gt;();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00092"/>00092 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Animator)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Controller&#32;=&#32;this.GetEffectiveController(this.m_Animator)&#32;as&#32;AnimatorController;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00096"/>00096 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.CheckIfStoredParametersExist();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00100"/>00100 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawWeightInspector()
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;foldoutProperty&#32;=&#32;this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ShowLayerWeightsInspector&quot;</emphasis>);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foldoutProperty.boolValue&#32;=&#32;PhotonGUI.ContainerHeaderFoldout(<emphasis role="stringliteral">&quot;Synchronize&#32;Layer&#32;Weights&quot;</emphasis>,&#32;foldoutProperty.boolValue);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00105"/>00105 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(foldoutProperty.boolValue&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00110"/>00110 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;lineHeight&#32;=&#32;20;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;containerRect&#32;=&#32;PhotonGUI.ContainerBody(this.GetLayerCount()&#32;*&#32;lineHeight);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00113"/>00113 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.GetLayerCount();&#32;++i)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a81350b0c99454a448b2a17d04f9f6378">DoesLayerSynchronizeTypeExist</link>(i)&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a6f93b82c434f89707278248d29af9d4f">SetLayerSynchronized</link>(i,&#32;PhotonAnimatorView.SynchronizeType.Disabled);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00120"/>00120 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonAnimatorView.SynchronizeType&#32;syncType&#32;=&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a8531360e1890493a838da8b201287446">GetLayerSynchronizeType</link>(i);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00122"/>00122 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;elementRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(containerRect.xMin,&#32;containerRect.yMin&#32;+&#32;i&#32;*&#32;lineHeight,&#32;containerRect.width,&#32;lineHeight);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00124"/>00124 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;labelRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMin&#32;+&#32;5,&#32;elementRect.yMin&#32;+&#32;2,&#32;EditorGUIUtility.labelWidth&#32;-&#32;5,&#32;elementRect.height);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Label(labelRect,&#32;<emphasis role="stringliteral">&quot;Layer&#32;&quot;</emphasis>&#32;+&#32;i);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00127"/>00127 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;popupRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMin&#32;+&#32;EditorGUIUtility.labelWidth,&#32;elementRect.yMin&#32;+&#32;2,&#32;elementRect.width&#32;-&#32;EditorGUIUtility.labelWidth&#32;-&#32;5,&#32;EditorGUIUtility.singleLineHeight);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncType&#32;=&#32;(PhotonAnimatorView.SynchronizeType)EditorGUI.EnumPopup(popupRect,&#32;syncType);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00130"/>00130 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;this.GetLayerCount()&#32;-&#32;1)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;splitterRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMin&#32;+&#32;2,&#32;elementRect.yMax,&#32;elementRect.width&#32;-&#32;4,&#32;1);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonGUI.DrawSplitter(splitterRect);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00136"/>00136 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(syncType&#32;!=&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a8531360e1890493a838da8b201287446">GetLayerSynchronizeType</link>(i))
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(this.target,&#32;<emphasis role="stringliteral">&quot;Modify&#32;Synchronize&#32;Layer&#32;Weights&quot;</emphasis>);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a6f93b82c434f89707278248d29af9d4f">SetLayerSynchronized</link>(i,&#32;syncType);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00144"/>00144 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;DoesParameterExist(<emphasis role="keywordtype">string</emphasis>&#32;name)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.GetParameterCount();&#32;++i)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.GetAnimatorControllerParameter(i).name&#32;==&#32;name)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00154"/>00154 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00157"/>00157 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CheckIfStoredParametersExist()
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;syncedParams&#32;=&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1ae84335369c664e6250ecc35fccad462e">GetSynchronizedParameters</link>();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;string&gt;&#32;paramsToRemove&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;string&gt;();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00162"/>00162 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;syncedParams.Count;&#32;++i)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;parameterName&#32;=&#32;syncedParams[i].Name;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.DoesParameterExist(parameterName)&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Parameter&#32;&apos;&quot;</emphasis>&#32;+&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1ae84335369c664e6250ecc35fccad462e">GetSynchronizedParameters</link>()[i].Name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;&#32;doesn&apos;t&#32;exist&#32;anymore.&#32;Removing&#32;it&#32;from&#32;the&#32;list&#32;of&#32;synchronized&#32;parameters&quot;</emphasis>);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paramsToRemove.Add(parameterName);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00172"/>00172 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(paramsToRemove.Count&#32;&gt;&#32;0)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>&#32;param&#32;<emphasis role="keywordflow">in</emphasis>&#32;paramsToRemove)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1ae84335369c664e6250ecc35fccad462e">GetSynchronizedParameters</link>().RemoveAll(item&#32;=&gt;&#32;item.Name&#32;==&#32;param);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00181"/>00181 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00182"/>00182 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawParameterInspector()
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;flag&#32;to&#32;expose&#32;a&#32;note&#32;in&#32;Interface&#32;if&#32;one&#32;or&#32;more&#32;trigger(s)&#32;are&#32;synchronized</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isUsingTriggers&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00187"/>00187 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;foldoutProperty&#32;=&#32;this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ShowParameterInspector&quot;</emphasis>);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foldoutProperty.boolValue&#32;=&#32;PhotonGUI.ContainerHeaderFoldout(<emphasis role="stringliteral">&quot;Synchronize&#32;Parameters&quot;</emphasis>,&#32;foldoutProperty.boolValue);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00190"/>00190 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(foldoutProperty.boolValue&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00195"/>00195 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;lineHeight&#32;=&#32;20;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;containerRect&#32;=&#32;PhotonGUI.ContainerBody(this.GetParameterCount()&#32;*&#32;lineHeight);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00198"/>00198 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.GetParameterCount();&#32;i++)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimatorControllerParameter&#32;parameter&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameter&#32;=&#32;this.GetAnimatorControllerParameter(i);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00203"/>00203 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;defaultValue&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00205"/>00205 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameter.type&#32;==&#32;AnimatorControllerParameterType.Bool)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Application.isPlaying&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.m_Animator.gameObject.activeInHierarchy)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultValue&#32;+=&#32;this.m_Animator.GetBool(parameter.name);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultValue&#32;+=&#32;parameter.defaultBool.ToString();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameter.type&#32;==&#32;AnimatorControllerParameterType.Float)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Application.isPlaying&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.m_Animator.gameObject.activeInHierarchy)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultValue&#32;+=&#32;this.m_Animator.GetFloat(parameter.name).ToString(<emphasis role="stringliteral">&quot;0.00&quot;</emphasis>);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultValue&#32;+=&#32;parameter.defaultFloat.ToString();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameter.type&#32;==&#32;AnimatorControllerParameterType.Int)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Application.isPlaying&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.m_Animator.gameObject.activeInHierarchy)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultValue&#32;+=&#32;this.m_Animator.GetInteger(parameter.name);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultValue&#32;+=&#32;parameter.defaultInt.ToString();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameter.type&#32;==&#32;AnimatorControllerParameterType.Trigger)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Application.isPlaying&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.m_Animator.gameObject.activeInHierarchy)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultValue&#32;+=&#32;this.m_Animator.GetBool(parameter.name);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultValue&#32;+=&#32;parameter.defaultBool.ToString();
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00250"/>00250 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a0e40adea0cb934ce327ecd0fc5d7c277">DoesParameterSynchronizeTypeExist</link>(parameter.name)&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a784b526249559c41c13339728a1841c4">SetParameterSynchronized</link>(parameter.name,&#32;(PhotonAnimatorView.ParameterType)parameter.type,&#32;PhotonAnimatorView.SynchronizeType.Disabled);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00255"/>00255 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonAnimatorView.SynchronizeType&#32;value&#32;=&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a3c62b807451bee4a808f86598286d46d">GetParameterSynchronizeType</link>(parameter.name);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00257"/>00257 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;if&#32;using&#32;trigger&#32;and&#32;actually&#32;synchronizing&#32;it</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;!=&#32;PhotonAnimatorView.SynchronizeType.Disabled&#32;&amp;&amp;&#32;parameter.type&#32;==&#32;AnimatorControllerParameterType.Trigger)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isUsingTriggers&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00263"/>00263 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;elementRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(containerRect.xMin,&#32;containerRect.yMin&#32;+&#32;i&#32;*&#32;lineHeight,&#32;containerRect.width,&#32;lineHeight);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00265"/>00265 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;labelRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMin&#32;+&#32;5,&#32;elementRect.yMin&#32;+&#32;2,&#32;EditorGUIUtility.labelWidth&#32;-&#32;5,&#32;elementRect.height);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.Label(labelRect,&#32;parameter.name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;(&quot;</emphasis>&#32;+&#32;defaultValue&#32;+&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00268"/>00268 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;popupRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMin&#32;+&#32;EditorGUIUtility.labelWidth,&#32;elementRect.yMin&#32;+&#32;2,&#32;elementRect.width&#32;-&#32;EditorGUIUtility.labelWidth&#32;-&#32;5,&#32;EditorGUIUtility.singleLineHeight);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(PhotonAnimatorView.SynchronizeType)EditorGUI.EnumPopup(popupRect,&#32;value);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00271"/>00271 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;this.GetParameterCount()&#32;-&#32;1)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;splitterRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMin&#32;+&#32;2,&#32;elementRect.yMax,&#32;elementRect.width&#32;-&#32;4,&#32;1);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonGUI.DrawSplitter(splitterRect);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00277"/>00277 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;!=&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a3c62b807451bee4a808f86598286d46d">GetParameterSynchronizeType</link>(parameter.name))
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(this.target,&#32;<emphasis role="stringliteral">&quot;Modify&#32;Synchronize&#32;Parameter&#32;&quot;</emphasis>&#32;+&#32;parameter.name);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.<link linkend="_class_photon_1_1_pun_1_1_photon_animator_view_1a784b526249559c41c13339728a1841c4">SetParameterSynchronized</link>(parameter.name,&#32;(PhotonAnimatorView.ParameterType)parameter.type,&#32;value);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00284"/>00284 
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;display&#32;note&#32;when&#32;synchronized&#32;triggers&#32;are&#32;detected.</emphasis>
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isUsingTriggers)
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(<emphasis role="stringliteral">&quot;When&#32;using&#32;triggers,&#32;make&#32;sure&#32;this&#32;component&#32;is&#32;last&#32;in&#32;the&#32;stack.&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;If&#32;you&#32;still&#32;experience&#32;issues,&#32;implement&#32;triggers&#32;as&#32;a&#32;regular&#32;RPC&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;or&#32;in&#32;custom&#32;IPunObservable&#32;component&#32;instead.&quot;</emphasis>,&#32;MessageType.Warning);
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_animator_view_editor_8cs_source_1l00295"/>00295 }
</programlisting></section>
