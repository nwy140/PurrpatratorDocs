<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__photon_editor_utils_8cs_source" xml:lang="en-US">
<title>PhotonEditorUtils.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Unity/Editor/PhotonEditorUtils.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__photon_editor_utils_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;PhotonEditorUtils.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2018&#32;Exit&#32;Games&#32;GmbH</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;&#32;Unity&#32;Editor&#32;Utils</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00010"/>00010 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00011"/>00011 <emphasis role="preprocessor">#pragma&#32;warning&#32;disable&#32;618&#32;</emphasis><emphasis role="comment">//&#32;Deprecation&#32;warnings</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00012"/>00012 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00013"/>00013 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00014"/>00014 <emphasis role="preprocessor">#if&#32;UNITY_2017_4_OR_NEWER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00015"/>00015 <emphasis role="preprocessor">#define&#32;SUPPORTED_UNITY</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00016"/>00016 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00017"/>00017 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00018"/>00018 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00019"/>00019 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00020"/>00020 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00021"/>00021 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_realtime">Photon.Realtime</link>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00022"/>00022 {
<anchor xml:id="__photon_editor_utils_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.<link linkend="_namespace_system_1_1_collections">Collections</link>.Generic;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Linq;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00026"/>00026 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00029"/>00029 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.IO;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Text;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEngine.Networking;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00033"/>00033 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00034"/>00034 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;[InitializeOnLoad]
<anchor xml:id="__photon_editor_utils_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>PhotonEditorUtils
<anchor xml:id="__photon_editor_utils_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ProjectChangedWasCalled;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00041"/>00041 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00042"/>00042 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasChat;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00045"/>00045 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasVoice;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00048"/>00048 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasPun;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00051"/>00051 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasFusion;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00054"/>00054 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasCheckedProducts;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00057"/>00057 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;PhotonEditorUtils()
<anchor xml:id="__photon_editor_utils_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HasVoice&#32;=&#32;Type.GetType(<emphasis role="stringliteral">&quot;Photon.Voice.VoiceClient,&#32;Assembly-CSharp&quot;</emphasis>)&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;Type.GetType(<emphasis role="stringliteral">&quot;Photon.Voice.VoiceClient,&#32;Assembly-CSharp-firstpass&quot;</emphasis>)&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;Type.GetType(<emphasis role="stringliteral">&quot;Photon.Voice.VoiceClient,&#32;PhotonVoice.API&quot;</emphasis>)&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HasChat&#32;=&#32;Type.GetType(<emphasis role="stringliteral">&quot;Photon.Chat.ChatClient,&#32;Assembly-CSharp&quot;</emphasis>)&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;Type.GetType(<emphasis role="stringliteral">&quot;Photon.Chat.ChatClient,&#32;Assembly-CSharp-firstpass&quot;</emphasis>)&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;Type.GetType(<emphasis role="stringliteral">&quot;Photon.Chat.ChatClient,&#32;PhotonChat&quot;</emphasis>)&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HasPun&#32;=&#32;Type.GetType(<emphasis role="stringliteral">&quot;Photon.Pun.PhotonNetwork,&#32;Assembly-CSharp&quot;</emphasis>)&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;Type.GetType(<emphasis role="stringliteral">&quot;Photon.Pun.PhotonNetwork,&#32;Assembly-CSharp-firstpass&quot;</emphasis>)&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;Type.GetType(<emphasis role="stringliteral">&quot;Photon.Pun.PhotonNetwork,&#32;PhotonUnityNetworking&quot;</emphasis>)&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00063"/>00063 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;FUSION_WEAVER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HasFusion&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00065"/>00065 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonEditorUtils.HasCheckedProducts&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00067"/>00067 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorPrefs.HasKey(<emphasis role="stringliteral">&quot;DisablePun&quot;</emphasis>)&#32;&amp;&amp;&#32;EditorPrefs.GetBool(<emphasis role="stringliteral">&quot;DisablePun&quot;</emphasis>))
<anchor xml:id="__photon_editor_utils_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HasPun&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00072"/>00072 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HasPun)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MOUNTING&#32;SYMBOLS</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00076"/>00076 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;!PHOTON_UNITY_NETWORKING</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddScriptingDefineSymbolToAllBuildTargetGroups(<emphasis role="stringliteral">&quot;PHOTON_UNITY_NETWORKING&quot;</emphasis>);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00078"/>00078 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00079"/>00079 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00080"/>00080 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;!PUN_2_0_OR_NEWER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddScriptingDefineSymbolToAllBuildTargetGroups(<emphasis role="stringliteral">&quot;PUN_2_0_OR_NEWER&quot;</emphasis>);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00082"/>00082 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00083"/>00083 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00084"/>00084 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;!PUN_2_OR_NEWER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddScriptingDefineSymbolToAllBuildTargetGroups(<emphasis role="stringliteral">&quot;PUN_2_OR_NEWER&quot;</emphasis>);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00086"/>00086 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00087"/>00087 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00088"/>00088 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;!PUN_2_19_OR_NEWER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AddScriptingDefineSymbolToAllBuildTargetGroups(<emphasis role="stringliteral">&quot;PUN_2_19_OR_NEWER&quot;</emphasis>);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00090"/>00090 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00093"/>00093 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddScriptingDefineSymbolToAllBuildTargetGroups(<emphasis role="keywordtype">string</emphasis>&#32;defineSymbol)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(BuildTarget&#32;target&#32;<emphasis role="keywordflow">in</emphasis>&#32;Enum.GetValues(typeof(BuildTarget)))
<anchor xml:id="__photon_editor_utils_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BuildTargetGroup&#32;group&#32;=&#32;BuildPipeline.GetBuildTargetGroup(target);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00104"/>00104 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(group&#32;==&#32;BuildTargetGroup.Unknown)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00109"/>00109 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;defineSymbols&#32;=&#32;PlayerSettings.GetScriptingDefineSymbolsForGroup(group).Split(<emphasis role="charliteral">&apos;;&apos;</emphasis>).Select(d&#32;=&gt;&#32;d.Trim()).ToList();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00111"/>00111 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!defineSymbols.Contains(defineSymbol))
<anchor xml:id="__photon_editor_utils_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defineSymbols.Add(defineSymbol);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00115"/>00115 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerSettings.SetScriptingDefineSymbolsForGroup(group,&#32;<emphasis role="keywordtype">string</emphasis>.Join(<emphasis role="stringliteral">&quot;;&quot;</emphasis>,&#32;defineSymbols.ToArray()));
<anchor xml:id="__photon_editor_utils_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;e)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;Could&#32;not&#32;set&#32;Photon&#32;&quot;</emphasis>&#32;+&#32;defineSymbol&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;defines&#32;for&#32;build&#32;target:&#32;&quot;</emphasis>&#32;+&#32;target&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;group:&#32;&quot;</emphasis>&#32;+&#32;group&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;e);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00127"/>00127 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00128"/>00128 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CleanUpPunDefineSymbols()
<anchor xml:id="__photon_editor_utils_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(BuildTarget&#32;target&#32;<emphasis role="keywordflow">in</emphasis>&#32;Enum.GetValues(typeof(BuildTarget)))
<anchor xml:id="__photon_editor_utils_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BuildTargetGroup&#32;group&#32;=&#32;BuildPipeline.GetBuildTargetGroup(target);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00137"/>00137 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(group&#32;==&#32;BuildTargetGroup.Unknown)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00142"/>00142 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;defineSymbols&#32;=&#32;PlayerSettings.GetScriptingDefineSymbolsForGroup(group)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Split(<emphasis role="charliteral">&apos;;&apos;</emphasis>)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Select(d&#32;=&gt;&#32;d.Trim())
<anchor xml:id="__photon_editor_utils_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.ToList();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00147"/>00147 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;string&gt;&#32;newDefineSymbols&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;string&gt;();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;symbol&#32;<emphasis role="keywordflow">in</emphasis>&#32;defineSymbols)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="stringliteral">&quot;PHOTON_UNITY_NETWORKING&quot;</emphasis>.Equals(symbol)&#32;||&#32;symbol.StartsWith(<emphasis role="stringliteral">&quot;PUN_2_&quot;</emphasis>))
<anchor xml:id="__photon_editor_utils_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00155"/>00155 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newDefineSymbols.Add(symbol);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00158"/>00158 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerSettings.SetScriptingDefineSymbolsForGroup(group,&#32;<emphasis role="keywordtype">string</emphasis>.Join(<emphasis role="stringliteral">&quot;;&quot;</emphasis>,&#32;newDefineSymbols.ToArray()));
<anchor xml:id="__photon_editor_utils_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;e)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogErrorFormat(<emphasis role="stringliteral">&quot;Could&#32;not&#32;set&#32;clean&#32;up&#32;PUN2&apos;s&#32;define&#32;symbols&#32;for&#32;build&#32;target:&#32;{0}&#32;group:&#32;{1},&#32;{2}&quot;</emphasis>,&#32;target,&#32;group,&#32;e);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00169"/>00169 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00170"/>00170 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetParent(<emphasis role="keywordtype">string</emphasis>&#32;path,&#32;<emphasis role="keywordtype">string</emphasis>&#32;parentName)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dir&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;DirectoryInfo(path);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00180"/>00180 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dir.Parent&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00185"/>00185 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(parentName))
<anchor xml:id="__photon_editor_utils_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dir.Parent.FullName;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00190"/>00190 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dir.Parent.Name&#32;==&#32;parentName)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dir.Parent.FullName;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00195"/>00195 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GetParent(dir.Parent.FullName,&#32;parentName);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00198"/>00198 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsPrefab(GameObject&#32;go)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00206"/>00206 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_2021_2_OR_NEWER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;UnityEditor.SceneManagement.PrefabStageUtility.GetPrefabStage(go)&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;EditorUtility.IsPersistent(go);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00208"/>00208 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#elif&#32;UNITY_2018_3_OR_NEWER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;UnityEditor.Experimental.SceneManagement.PrefabStageUtility.GetPrefabStage(go)&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;EditorUtility.IsPersistent(go);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00210"/>00210 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EditorUtility.IsPersistent(go);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00212"/>00212 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00214"/>00214 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//https://forum.unity.com/threads/using-unitywebrequest-in-editor-tools.397466/#post-4485181</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;StartCoroutine(System.Collections.IEnumerator&#32;update)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.CallbackFunction&#32;closureCallback&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00219"/>00219 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;closureCallback&#32;=&#32;()&#32;=&gt;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(update.MoveNext()&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.update&#32;-=&#32;closureCallback;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;ex)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogException(ex);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.update&#32;-=&#32;closureCallback;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__photon_editor_utils_8cs_source_1l00235"/>00235 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.update&#32;+=&#32;closureCallback;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00238"/>00238 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;System.Collections.IEnumerator&#32;HttpPost(<emphasis role="keywordtype">string</emphasis>&#32;url,&#32;Dictionary&lt;string,&#32;string&gt;&#32;headers,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;payload,&#32;Action&lt;string&gt;&#32;successCallback,&#32;Action&lt;string&gt;&#32;errorCallback)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(UnityWebRequest&#32;w&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;UnityWebRequest(url,&#32;<emphasis role="stringliteral">&quot;POST&quot;</emphasis>))
<anchor xml:id="__photon_editor_utils_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(payload&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;w.uploadHandler&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;UploadHandlerRaw(payload);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;w.downloadHandler&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;DownloadHandlerBuffer();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(headers&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;header&#32;<emphasis role="keywordflow">in</emphasis>&#32;headers)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;w.SetRequestHeader(header.Key,&#32;header.Value);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00255"/>00255 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00256"/>00256 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_2017_2_OR_NEWER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;w.SendWebRequest();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00258"/>00258 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;w.Send();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00260"/>00260 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00261"/>00261 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(w.isDone&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00264"/>00264 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00265"/>00265 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_2020_2_OR_NEWER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(w.result&#32;==&#32;UnityWebRequest.Result.ProtocolError&#32;||&#32;w.result&#32;==&#32;UnityWebRequest.Result.ConnectionError&#32;||&#32;w.result&#32;==&#32;UnityWebRequest.Result.DataProcessingError)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00267"/>00267 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#elif&#32;UNITY_2017_1_OR_NEWER</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(w.isNetworkError&#32;||&#32;w.isHttpError)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00269"/>00269 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(errorCallback&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorCallback(w.error);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_editor_utils_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(successCallback&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;successCallback(w.downloadHandler.text);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Foldout(<emphasis role="keyword">this</emphasis>&#32;SerializedProperty&#32;isExpanded,&#32;GUIContent&#32;label)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rect&#32;=&#32;EditorGUILayout.GetControlRect();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;newvalue&#32;=&#32;EditorGUI.Toggle(<emphasis role="keyword">new</emphasis>&#32;Rect(rect)&#32;{&#32;xMin&#32;=&#32;rect.xMin&#32;+&#32;2&#32;},&#32;GUIContent.none,&#32;isExpanded.boolValue,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;Foldout&quot;</emphasis>);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(rect)&#32;{&#32;xMin&#32;=&#32;rect.xMin&#32;+&#32;15&#32;},&#32;label);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newvalue&#32;!=&#32;isExpanded.boolValue)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isExpanded.boolValue&#32;=&#32;newvalue;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isExpanded.serializedObject.ApplyModifiedProperties();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newvalue;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00303"/>00303 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Foldout(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isExpanded,&#32;GUIContent&#32;label)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rect&#32;=&#32;EditorGUILayout.GetControlRect();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;newvalue&#32;=&#32;EditorGUI.Toggle(<emphasis role="keyword">new</emphasis>&#32;Rect(rect)&#32;{&#32;xMin&#32;=&#32;rect.xMin&#32;+&#32;2&#32;},&#32;GUIContent.none,&#32;isExpanded,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;Foldout&quot;</emphasis>);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(rect)&#32;{&#32;xMin&#32;=&#32;rect.xMin&#32;+&#32;15&#32;},&#32;label);
<anchor xml:id="__photon_editor_utils_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newvalue;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00318"/>00318 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00319"/>00319 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>CleanUpDefinesOnPunDelete&#32;:&#32;UnityEditor.AssetModificationProcessor
<anchor xml:id="__photon_editor_utils_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AssetDeleteResult&#32;OnWillDeleteAsset(<emphasis role="keywordtype">string</emphasis>&#32;assetPath,&#32;RemoveAssetOptions&#32;rao)
<anchor xml:id="__photon_editor_utils_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="stringliteral">&quot;Assets/Photon/PhotonUnityNetworking&quot;</emphasis>.Equals(assetPath))
<anchor xml:id="__photon_editor_utils_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_editor_utils_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonEditorUtils.CleanUpPunDefineSymbols();
<anchor xml:id="__photon_editor_utils_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00328"/>00328 
<anchor xml:id="__photon_editor_utils_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AssetDeleteResult.DidNotDelete;
<anchor xml:id="__photon_editor_utils_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_editor_utils_8cs_source_1l00332"/>00332 }
<anchor xml:id="__photon_editor_utils_8cs_source_1l00333"/>00333 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
