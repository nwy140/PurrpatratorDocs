<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__photon_handler_8cs_source" xml:lang="en-US">
<title>PhotonHandler.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/PhotonHandler.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__photon_handler_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;PhotonHandler.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2018&#32;Exit&#32;Games&#32;GmbH</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;PhotonHandler&#32;is&#32;a&#32;runtime&#32;MonoBehaviour&#32;to&#32;include&#32;PUN&#32;into&#32;the&#32;main&#32;loop.</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00010"/>00010 
<anchor xml:id="__photon_handler_8cs_source_1l00011"/>00011 
<anchor xml:id="__photon_handler_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun">Photon.Pun</link>
<anchor xml:id="__photon_handler_8cs_source_1l00013"/>00013 {
<anchor xml:id="__photon_handler_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__photon_handler_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.<link linkend="_namespace_system_1_1_collections">Collections</link>.Generic;
<anchor xml:id="__photon_handler_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;ExitGames.Client.Photon;
<anchor xml:id="__photon_handler_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_realtime">Realtime</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__photon_handler_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEngine.Profiling;
<anchor xml:id="__photon_handler_8cs_source_1l00020"/>00020 
<anchor xml:id="__photon_handler_8cs_source_1l00021"/>00021 
<anchor xml:id="__photon_handler_8cs_source_1l00025"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler">00025</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>&#32;:&#32;<link linkend="_class_photon_1_1_realtime_1_1_connection_handler">ConnectionHandler</link>,&#32;<link linkend="_interface_photon_1_1_realtime_1_1_i_in_room_callbacks">IInRoomCallbacks</link>,&#32;<link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks">IMatchmakingCallbacks</link>
<anchor xml:id="__photon_handler_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00027"/>00027 
<anchor xml:id="__photon_handler_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>&#32;instance;
<anchor xml:id="__photon_handler_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>&#32;Instance
<anchor xml:id="__photon_handler_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(instance&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_handler_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;instance&#32;=&#32;FindObjectOfType&lt;PhotonHandler&gt;();
<anchor xml:id="__photon_handler_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(instance&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_handler_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;obj&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject();
<anchor xml:id="__photon_handler_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj.name&#32;=&#32;<emphasis role="stringliteral">&quot;PhotonMono&quot;</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;instance&#32;=&#32;obj.AddComponent&lt;<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>&gt;();
<anchor xml:id="__photon_handler_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00043"/>00043 
<anchor xml:id="__photon_handler_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;instance;
<anchor xml:id="__photon_handler_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00047"/>00047 
<anchor xml:id="__photon_handler_8cs_source_1l00048"/>00048 
<anchor xml:id="__photon_handler_8cs_source_1l00051"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a5491e28e5a2906be4504f5543e404922">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a5491e28e5a2906be4504f5543e404922">MaxDatagrams</link>&#32;=&#32;3;
<anchor xml:id="__photon_handler_8cs_source_1l00052"/>00052 
<anchor xml:id="__photon_handler_8cs_source_1l00055"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a8ea9464eb8e01906b8b6d6bc3a9d8b7c">00055</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a8ea9464eb8e01906b8b6d6bc3a9d8b7c">SendAsap</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00056"/>00056 
<anchor xml:id="__photon_handler_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;SerializeRateFrameCorrection&#32;=&#32;8;
<anchor xml:id="__photon_handler_8cs_source_1l00060"/>00060 
<anchor xml:id="__photon_handler_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;UpdateInterval;&#32;<emphasis role="comment">//&#32;time&#32;[ms]&#32;between&#32;consecutive&#32;SendOutgoingCommands&#32;calls</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00062"/>00062 
<anchor xml:id="__photon_handler_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;UpdateIntervalOnSerialize;&#32;<emphasis role="comment">//&#32;time&#32;[ms]&#32;between&#32;consecutive&#32;RunViewUpdate&#32;calls&#32;(sending&#32;syncs,&#32;etc)</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00064"/>00064 
<anchor xml:id="__photon_handler_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextSendTickCount;
<anchor xml:id="__photon_handler_8cs_source_1l00066"/>00066 
<anchor xml:id="__photon_handler_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nextSendTickCountOnSerialize;
<anchor xml:id="__photon_handler_8cs_source_1l00068"/>00068 
<anchor xml:id="__photon_handler_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_support_logger">SupportLogger</link>&#32;supportLoggerComponent;
<anchor xml:id="__photon_handler_8cs_source_1l00070"/>00070 
<anchor xml:id="__photon_handler_8cs_source_1l00071"/>00071 
<anchor xml:id="__photon_handler_8cs_source_1l00072"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1aeb2f23a7c7c298228c28440c159a99f3">00072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1aeb2f23a7c7c298228c28440c159a99f3">Awake</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(instance&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;ReferenceEquals(<emphasis role="keyword">this</emphasis>,&#32;instance))
<anchor xml:id="__photon_handler_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;instance&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1aeb2f23a7c7c298228c28440c159a99f3">Awake</link>();
<anchor xml:id="__photon_handler_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__photon_handler_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00084"/>00084 
<anchor xml:id="__photon_handler_8cs_source_1l00085"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1ab4dd266cc56b759031c2afa60e020628">00085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1ab4dd266cc56b759031c2afa60e020628">OnEnable</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Instance&#32;!=&#32;<emphasis role="keyword">this</emphasis>)
<anchor xml:id="__photon_handler_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;PhotonHandler&#32;is&#32;a&#32;singleton&#32;but&#32;there&#32;are&#32;multiple&#32;instances.&#32;this&#32;!=&#32;Instance.&quot;</emphasis>);
<anchor xml:id="__photon_handler_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00092"/>00092 
<anchor xml:id="__photon_handler_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1ab24008a841d2b4771a94a3a0877e61f6">Client</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00094"/>00094 
<anchor xml:id="__photon_handler_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1adad7eac7177ac0382e03412faf987049">EnableSupportLogger</link>)
<anchor xml:id="__photon_handler_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_support_logger">SupportLogger</link>&#32;supportLogger&#32;=&#32;this.gameObject.GetComponent&lt;<link linkend="_class_photon_1_1_realtime_1_1_support_logger">SupportLogger</link>&gt;();
<anchor xml:id="__photon_handler_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(supportLogger&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_handler_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;supportLogger&#32;=&#32;this.gameObject.AddComponent&lt;<link linkend="_class_photon_1_1_realtime_1_1_support_logger">SupportLogger</link>&gt;();
<anchor xml:id="__photon_handler_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.supportLoggerComponent&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_handler_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(supportLogger.GetInstanceID()&#32;!=&#32;this.supportLoggerComponent.GetInstanceID())
<anchor xml:id="__photon_handler_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarningFormat(<emphasis role="stringliteral">&quot;Cached&#32;SupportLogger&#32;component&#32;is&#32;different&#32;from&#32;the&#32;one&#32;attached&#32;to&#32;PhotonMono&#32;GameObject&quot;</emphasis>);
<anchor xml:id="__photon_handler_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.supportLoggerComponent&#32;=&#32;supportLogger;
<anchor xml:id="__photon_handler_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.supportLoggerComponent.<link linkend="_class_photon_1_1_realtime_1_1_support_logger_1aaa60be63a18fa340b639480682737019">Client</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00112"/>00112 
<anchor xml:id="__photon_handler_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.UpdateInterval&#32;=&#32;1000&#32;/&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a84b1a2edd7844e3f42b1e58e6b4fc9c8">SendRate</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.UpdateIntervalOnSerialize&#32;=&#32;1000&#32;/&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1add2c5cc89d654a90db576bc9a6e0411f">SerializationRate</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00115"/>00115 
<anchor xml:id="__photon_handler_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ab6df1ed60be8a3f494683b8faa28ee4a">AddCallbackTarget</link>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__photon_handler_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1ad814fc7b6a0761684e69ef3a24a11dce">StartFallbackSendAckThread</link>();&#32;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;not&#32;done&#32;in&#32;the&#32;base&#32;class</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00119"/>00119 
<anchor xml:id="__photon_handler_8cs_source_1l00120"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1af0755cda6a334184f052797f4c639bb8">00120</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1af0755cda6a334184f052797f4c639bb8">Start</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.SceneManagement.SceneManager.sceneLoaded&#32;+=&#32;(scene,&#32;loadingMode)&#32;=&gt;
<anchor xml:id="__photon_handler_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.NewSceneLoaded();
<anchor xml:id="__photon_handler_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__photon_handler_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00127"/>00127 
<anchor xml:id="__photon_handler_8cs_source_1l00128"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1af42508b4b926c2de0ebe35cdc14a12fb">00128</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1af42508b4b926c2de0ebe35cdc14a12fb">OnDisable</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ab9dccde85539981763815278d55f5e27">RemoveCallbackTarget</link>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__photon_handler_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnDisable();
<anchor xml:id="__photon_handler_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00133"/>00133 
<anchor xml:id="__photon_handler_8cs_source_1l00134"/>00134 
<anchor xml:id="__photon_handler_8cs_source_1l00136"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a94de76e1aba7602887361768002a4d84">00136</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a94de76e1aba7602887361768002a4d84">FixedUpdate</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00138"/>00138 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;PUN_DISPATCH_IN_FIXEDUPDATE</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a1126c69ff84bedfc82289db999e029d1">Dispatch</link>();
<anchor xml:id="__photon_handler_8cs_source_1l00140"/>00140 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#elif&#32;PUN_DISPATCH_IN_LATEUPDATE</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;do&#32;not&#32;dispatch&#32;here</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00142"/>00142 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Time.timeScale&#32;&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a556ed319440663839859373a421ab345">MinimalTimeScaleToDispatchInFixedUpdate</link>)
<anchor xml:id="__photon_handler_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a1126c69ff84bedfc82289db999e029d1">Dispatch</link>();
<anchor xml:id="__photon_handler_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00147"/>00147 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00149"/>00149 
<anchor xml:id="__photon_handler_8cs_source_1l00151"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a3b61062176934651d52a761a3deb517f">00151</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a3b61062176934651d52a761a3deb517f">LateUpdate</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00153"/>00153 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;PUN_DISPATCH_IN_LATEUPDATE</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a1126c69ff84bedfc82289db999e029d1">Dispatch</link>();
<anchor xml:id="__photon_handler_8cs_source_1l00155"/>00155 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#elif&#32;PUN_DISPATCH_IN_FIXEDUPDATE</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;do&#32;not&#32;dispatch&#32;here</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00157"/>00157 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;see&#32;MinimalTimeScaleToDispatchInFixedUpdate&#32;and&#32;FixedUpdate&#32;for&#32;explanation:</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Time.timeScale&#32;&lt;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a556ed319440663839859373a421ab345">MinimalTimeScaleToDispatchInFixedUpdate</link>)
<anchor xml:id="__photon_handler_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a1126c69ff84bedfc82289db999e029d1">Dispatch</link>();
<anchor xml:id="__photon_handler_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00163"/>00163 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00164"/>00164 
<anchor xml:id="__photon_handler_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentMsSinceStart&#32;=&#32;(int)(Time.realtimeSinceStartup&#32;*&#32;1000);&#32;<emphasis role="comment">//&#32;avoiding&#32;Environment.TickCount,&#32;which&#32;could&#32;be&#32;negative&#32;on&#32;long-running&#32;platforms</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>&#32;&amp;&amp;&#32;currentMsSinceStart&#32;&gt;&#32;<emphasis role="keyword">this</emphasis>.nextSendTickCountOnSerialize)
<anchor xml:id="__photon_handler_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.RunViewUpdate();
<anchor xml:id="__photon_handler_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.nextSendTickCountOnSerialize&#32;=&#32;currentMsSinceStart&#32;+&#32;this.UpdateIntervalOnSerialize&#32;-&#32;SerializeRateFrameCorrection;
<anchor xml:id="__photon_handler_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.nextSendTickCount&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;immediately&#32;send&#32;when&#32;synchronization&#32;code&#32;was&#32;running</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00172"/>00172 
<anchor xml:id="__photon_handler_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentMsSinceStart&#32;=&#32;(int)(Time.realtimeSinceStartup&#32;*&#32;1000);
<anchor xml:id="__photon_handler_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a8ea9464eb8e01906b8b6d6bc3a9d8b7c">SendAsap</link>&#32;||&#32;currentMsSinceStart&#32;&gt;&#32;this.nextSendTickCount)
<anchor xml:id="__photon_handler_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a8ea9464eb8e01906b8b6d6bc3a9d8b7c">SendAsap</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;doSend&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sendCounter&#32;=&#32;0;
<anchor xml:id="__photon_handler_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>&#32;&amp;&amp;&#32;doSend&#32;&amp;&amp;&#32;sendCounter&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a5491e28e5a2906be4504f5543e404922">MaxDatagrams</link>)
<anchor xml:id="__photon_handler_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;all&#32;outgoing&#32;commands</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Profiler.BeginSample(<emphasis role="stringliteral">&quot;SendOutgoingCommands&quot;</emphasis>);
<anchor xml:id="__photon_handler_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doSend&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.SendOutgoingCommands();
<anchor xml:id="__photon_handler_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sendCounter++;
<anchor xml:id="__photon_handler_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Profiler.EndSample();
<anchor xml:id="__photon_handler_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00187"/>00187 
<anchor xml:id="__photon_handler_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.nextSendTickCount&#32;=&#32;currentMsSinceStart&#32;+&#32;this.UpdateInterval;
<anchor xml:id="__photon_handler_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00191"/>00191 
<anchor xml:id="__photon_handler_8cs_source_1l00199"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a1126c69ff84bedfc82289db999e029d1">00199</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a1126c69ff84bedfc82289db999e029d1">Dispatch</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_handler_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;NetworkPeer&#32;broke!&quot;</emphasis>);
<anchor xml:id="__photon_handler_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00206"/>00206 
<anchor xml:id="__photon_handler_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(PhotonNetwork.NetworkClientState&#32;==&#32;ClientState.PeerCreated&#32;||&#32;PhotonNetwork.NetworkClientState&#32;==&#32;ClientState.Disconnected&#32;||&#32;PhotonNetwork.OfflineMode)</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;return;</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00211"/>00211 
<anchor xml:id="__photon_handler_8cs_source_1l00212"/>00212 
<anchor xml:id="__photon_handler_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;doDispatch&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exception&#32;ex&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;exceptionCount&#32;=&#32;0;
<anchor xml:id="__photon_handler_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>&#32;&amp;&amp;&#32;doDispatch)
<anchor xml:id="__photon_handler_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DispatchIncomingCommands()&#32;returns&#32;true&#32;of&#32;it&#32;dispatched&#32;any&#32;command&#32;(event,&#32;response&#32;or&#32;state&#32;change)</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Profiler.BeginSample(<emphasis role="stringliteral">&quot;DispatchIncomingCommands&quot;</emphasis>);
<anchor xml:id="__photon_handler_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;doDispatch&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.DispatchIncomingCommands();
<anchor xml:id="__photon_handler_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;e)
<anchor xml:id="__photon_handler_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exceptionCount++;
<anchor xml:id="__photon_handler_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ex&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_handler_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ex&#32;=&#32;e;
<anchor xml:id="__photon_handler_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00232"/>00232 
<anchor xml:id="__photon_handler_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Profiler.EndSample();
<anchor xml:id="__photon_handler_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00235"/>00235 
<anchor xml:id="__photon_handler_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ex&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_handler_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;AggregateException(<emphasis role="stringliteral">&quot;Caught&#32;&quot;</emphasis>&#32;+&#32;exceptionCount&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;exception(s)&#32;in&#32;methods&#32;called&#32;by&#32;DispatchIncomingCommands().&#32;Rethrowing&#32;first&#32;only&#32;(see&#32;above).&quot;</emphasis>,&#32;ex);
<anchor xml:id="__photon_handler_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00241"/>00241 
<anchor xml:id="__photon_handler_8cs_source_1l00242"/>00242 
<anchor xml:id="__photon_handler_8cs_source_1l00243"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a31b95569cd3591c6e75e0108d1b487ec">00243</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a31b95569cd3591c6e75e0108d1b487ec">OnCreatedRoom</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.SetLevelInPropsIfSynced(<link linkend="_class_photon_1_1_pun_1_1_scene_manager_helper">SceneManagerHelper</link>.<link linkend="_class_photon_1_1_pun_1_1_scene_manager_helper_1a211aa9251dd9b26f7726c12c079a88ea">ActiveSceneName</link>);
<anchor xml:id="__photon_handler_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00247"/>00247 
<anchor xml:id="__photon_handler_8cs_source_1l00248"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1ae2151f091273866f9db9231f06f17ba6">00248</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1ae2151f091273866f9db9231f06f17ba6">OnRoomPropertiesUpdate</link>(<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;propertiesThatChanged)
<anchor xml:id="__photon_handler_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.LoadLevelIfSynced();
<anchor xml:id="__photon_handler_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00252"/>00252 
<anchor xml:id="__photon_handler_8cs_source_1l00253"/>00253 
<anchor xml:id="__photon_handler_8cs_source_1l00254"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1aad736b0da9610c35b6a8e1f3843a3432">00254</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1aad736b0da9610c35b6a8e1f3843a3432">OnPlayerPropertiesUpdate</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;targetPlayer,&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;changedProps)&#32;{&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00255"/>00255 
<anchor xml:id="__photon_handler_8cs_source_1l00256"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a4e96eaeb9b43f15faf2da080804c7e8c">00256</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a4e96eaeb9b43f15faf2da080804c7e8c">OnMasterClientSwitched</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;newMasterClient)
<anchor xml:id="__photon_handler_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;views&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad1d644efe090df91db9623e4b5293c7d">PhotonViewCollection</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;view&#32;<emphasis role="keywordflow">in</emphasis>&#32;views)
<anchor xml:id="__photon_handler_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(view.IsRoomView)
<anchor xml:id="__photon_handler_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.OwnerActorNr=&#32;newMasterClient.ActorNumber;
<anchor xml:id="__photon_handler_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.ControllerActorNr&#32;=&#32;newMasterClient.ActorNumber;
<anchor xml:id="__photon_handler_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00268"/>00268 
<anchor xml:id="__photon_handler_8cs_source_1l00269"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a8e8067193d4d754bd75eddb0e8447462">00269</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a8e8067193d4d754bd75eddb0e8447462">OnFriendListUpdate</link>(System.Collections.Generic.List&lt;<link linkend="_class_photon_1_1_realtime_1_1_friend_info">FriendInfo</link>&gt;&#32;friendList)&#32;{&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00270"/>00270 
<anchor xml:id="__photon_handler_8cs_source_1l00271"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a4b2e9850b743eba080cf7ca0353ba70a">00271</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a4b2e9850b743eba080cf7ca0353ba70a">OnCreateRoomFailed</link>(<emphasis role="keywordtype">short</emphasis>&#32;returnCode,&#32;<emphasis role="keywordtype">string</emphasis>&#32;message)&#32;{&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00272"/>00272 
<anchor xml:id="__photon_handler_8cs_source_1l00273"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a9994103e468b4c42882a5da352eff1d3">00273</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a9994103e468b4c42882a5da352eff1d3">OnJoinRoomFailed</link>(<emphasis role="keywordtype">short</emphasis>&#32;returnCode,&#32;<emphasis role="keywordtype">string</emphasis>&#32;message)&#32;{&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00274"/>00274 
<anchor xml:id="__photon_handler_8cs_source_1l00275"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a41719240819fa0448e07dc72aff9765b">00275</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a41719240819fa0448e07dc72aff9765b">OnJoinRandomFailed</link>(<emphasis role="keywordtype">short</emphasis>&#32;returnCode,&#32;<emphasis role="keywordtype">string</emphasis>&#32;message)&#32;{&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00276"/>00276 
<anchor xml:id="__photon_handler_8cs_source_1l00277"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">00277</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;List&lt;int&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
<anchor xml:id="__photon_handler_8cs_source_1l00278"/>00278 
<anchor xml:id="__photon_handler_8cs_source_1l00279"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1ac7b3ace36c836fa7769805b6e5adeb5c">00279</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1ac7b3ace36c836fa7769805b6e5adeb5c">OnJoinedRoom</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00281"/>00281 
<anchor xml:id="__photon_handler_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa32dbfcd3525505b8fb104d87bb52098">ViewCount</link>&#32;==&#32;0)
<anchor xml:id="__photon_handler_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00284"/>00284 
<anchor xml:id="__photon_handler_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;views&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad1d644efe090df91db9623e4b5293c7d">PhotonViewCollection</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00286"/>00286 
<anchor xml:id="__photon_handler_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;amMasterClient&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac00d87d1bbd7d63fa13e6d1823e2f576">IsMasterClient</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;amRejoiningMaster&#32;=&#32;amMasterClient&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1a04089922748d1e98fcb3397dd7d33bf2">PlayerCount</link>&#32;&gt;&#32;1;
<anchor xml:id="__photon_handler_8cs_source_1l00289"/>00289 
<anchor xml:id="__photon_handler_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(amRejoiningMaster)
<anchor xml:id="__photon_handler_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.Clear();
<anchor xml:id="__photon_handler_8cs_source_1l00292"/>00292 
<anchor xml:id="__photon_handler_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;this&#32;is&#32;the&#32;master&#32;rejoining,&#32;reassert&#32;ownership&#32;of&#32;non-creator&#32;owners</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;view&#32;<emphasis role="keywordflow">in</emphasis>&#32;views)
<anchor xml:id="__photon_handler_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;viewOwnerId&#32;=&#32;view.OwnerActorNr;
<anchor xml:id="__photon_handler_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;viewCreatorId&#32;=&#32;view.CreatorActorNr;
<anchor xml:id="__photon_handler_8cs_source_1l00298"/>00298 
<anchor xml:id="__photon_handler_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;join&#32;/&#32;rejoin,&#32;assign&#32;control&#32;to&#32;either&#32;the&#32;Master&#32;Client&#32;(for&#32;room&#32;objects)&#32;or&#32;the&#32;owner&#32;(for&#32;anything&#32;else)</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.RebuildControllerCache();
<anchor xml:id="__photon_handler_8cs_source_1l00301"/>00301 
<anchor xml:id="__photon_handler_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rejoining&#32;master&#32;should&#32;enforce&#32;its&#32;world&#32;view,&#32;and&#32;override&#32;any&#32;changes&#32;that&#32;happened&#32;while&#32;it&#32;was&#32;soft&#32;disconnected</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(amRejoiningMaster)
<anchor xml:id="__photon_handler_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(viewOwnerId&#32;!=&#32;viewCreatorId)
<anchor xml:id="__photon_handler_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.Add(view.ViewID);
<anchor xml:id="__photon_handler_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.Add(viewOwnerId);
<anchor xml:id="__photon_handler_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00310"/>00310 
<anchor xml:id="__photon_handler_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(amRejoiningMaster&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.Count&#32;&gt;&#32;0)
<anchor xml:id="__photon_handler_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.OwnershipUpdate(<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.ToArray());
<anchor xml:id="__photon_handler_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00316"/>00316 
<anchor xml:id="__photon_handler_8cs_source_1l00317"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1af0285f9103d26b5294838b96c56d92a0">00317</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1af0285f9103d26b5294838b96c56d92a0">OnLeftRoom</link>()
<anchor xml:id="__photon_handler_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Destroy&#32;spawned&#32;objects&#32;and&#32;reset&#32;scene&#32;objects</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.LocalCleanupAnythingInstantiated(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_handler_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00322"/>00322 
<anchor xml:id="__photon_handler_8cs_source_1l00323"/>00323 
<anchor xml:id="__photon_handler_8cs_source_1l00324"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1ab8e15d8d7396635d72829a9773db4d22">00324</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1ab8e15d8d7396635d72829a9773db4d22">OnPlayerEnteredRoom</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;newPlayer)
<anchor xml:id="__photon_handler_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;note:&#32;if&#32;the&#32;master&#32;client&#32;becomes&#32;inactive,&#32;someone&#32;else&#32;becomes&#32;master.&#32;so&#32;there&#32;is&#32;no&#32;case&#32;where&#32;the&#32;active&#32;master&#32;client&#32;reconnects</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;what&#32;may&#32;happen&#32;is&#32;that&#32;the&#32;Master&#32;Client&#32;disconnects&#32;locally&#32;and&#32;uses&#32;ReconnectAndRejoin&#32;before&#32;anyone&#32;(including&#32;the&#32;server)&#32;notices.</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00328"/>00328 
<anchor xml:id="__photon_handler_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;amMasterClient&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac00d87d1bbd7d63fa13e6d1823e2f576">IsMasterClient</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00330"/>00330 
<anchor xml:id="__photon_handler_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;views&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad1d644efe090df91db9623e4b5293c7d">PhotonViewCollection</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(amMasterClient)
<anchor xml:id="__photon_handler_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.Clear();
<anchor xml:id="__photon_handler_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00336"/>00336 
<anchor xml:id="__photon_handler_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;view&#32;<emphasis role="keywordflow">in</emphasis>&#32;views)
<anchor xml:id="__photon_handler_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.RebuildControllerCache();&#32;&#32;<emphasis role="comment">//&#32;all&#32;clients&#32;will&#32;potentially&#32;have&#32;to&#32;clean&#32;up&#32;owner&#32;and&#32;controller,&#32;if&#32;someone&#32;re-joins</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00340"/>00340 
<anchor xml:id="__photon_handler_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;master&#32;client&#32;notifies&#32;joining&#32;players&#32;of&#32;any&#32;non-creator&#32;ownership</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(amMasterClient)
<anchor xml:id="__photon_handler_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;viewOwnerId&#32;=&#32;view.OwnerActorNr;
<anchor xml:id="__photon_handler_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(viewOwnerId&#32;!=&#32;view.CreatorActorNr)
<anchor xml:id="__photon_handler_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.Add(view.ViewID);
<anchor xml:id="__photon_handler_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.Add(viewOwnerId);
<anchor xml:id="__photon_handler_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00352"/>00352 
<anchor xml:id="__photon_handler_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;update&#32;the&#32;joining&#32;player&#32;of&#32;non-creator&#32;ownership&#32;in&#32;the&#32;room</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(amMasterClient&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.Count&#32;&gt;&#32;0)
<anchor xml:id="__photon_handler_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.OwnershipUpdate(<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a34d6e954458369b9778a5c7a91349789">reusableIntList</link>.ToArray(),&#32;newPlayer.ActorNumber);
<anchor xml:id="__photon_handler_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00358"/>00358 
<anchor xml:id="__photon_handler_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00360"/>00360 
<anchor xml:id="__photon_handler_8cs_source_1l00361"/><link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a4fd99a38963f7c82ec42034f5108e6a5">00361</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler_1a4fd99a38963f7c82ec42034f5108e6a5">OnPlayerLeftRoom</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;otherPlayer)
<anchor xml:id="__photon_handler_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;views&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad1d644efe090df91db9623e4b5293c7d">PhotonViewCollection</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00364"/>00364 
<anchor xml:id="__photon_handler_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;leavingPlayerId&#32;=&#32;otherPlayer.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isInactive&#32;=&#32;otherPlayer.<link linkend="_class_photon_1_1_realtime_1_1_player_1acccf96319b4f5998beef8574f3244795">IsInactive</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00367"/>00367 
<anchor xml:id="__photon_handler_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SOFT&#32;DISCONNECT:&#32;A&#32;player&#32;has&#32;timed&#32;out&#32;to&#32;the&#32;relay&#32;but&#32;has&#32;not&#32;yet&#32;exceeded&#32;PlayerTTL&#32;and&#32;may&#32;reconnect.</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Master&#32;will&#32;take&#32;control&#32;of&#32;this&#32;objects&#32;until&#32;the&#32;player&#32;hard&#32;disconnects,&#32;or&#32;returns.</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isInactive)
<anchor xml:id="__photon_handler_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;view&#32;<emphasis role="keywordflow">in</emphasis>&#32;views)
<anchor xml:id="__photon_handler_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;v2.27:&#32;changed&#32;from&#32;owner-check&#32;to&#32;controller-check</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(view.ControllerActorNr&#32;==&#32;leavingPlayerId)
<anchor xml:id="__photon_handler_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.ControllerActorNr&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a7ab30903c626b476fb4500ba897da7d4">MasterClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00378"/>00378 
<anchor xml:id="__photon_handler_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HARD&#32;DISCONNECT:&#32;Player&#32;permanently&#32;removed.&#32;Remove&#32;that&#32;actor&#32;as&#32;owner&#32;for&#32;all&#32;items&#32;they&#32;created&#32;(Unless&#32;AutoCleanUp&#32;is&#32;false)</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;autocleanup&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1a71478a698297b122b5f29098fe6399c5">AutoCleanUp</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00384"/>00384 
<anchor xml:id="__photon_handler_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;view&#32;<emphasis role="keywordflow">in</emphasis>&#32;views)
<anchor xml:id="__photon_handler_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;changing&#32;Owner/Controller&#32;for&#32;items&#32;that&#32;will&#32;be&#32;cleaned&#32;up.</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(autocleanup&#32;&amp;&amp;&#32;view.CreatorActorNr&#32;==&#32;leavingPlayerId)
<anchor xml:id="__photon_handler_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__photon_handler_8cs_source_1l00390"/>00390 
<anchor xml:id="__photon_handler_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Any&#32;views&#32;owned&#32;by&#32;the&#32;leaving&#32;player,&#32;default&#32;to&#32;null&#32;owner&#32;(which&#32;will&#32;become&#32;master&#32;controlled).</emphasis>
<anchor xml:id="__photon_handler_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(view.OwnerActorNr&#32;==&#32;leavingPlayerId&#32;||&#32;view.ControllerActorNr&#32;==&#32;leavingPlayerId)
<anchor xml:id="__photon_handler_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_handler_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.OwnerActorNr&#32;=&#32;0;
<anchor xml:id="__photon_handler_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.ControllerActorNr&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a7ab30903c626b476fb4500ba897da7d4">MasterClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>;
<anchor xml:id="__photon_handler_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_handler_8cs_source_1l00401"/>00401 }
</programlisting></section>
