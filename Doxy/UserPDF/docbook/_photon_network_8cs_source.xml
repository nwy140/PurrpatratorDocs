<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__photon_network_8cs_source" xml:lang="en-US">
<title>PhotonNetwork.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/PhotonNetwork.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__photon_network_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;PhotonNetwork.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2018&#32;Exit&#32;Games&#32;GmbH</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;PhotonNetwork&#32;is&#32;the&#32;central&#32;class&#32;of&#32;the&#32;PUN&#32;package.</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00010"/>00010 
<anchor xml:id="__photon_network_8cs_source_1l00011"/>00011 
<anchor xml:id="__photon_network_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun">Photon.Pun</link>
<anchor xml:id="__photon_network_8cs_source_1l00013"/>00013 {
<anchor xml:id="__photon_network_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.<link linkend="_namespace_system_1_1_diagnostics">Diagnostics</link>;
<anchor xml:id="__photon_network_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__photon_network_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__photon_network_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Linq;
<anchor xml:id="__photon_network_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__photon_network_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;ExitGames.Client.Photon;
<anchor xml:id="__photon_network_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEngine.SceneManagement;
<anchor xml:id="__photon_network_8cs_source_1l00021"/>00021 
<anchor xml:id="__photon_network_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_realtime">Realtime</link>;
<anchor xml:id="__photon_network_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>&#32;=&#32;UnityEngine.Debug;
<anchor xml:id="__photon_network_8cs_source_1l00024"/><link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;=&#32;ExitGames.Client.<link linkend="_namespace_exit_games_1_1_client_1_1_photon">Photon</link>.Hashtable;
<anchor xml:id="__photon_network_8cs_source_1l00025"/>00025 
<anchor xml:id="__photon_network_8cs_source_1l00026"/>00026 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__photon_network_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.IO;
<anchor xml:id="__photon_network_8cs_source_1l00029"/>00029 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00030"/>00030 
<anchor xml:id="__photon_network_8cs_source_1l00031"/>00031 
<anchor xml:id="__photon_network_8cs_source_1l00032"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters">InstantiateParameters</link>
<anchor xml:id="__photon_network_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00034"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a8f371d365de86465181d8d47b1a0505b">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a8f371d365de86465181d8d47b1a0505b">viewIDs</link>;
<anchor xml:id="__photon_network_8cs_source_1l00035"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a1436c2a6b7728c6ef297a9397234f555">00035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a1436c2a6b7728c6ef297a9397234f555">objLevelPrefix</link>;
<anchor xml:id="__photon_network_8cs_source_1l00036"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a56c9abd5b25ade389dda054a9e3d7895">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">object</emphasis>[]&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a56c9abd5b25ade389dda054a9e3d7895">data</link>;
<anchor xml:id="__photon_network_8cs_source_1l00037"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a75e015b2e950aa3342879a7163149c4d">00037</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;@<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a75e015b2e950aa3342879a7163149c4d">group</link>;
<anchor xml:id="__photon_network_8cs_source_1l00038"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1affae4d52d4208762aa64156ec676dc2d">00038</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1affae4d52d4208762aa64156ec676dc2d">rotation</link>;
<anchor xml:id="__photon_network_8cs_source_1l00039"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1ae82a969146802caf3c3ae8d65fa306ff">00039</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1ae82a969146802caf3c3ae8d65fa306ff">position</link>;
<anchor xml:id="__photon_network_8cs_source_1l00040"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a4ccdbdadff745299b271ab36583e82f9">00040</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a4ccdbdadff745299b271ab36583e82f9">prefabName</link>;
<anchor xml:id="__photon_network_8cs_source_1l00041"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1acdec003b6f48df4b64f87002af702480">00041</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1acdec003b6f48df4b64f87002af702480">creator</link>;
<anchor xml:id="__photon_network_8cs_source_1l00042"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1af68e93b2236df751de4fc1323829f5b7">00042</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1af68e93b2236df751de4fc1323829f5b7">timestamp</link>;
<anchor xml:id="__photon_network_8cs_source_1l00043"/>00043 
<anchor xml:id="__photon_network_8cs_source_1l00044"/><link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a60a72a0be8ee0ca1c81b45d71d423f82">00044</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a60a72a0be8ee0ca1c81b45d71d423f82">InstantiateParameters</link>(<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a4ccdbdadff745299b271ab36583e82f9">prefabName</link>,&#32;Vector3&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1ae82a969146802caf3c3ae8d65fa306ff">position</link>,&#32;Quaternion&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1affae4d52d4208762aa64156ec676dc2d">rotation</link>,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;@<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a75e015b2e950aa3342879a7163149c4d">group</link>,&#32;<emphasis role="keywordtype">object</emphasis>[]&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a56c9abd5b25ade389dda054a9e3d7895">data</link>,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a1436c2a6b7728c6ef297a9397234f555">objLevelPrefix</link>,&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a8f371d365de86465181d8d47b1a0505b">viewIDs</link>,&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1acdec003b6f48df4b64f87002af702480">creator</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1af68e93b2236df751de4fc1323829f5b7">timestamp</link>)
<anchor xml:id="__photon_network_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.prefabName&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a4ccdbdadff745299b271ab36583e82f9">prefabName</link>;
<anchor xml:id="__photon_network_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.position&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1ae82a969146802caf3c3ae8d65fa306ff">position</link>;
<anchor xml:id="__photon_network_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.rotation&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1affae4d52d4208762aa64156ec676dc2d">rotation</link>;
<anchor xml:id="__photon_network_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.@group&#32;=&#32;@<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a75e015b2e950aa3342879a7163149c4d">group</link>;
<anchor xml:id="__photon_network_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.data&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a56c9abd5b25ade389dda054a9e3d7895">data</link>;
<anchor xml:id="__photon_network_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.objLevelPrefix&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a1436c2a6b7728c6ef297a9397234f555">objLevelPrefix</link>;
<anchor xml:id="__photon_network_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.viewIDs&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1a8f371d365de86465181d8d47b1a0505b">viewIDs</link>;
<anchor xml:id="__photon_network_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.creator&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1acdec003b6f48df4b64f87002af702480">creator</link>;
<anchor xml:id="__photon_network_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.timestamp&#32;=&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters_1af68e93b2236df751de4fc1323829f5b7">timestamp</link>;
<anchor xml:id="__photon_network_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00057"/>00057 
<anchor xml:id="__photon_network_8cs_source_1l00058"/>00058 
<anchor xml:id="__photon_network_8cs_source_1l00064"/><link linkend="_class_photon_1_1_pun_1_1_photon_network">00064</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>
<anchor xml:id="__photon_network_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00067"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aab822b6132ca8d749211babcc69eb79f">00067</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aab822b6132ca8d749211babcc69eb79f">PunVersion</link>&#32;=&#32;<emphasis role="stringliteral">&quot;2.40&quot;</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00068"/>00068 
<anchor xml:id="__photon_network_8cs_source_1l00081"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aab2636705ca41bb0c9380be4f55047f7">00081</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aab2636705ca41bb0c9380be4f55047f7">GameVersion</link>
<anchor xml:id="__photon_network_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;gameVersion;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gameVersion&#32;=&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a04176f5a1bae0739355809e1eafb609f">AppVersion</link>&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;{0}_{1}&quot;</emphasis>,&#32;value,&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aab822b6132ca8d749211babcc69eb79f">PunVersion</link>);
<anchor xml:id="__photon_network_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00090"/>00090 
<anchor xml:id="__photon_network_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;gameVersion;
<anchor xml:id="__photon_network_8cs_source_1l00092"/>00092 
<anchor xml:id="__photon_network_8cs_source_1l00095"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0aca35ece2dbbcb313f935c5bbafad84">00095</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0aca35ece2dbbcb313f935c5bbafad84">AppVersion</link>
<anchor xml:id="__photon_network_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a04176f5a1bae0739355809e1eafb609f">AppVersion</link>;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00099"/>00099 
<anchor xml:id="__photon_network_8cs_source_1l00101"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">00101</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>;
<anchor xml:id="__photon_network_8cs_source_1l00102"/>00102 
<anchor xml:id="__photon_network_8cs_source_1l00106"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac1319ff7be49947b7018f18b438d175c">00106</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac1319ff7be49947b7018f18b438d175c">MAX_VIEW_IDS</link>&#32;=&#32;1000;&#32;<emphasis role="comment">//&#32;VIEW&#32;&amp;&#32;PLAYER&#32;LIMIT&#32;CAN&#32;BE&#32;EASILY&#32;CHANGED,&#32;SEE&#32;DOCS</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00107"/>00107 
<anchor xml:id="__photon_network_8cs_source_1l00108"/>00108 
<anchor xml:id="__photon_network_8cs_source_1l00110"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a91a3d63d8d710b87e145a9b6a18a17e0">00110</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a91a3d63d8d710b87e145a9b6a18a17e0">ServerSettingsFileName</link>&#32;=&#32;<emphasis role="stringliteral">&quot;PhotonServerSettings&quot;</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00111"/>00111 
<anchor xml:id="__photon_network_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_server_settings">ServerSettings</link>&#32;photonServerSettings;
<anchor xml:id="__photon_network_8cs_source_1l00113"/>00113 
<anchor xml:id="__photon_network_8cs_source_1l00115"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">00115</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_server_settings">ServerSettings</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>
<anchor xml:id="__photon_network_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(photonServerSettings&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3f82ce93e20527fd56d98e1c06717ae8">LoadOrCreateSettings</link>();
<anchor xml:id="__photon_network_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00123"/>00123 
<anchor xml:id="__photon_network_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;photonServerSettings;
<anchor xml:id="__photon_network_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;photonServerSettings&#32;=&#32;value;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00128"/>00128 
<anchor xml:id="__photon_network_8cs_source_1l00130"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aaa82d2469dcf203bb7c0d77ad32e1b21">00130</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aaa82d2469dcf203bb7c0d77ad32e1b21">ServerAddress</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1adba4e361974cae435085b9f84fc681da">CurrentServerAddress</link>&#32;:&#32;<emphasis role="stringliteral">&quot;&lt;not&#32;connected&gt;&quot;</emphasis>;&#32;}&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00131"/>00131 
<anchor xml:id="__photon_network_8cs_source_1l00133"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1af4e7abefb8aee261d72ae828e5856351">00133</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1af4e7abefb8aee261d72ae828e5856351">CloudRegion</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abfb28d4211e3d74568e4250edf231b0f">IsConnected</link>&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abbb2b33d7b82a1822a080ac51945db0b">Server</link>!=<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.NameServer)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af3568131a753b9865cbc846d2e066669">CloudRegion</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00134"/>00134 
<anchor xml:id="__photon_network_8cs_source_1l00143"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac9170d0d4ba782a17096fff7c69598c4">00143</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac9170d0d4ba782a17096fff7c69598c4">CurrentCluster</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1acbf92a2e8a1cfec557cebb4a09f83f25">CurrentCluster</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00144"/>00144 
<anchor xml:id="__photon_network_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;PlayerPrefsKey&#32;=&#32;<emphasis role="stringliteral">&quot;PUNCloudBestRegion&quot;</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00147"/>00147 
<anchor xml:id="__photon_network_8cs_source_1l00152"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a00c321ca2b6e39ab5288f3f40215fb00">00152</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a00c321ca2b6e39ab5288f3f40215fb00">BestRegionSummaryInPreferences</link>
<anchor xml:id="__photon_network_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;PlayerPrefs.GetString(PlayerPrefsKey,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(String.IsNullOrEmpty(value))
<anchor xml:id="__photon_network_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerPrefs.DeleteKey(PlayerPrefsKey);
<anchor xml:id="__photon_network_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PlayerPrefs.SetString(PlayerPrefsKey,&#32;value.ToString());
<anchor xml:id="__photon_network_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00170"/>00170 
<anchor xml:id="__photon_network_8cs_source_1l00178"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1abfb28d4211e3d74568e4250edf231b0f">00178</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abfb28d4211e3d74568e4250edf231b0f">IsConnected</link>
<anchor xml:id="__photon_network_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00186"/>00186 
<anchor xml:id="__photon_network_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00191"/>00191 
<anchor xml:id="__photon_network_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a74d78b05afa018ee4fd489d676e582b9">IsConnected</link>;
<anchor xml:id="__photon_network_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00195"/>00195 
<anchor xml:id="__photon_network_8cs_source_1l00199"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">00199</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>
<anchor xml:id="__photon_network_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00211"/>00211 
<anchor xml:id="__photon_network_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1acbadf383676996da89d37c9d4f05be61">IsConnectedAndReady</link>;
<anchor xml:id="__photon_network_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00215"/>00215 
<anchor xml:id="__photon_network_8cs_source_1l00227"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6ced17c19314be4dbd68c83d99a6df9e">00227</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_group__public_api_1ga5500bb7cf5b4d5493f545a2fcb02ae16">ClientState</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6ced17c19314be4dbd68c83d99a6df9e">NetworkClientState</link>
<anchor xml:id="__photon_network_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(offlineModeRoom&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;<link linkend="_group__public_api_1ga5500bb7cf5b4d5493f545a2fcb02ae16">ClientState</link>.Joined&#32;:&#32;<link linkend="_group__public_api_1ga5500bb7cf5b4d5493f545a2fcb02ae16">ClientState</link>.ConnectedToMasterServer;
<anchor xml:id="__photon_network_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00235"/>00235 
<anchor xml:id="__photon_network_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__public_api_1ga5500bb7cf5b4d5493f545a2fcb02ae16">ClientState</link>.Disconnected;
<anchor xml:id="__photon_network_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00240"/>00240 
<anchor xml:id="__photon_network_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a50b56ed2bd694735fe5d4745ea2f5588">State</link>;
<anchor xml:id="__photon_network_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00244"/>00244 
<anchor xml:id="__photon_network_8cs_source_1l00252"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3599fcd464562cb936006da206361cdd">00252</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1ae6ad7c8a197bec0e05c9d43278a5ebe7">ConnectMethod</link>&#32;<link linkend="_namespace_photon_1_1_pun_1ae6ad7c8a197bec0e05c9d43278a5ebe7">ConnectMethod</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1ae6ad7c8a197bec0e05c9d43278a5ebe7">ConnectMethod</link>.NotCalled;
<anchor xml:id="__photon_network_8cs_source_1l00253"/>00253 
<anchor xml:id="__photon_network_8cs_source_1l00254"/>00254 
<anchor xml:id="__photon_network_8cs_source_1l00257"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1abbb2b33d7b82a1822a080ac51945db0b">00257</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abbb2b33d7b82a1822a080ac51945db0b">Server</link>
<anchor xml:id="__photon_network_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.MasterServer&#32;:&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.GameServer;
<anchor xml:id="__photon_network_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;:&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.NameServer;
<anchor xml:id="__photon_network_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00268"/>00268 
<anchor xml:id="__photon_network_8cs_source_1l00279"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad9206d09224ee87c9d8eb522efe81e78">00279</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad9206d09224ee87c9d8eb522efe81e78">AuthValues</link>
<anchor xml:id="__photon_network_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a014dcfad3270afec7f07a99698b08ca3">AuthValues</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a014dcfad3270afec7f07a99698b08ca3">AuthValues</link>&#32;=&#32;value;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00284"/>00284 
<anchor xml:id="__photon_network_8cs_source_1l00296"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a476df42d265a14ccfac89735fd56e6d8">00296</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a476df42d265a14ccfac89735fd56e6d8">CurrentLobby</link>
<anchor xml:id="__photon_network_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af8177ede1c6805e80c28906003106560">CurrentLobby</link>;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00300"/>00300 
<anchor xml:id="__photon_network_8cs_source_1l00307"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">00307</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>
<anchor xml:id="__photon_network_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offlineMode)
<anchor xml:id="__photon_network_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;offlineModeRoom;
<anchor xml:id="__photon_network_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00315"/>00315 
<anchor xml:id="__photon_network_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;null&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5b75141df981bebc4f7e1f0edb6a399b">CurrentRoom</link>;
<anchor xml:id="__photon_network_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00319"/>00319 
<anchor xml:id="__photon_network_8cs_source_1l00323"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa8af6239914ab71acd29b56e9610f534">00323</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_group__public_api_1ga5a8128eaeb2f346d4cceb57d48caf9c1">PunLogLevel</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa8af6239914ab71acd29b56e9610f534">LogLevel</link>&#32;=&#32;<link linkend="_group__public_api_1ga5a8128eaeb2f346d4cceb57d48caf9c1">PunLogLevel</link>.ErrorsOnly;
<anchor xml:id="__photon_network_8cs_source_1l00324"/>00324 
<anchor xml:id="__photon_network_8cs_source_1l00332"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">00332</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>
<anchor xml:id="__photon_network_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;&#32;<emphasis role="comment">//&#32;suppress&#32;ExitApplication&#32;errors</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00340"/>00340 
<anchor xml:id="__photon_network_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a50fb7f5363ea8a9f4200f2793580e895">LocalPlayer</link>;
<anchor xml:id="__photon_network_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00344"/>00344 
<anchor xml:id="__photon_network_8cs_source_1l00354"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1adfce2d94ddd3b82e5bd45b2772d0f35e">00354</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1adfce2d94ddd3b82e5bd45b2772d0f35e">NickName</link>
<anchor xml:id="__photon_network_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ad439b4aa3b30db97be26fa5c27c1dff8">NickName</link>;
<anchor xml:id="__photon_network_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00360"/>00360 
<anchor xml:id="__photon_network_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ad439b4aa3b30db97be26fa5c27c1dff8">NickName</link>&#32;=&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00366"/>00366 
<anchor xml:id="__photon_network_8cs_source_1l00370"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a13cd7f74a3672513b43bf224968eb9de">00370</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>[]&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a13cd7f74a3672513b43bf224968eb9de">PlayerList</link>
<anchor xml:id="__photon_network_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&#32;room&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>;
<anchor xml:id="__photon_network_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(room&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;implement&#32;more&#32;effectively.&#32;maybe&#32;cache?!</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa">Players</link>.Values.OrderBy((x)&#32;=&gt;&#32;x.ActorNumber).ToArray();
<anchor xml:id="__photon_network_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>[0];
<anchor xml:id="__photon_network_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00383"/>00383 
<anchor xml:id="__photon_network_8cs_source_1l00387"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a020beb53dd60caba8657f52258033549">00387</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>[]&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a020beb53dd60caba8657f52258033549">PlayerListOthers</link>
<anchor xml:id="__photon_network_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&#32;room&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>;
<anchor xml:id="__photon_network_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(room&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;implement&#32;more&#32;effectively.&#32;maybe&#32;cache?!</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa">Players</link>.Values.OrderBy((x)&#32;=&gt;&#32;x.ActorNumber).Where(x&#32;=&gt;&#32;!x.IsLocal).ToArray();
<anchor xml:id="__photon_network_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>[0];
<anchor xml:id="__photon_network_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00400"/>00400 
<anchor xml:id="__photon_network_8cs_source_1l00410"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1c7ae163d79676520bd4bd06fff447d">00410</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1c7ae163d79676520bd4bd06fff447d">EnableCloseConnection</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00411"/>00411 
<anchor xml:id="__photon_network_8cs_source_1l00418"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b4f8fe1529076624d34c9ac6c13cd1">00418</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b4f8fe1529076624d34c9ac6c13cd1">PrecisionForVectorSynchronization</link>&#32;=&#32;0.000099f;
<anchor xml:id="__photon_network_8cs_source_1l00419"/>00419 
<anchor xml:id="__photon_network_8cs_source_1l00423"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a77e14f7cd9ec6dcad2565bf1c56963e7">00423</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a77e14f7cd9ec6dcad2565bf1c56963e7">PrecisionForQuaternionSynchronization</link>&#32;=&#32;1.0f;
<anchor xml:id="__photon_network_8cs_source_1l00424"/>00424 
<anchor xml:id="__photon_network_8cs_source_1l00428"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a4b39e118b6ff0847b0fbca8885a5865d">00428</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a4b39e118b6ff0847b0fbca8885a5865d">PrecisionForFloatSynchronization</link>&#32;=&#32;0.01f;
<anchor xml:id="__photon_network_8cs_source_1l00429"/>00429 
<anchor xml:id="__photon_network_8cs_source_1l00430"/>00430 
<anchor xml:id="__photon_network_8cs_source_1l00436"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">00436</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>
<anchor xml:id="__photon_network_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;offlineMode;
<anchor xml:id="__photon_network_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00442"/>00442 
<anchor xml:id="__photon_network_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;offlineMode)
<anchor xml:id="__photon_network_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00449"/>00449 
<anchor xml:id="__photon_network_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abfb28d4211e3d74568e4250edf231b0f">IsConnected</link>)
<anchor xml:id="__photon_network_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Can&apos;t&#32;start&#32;OFFLINE&#32;mode&#32;while&#32;connected!&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00455"/>00455 
<anchor xml:id="__photon_network_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a74d78b05afa018ee4fd489d676e582b9">IsConnected</link>)
<anchor xml:id="__photon_network_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab71b80fa9e4f0e5644de49ec9b01853d">Disconnect</link>();&#32;<emphasis role="comment">//&#32;Cleanup&#32;(also&#32;calls&#32;OnLeftRoom&#32;to&#32;reset&#32;stuff)</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00460"/>00460 
<anchor xml:id="__photon_network_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offlineMode&#32;=&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00462"/>00462 
<anchor xml:id="__photon_network_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offlineMode)
<anchor xml:id="__photon_network_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a32adb95af4cb836a29fc53aa66000caf">ChangeLocalID</link>(-1);
<anchor xml:id="__photon_network_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SendMonoMessage(PhotonNetworkingMessage.OnConnectedToMaster);</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aff6dd3b6412da73a93e010cb8eaede1f">ConnectionCallbackTargets</link>.<link linkend="_class_photon_1_1_realtime_1_1_connection_callbacks_container_1aa3d0fe1dc58e94a899b5a2d885e3bbc6">OnConnectedToMaster</link>();
<anchor xml:id="__photon_network_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;wasInOfflineRoom&#32;=&#32;offlineModeRoom&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00472"/>00472 
<anchor xml:id="__photon_network_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wasInOfflineRoom)
<anchor xml:id="__photon_network_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LeftRoomCleanup();
<anchor xml:id="__photon_network_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offlineModeRoom&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5b75141df981bebc4f7e1f0edb6a399b">CurrentRoom</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a32adb95af4cb836a29fc53aa66000caf">ChangeLocalID</link>(-1);
<anchor xml:id="__photon_network_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wasInOfflineRoom)
<anchor xml:id="__photon_network_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a81fd31dc623a60967a7c6be7b2572ca5">MatchMakingCallbackTargets</link>.<link linkend="_class_photon_1_1_realtime_1_1_match_making_callbacks_container_1aa8f13b83943e6a562e9817807cee4836">OnLeftRoom</link>();
<anchor xml:id="__photon_network_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00487"/>00487 
<anchor xml:id="__photon_network_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;offlineMode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&#32;offlineModeRoom&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00490"/>00490 
<anchor xml:id="__photon_network_8cs_source_1l00491"/>00491 
<anchor xml:id="__photon_network_8cs_source_1l00509"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a2440ba4650d0f1dbb3d3091bb44758d4">00509</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a2440ba4650d0f1dbb3d3091bb44758d4">AutomaticallySyncScene</link>
<anchor xml:id="__photon_network_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;automaticallySyncScene;
<anchor xml:id="__photon_network_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;automaticallySyncScene&#32;=&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(automaticallySyncScene&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LoadLevelIfSynced();
<anchor xml:id="__photon_network_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00524"/>00524 
<anchor xml:id="__photon_network_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;automaticallySyncScene&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00526"/>00526 
<anchor xml:id="__photon_network_8cs_source_1l00543"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a294f18797973a310c8c23f25747691c6">00543</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a294f18797973a310c8c23f25747691c6">EnableLobbyStatistics</link>
<anchor xml:id="__photon_network_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aee94c9f4346e320bad848012258f62f7">EnableLobbyStatistics</link>;
<anchor xml:id="__photon_network_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00550"/>00550 
<anchor xml:id="__photon_network_8cs_source_1l00551"/>00551 
<anchor xml:id="__photon_network_8cs_source_1l00560"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae01598f89f35258f1c991da26d9d1f22">00560</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae01598f89f35258f1c991da26d9d1f22">InLobby</link>
<anchor xml:id="__photon_network_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5485a4761f9495ade17a08f159080d71">InLobby</link>;
<anchor xml:id="__photon_network_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00567"/>00567 
<anchor xml:id="__photon_network_8cs_source_1l00568"/>00568 
<anchor xml:id="__photon_network_8cs_source_1l00596"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a84b1a2edd7844e3f42b1e58e6b4fc9c8">00596</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a84b1a2edd7844e3f42b1e58e6b4fc9c8">SendRate</link>
<anchor xml:id="__photon_network_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1000&#32;/&#32;sendFrequency;
<anchor xml:id="__photon_network_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00602"/>00602 
<anchor xml:id="__photon_network_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sendFrequency&#32;=&#32;1000&#32;/&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.Instance&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.Instance.UpdateInterval&#32;=&#32;sendFrequency;
<anchor xml:id="__photon_network_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00612"/>00612 
<anchor xml:id="__photon_network_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sendFrequency&#32;=&#32;33;&#32;<emphasis role="comment">//&#32;in&#32;milliseconds.</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00614"/>00614 
<anchor xml:id="__photon_network_8cs_source_1l00633"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1add2c5cc89d654a90db576bc9a6e0411f">00633</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1add2c5cc89d654a90db576bc9a6e0411f">SerializationRate</link>
<anchor xml:id="__photon_network_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1000&#32;/&#32;serializationFrequency;
<anchor xml:id="__photon_network_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00639"/>00639 
<anchor xml:id="__photon_network_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serializationFrequency&#32;=&#32;1000&#32;/&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.Instance&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.Instance.UpdateIntervalOnSerialize&#32;=&#32;serializationFrequency;
<anchor xml:id="__photon_network_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00649"/>00649 
<anchor xml:id="__photon_network_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;serializationFrequency&#32;=&#32;100;&#32;<emphasis role="comment">//&#32;in&#32;milliseconds.&#32;I.e.&#32;100&#32;=&#32;100ms&#32;which&#32;makes&#32;10&#32;times/second</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00651"/>00651 
<anchor xml:id="__photon_network_8cs_source_1l00652"/>00652 
<anchor xml:id="__photon_network_8cs_source_1l00664"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">00664</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>
<anchor xml:id="__photon_network_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;isMessageQueueRunning;
<anchor xml:id="__photon_network_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00670"/>00670 
<anchor xml:id="__photon_network_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isMessageQueueRunning&#32;=&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00676"/>00676 
<anchor xml:id="__photon_network_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isMessageQueueRunning&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00679"/>00679 
<anchor xml:id="__photon_network_8cs_source_1l00680"/>00680 
<anchor xml:id="__photon_network_8cs_source_1l00694"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a34964303a3ad5074da94cc1cd6f70a74">00694</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a34964303a3ad5074da94cc1cd6f70a74">Time</link>
<anchor xml:id="__photon_network_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(UnityEngine.Time.frameCount&#32;==&#32;frame)
<anchor xml:id="__photon_network_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frametime;
<anchor xml:id="__photon_network_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00702"/>00702 
<anchor xml:id="__photon_network_8cs_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;u&#32;=&#32;(uint)<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">ServerTimestamp</link>;
<anchor xml:id="__photon_network_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;t&#32;=&#32;u;
<anchor xml:id="__photon_network_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frametime&#32;=&#32;&#32;t&#32;/&#32;1000.0d;
<anchor xml:id="__photon_network_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame&#32;=&#32;UnityEngine.Time.frameCount;
<anchor xml:id="__photon_network_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frametime;
<anchor xml:id="__photon_network_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00710"/>00710 
<anchor xml:id="__photon_network_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;frametime;
<anchor xml:id="__photon_network_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;frame;
<anchor xml:id="__photon_network_8cs_source_1l00713"/>00713 
<anchor xml:id="__photon_network_8cs_source_1l00727"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">00727</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">ServerTimestamp</link>
<anchor xml:id="__photon_network_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(StartupStopwatch&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;StartupStopwatch.IsRunning)
<anchor xml:id="__photon_network_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)StartupStopwatch.ElapsedMilliseconds;
<anchor xml:id="__photon_network_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Environment.TickCount;
<anchor xml:id="__photon_network_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00739"/>00739 
<anchor xml:id="__photon_network_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.ServerTimeInMilliSeconds;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;implement&#32;ServerTimeInMilliSeconds&#32;in&#32;LBC</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00743"/>00743 
<anchor xml:id="__photon_network_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_photon_1_1_realtime_1a0b1996e86891e8965cbb883e6a833298">Stopwatch</link>&#32;StartupStopwatch;
<anchor xml:id="__photon_network_8cs_source_1l00746"/>00746 
<anchor xml:id="__photon_network_8cs_source_1l00747"/>00747 
<anchor xml:id="__photon_network_8cs_source_1l00774"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a4696e3eb91e482ff0188b2e9102fd640">00774</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a4696e3eb91e482ff0188b2e9102fd640">KeepAliveInBackground</link>
<anchor xml:id="__photon_network_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.Instance&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.Instance.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1aa8e28a6e11a689c36fcc5a4d38684403">KeepAliveInBackground</link>&#32;=&#32;(int)Mathf.Round(value&#32;*&#32;1000.0f);
<anchor xml:id="__photon_network_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00783"/>00783 
<anchor xml:id="__photon_network_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.Instance&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;Mathf.Round(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.Instance.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1aa8e28a6e11a689c36fcc5a4d38684403">KeepAliveInBackground</link>&#32;/&#32;1000.0f)&#32;:&#32;60.0f;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00786"/>00786 
<anchor xml:id="__photon_network_8cs_source_1l00787"/>00787 
<anchor xml:id="__photon_network_8cs_source_1l00802"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a556ed319440663839859373a421ab345">00802</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a556ed319440663839859373a421ab345">MinimalTimeScaleToDispatchInFixedUpdate</link>&#32;=&#32;-1f;
<anchor xml:id="__photon_network_8cs_source_1l00803"/>00803 
<anchor xml:id="__photon_network_8cs_source_1l00804"/>00804 
<anchor xml:id="__photon_network_8cs_source_1l00808"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac00d87d1bbd7d63fa13e6d1823e2f576">00808</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac00d87d1bbd7d63fa13e6d1823e2f576">IsMasterClient</link>
<anchor xml:id="__photon_network_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00816"/>00816 
<anchor xml:id="__photon_network_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5b75141df981bebc4f7e1f0edb6a399b">CurrentRoom</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5b75141df981bebc4f7e1f0edb6a399b">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1a56332f997a5d59eae6d21dcbc4751d83">MasterClientId</link>&#32;==&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;implement&#32;MasterClient&#32;shortcut&#32;in&#32;LBC?</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00820"/>00820 
<anchor xml:id="__photon_network_8cs_source_1l00837"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a7ab30903c626b476fb4500ba897da7d4">00837</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a7ab30903c626b476fb4500ba897da7d4">MasterClient</link>
<anchor xml:id="__photon_network_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>;
<anchor xml:id="__photon_network_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00845"/>00845 
<anchor xml:id="__photon_network_8cs_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5b75141df981bebc4f7e1f0edb6a399b">CurrentRoom</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00850"/>00850 
<anchor xml:id="__photon_network_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5b75141df981bebc4f7e1f0edb6a399b">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1a267b83eaa30e0f7486830dd25e07479c">GetPlayer</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5b75141df981bebc4f7e1f0edb6a399b">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1a56332f997a5d59eae6d21dcbc4751d83">MasterClientId</link>);
<anchor xml:id="__photon_network_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00854"/>00854 
<anchor xml:id="__photon_network_8cs_source_1l00864"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1acd3228520b05c60cddddb9a3b75f3b1d">00864</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1acd3228520b05c60cddddb9a3b75f3b1d">InRoom</link>
<anchor xml:id="__photon_network_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;in&#32;offline&#32;mode,&#32;you&#32;can&#32;be&#32;in&#32;a&#32;room&#32;too&#32;and&#32;NetworkClientState&#32;then&#32;returns&#32;Joined&#32;like&#32;on&#32;online&#32;mode!</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6ced17c19314be4dbd68c83d99a6df9e">NetworkClientState</link>&#32;==&#32;<link linkend="_group__public_api_1ga5500bb7cf5b4d5493f545a2fcb02ae16">ClientState</link>.Joined;
<anchor xml:id="__photon_network_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00872"/>00872 
<anchor xml:id="__photon_network_8cs_source_1l00873"/>00873 
<anchor xml:id="__photon_network_8cs_source_1l00877"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a94bc96c001fcee905d962831e154dc7a">00877</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a94bc96c001fcee905d962831e154dc7a">CountOfPlayersOnMaster</link>
<anchor xml:id="__photon_network_8cs_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a1a652f2f9fe2d07a36906602a6cdfc58">PlayersOnMasterCount</link>;
<anchor xml:id="__photon_network_8cs_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00884"/>00884 
<anchor xml:id="__photon_network_8cs_source_1l00889"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aec29c68ed56409774a0a77aa73b1bc8d">00889</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aec29c68ed56409774a0a77aa73b1bc8d">CountOfPlayersInRooms</link>
<anchor xml:id="__photon_network_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aea4f99e907879d04303990fd2ecb2cb0">PlayersInRoomsCount</link>;
<anchor xml:id="__photon_network_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00896"/>00896 
<anchor xml:id="__photon_network_8cs_source_1l00900"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6b18cbd7d25ee55904943346db209108">00900</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6b18cbd7d25ee55904943346db209108">CountOfPlayers</link>
<anchor xml:id="__photon_network_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aea4f99e907879d04303990fd2ecb2cb0">PlayersInRoomsCount</link>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a1a652f2f9fe2d07a36906602a6cdfc58">PlayersOnMasterCount</link>;
<anchor xml:id="__photon_network_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00907"/>00907 
<anchor xml:id="__photon_network_8cs_source_1l00911"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a48adcf58a1e1c0fb4a08a688ad5657be">00911</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a48adcf58a1e1c0fb4a08a688ad5657be">CountOfRooms</link>
<anchor xml:id="__photon_network_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ada4a7a036875727b55cbcd86aeab5462">RoomsCount</link>;
<anchor xml:id="__photon_network_8cs_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00918"/>00918 
<anchor xml:id="__photon_network_8cs_source_1l00926"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3ac3056a3bc8e6593375b2e852d85d24">00926</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3ac3056a3bc8e6593375b2e852d85d24">NetworkStatisticsEnabled</link>
<anchor xml:id="__photon_network_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.TrafficStatsEnabled;
<anchor xml:id="__photon_network_8cs_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00932"/>00932 
<anchor xml:id="__photon_network_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.TrafficStatsEnabled&#32;=&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00938"/>00938 
<anchor xml:id="__photon_network_8cs_source_1l00945"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1acb5a636cb8fdc446ae4607b2c8f0219c">00945</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1acb5a636cb8fdc446ae4607b2c8f0219c">ResentReliableCommands</link>
<anchor xml:id="__photon_network_8cs_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.ResentReliableCommands;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00949"/>00949 
<anchor xml:id="__photon_network_8cs_source_1l00951"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a95cb89073aa37d377bb739f29c18b40c">00951</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a95cb89073aa37d377bb739f29c18b40c">CrcCheckEnabled</link>
<anchor xml:id="__photon_network_8cs_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.CrcEnabled;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abfb28d4211e3d74568e4250edf231b0f">IsConnected</link>)
<anchor xml:id="__photon_network_8cs_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.CrcEnabled&#32;=&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(<emphasis role="stringliteral">&quot;Can&apos;t&#32;change&#32;CrcCheckEnabled&#32;while&#32;being&#32;connected.&#32;CrcCheckEnabled&#32;stays&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.CrcEnabled);
<anchor xml:id="__photon_network_8cs_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00966"/>00966 
<anchor xml:id="__photon_network_8cs_source_1l00968"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aaa5fd00c5f6eba2c26ef7b89d04a5f7e">00968</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aaa5fd00c5f6eba2c26ef7b89d04a5f7e">PacketLossByCrcCheck</link>
<anchor xml:id="__photon_network_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PacketLossByCrc;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00971"/>00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00972"/>00972 
<anchor xml:id="__photon_network_8cs_source_1l00975"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a705868d3b1bf11454590b6d38c578346">00975</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a705868d3b1bf11454590b6d38c578346">MaxResendsBeforeDisconnect</link>
<anchor xml:id="__photon_network_8cs_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.SentCountAllowance;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&lt;&#32;3)&#32;value&#32;=&#32;3;
<anchor xml:id="__photon_network_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&gt;&#32;10)&#32;value&#32;=&#32;10;
<anchor xml:id="__photon_network_8cs_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.SentCountAllowance&#32;=&#32;value;
<anchor xml:id="__photon_network_8cs_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00985"/>00985 
<anchor xml:id="__photon_network_8cs_source_1l00994"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a16baa5d3afe9edc75852217535bfd583">00994</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a16baa5d3afe9edc75852217535bfd583">QuickResends</link>
<anchor xml:id="__photon_network_8cs_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00996"/>00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.QuickResendAttempts;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&lt;&#32;0)&#32;value&#32;=&#32;0;
<anchor xml:id="__photon_network_8cs_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;&gt;&#32;3)&#32;value&#32;=&#32;3;
<anchor xml:id="__photon_network_8cs_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.QuickResendAttempts&#32;=&#32;(byte)value;
<anchor xml:id="__photon_network_8cs_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01004"/>01004 
<anchor xml:id="__photon_network_8cs_source_1l01005"/>01005 
<anchor xml:id="__photon_network_8cs_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Obsolete(<emphasis role="stringliteral">&quot;Set&#32;port&#32;overrides&#32;in&#32;ServerPortOverrides.&#32;Not&#32;used&#32;anymore!&quot;</emphasis>)]
<anchor xml:id="__photon_network_8cs_source_1l01008"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a16d9fbf0248db8d2c9e3fec6204e676c">01008</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a16d9fbf0248db8d2c9e3fec6204e676c">UseAlternativeUdpPorts</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01009"/>01009 
<anchor xml:id="__photon_network_8cs_source_1l01012"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a195d13cd2f7de13ecb9fa42a1702ce6f">01012</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_photon_1_1_realtime_1_1_photon_port_definition">PhotonPortDefinition</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a195d13cd2f7de13ecb9fa42a1702ce6f">ServerPortOverrides</link>
<anchor xml:id="__photon_network_8cs_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_realtime_1_1_photon_port_definition">PhotonPortDefinition</link>()&#32;:&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aa56ac38654f2867927d92db331d8d18b">ServerPortOverrides</link>;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01015"/>01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aa56ac38654f2867927d92db331d8d18b">ServerPortOverrides</link>&#32;=&#32;value;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01017"/>01017 
<anchor xml:id="__photon_network_8cs_source_1l01018"/>01018 
<anchor xml:id="__photon_network_8cs_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastUsedViewSubId&#32;=&#32;0;&#32;&#32;<emphasis role="comment">//&#32;each&#32;player&#32;only&#32;needs&#32;to&#32;remember&#32;it&apos;s&#32;own&#32;(!)&#32;last&#32;used&#32;subId&#32;to&#32;speed&#32;up&#32;assignment</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastUsedViewSubIdStatic&#32;=&#32;0;&#32;&#32;<emphasis role="comment">//&#32;per&#32;room,&#32;the&#32;master&#32;is&#32;able&#32;to&#32;instantiate&#32;GOs.&#32;the&#32;subId&#32;for&#32;this&#32;must&#32;be&#32;unique&#32;too</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01021"/>01021 
<anchor xml:id="__photon_network_8cs_source_1l01022"/>01022 
<anchor xml:id="__photon_network_8cs_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>()
<anchor xml:id="__photon_network_8cs_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01028"/>01028 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;!UNITY_EDITOR</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StaticReset();&#32;&#32;<emphasis role="comment">//&#32;in&#32;builds,&#32;we&#32;just&#32;reset/init&#32;the&#32;client&#32;once</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01030"/>01030 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01031"/>01031 
<anchor xml:id="__photon_network_8cs_source_1l01032"/>01032 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_2019_4_OR_NEWER</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link>();
<anchor xml:id="__photon_network_8cs_source_1l01036"/>01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01037"/>01037 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StaticReset();&#32;&#32;<emphasis role="comment">//&#32;in&#32;OLDER&#32;unity&#32;editor&#32;versions&#32;there&#32;is&#32;no&#32;RuntimeInitializeOnLoadMethod,&#32;so&#32;call&#32;reset</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01039"/>01039 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01040"/>01040 
<anchor xml:id="__photon_network_8cs_source_1l01041"/>01041 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01043"/>01043 
<anchor xml:id="__photon_network_8cs_source_1l01044"/>01044 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR&#32;&amp;&amp;&#32;UNITY_2019_4_OR_NEWER</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterAssembliesLoaded)]
<anchor xml:id="__photon_network_8cs_source_1l01046"/>01046 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;StaticReset()
<anchor xml:id="__photon_network_8cs_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01049"/>01049 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!EditorApplication.isPlayingOrWillChangePlaymode)
<anchor xml:id="__photon_network_8cs_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01053"/>01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01054"/>01054 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01055"/>01055 
<anchor xml:id="__photon_network_8cs_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;clear&#32;is&#32;for&#32;when&#32;Domain&#32;Reloading&#32;is&#32;disabled.&#32;Typically&#32;will&#32;already&#32;be&#32;empty.</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monoRPCMethodsCache.Clear();
<anchor xml:id="__photon_network_8cs_source_1l01058"/>01058 
<anchor xml:id="__photon_network_8cs_source_1l01059"/>01059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;up&#32;the&#32;NetworkingClient,&#32;protocol,&#32;etc</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConnectionProtocol&#32;protocol&#32;=&#32;PhotonNetwork.PhotonServerSettings.AppSettings.Protocol;
<anchor xml:id="__photon_network_8cs_source_1l01062"/>01062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;LoadBalancingClient(protocol);
<anchor xml:id="__photon_network_8cs_source_1l01063"/>01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.QuickResendAttempts&#32;=&#32;2;
<anchor xml:id="__photon_network_8cs_source_1l01064"/>01064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.SentCountAllowance&#32;=&#32;9;
<anchor xml:id="__photon_network_8cs_source_1l01065"/>01065 
<anchor xml:id="__photon_network_8cs_source_1l01066"/>01066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aa8680c4d6c86d282b8b2b51219aeaaf0">EventReceived</link>&#32;-=&#32;OnEvent;
<anchor xml:id="__photon_network_8cs_source_1l01067"/>01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aa8680c4d6c86d282b8b2b51219aeaaf0">EventReceived</link>&#32;+=&#32;OnEvent;
<anchor xml:id="__photon_network_8cs_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aae9522748ec91353feab31c31863da50">OpResponseReceived</link>&#32;-=&#32;OnOperation;
<anchor xml:id="__photon_network_8cs_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aae9522748ec91353feab31c31863da50">OpResponseReceived</link>&#32;+=&#32;OnOperation;
<anchor xml:id="__photon_network_8cs_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a1ac458332388e7f1eed468451acc1250">StateChanged</link>&#32;-=&#32;OnClientStateChanged;
<anchor xml:id="__photon_network_8cs_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a1ac458332388e7f1eed468451acc1250">StateChanged</link>&#32;+=&#32;OnClientStateChanged;
<anchor xml:id="__photon_network_8cs_source_1l01072"/>01072 
<anchor xml:id="__photon_network_8cs_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartupStopwatch&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_realtime_1a0b1996e86891e8965cbb883e6a833298">Stopwatch</link>();
<anchor xml:id="__photon_network_8cs_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartupStopwatch.Start();
<anchor xml:id="__photon_network_8cs_source_1l01075"/>01075 
<anchor xml:id="__photon_network_8cs_source_1l01076"/>01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;using&#32;a&#32;singleton&#32;PhotonHandler&#32;to&#32;control&#32;the&#32;new&#32;client&#32;(which&#32;is&#32;also&#32;a&#32;singleton&#32;for&#32;PUN)</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01077"/>01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonHandler.Instance.Client&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>;
<anchor xml:id="__photon_network_8cs_source_1l01078"/>01078 
<anchor xml:id="__photon_network_8cs_source_1l01079"/>01079 
<anchor xml:id="__photon_network_8cs_source_1l01080"/>01080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Application.runInBackground&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1aba60f27e95080952e6038b6911f21b95">RunInBackground</link>;
<anchor xml:id="__photon_network_8cs_source_1l01081"/>01081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ab4dd61936d6f0060d7317607076071bf">PrefabPool</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;DefaultPool();
<anchor xml:id="__photon_network_8cs_source_1l01082"/>01082 
<anchor xml:id="__photon_network_8cs_source_1l01083"/>01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;RPC&#32;shortcut&#32;lookup&#32;creation&#32;(from&#32;list&#32;of&#32;RPCs,&#32;which&#32;is&#32;updated&#32;by&#32;Editor&#32;scripts)</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rpcShortcuts&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;int&gt;(PhotonNetwork.PhotonServerSettings.RpcList.Count);
<anchor xml:id="__photon_network_8cs_source_1l01085"/>01085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;&#32;index&#32;&lt;&#32;PhotonNetwork.PhotonServerSettings.RpcList.Count;&#32;index++)
<anchor xml:id="__photon_network_8cs_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;name&#32;=&#32;PhotonNetwork.PhotonServerSettings.RpcList[index];
<anchor xml:id="__photon_network_8cs_source_1l01088"/>01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rpcShortcuts[name]&#32;=&#32;index;
<anchor xml:id="__photon_network_8cs_source_1l01089"/>01089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01090"/>01090 
<anchor xml:id="__photon_network_8cs_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PUN&#32;custom&#32;types&#32;(typical&#32;for&#32;Unity)</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CustomTypes.Register();
<anchor xml:id="__photon_network_8cs_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01094"/>01094 
<anchor xml:id="__photon_network_8cs_source_1l01122"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3eaa67a8c2af70028949403df6b60ca2">01122</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3eaa67a8c2af70028949403df6b60ca2">ConnectUsingSettings</link>()
<anchor xml:id="__photon_network_8cs_source_1l01123"/>01123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01124"/>01124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01125"/>01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01126"/>01126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Can&apos;t&#32;connect:&#32;Loading&#32;settings&#32;failed.&#32;ServerSettings&#32;asset&#32;must&#32;be&#32;in&#32;any&#32;&apos;Resources&apos;&#32;folder&#32;as:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a91a3d63d8d710b87e145a9b6a18a17e0">ServerSettingsFileName</link>);
<anchor xml:id="__photon_network_8cs_source_1l01127"/>01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01129"/>01129 
<anchor xml:id="__photon_network_8cs_source_1l01130"/>01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3eaa67a8c2af70028949403df6b60ca2">ConnectUsingSettings</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1a1f6b368c3d10655148ebeba8d2376dd0">AppSettings</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1a18d5128f6f14f8a087880e1fb8321e0b">StartInOfflineMode</link>);
<anchor xml:id="__photon_network_8cs_source_1l01131"/>01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01132"/>01132 
<anchor xml:id="__photon_network_8cs_source_1l01133"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae031208b657a2e01d80ddf4b02d0d23f">01133</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae031208b657a2e01d80ddf4b02d0d23f">ConnectUsingSettings</link>(<link linkend="_class_photon_1_1_realtime_1_1_app_settings">AppSettings</link>&#32;appSettings,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;startInOfflineMode&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;<emphasis role="comment">//&#32;parameter&#32;name&#32;hides&#32;static&#32;class&#32;member</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01134"/>01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState&#32;!=&#32;PeerStateValue.Disconnected)
<anchor xml:id="__photon_network_8cs_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ConnectUsingSettings()&#32;failed.&#32;Can&#32;only&#32;connect&#32;while&#32;in&#32;state&#32;&apos;Disconnected&apos;.&#32;Current&#32;state:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState);
<anchor xml:id="__photon_network_8cs_source_1l01138"/>01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1a6c131d595e0ac9be1bd269cb0f02a6b0">AppQuits</link>)
<anchor xml:id="__photon_network_8cs_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Can&apos;t&#32;connect:&#32;Application&#32;is&#32;closing.&#32;Unity&#32;called&#32;OnApplicationQuit().&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01144"/>01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01146"/>01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01147"/>01147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Can&apos;t&#32;connect:&#32;Loading&#32;settings&#32;failed.&#32;ServerSettings&#32;asset&#32;must&#32;be&#32;in&#32;any&#32;&apos;Resources&apos;&#32;folder&#32;as:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a91a3d63d8d710b87e145a9b6a18a17e0">ServerSettingsFileName</link>);
<anchor xml:id="__photon_network_8cs_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01150"/>01150 
<anchor xml:id="__photon_network_8cs_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetupLogging();
<anchor xml:id="__photon_network_8cs_source_1l01152"/>01152 
<anchor xml:id="__photon_network_8cs_source_1l01153"/>01153 
<anchor xml:id="__photon_network_8cs_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.TransportProtocol&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1a6bb34b6a9bf552442a664858a3a7b585">Protocol</link>;
<anchor xml:id="__photon_network_8cs_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a206d4a9ffdfe7a28c29fca49330028c0">ExpectedProtocol</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a921031ab1f0421340cc983de7367390d">EnableProtocolFallback</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1a7ab931b7c7e6b26c2e2b191963359f08">EnableProtocolFallback</link>;
<anchor xml:id="__photon_network_8cs_source_1l01157"/>01157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a82921b3dffeaa7171843af4ed38d22fd">AuthMode</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1a47268f66c6300de3357c63d5013ed629">AuthMode</link>;
<anchor xml:id="__photon_network_8cs_source_1l01158"/>01158 
<anchor xml:id="__photon_network_8cs_source_1l01159"/>01159 
<anchor xml:id="__photon_network_8cs_source_1l01160"/>01160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01161"/>01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1abe04bb852868e8a1bacef7135eb8da6a">AppId</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1afecc1328df070c755034b7ba4711aaba">AppIdRealtime</link>;
<anchor xml:id="__photon_network_8cs_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aab2636705ca41bb0c9380be4f55047f7">GameVersion</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1a9487d653070f22f867a5b1af393049fb">AppVersion</link>;
<anchor xml:id="__photon_network_8cs_source_1l01163"/>01163 
<anchor xml:id="__photon_network_8cs_source_1l01164"/>01164 
<anchor xml:id="__photon_network_8cs_source_1l01165"/>01165 
<anchor xml:id="__photon_network_8cs_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(startInOfflineMode)
<anchor xml:id="__photon_network_8cs_source_1l01167"/>01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01171"/>01171 
<anchor xml:id="__photon_network_8cs_source_1l01172"/>01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;Cleanup&#32;offline&#32;mode</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;someone&#32;can&#32;set&#32;OfflineMode&#32;in&#32;code&#32;and&#32;then&#32;call&#32;ConnectUsingSettings()&#32;with&#32;non-offline&#32;settings.&#32;Warning&#32;for&#32;that&#32;case:</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ConnectUsingSettings()&#32;disabled&#32;the&#32;offline&#32;mode.&#32;No&#32;longer&#32;offline.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01177"/>01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01178"/>01178 
<anchor xml:id="__photon_network_8cs_source_1l01179"/>01179 
<anchor xml:id="__photon_network_8cs_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aee94c9f4346e320bad848012258f62f7">EnableLobbyStatistics</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1a6a40253164067ff5e47f9602c4487020">EnableLobbyStatistics</link>;
<anchor xml:id="__photon_network_8cs_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a29c78e1c8fc0dd7ecc25c54496f8cb45">ProxyServerAddress</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1ad5a888ac8f77f38643fbcdd93441d3b7">ProxyServer</link>;
<anchor xml:id="__photon_network_8cs_source_1l01182"/>01182 
<anchor xml:id="__photon_network_8cs_source_1l01183"/>01183 
<anchor xml:id="__photon_network_8cs_source_1l01184"/>01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1a7da63e6dd4ad55b7071fe9b1e8c8ceb8">IsMasterServerAddress</link>)
<anchor xml:id="__photon_network_8cs_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad9206d09224ee87c9d8eb522efe81e78">AuthValues</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01188"/>01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad9206d09224ee87c9d8eb522efe81e78">AuthValues</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__chat_gui_8cs_1a2507e30a30e7795f768f9883242b3f85">AuthenticationValues</link>(Guid.NewGuid().ToString());
<anchor xml:id="__photon_network_8cs_source_1l01189"/>01189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad9206d09224ee87c9d8eb522efe81e78">AuthValues</link>.<link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a46b9aa634618f6634c8a567cb6dd987c">UserId</link>))
<anchor xml:id="__photon_network_8cs_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01192"/>01192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad9206d09224ee87c9d8eb522efe81e78">AuthValues</link>.<link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a46b9aa634618f6634c8a567cb6dd987c">UserId</link>&#32;=&#32;Guid.NewGuid().ToString();
<anchor xml:id="__photon_network_8cs_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aec6b6dd3b56678c58175e5d2a4cb5661">ConnectToMaster</link>(appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1aaaf35b20648a23624348675b98534ffd">Server</link>,&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1abd604d06777d6039f96a6f456efa07ae">Port</link>,&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1afecc1328df070c755034b7ba4711aaba">AppIdRealtime</link>);
<anchor xml:id="__photon_network_8cs_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01196"/>01196 
<anchor xml:id="__photon_network_8cs_source_1l01197"/>01197 
<anchor xml:id="__photon_network_8cs_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ac268dfc1d7dc2f5311e8bacc849fb855">NameServerPortInAppSettings</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1abd604d06777d6039f96a6f456efa07ae">Port</link>;
<anchor xml:id="__photon_network_8cs_source_1l01199"/>01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1aca67809542a27482138fdc919dfb75f1">IsDefaultNameServer</link>)
<anchor xml:id="__photon_network_8cs_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01201"/>01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a77d85e2e2877d015acbbcf92538e161f">NameServerHost</link>&#32;=&#32;appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1aaaf35b20648a23624348675b98534ffd">Server</link>;
<anchor xml:id="__photon_network_8cs_source_1l01202"/>01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01203"/>01203 
<anchor xml:id="__photon_network_8cs_source_1l01204"/>01204 
<anchor xml:id="__photon_network_8cs_source_1l01205"/>01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1a07f901f2824be811ae440ee9f9874674">IsBestRegion</link>)
<anchor xml:id="__photon_network_8cs_source_1l01206"/>01206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad3c8b7c177d986ceea13dbfb858a4a79">ConnectToBestCloudServer</link>();
<anchor xml:id="__photon_network_8cs_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01209"/>01209 
<anchor xml:id="__photon_network_8cs_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a37971483afa605d0d1383970b11f8cec">ConnectToRegion</link>(appSettings.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1aececc3130ffeb7f76563752ed5eb9751">FixedRegion</link>);
<anchor xml:id="__photon_network_8cs_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01212"/>01212 
<anchor xml:id="__photon_network_8cs_source_1l01213"/>01213 
<anchor xml:id="__photon_network_8cs_source_1l01231"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aec6b6dd3b56678c58175e5d2a4cb5661">01231</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aec6b6dd3b56678c58175e5d2a4cb5661">ConnectToMaster</link>(<emphasis role="keywordtype">string</emphasis>&#32;masterServerAddress,&#32;<emphasis role="keywordtype">int</emphasis>&#32;port,&#32;<emphasis role="keywordtype">string</emphasis>&#32;appID)
<anchor xml:id="__photon_network_8cs_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;refactor&#32;NetworkingClient.LoadBalancingPeer.PeerState&#32;to&#32;not&#32;use&#32;the&#32;peer&#32;but&#32;LBC.connected&#32;or&#32;so</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState&#32;!=&#32;PeerStateValue.Disconnected)
<anchor xml:id="__photon_network_8cs_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ConnectToMaster()&#32;failed.&#32;Can&#32;only&#32;connect&#32;while&#32;in&#32;state&#32;&apos;Disconnected&apos;.&#32;Current&#32;state:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState);
<anchor xml:id="__photon_network_8cs_source_1l01237"/>01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01238"/>01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1a6c131d595e0ac9be1bd269cb0f02a6b0">AppQuits</link>)
<anchor xml:id="__photon_network_8cs_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Can&apos;t&#32;connect:&#32;Application&#32;is&#32;closing.&#32;Unity&#32;called&#32;OnApplicationQuit().&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01244"/>01244 
<anchor xml:id="__photon_network_8cs_source_1l01245"/>01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01246"/>01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01247"/>01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;Cleanup&#32;offline&#32;mode</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ConnectToMaster()&#32;disabled&#32;the&#32;offline&#32;mode.&#32;No&#32;longer&#32;offline.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01249"/>01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01250"/>01250 
<anchor xml:id="__photon_network_8cs_source_1l01251"/>01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>)
<anchor xml:id="__photon_network_8cs_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01253"/>01253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ConnectToMaster()&#32;enabled&#32;IsMessageQueueRunning.&#32;Needs&#32;to&#32;be&#32;able&#32;to&#32;dispatch&#32;incoming&#32;messages.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01255"/>01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01256"/>01256 
<anchor xml:id="__photon_network_8cs_source_1l01257"/>01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetupLogging();
<anchor xml:id="__photon_network_8cs_source_1l01258"/>01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ae6ad7c8a197bec0e05c9d43278a5ebe7">ConnectMethod</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1ae6ad7c8a197bec0e05c9d43278a5ebe7">ConnectMethod</link>.ConnectToMaster;
<anchor xml:id="__photon_network_8cs_source_1l01259"/>01259 
<anchor xml:id="__photon_network_8cs_source_1l01260"/>01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1afb1dbf954d1fb4763193cca47cc25ad8">IsUsingNameServer</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a046d958df5555d172f79dea74a34c6e8">MasterServerAddress</link>&#32;=&#32;(port&#32;==&#32;0)&#32;?&#32;masterServerAddress&#32;:&#32;masterServerAddress&#32;+&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;+&#32;port;
<anchor xml:id="__photon_network_8cs_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1abe04bb852868e8a1bacef7135eb8da6a">AppId</link>&#32;=&#32;appID;
<anchor xml:id="__photon_network_8cs_source_1l01263"/>01263 
<anchor xml:id="__photon_network_8cs_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ad1d932ea902a1b1df7769e9a852077c6">ConnectToMasterServer</link>();
<anchor xml:id="__photon_network_8cs_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01266"/>01266 
<anchor xml:id="__photon_network_8cs_source_1l01267"/>01267 
<anchor xml:id="__photon_network_8cs_source_1l01290"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad3c8b7c177d986ceea13dbfb858a4a79">01290</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad3c8b7c177d986ceea13dbfb858a4a79">ConnectToBestCloudServer</link>()
<anchor xml:id="__photon_network_8cs_source_1l01291"/>01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01292"/>01292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState&#32;!=&#32;PeerStateValue.Disconnected)
<anchor xml:id="__photon_network_8cs_source_1l01293"/>01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01294"/>01294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ConnectToBestCloudServer()&#32;failed.&#32;Can&#32;only&#32;connect&#32;while&#32;in&#32;state&#32;&apos;Disconnected&apos;.&#32;Current&#32;state:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState);
<anchor xml:id="__photon_network_8cs_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1a6c131d595e0ac9be1bd269cb0f02a6b0">AppQuits</link>)
<anchor xml:id="__photon_network_8cs_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Can&apos;t&#32;connect:&#32;Application&#32;is&#32;closing.&#32;Unity&#32;called&#32;OnApplicationQuit().&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01300"/>01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01302"/>01302 
<anchor xml:id="__photon_network_8cs_source_1l01303"/>01303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetupLogging();
<anchor xml:id="__photon_network_8cs_source_1l01304"/>01304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ae6ad7c8a197bec0e05c9d43278a5ebe7">ConnectMethod</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1ae6ad7c8a197bec0e05c9d43278a5ebe7">ConnectMethod</link>.ConnectToBest;
<anchor xml:id="__photon_network_8cs_source_1l01305"/>01305 
<anchor xml:id="__photon_network_8cs_source_1l01306"/>01306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Connecting&#32;to&#32;&quot;Best&#32;Region&quot;&#32;begins&#32;with&#32;connecting&#32;to&#32;the&#32;Name&#32;Server.</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01307"/>01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;couldConnect&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a43756ee75b2346cb002f89aee86ff94d">ConnectToNameServer</link>();
<anchor xml:id="__photon_network_8cs_source_1l01308"/>01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;couldConnect;
<anchor xml:id="__photon_network_8cs_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01310"/>01310 
<anchor xml:id="__photon_network_8cs_source_1l01311"/>01311 
<anchor xml:id="__photon_network_8cs_source_1l01327"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a37971483afa605d0d1383970b11f8cec">01327</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a37971483afa605d0d1383970b11f8cec">ConnectToRegion</link>(<emphasis role="keywordtype">string</emphasis>&#32;region)
<anchor xml:id="__photon_network_8cs_source_1l01328"/>01328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01329"/>01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState&#32;!=&#32;PeerStateValue.Disconnected&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.NameServer)
<anchor xml:id="__photon_network_8cs_source_1l01330"/>01330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01331"/>01331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ConnectToRegion()&#32;failed.&#32;Can&#32;only&#32;connect&#32;while&#32;in&#32;state&#32;&apos;Disconnected&apos;.&#32;Current&#32;state:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState);
<anchor xml:id="__photon_network_8cs_source_1l01332"/>01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01333"/>01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01334"/>01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1a6c131d595e0ac9be1bd269cb0f02a6b0">AppQuits</link>)
<anchor xml:id="__photon_network_8cs_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Can&apos;t&#32;connect:&#32;Application&#32;is&#32;closing.&#32;Unity&#32;called&#32;OnApplicationQuit().&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01339"/>01339 
<anchor xml:id="__photon_network_8cs_source_1l01340"/>01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetupLogging();
<anchor xml:id="__photon_network_8cs_source_1l01341"/>01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ae6ad7c8a197bec0e05c9d43278a5ebe7">ConnectMethod</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1ae6ad7c8a197bec0e05c9d43278a5ebe7">ConnectMethod</link>.ConnectToRegion;
<anchor xml:id="__photon_network_8cs_source_1l01342"/>01342 
<anchor xml:id="__photon_network_8cs_source_1l01343"/>01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(region))
<anchor xml:id="__photon_network_8cs_source_1l01344"/>01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a8db8b6caf7819906b58b59fb0e31f63c">ConnectToRegionMaster</link>(region);
<anchor xml:id="__photon_network_8cs_source_1l01346"/>01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01347"/>01347 
<anchor xml:id="__photon_network_8cs_source_1l01348"/>01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01350"/>01350 
<anchor xml:id="__photon_network_8cs_source_1l01351"/>01351 
<anchor xml:id="__photon_network_8cs_source_1l01362"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a1da1c658340e7ecf28575b720104b122">01362</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a1da1c658340e7ecf28575b720104b122">Disconnect</link>()
<anchor xml:id="__photon_network_8cs_source_1l01363"/>01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01364"/>01364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01365"/>01365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offlineModeRoom&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a50b56ed2bd694735fe5d4745ea2f5588">State</link>&#32;=&#32;<link linkend="_group__public_api_1ga5500bb7cf5b4d5493f545a2fcb02ae16">ClientState</link>.Disconnecting;
<anchor xml:id="__photon_network_8cs_source_1l01369"/>01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1affac531c1eb7a4d77326135150f19b7e">OnStatusChanged</link>(StatusCode.Disconnect);
<anchor xml:id="__photon_network_8cs_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01371"/>01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01372"/>01372 
<anchor xml:id="__photon_network_8cs_source_1l01373"/>01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01374"/>01374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01375"/>01375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;&#32;<emphasis role="comment">//&#32;Surpress&#32;error&#32;when&#32;quitting&#32;playmode&#32;in&#32;the&#32;editor</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01376"/>01376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01377"/>01377 
<anchor xml:id="__photon_network_8cs_source_1l01378"/>01378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab71b80fa9e4f0e5644de49ec9b01853d">Disconnect</link>();
<anchor xml:id="__photon_network_8cs_source_1l01379"/>01379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01380"/>01380 
<anchor xml:id="__photon_network_8cs_source_1l01387"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1afd132f2621f17054934ed5f1296997ed">01387</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1afd132f2621f17054934ed5f1296997ed">Reconnect</link>()
<anchor xml:id="__photon_network_8cs_source_1l01388"/>01388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01389"/>01389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a046d958df5555d172f79dea74a34c6e8">MasterServerAddress</link>))
<anchor xml:id="__photon_network_8cs_source_1l01390"/>01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01391"/>01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Reconnect()&#32;failed.&#32;It&#32;seems&#32;the&#32;client&#32;wasn&apos;t&#32;connected&#32;before?!&#32;Current&#32;state:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState);
<anchor xml:id="__photon_network_8cs_source_1l01392"/>01392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01393"/>01393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01394"/>01394 
<anchor xml:id="__photon_network_8cs_source_1l01395"/>01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState&#32;!=&#32;PeerStateValue.Disconnected)
<anchor xml:id="__photon_network_8cs_source_1l01396"/>01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Reconnect()&#32;failed.&#32;Can&#32;only&#32;connect&#32;while&#32;in&#32;state&#32;&apos;Disconnected&apos;.&#32;Current&#32;state:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState);
<anchor xml:id="__photon_network_8cs_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01399"/>01399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01400"/>01400 
<anchor xml:id="__photon_network_8cs_source_1l01401"/>01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01402"/>01402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01403"/>01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;Cleanup&#32;offline&#32;mode</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01404"/>01404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Reconnect()&#32;disabled&#32;the&#32;offline&#32;mode.&#32;No&#32;longer&#32;offline.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01406"/>01406 
<anchor xml:id="__photon_network_8cs_source_1l01407"/>01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>)
<anchor xml:id="__photon_network_8cs_source_1l01408"/>01408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01409"/>01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01410"/>01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Reconnect()&#32;enabled&#32;IsMessageQueueRunning.&#32;Needs&#32;to&#32;be&#32;able&#32;to&#32;dispatch&#32;incoming&#32;messages.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01411"/>01411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01412"/>01412 
<anchor xml:id="__photon_network_8cs_source_1l01413"/>01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1afb1dbf954d1fb4763193cca47cc25ad8">IsUsingNameServer</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01414"/>01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1abab1abad952ecfcbb9cc91af7aa2e568">ReconnectToMaster</link>();
<anchor xml:id="__photon_network_8cs_source_1l01415"/>01415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01416"/>01416 
<anchor xml:id="__photon_network_8cs_source_1l01417"/>01417 
<anchor xml:id="__photon_network_8cs_source_1l01421"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a9affbaea306927af8c46eb965ebe8051">01421</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a9affbaea306927af8c46eb965ebe8051">NetworkStatisticsReset</link>()
<anchor xml:id="__photon_network_8cs_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.TrafficStatsReset();
<anchor xml:id="__photon_network_8cs_source_1l01424"/>01424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01425"/>01425 
<anchor xml:id="__photon_network_8cs_source_1l01426"/>01426 
<anchor xml:id="__photon_network_8cs_source_1l01431"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0f9f4fff21c90ab767b95ac2fbad422b">01431</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0f9f4fff21c90ab767b95ac2fbad422b">NetworkStatisticsToString</link>()
<anchor xml:id="__photon_network_8cs_source_1l01432"/>01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01434"/>01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01435"/>01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Offline&#32;or&#32;in&#32;OfflineMode.&#32;No&#32;VitalStats&#32;available.&quot;</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01437"/>01437 
<anchor xml:id="__photon_network_8cs_source_1l01438"/>01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.VitalStatsToString(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01439"/>01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01440"/>01440 
<anchor xml:id="__photon_network_8cs_source_1l01441"/>01441 
<anchor xml:id="__photon_network_8cs_source_1l01446"/>01446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;VerifyCanUseNetwork()
<anchor xml:id="__photon_network_8cs_source_1l01447"/>01447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01448"/>01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abfb28d4211e3d74568e4250edf231b0f">IsConnected</link>)
<anchor xml:id="__photon_network_8cs_source_1l01449"/>01449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01450"/>01450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01451"/>01451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01452"/>01452 
<anchor xml:id="__photon_network_8cs_source_1l01453"/>01453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Cannot&#32;send&#32;messages&#32;when&#32;not&#32;connected.&#32;Either&#32;connect&#32;to&#32;Photon&#32;OR&#32;use&#32;offline&#32;mode!&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01454"/>01454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01455"/>01455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01456"/>01456 
<anchor xml:id="__photon_network_8cs_source_1l01457"/>01457 
<anchor xml:id="__photon_network_8cs_source_1l01462"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac8651f3c6c9b6527030eff1c15d2b796">01462</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac8651f3c6c9b6527030eff1c15d2b796">GetPing</link>()
<anchor xml:id="__photon_network_8cs_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.RoundTripTime;
<anchor xml:id="__photon_network_8cs_source_1l01465"/>01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01466"/>01466 
<anchor xml:id="__photon_network_8cs_source_1l01469"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a27f9f9fce63f7130b2aeff5eb3d9efed">01469</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a27f9f9fce63f7130b2aeff5eb3d9efed">FetchServerTimestamp</link>()
<anchor xml:id="__photon_network_8cs_source_1l01470"/>01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01471"/>01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01472"/>01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01473"/>01473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.FetchServerTimestamp();
<anchor xml:id="__photon_network_8cs_source_1l01474"/>01474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01475"/>01475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01476"/>01476 
<anchor xml:id="__photon_network_8cs_source_1l01486"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac7905c06b48747ec4b86d0b75107ddc4">01486</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac7905c06b48747ec4b86d0b75107ddc4">SendAllOutgoingCommands</link>()
<anchor xml:id="__photon_network_8cs_source_1l01487"/>01487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01488"/>01488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!VerifyCanUseNetwork())
<anchor xml:id="__photon_network_8cs_source_1l01489"/>01489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01490"/>01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01491"/>01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01492"/>01492 
<anchor xml:id="__photon_network_8cs_source_1l01493"/>01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.SendOutgoingCommands())
<anchor xml:id="__photon_network_8cs_source_1l01494"/>01494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01495"/>01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01496"/>01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01497"/>01497 
<anchor xml:id="__photon_network_8cs_source_1l01501"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a988b591a3d496808e1d7c79a5bfaa70e">01501</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a988b591a3d496808e1d7c79a5bfaa70e">CloseConnection</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;kickPlayer)
<anchor xml:id="__photon_network_8cs_source_1l01502"/>01502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01503"/>01503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!VerifyCanUseNetwork())
<anchor xml:id="__photon_network_8cs_source_1l01504"/>01504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01505"/>01505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01506"/>01506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01507"/>01507 
<anchor xml:id="__photon_network_8cs_source_1l01508"/>01508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1c7ae163d79676520bd4bd06fff447d">EnableCloseConnection</link>)
<anchor xml:id="__photon_network_8cs_source_1l01509"/>01509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01510"/>01510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;CloseConnection&#32;is&#32;disabled.&#32;No&#32;need&#32;to&#32;call&#32;it.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01511"/>01511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01512"/>01512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01513"/>01513 
<anchor xml:id="__photon_network_8cs_source_1l01514"/>01514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a650042ff3d147ed8cd559b6258ce238d">IsMasterClient</link>)
<anchor xml:id="__photon_network_8cs_source_1l01515"/>01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01516"/>01516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;CloseConnection:&#32;Only&#32;the&#32;masterclient&#32;can&#32;kick&#32;another&#32;player.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01517"/>01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01518"/>01518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01519"/>01519 
<anchor xml:id="__photon_network_8cs_source_1l01520"/>01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(kickPlayer&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01521"/>01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01522"/>01522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;CloseConnection:&#32;No&#32;such&#32;player&#32;connected!&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01523"/>01523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01524"/>01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01525"/>01525 
<anchor xml:id="__photon_network_8cs_source_1l01526"/>01526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_raise_event_options">RaiseEventOptions</link>&#32;options&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_raise_event_options">RaiseEventOptions</link>()&#32;{&#32;TargetActors&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;{&#32;kickPlayer.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>&#32;}&#32;};
<anchor xml:id="__photon_network_8cs_source_1l01527"/>01527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a620e340e8f78a51871d94d5868ffdb4c">OpRaiseEvent</link>(PunEvent.CloseConnection,&#32;<emphasis role="keyword">null</emphasis>,&#32;options,&#32;SendOptions.SendReliable);
<anchor xml:id="__photon_network_8cs_source_1l01528"/>01528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01529"/>01529 
<anchor xml:id="__photon_network_8cs_source_1l01530"/>01530 
<anchor xml:id="__photon_network_8cs_source_1l01566"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a79ead2d883073a16d4ae87d973499960">01566</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a79ead2d883073a16d4ae87d973499960">SetMasterClient</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;masterClientPlayer)
<anchor xml:id="__photon_network_8cs_source_1l01567"/>01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1acd3228520b05c60cddddb9a3b75f3b1d">InRoom</link>&#32;||&#32;!VerifyCanUseNetwork()&#32;||&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01570"/>01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa8af6239914ab71acd29b56e9610f534">LogLevel</link>&#32;==&#32;<link linkend="_group__public_api_1ga5a8128eaeb2f346d4cceb57d48caf9c1">PunLogLevel</link>.Informational)&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(<emphasis role="stringliteral">&quot;Can&#32;not&#32;SetMasterClient().&#32;Not&#32;in&#32;room&#32;or&#32;in&#32;OfflineMode.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01571"/>01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01572"/>01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01573"/>01573 
<anchor xml:id="__photon_network_8cs_source_1l01574"/>01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1a9b3518b40c0fb043fe61ecf49e7cef59">SetMasterClient</link>(masterClientPlayer);
<anchor xml:id="__photon_network_8cs_source_1l01575"/>01575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01576"/>01576 
<anchor xml:id="__photon_network_8cs_source_1l01577"/>01577 
<anchor xml:id="__photon_network_8cs_source_1l01595"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aff48055ef5c0ffb25fad9c8a8e04f50f">01595</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aff48055ef5c0ffb25fad9c8a8e04f50f">JoinRandomRoom</link>()
<anchor xml:id="__photon_network_8cs_source_1l01596"/>01596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01597"/>01597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aff48055ef5c0ffb25fad9c8a8e04f50f">JoinRandomRoom</link>(<emphasis role="keyword">null</emphasis>,&#32;0,&#32;<link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fc">MatchmakingMode</link>.FillRoom,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01598"/>01598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01599"/>01599 
<anchor xml:id="__photon_network_8cs_source_1l01620"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a67795a86a08f607bcb6053dbdb5ddef9">01620</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a67795a86a08f607bcb6053dbdb5ddef9">JoinRandomRoom</link>(<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;expectedCustomRoomProperties,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;expectedMaxPlayers)
<anchor xml:id="__photon_network_8cs_source_1l01621"/>01621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01622"/>01622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aff48055ef5c0ffb25fad9c8a8e04f50f">JoinRandomRoom</link>(expectedCustomRoomProperties,&#32;expectedMaxPlayers,&#32;<link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fc">MatchmakingMode</link>.FillRoom,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01623"/>01623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01624"/>01624 
<anchor xml:id="__photon_network_8cs_source_1l01649"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a875d4e8ae4a362db598eac33b5fb5313">01649</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a875d4e8ae4a362db598eac33b5fb5313">JoinRandomRoom</link>(<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;expectedCustomRoomProperties,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;expectedMaxPlayers,&#32;<link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fc">MatchmakingMode</link>&#32;matchingType,&#32;<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link>&#32;typedLobby,&#32;<emphasis role="keywordtype">string</emphasis>&#32;sqlLobbyFilter,&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;expectedUsers&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01650"/>01650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01651"/>01651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01652"/>01652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01653"/>01653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offlineModeRoom&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01654"/>01654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01655"/>01655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinRandomRoom&#32;failed.&#32;In&#32;offline&#32;mode&#32;you&#32;still&#32;have&#32;to&#32;leave&#32;a&#32;room&#32;to&#32;enter&#32;another.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01656"/>01656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01657"/>01657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01658"/>01658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnterOfflineRoom(<emphasis role="stringliteral">&quot;offline&#32;room&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01659"/>01659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01660"/>01660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01661"/>01661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.MasterServer&#32;||&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>)
<anchor xml:id="__photon_network_8cs_source_1l01662"/>01662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01663"/>01663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinRandomRoom&#32;failed.&#32;Client&#32;is&#32;on&#32;&quot;</emphasis>+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>+&#32;<emphasis role="stringliteral">&quot;&#32;(must&#32;be&#32;Master&#32;Server&#32;for&#32;matchmaking)&quot;</emphasis>&#32;+&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;and&#32;ready&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;but&#32;not&#32;ready&#32;for&#32;operations&#32;(State:&#32;&quot;</emphasis>+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a50b56ed2bd694735fe5d4745ea2f5588">State</link>&#32;+&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>)&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Wait&#32;for&#32;callback:&#32;OnJoinedLobby&#32;or&#32;OnConnectedToMaster.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01664"/>01664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01665"/>01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01666"/>01666 
<anchor xml:id="__photon_network_8cs_source_1l01667"/>01667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typedLobby&#32;=&#32;typedLobby&#32;??&#32;((<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5485a4761f9495ade17a08f159080d71">InLobby</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af8177ede1c6805e80c28906003106560">CurrentLobby</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>);&#32;&#32;<emphasis role="comment">//&#32;use&#32;given&#32;lobby,&#32;or&#32;active&#32;lobby&#32;(if&#32;any&#32;active)&#32;or&#32;none</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01668"/>01668 
<anchor xml:id="__photon_network_8cs_source_1l01669"/>01669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params">OpJoinRandomRoomParams</link>&#32;opParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params">OpJoinRandomRoomParams</link>();
<anchor xml:id="__photon_network_8cs_source_1l01670"/>01670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1a86c2d918a1821b6e65020c3641dd18b4">ExpectedCustomRoomProperties</link>&#32;=&#32;expectedCustomRoomProperties;
<anchor xml:id="__photon_network_8cs_source_1l01671"/>01671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1a0f047f8f9c9da58a21ab152197e3ddde">ExpectedMaxPlayers</link>&#32;=&#32;expectedMaxPlayers;
<anchor xml:id="__photon_network_8cs_source_1l01672"/>01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1a6f0b6fb8188a02a4ee3f331fb4b58886">MatchingType</link>&#32;=&#32;matchingType;
<anchor xml:id="__photon_network_8cs_source_1l01673"/>01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1a9c079120a9ffcc8006bf2cac60466f1a">TypedLobby</link>&#32;=&#32;typedLobby;
<anchor xml:id="__photon_network_8cs_source_1l01674"/>01674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1aebc5c362efa6790cea9ceb6f7cae3167">SqlLobbyFilter</link>&#32;=&#32;sqlLobbyFilter;
<anchor xml:id="__photon_network_8cs_source_1l01675"/>01675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1afb9b841f0da676e1950d4ad85225e503">ExpectedUsers</link>&#32;=&#32;expectedUsers;
<anchor xml:id="__photon_network_8cs_source_1l01676"/>01676 
<anchor xml:id="__photon_network_8cs_source_1l01677"/>01677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ad00ac5adf15d214a91a2762a99f07cf6">OpJoinRandomRoom</link>(opParams);
<anchor xml:id="__photon_network_8cs_source_1l01678"/>01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01679"/>01679 
<anchor xml:id="__photon_network_8cs_source_1l01680"/>01680 
<anchor xml:id="__photon_network_8cs_source_1l01705"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a32be0c358e305d46ceb84e81732be0db">01705</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a32be0c358e305d46ceb84e81732be0db">JoinRandomOrCreateRoom</link>(<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;expectedCustomRoomProperties&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;expectedMaxPlayers&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fc">MatchmakingMode</link>&#32;matchingType&#32;=&#32;<link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fc">MatchmakingMode</link>.FillRoom,&#32;<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link>&#32;typedLobby&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>&#32;sqlLobbyFilter&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>&#32;roomName&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_photon_1_1_realtime_1_1_room_options">RoomOptions</link>&#32;roomOptions&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;expectedUsers&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01706"/>01706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01707"/>01707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01708"/>01708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01709"/>01709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offlineModeRoom&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01710"/>01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01711"/>01711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinRandomOrCreateRoom&#32;failed.&#32;In&#32;offline&#32;mode&#32;you&#32;still&#32;have&#32;to&#32;leave&#32;a&#32;room&#32;to&#32;enter&#32;another.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01712"/>01712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01713"/>01713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01714"/>01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnterOfflineRoom(<emphasis role="stringliteral">&quot;offline&#32;room&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01715"/>01715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01716"/>01716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01717"/>01717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.MasterServer&#32;||&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>)
<anchor xml:id="__photon_network_8cs_source_1l01718"/>01718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01719"/>01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinRandomOrCreateRoom&#32;failed.&#32;Client&#32;is&#32;on&#32;&quot;</emphasis>+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>+&#32;<emphasis role="stringliteral">&quot;&#32;(must&#32;be&#32;Master&#32;Server&#32;for&#32;matchmaking)&quot;</emphasis>&#32;+&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;and&#32;ready&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;but&#32;not&#32;ready&#32;for&#32;operations&#32;(State:&#32;&quot;</emphasis>+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a50b56ed2bd694735fe5d4745ea2f5588">State</link>&#32;+&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>)&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Wait&#32;for&#32;callback:&#32;OnJoinedLobby&#32;or&#32;OnConnectedToMaster.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01720"/>01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01721"/>01721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01722"/>01722 
<anchor xml:id="__photon_network_8cs_source_1l01723"/>01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typedLobby&#32;=&#32;typedLobby&#32;??&#32;((<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5485a4761f9495ade17a08f159080d71">InLobby</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af8177ede1c6805e80c28906003106560">CurrentLobby</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>);&#32;<emphasis role="comment">//&#32;use&#32;given&#32;lobby,&#32;or&#32;active&#32;lobby&#32;(if&#32;any&#32;active)&#32;or&#32;none</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01724"/>01724 
<anchor xml:id="__photon_network_8cs_source_1l01725"/>01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params">OpJoinRandomRoomParams</link>&#32;opParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params">OpJoinRandomRoomParams</link>();
<anchor xml:id="__photon_network_8cs_source_1l01726"/>01726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1a86c2d918a1821b6e65020c3641dd18b4">ExpectedCustomRoomProperties</link>&#32;=&#32;expectedCustomRoomProperties;
<anchor xml:id="__photon_network_8cs_source_1l01727"/>01727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1a0f047f8f9c9da58a21ab152197e3ddde">ExpectedMaxPlayers</link>&#32;=&#32;expectedMaxPlayers;
<anchor xml:id="__photon_network_8cs_source_1l01728"/>01728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1a6f0b6fb8188a02a4ee3f331fb4b58886">MatchingType</link>&#32;=&#32;matchingType;
<anchor xml:id="__photon_network_8cs_source_1l01729"/>01729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1a9c079120a9ffcc8006bf2cac60466f1a">TypedLobby</link>&#32;=&#32;typedLobby;
<anchor xml:id="__photon_network_8cs_source_1l01730"/>01730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1aebc5c362efa6790cea9ceb6f7cae3167">SqlLobbyFilter</link>&#32;=&#32;sqlLobbyFilter;
<anchor xml:id="__photon_network_8cs_source_1l01731"/>01731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params_1afb9b841f0da676e1950d4ad85225e503">ExpectedUsers</link>&#32;=&#32;expectedUsers;
<anchor xml:id="__photon_network_8cs_source_1l01732"/>01732 
<anchor xml:id="__photon_network_8cs_source_1l01733"/>01733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link>&#32;enterRoomParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link>();
<anchor xml:id="__photon_network_8cs_source_1l01734"/>01734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enterRoomParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a938251ad726bf0d07e81f1dc83198d30">RoomName</link>&#32;=&#32;roomName;
<anchor xml:id="__photon_network_8cs_source_1l01735"/>01735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enterRoomParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1aec933f38f57348906a9fb051b28988ff">RoomOptions</link>&#32;=&#32;roomOptions;
<anchor xml:id="__photon_network_8cs_source_1l01736"/>01736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enterRoomParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a9060e42f65e799428e1faa7bdf97ebb5">Lobby</link>&#32;=&#32;typedLobby;
<anchor xml:id="__photon_network_8cs_source_1l01737"/>01737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enterRoomParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a3b06c3f888fb0fdb2fd88149bd1a01bc">ExpectedUsers</link>&#32;=&#32;expectedUsers;
<anchor xml:id="__photon_network_8cs_source_1l01738"/>01738 
<anchor xml:id="__photon_network_8cs_source_1l01739"/>01739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a80955004ad4049b8a08400e634618f1a">OpJoinRandomOrCreateRoom</link>(opParams,&#32;enterRoomParams);
<anchor xml:id="__photon_network_8cs_source_1l01740"/>01740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01741"/>01741 
<anchor xml:id="__photon_network_8cs_source_1l01742"/>01742 
<anchor xml:id="__photon_network_8cs_source_1l01768"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a755417a54b55bdb92361dc74b4a09953">01768</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a755417a54b55bdb92361dc74b4a09953">CreateRoom</link>(<emphasis role="keywordtype">string</emphasis>&#32;roomName,&#32;<link linkend="_class_photon_1_1_realtime_1_1_room_options">RoomOptions</link>&#32;roomOptions&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link>&#32;typedLobby&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;expectedUsers&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01769"/>01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01770"/>01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01771"/>01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01772"/>01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offlineModeRoom&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01773"/>01773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01774"/>01774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;CreateRoom&#32;failed.&#32;In&#32;offline&#32;mode&#32;you&#32;still&#32;have&#32;to&#32;leave&#32;a&#32;room&#32;to&#32;enter&#32;another.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01775"/>01775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01776"/>01776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01777"/>01777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnterOfflineRoom(roomName,&#32;roomOptions,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01778"/>01778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01779"/>01779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01780"/>01780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.MasterServer&#32;||&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>)
<anchor xml:id="__photon_network_8cs_source_1l01781"/>01781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01782"/>01782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;CreateRoom&#32;failed.&#32;Client&#32;is&#32;on&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;(must&#32;be&#32;Master&#32;Server&#32;for&#32;matchmaking)&quot;</emphasis>&#32;+&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;and&#32;ready&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;but&#32;not&#32;ready&#32;for&#32;operations&#32;(State:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a50b56ed2bd694735fe5d4745ea2f5588">State</link>&#32;+&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>)&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Wait&#32;for&#32;callback:&#32;OnJoinedLobby&#32;or&#32;OnConnectedToMaster.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01783"/>01783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01784"/>01784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01785"/>01785 
<anchor xml:id="__photon_network_8cs_source_1l01786"/>01786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typedLobby&#32;=&#32;typedLobby&#32;??&#32;((<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5485a4761f9495ade17a08f159080d71">InLobby</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af8177ede1c6805e80c28906003106560">CurrentLobby</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>);&#32;&#32;<emphasis role="comment">//&#32;use&#32;given&#32;lobby,&#32;or&#32;active&#32;lobby&#32;(if&#32;any&#32;active)&#32;or&#32;none</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01787"/>01787 
<anchor xml:id="__photon_network_8cs_source_1l01788"/>01788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link>&#32;opParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link>();
<anchor xml:id="__photon_network_8cs_source_1l01789"/>01789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a938251ad726bf0d07e81f1dc83198d30">RoomName</link>&#32;=&#32;roomName;
<anchor xml:id="__photon_network_8cs_source_1l01790"/>01790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1aec933f38f57348906a9fb051b28988ff">RoomOptions</link>&#32;=&#32;roomOptions;
<anchor xml:id="__photon_network_8cs_source_1l01791"/>01791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a9060e42f65e799428e1faa7bdf97ebb5">Lobby</link>&#32;=&#32;typedLobby;
<anchor xml:id="__photon_network_8cs_source_1l01792"/>01792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a3b06c3f888fb0fdb2fd88149bd1a01bc">ExpectedUsers</link>&#32;=&#32;expectedUsers;
<anchor xml:id="__photon_network_8cs_source_1l01793"/>01793 
<anchor xml:id="__photon_network_8cs_source_1l01794"/>01794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ac5360b52a4284e623f41b0f870843342">OpCreateRoom</link>(opParams);
<anchor xml:id="__photon_network_8cs_source_1l01795"/>01795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01796"/>01796 
<anchor xml:id="__photon_network_8cs_source_1l01797"/>01797 
<anchor xml:id="__photon_network_8cs_source_1l01836"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a1a8502c779302e9b39db304e4f533feb">01836</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a1a8502c779302e9b39db304e4f533feb">JoinOrCreateRoom</link>(<emphasis role="keywordtype">string</emphasis>&#32;roomName,&#32;<link linkend="_class_photon_1_1_realtime_1_1_room_options">RoomOptions</link>&#32;roomOptions,&#32;<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link>&#32;typedLobby,&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;expectedUsers&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01837"/>01837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01838"/>01838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01839"/>01839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01840"/>01840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offlineModeRoom&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01841"/>01841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01842"/>01842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinOrCreateRoom&#32;failed.&#32;In&#32;offline&#32;mode&#32;you&#32;still&#32;have&#32;to&#32;leave&#32;a&#32;room&#32;to&#32;enter&#32;another.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01843"/>01843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01844"/>01844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01845"/>01845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnterOfflineRoom(roomName,&#32;roomOptions,&#32;<emphasis role="keyword">true</emphasis>);&#32;&#32;<emphasis role="comment">//&#32;in&#32;offline&#32;mode,&#32;JoinOrCreateRoom&#32;assumes&#32;you&#32;create&#32;the&#32;room</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01846"/>01846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01847"/>01847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01848"/>01848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.MasterServer&#32;||&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>)
<anchor xml:id="__photon_network_8cs_source_1l01849"/>01849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01850"/>01850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinOrCreateRoom&#32;failed.&#32;Client&#32;is&#32;on&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;(must&#32;be&#32;Master&#32;Server&#32;for&#32;matchmaking)&quot;</emphasis>&#32;+&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;and&#32;ready&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;but&#32;not&#32;ready&#32;for&#32;operations&#32;(State:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a50b56ed2bd694735fe5d4745ea2f5588">State</link>&#32;+&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>)&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Wait&#32;for&#32;callback:&#32;OnJoinedLobby&#32;or&#32;OnConnectedToMaster.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01851"/>01851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01852"/>01852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01853"/>01853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(roomName))
<anchor xml:id="__photon_network_8cs_source_1l01854"/>01854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01855"/>01855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinOrCreateRoom&#32;failed.&#32;A&#32;roomname&#32;is&#32;required.&#32;If&#32;you&#32;don&apos;t&#32;know&#32;one,&#32;how&#32;will&#32;you&#32;join?&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01856"/>01856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01857"/>01857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01858"/>01858 
<anchor xml:id="__photon_network_8cs_source_1l01859"/>01859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typedLobby&#32;=&#32;typedLobby&#32;??&#32;((<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5485a4761f9495ade17a08f159080d71">InLobby</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af8177ede1c6805e80c28906003106560">CurrentLobby</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>);&#32;&#32;<emphasis role="comment">//&#32;use&#32;given&#32;lobby,&#32;or&#32;active&#32;lobby&#32;(if&#32;any&#32;active)&#32;or&#32;none</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01860"/>01860 
<anchor xml:id="__photon_network_8cs_source_1l01861"/>01861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link>&#32;opParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link>();
<anchor xml:id="__photon_network_8cs_source_1l01862"/>01862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a938251ad726bf0d07e81f1dc83198d30">RoomName</link>&#32;=&#32;roomName;
<anchor xml:id="__photon_network_8cs_source_1l01863"/>01863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1aec933f38f57348906a9fb051b28988ff">RoomOptions</link>&#32;=&#32;roomOptions;
<anchor xml:id="__photon_network_8cs_source_1l01864"/>01864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a9060e42f65e799428e1faa7bdf97ebb5">Lobby</link>&#32;=&#32;typedLobby;
<anchor xml:id="__photon_network_8cs_source_1l01865"/>01865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1ac921747821ec88a1e07b7fbd2ea496bc">PlayerProperties</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a813cf3bb802339d81c408e022cecaf0f">CustomProperties</link>;
<anchor xml:id="__photon_network_8cs_source_1l01866"/>01866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a3b06c3f888fb0fdb2fd88149bd1a01bc">ExpectedUsers</link>&#32;=&#32;expectedUsers;
<anchor xml:id="__photon_network_8cs_source_1l01867"/>01867 
<anchor xml:id="__photon_network_8cs_source_1l01868"/>01868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a2a3dfdab131b12d557f582b6a89fbf9f">OpJoinOrCreateRoom</link>(opParams);
<anchor xml:id="__photon_network_8cs_source_1l01869"/>01869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01870"/>01870 
<anchor xml:id="__photon_network_8cs_source_1l01871"/>01871 
<anchor xml:id="__photon_network_8cs_source_1l01901"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae4640a50e5a883807370aaa4a4d6102d">01901</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae4640a50e5a883807370aaa4a4d6102d">JoinRoom</link>(<emphasis role="keywordtype">string</emphasis>&#32;roomName,&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;expectedUsers&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01902"/>01902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01903"/>01903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01904"/>01904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01905"/>01905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offlineModeRoom&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l01906"/>01906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01907"/>01907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinRoom&#32;failed.&#32;In&#32;offline&#32;mode&#32;you&#32;still&#32;have&#32;to&#32;leave&#32;a&#32;room&#32;to&#32;enter&#32;another.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01908"/>01908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01909"/>01909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01910"/>01910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnterOfflineRoom(roomName,&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01911"/>01911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01912"/>01912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01913"/>01913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.MasterServer&#32;||&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>)
<anchor xml:id="__photon_network_8cs_source_1l01914"/>01914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01915"/>01915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinRoom&#32;failed.&#32;Client&#32;is&#32;on&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;(must&#32;be&#32;Master&#32;Server&#32;for&#32;matchmaking)&quot;</emphasis>&#32;+&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;and&#32;ready&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;but&#32;not&#32;ready&#32;for&#32;operations&#32;(State:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a50b56ed2bd694735fe5d4745ea2f5588">State</link>&#32;+&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>)&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Wait&#32;for&#32;callback:&#32;OnJoinedLobby&#32;or&#32;OnConnectedToMaster.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01916"/>01916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01917"/>01917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01918"/>01918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(roomName))
<anchor xml:id="__photon_network_8cs_source_1l01919"/>01919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01920"/>01920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;JoinRoom&#32;failed.&#32;A&#32;roomname&#32;is&#32;required.&#32;If&#32;you&#32;don&apos;t&#32;know&#32;one,&#32;how&#32;will&#32;you&#32;join?&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01921"/>01921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01922"/>01922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01923"/>01923 
<anchor xml:id="__photon_network_8cs_source_1l01924"/>01924 
<anchor xml:id="__photon_network_8cs_source_1l01925"/>01925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link>&#32;opParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link>();
<anchor xml:id="__photon_network_8cs_source_1l01926"/>01926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a938251ad726bf0d07e81f1dc83198d30">RoomName</link>&#32;=&#32;roomName;
<anchor xml:id="__photon_network_8cs_source_1l01927"/>01927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opParams.<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params_1a3b06c3f888fb0fdb2fd88149bd1a01bc">ExpectedUsers</link>&#32;=&#32;expectedUsers;
<anchor xml:id="__photon_network_8cs_source_1l01928"/>01928 
<anchor xml:id="__photon_network_8cs_source_1l01929"/>01929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a0dc81af9d3bde45838728c93f906c2ca">OpJoinRoom</link>(opParams);
<anchor xml:id="__photon_network_8cs_source_1l01930"/>01930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01931"/>01931 
<anchor xml:id="__photon_network_8cs_source_1l01932"/>01932 
<anchor xml:id="__photon_network_8cs_source_1l01953"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1af4b1a8a87b39134b946ae85128e9d5e1">01953</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1af4b1a8a87b39134b946ae85128e9d5e1">RejoinRoom</link>(<emphasis role="keywordtype">string</emphasis>&#32;roomName)
<anchor xml:id="__photon_network_8cs_source_1l01954"/>01954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01955"/>01955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01956"/>01956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01957"/>01957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;RejoinRoom&#32;failed&#32;due&#32;to&#32;offline&#32;mode.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01958"/>01958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01959"/>01959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01960"/>01960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.MasterServer&#32;||&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>)
<anchor xml:id="__photon_network_8cs_source_1l01961"/>01961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01962"/>01962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;RejoinRoom&#32;failed.&#32;Client&#32;is&#32;on&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ab4ed419a9c38916dfe941ed16c8ec224">Server</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;(must&#32;be&#32;Master&#32;Server&#32;for&#32;matchmaking)&quot;</emphasis>&#32;+&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a479bd31a8df0d484a8b2a665e4f41b18">IsConnectedAndReady</link>&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;and&#32;ready&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;but&#32;not&#32;ready&#32;for&#32;operations&#32;(State:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a50b56ed2bd694735fe5d4745ea2f5588">State</link>&#32;+&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>)&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Wait&#32;for&#32;callback:&#32;OnJoinedLobby&#32;or&#32;OnConnectedToMaster.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01963"/>01963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01964"/>01964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01965"/>01965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(roomName))
<anchor xml:id="__photon_network_8cs_source_1l01966"/>01966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01967"/>01967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;RejoinRoom&#32;failed.&#32;A&#32;roomname&#32;is&#32;required.&#32;If&#32;you&#32;don&apos;t&#32;know&#32;one,&#32;how&#32;will&#32;you&#32;join?&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l01968"/>01968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01969"/>01969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01970"/>01970 
<anchor xml:id="__photon_network_8cs_source_1l01971"/>01971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1afde54809fa49258427c1c31a34264fd6">OpRejoinRoom</link>(roomName);
<anchor xml:id="__photon_network_8cs_source_1l01972"/>01972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01973"/>01973 
<anchor xml:id="__photon_network_8cs_source_1l01974"/>01974 
<anchor xml:id="__photon_network_8cs_source_1l01989"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae42cf1f2e37a5c3631e2537b35d511bc">01989</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae42cf1f2e37a5c3631e2537b35d511bc">ReconnectAndRejoin</link>()
<anchor xml:id="__photon_network_8cs_source_1l01990"/>01990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01991"/>01991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState&#32;!=&#32;PeerStateValue.Disconnected)
<anchor xml:id="__photon_network_8cs_source_1l01992"/>01992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01993"/>01993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ReconnectAndRejoin()&#32;failed.&#32;Can&#32;only&#32;connect&#32;while&#32;in&#32;state&#32;&apos;Disconnected&apos;.&#32;Current&#32;state:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1af904931c4eec2bbc5f34ee8d15d0b807">LoadBalancingPeer</link>.PeerState);
<anchor xml:id="__photon_network_8cs_source_1l01994"/>01994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l01995"/>01995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l01996"/>01996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l01997"/>01997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l01998"/>01998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="comment">//&#32;Cleanup&#32;offline&#32;mode</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l01999"/>01999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ReconnectAndRejoin()&#32;disabled&#32;the&#32;offline&#32;mode.&#32;No&#32;longer&#32;offline.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02000"/>02000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02001"/>02001 
<anchor xml:id="__photon_network_8cs_source_1l02002"/>02002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>)
<anchor xml:id="__photon_network_8cs_source_1l02003"/>02003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02004"/>02004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02005"/>02005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;ReconnectAndRejoin()&#32;enabled&#32;IsMessageQueueRunning.&#32;Needs&#32;to&#32;be&#32;able&#32;to&#32;dispatch&#32;incoming&#32;messages.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02006"/>02006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02007"/>02007 
<anchor xml:id="__photon_network_8cs_source_1l02008"/>02008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a8d741259a7eceee18c72db9b469d2741">ReconnectAndRejoin</link>();
<anchor xml:id="__photon_network_8cs_source_1l02009"/>02009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02010"/>02010 
<anchor xml:id="__photon_network_8cs_source_1l02011"/>02011 
<anchor xml:id="__photon_network_8cs_source_1l02026"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6efe3af5ec21c4ed14b1d4d95eef965f">02026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6efe3af5ec21c4ed14b1d4d95eef965f">LeaveRoom</link>(<emphasis role="keywordtype">bool</emphasis>&#32;becomeInactive&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02027"/>02027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02028"/>02028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a57451f77a1536bfa1a1688d8c6f8ee9f">OfflineMode</link>)
<anchor xml:id="__photon_network_8cs_source_1l02029"/>02029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02030"/>02030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offlineModeRoom&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02031"/>02031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a81fd31dc623a60967a7c6be7b2572ca5">MatchMakingCallbackTargets</link>.<link linkend="_class_photon_1_1_realtime_1_1_match_making_callbacks_container_1aa8f13b83943e6a562e9817807cee4836">OnLeftRoom</link>();
<anchor xml:id="__photon_network_8cs_source_1l02032"/>02032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1aff6dd3b6412da73a93e010cb8eaede1f">ConnectionCallbackTargets</link>.<link linkend="_class_photon_1_1_realtime_1_1_connection_callbacks_container_1aa3d0fe1dc58e94a899b5a2d885e3bbc6">OnConnectedToMaster</link>();
<anchor xml:id="__photon_network_8cs_source_1l02033"/>02033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02034"/>02034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02035"/>02035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02036"/>02036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02037"/>02037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02038"/>02038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;PhotonNetwork.CurrentRoom&#32;is&#32;null.&#32;You&#32;don&apos;t&#32;have&#32;to&#32;call&#32;LeaveRoom()&#32;when&#32;you&apos;re&#32;not&#32;in&#32;one.&#32;State:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6ced17c19314be4dbd68c83d99a6df9e">NetworkClientState</link>);
<anchor xml:id="__photon_network_8cs_source_1l02039"/>02039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02040"/>02040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02041"/>02041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02042"/>02042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;becomeInactive&#32;=&#32;becomeInactive&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1aadce8b8f98659bf2ebf1de76d3247cff">PlayerTtl</link>&#32;!=&#32;0;&#32;<emphasis role="comment">//&#32;in&#32;a&#32;room&#32;with&#32;playerTTL&#32;==&#32;0,&#32;the&#32;operation&#32;&quot;leave&quot;&#32;will&#32;never&#32;turn&#32;a&#32;client&#32;inactive</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02043"/>02043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02044"/>02044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a14ea6cb3695cfca235d6f67298f33570">OpLeaveRoom</link>(becomeInactive);
<anchor xml:id="__photon_network_8cs_source_1l02045"/>02045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02046"/>02046 
<anchor xml:id="__photon_network_8cs_source_1l02047"/>02047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02048"/>02048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02049"/>02049 
<anchor xml:id="__photon_network_8cs_source_1l02050"/>02050 
<anchor xml:id="__photon_network_8cs_source_1l02051"/>02051 
<anchor xml:id="__photon_network_8cs_source_1l02055"/>02055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EnterOfflineRoom(<emphasis role="keywordtype">string</emphasis>&#32;roomName,&#32;<link linkend="_class_photon_1_1_realtime_1_1_room_options">RoomOptions</link>&#32;roomOptions,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;createdRoom)
<anchor xml:id="__photon_network_8cs_source_1l02056"/>02056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02057"/>02057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offlineModeRoom&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>(roomName,&#32;roomOptions,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02058"/>02058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a32adb95af4cb836a29fc53aa66000caf">ChangeLocalID</link>(1);
<anchor xml:id="__photon_network_8cs_source_1l02059"/>02059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offlineModeRoom.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a448382e5c2e61626159f0202e7151b10">masterClientId</link>&#32;=&#32;1;
<anchor xml:id="__photon_network_8cs_source_1l02060"/>02060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offlineModeRoom.<link linkend="_class_photon_1_1_realtime_1_1_room_1a56e911de4cd47b4fd2dba63830c35ed3">AddPlayer</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>);
<anchor xml:id="__photon_network_8cs_source_1l02061"/>02061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offlineModeRoom.<link linkend="_class_photon_1_1_realtime_1_1_room_1a2738258e04aeed075fbd8ad8e1e9363c">LoadBalancingClient</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>;
<anchor xml:id="__photon_network_8cs_source_1l02062"/>02062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a5b75141df981bebc4f7e1f0edb6a399b">CurrentRoom</link>&#32;=&#32;offlineModeRoom;
<anchor xml:id="__photon_network_8cs_source_1l02063"/>02063 
<anchor xml:id="__photon_network_8cs_source_1l02064"/>02064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(createdRoom)
<anchor xml:id="__photon_network_8cs_source_1l02065"/>02065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02066"/>02066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a81fd31dc623a60967a7c6be7b2572ca5">MatchMakingCallbackTargets</link>.<link linkend="_class_photon_1_1_realtime_1_1_match_making_callbacks_container_1a0cbb3230022bdffebc1191f80f9bfc2a">OnCreatedRoom</link>();
<anchor xml:id="__photon_network_8cs_source_1l02067"/>02067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02068"/>02068 
<anchor xml:id="__photon_network_8cs_source_1l02069"/>02069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a81fd31dc623a60967a7c6be7b2572ca5">MatchMakingCallbackTargets</link>.<link linkend="_class_photon_1_1_realtime_1_1_match_making_callbacks_container_1a5f91efa8551b2be7524bb4c6fb6da57a">OnJoinedRoom</link>();
<anchor xml:id="__photon_network_8cs_source_1l02070"/>02070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02071"/>02071 
<anchor xml:id="__photon_network_8cs_source_1l02092"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a27acbd663f3836dc3b5036f0854d05cd">02092</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a27acbd663f3836dc3b5036f0854d05cd">JoinLobby</link>()
<anchor xml:id="__photon_network_8cs_source_1l02093"/>02093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02094"/>02094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a27acbd663f3836dc3b5036f0854d05cd">JoinLobby</link>(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02095"/>02095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02096"/>02096 
<anchor xml:id="__photon_network_8cs_source_1l02129"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a20aecd560712580935a29ea0d14946c4">02129</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a20aecd560712580935a29ea0d14946c4">JoinLobby</link>(<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link>&#32;typedLobby)
<anchor xml:id="__photon_network_8cs_source_1l02130"/>02130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02131"/>02131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abfb28d4211e3d74568e4250edf231b0f">IsConnected</link>&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abbb2b33d7b82a1822a080ac51945db0b">Server</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.MasterServer)
<anchor xml:id="__photon_network_8cs_source_1l02132"/>02132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02133"/>02133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a4dd9222198402145e2e4e6c4f3462f9d">OpJoinLobby</link>(typedLobby);
<anchor xml:id="__photon_network_8cs_source_1l02134"/>02134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02135"/>02135 
<anchor xml:id="__photon_network_8cs_source_1l02136"/>02136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02137"/>02137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02138"/>02138 
<anchor xml:id="__photon_network_8cs_source_1l02149"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a2fa56a022fa01dbbe46475d7d77f5e59">02149</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a2fa56a022fa01dbbe46475d7d77f5e59">LeaveLobby</link>()
<anchor xml:id="__photon_network_8cs_source_1l02150"/>02150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02151"/>02151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abfb28d4211e3d74568e4250edf231b0f">IsConnected</link>&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1abbb2b33d7b82a1822a080ac51945db0b">Server</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link>.MasterServer)
<anchor xml:id="__photon_network_8cs_source_1l02152"/>02152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02153"/>02153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a736a2b78bff4da4d80404e9f98963267">OpLeaveLobby</link>();
<anchor xml:id="__photon_network_8cs_source_1l02154"/>02154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02155"/>02155 
<anchor xml:id="__photon_network_8cs_source_1l02156"/>02156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02157"/>02157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02158"/>02158 
<anchor xml:id="__photon_network_8cs_source_1l02182"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac3ef7244ebae82c562a55b93895046f7">02182</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac3ef7244ebae82c562a55b93895046f7">FindFriends</link>(<emphasis role="keywordtype">string</emphasis>[]&#32;friendsToFind)
<anchor xml:id="__photon_network_8cs_source_1l02183"/>02183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02184"/>02184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;offlineMode)
<anchor xml:id="__photon_network_8cs_source_1l02185"/>02185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02186"/>02186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02187"/>02187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02188"/>02188 
<anchor xml:id="__photon_network_8cs_source_1l02189"/>02189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a6c6f4af01b0f593aba272d66772c6edf">OpFindFriends</link>(friendsToFind);
<anchor xml:id="__photon_network_8cs_source_1l02190"/>02190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02191"/>02191 
<anchor xml:id="__photon_network_8cs_source_1l02207"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aeede03b2d9c3d09b972437316adc435d">02207</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aeede03b2d9c3d09b972437316adc435d">GetCustomRoomList</link>(<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link>&#32;typedLobby,&#32;<emphasis role="keywordtype">string</emphasis>&#32;sqlLobbyFilter)
<anchor xml:id="__photon_network_8cs_source_1l02208"/>02208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02209"/>02209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a75d08cfcf7bee521dc57cd21a299d047">OpGetGameList</link>(typedLobby,&#32;sqlLobbyFilter);
<anchor xml:id="__photon_network_8cs_source_1l02210"/>02210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02211"/>02211 
<anchor xml:id="__photon_network_8cs_source_1l02233"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a46855eb211f07258cae4afbf26467f89">02233</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a46855eb211f07258cae4afbf26467f89">SetPlayerCustomProperties</link>(<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;customProperties)
<anchor xml:id="__photon_network_8cs_source_1l02234"/>02234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02235"/>02235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(customProperties&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02236"/>02236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02237"/>02237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;customProperties&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>();
<anchor xml:id="__photon_network_8cs_source_1l02238"/>02238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">object</emphasis>&#32;k&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a813cf3bb802339d81c408e022cecaf0f">CustomProperties</link>.Keys)
<anchor xml:id="__photon_network_8cs_source_1l02239"/>02239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02240"/>02240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;customProperties[(string)k]&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02241"/>02241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02242"/>02242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02243"/>02243 
<anchor xml:id="__photon_network_8cs_source_1l02244"/>02244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a73de822cb4ab788e9dce94795566a656">SetCustomProperties</link>(customProperties);
<anchor xml:id="__photon_network_8cs_source_1l02245"/>02245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02246"/>02246 
<anchor xml:id="__photon_network_8cs_source_1l02262"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a61a28654d39169773fbb11bcca8f2da3">02262</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a61a28654d39169773fbb11bcca8f2da3">RemovePlayerCustomProperties</link>(<emphasis role="keywordtype">string</emphasis>[]&#32;customPropertiesToDelete)
<anchor xml:id="__photon_network_8cs_source_1l02263"/>02263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02264"/>02264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;decide&#32;if&#32;this&#32;option&#32;makes&#32;sense</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02265"/>02265 
<anchor xml:id="__photon_network_8cs_source_1l02266"/>02266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(customPropertiesToDelete&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;customPropertiesToDelete.Length&#32;==&#32;0&#32;||&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a813cf3bb802339d81c408e022cecaf0f">CustomProperties</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02267"/>02267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02268"/>02268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a813cf3bb802339d81c408e022cecaf0f">CustomProperties</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>();
<anchor xml:id="__photon_network_8cs_source_1l02269"/>02269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02270"/>02270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02271"/>02271 
<anchor xml:id="__photon_network_8cs_source_1l02272"/>02272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;a&#32;specific&#32;list&#32;of&#32;props&#32;should&#32;be&#32;deleted,&#32;we&#32;do&#32;that&#32;here</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02273"/>02273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;customPropertiesToDelete.Length;&#32;i++)
<anchor xml:id="__photon_network_8cs_source_1l02274"/>02274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02275"/>02275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;key&#32;=&#32;customPropertiesToDelete[i];
<anchor xml:id="__photon_network_8cs_source_1l02276"/>02276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a813cf3bb802339d81c408e022cecaf0f">CustomProperties</link>.ContainsKey(key))
<anchor xml:id="__photon_network_8cs_source_1l02277"/>02277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02278"/>02278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a813cf3bb802339d81c408e022cecaf0f">CustomProperties</link>.Remove(key);
<anchor xml:id="__photon_network_8cs_source_1l02279"/>02279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02280"/>02280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02281"/>02281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02282"/>02282 
<anchor xml:id="__photon_network_8cs_source_1l02306"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a9445d7b33be290e7a668284bad051e79">02306</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a9445d7b33be290e7a668284bad051e79">RaiseEvent</link>(<emphasis role="keywordtype">byte</emphasis>&#32;eventCode,&#32;<emphasis role="keywordtype">object</emphasis>&#32;eventContent,&#32;<link linkend="_class_photon_1_1_realtime_1_1_raise_event_options">RaiseEventOptions</link>&#32;raiseEventOptions,&#32;SendOptions&#32;sendOptions)
<anchor xml:id="__photon_network_8cs_source_1l02307"/>02307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02308"/>02308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offlineMode)
<anchor xml:id="__photon_network_8cs_source_1l02309"/>02309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02310"/>02310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(raiseEventOptions.<link linkend="_class_photon_1_1_realtime_1_1_raise_event_options_1afc60526a25f308c7e37a05bbf55df58c">Receivers</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40">ReceiverGroup</link>.Others)
<anchor xml:id="__photon_network_8cs_source_1l02311"/>02311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02312"/>02312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02313"/>02313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02314"/>02314 
<anchor xml:id="__photon_network_8cs_source_1l02315"/>02315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EventData&#32;evData&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;EventData&#32;{&#32;Code&#32;=&#32;eventCode&#32;};&#32;&#32;<emphasis role="comment">//&#32;creates&#32;the&#32;equivalent&#32;of&#32;a&#32;received&#32;event</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02316"/>02316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evData.Parameters[<link linkend="_class_photon_1_1_realtime_1_1_parameter_code">ParameterCode</link>.<link linkend="_class_photon_1_1_realtime_1_1_parameter_code_1aed9b71e3bb95c38381b1a26822728f27">Data</link>]&#32;=&#32;eventContent;
<anchor xml:id="__photon_network_8cs_source_1l02317"/>02317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evData.Parameters[<link linkend="_class_photon_1_1_realtime_1_1_parameter_code">ParameterCode</link>.<link linkend="_class_photon_1_1_realtime_1_1_parameter_code_1ac6462e1fe86247d34df8f03dc6b65a20">ActorNr</link>]&#32;=&#32;1;
<anchor xml:id="__photon_network_8cs_source_1l02318"/>02318 
<anchor xml:id="__photon_network_8cs_source_1l02319"/>02319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a67588b3c7738622008b4156adf5be714">OnEvent</link>(evData);
<anchor xml:id="__photon_network_8cs_source_1l02320"/>02320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02321"/>02321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02322"/>02322 
<anchor xml:id="__photon_network_8cs_source_1l02323"/>02323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1acd3228520b05c60cddddb9a3b75f3b1d">InRoom</link>&#32;||&#32;eventCode&#32;&gt;=&#32;200)
<anchor xml:id="__photon_network_8cs_source_1l02324"/>02324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02325"/>02325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;RaiseEvent(&quot;</emphasis>&#32;+&#32;eventCode&#32;+&#32;<emphasis role="stringliteral">&quot;)&#32;failed.&#32;Your&#32;event&#32;is&#32;not&#32;being&#32;sent!&#32;Check&#32;if&#32;your&#32;are&#32;in&#32;a&#32;Room&#32;and&#32;the&#32;eventCode&#32;must&#32;be&#32;less&#32;than&#32;200&#32;(0..199).&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02326"/>02326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02327"/>02327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02328"/>02328 
<anchor xml:id="__photon_network_8cs_source_1l02329"/>02329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a620e340e8f78a51871d94d5868ffdb4c">OpRaiseEvent</link>(eventCode,&#32;eventContent,&#32;raiseEventOptions,&#32;sendOptions);
<anchor xml:id="__photon_network_8cs_source_1l02330"/>02330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02331"/>02331 
<anchor xml:id="__photon_network_8cs_source_1l02338"/>02338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;RaiseEventInternal(<emphasis role="keywordtype">byte</emphasis>&#32;eventCode,&#32;<emphasis role="keywordtype">object</emphasis>&#32;eventContent,&#32;<link linkend="_class_photon_1_1_realtime_1_1_raise_event_options">RaiseEventOptions</link>&#32;raiseEventOptions,&#32;SendOptions&#32;sendOptions)
<anchor xml:id="__photon_network_8cs_source_1l02339"/>02339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02340"/>02340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offlineMode)
<anchor xml:id="__photon_network_8cs_source_1l02341"/>02341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02342"/>02342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02343"/>02343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02344"/>02344 
<anchor xml:id="__photon_network_8cs_source_1l02345"/>02345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1acd3228520b05c60cddddb9a3b75f3b1d">InRoom</link>)
<anchor xml:id="__photon_network_8cs_source_1l02346"/>02346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02347"/>02347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;RaiseEvent(&quot;</emphasis>&#32;+&#32;eventCode&#32;+&#32;<emphasis role="stringliteral">&quot;)&#32;failed.&#32;Your&#32;event&#32;is&#32;not&#32;being&#32;sent!&#32;Check&#32;if&#32;your&#32;are&#32;in&#32;a&#32;Room&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02348"/>02348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02349"/>02349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02350"/>02350 
<anchor xml:id="__photon_network_8cs_source_1l02351"/>02351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a620e340e8f78a51871d94d5868ffdb4c">OpRaiseEvent</link>(eventCode,&#32;eventContent,&#32;raiseEventOptions,&#32;sendOptions);
<anchor xml:id="__photon_network_8cs_source_1l02352"/>02352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02353"/>02353 
<anchor xml:id="__photon_network_8cs_source_1l02354"/>02354 
<anchor xml:id="__photon_network_8cs_source_1l02359"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac9f5c2c968dc23f337092fedff586132">02359</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac9f5c2c968dc23f337092fedff586132">AllocateViewID</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;view)
<anchor xml:id="__photon_network_8cs_source_1l02360"/>02360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02361"/>02361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(view.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>&#32;!=&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l02362"/>02362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02363"/>02363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;AllocateViewID()&#32;can&apos;t&#32;be&#32;used&#32;for&#32;PhotonViews&#32;that&#32;already&#32;have&#32;a&#32;viewID.&#32;This&#32;view&#32;is:&#32;&quot;</emphasis>&#32;+&#32;view.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1ae0793a8e08fd1b0954b4b391c6b6137b">ToString</link>());
<anchor xml:id="__photon_network_8cs_source_1l02364"/>02364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02365"/>02365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02366"/>02366 
<anchor xml:id="__photon_network_8cs_source_1l02367"/>02367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;manualId&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac9f5c2c968dc23f337092fedff586132">AllocateViewID</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>);
<anchor xml:id="__photon_network_8cs_source_1l02368"/>02368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>&#32;=&#32;manualId;
<anchor xml:id="__photon_network_8cs_source_1l02369"/>02369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02370"/>02370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02371"/>02371 
<anchor xml:id="__photon_network_8cs_source_1l02372"/>02372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Obsolete(<emphasis role="stringliteral">&quot;Renamed.&#32;Use&#32;AllocateRoomViewID&#32;instead&quot;</emphasis>)]
<anchor xml:id="__photon_network_8cs_source_1l02373"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6a88396fedad4f37ff61e289b180559e">02373</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6a88396fedad4f37ff61e289b180559e">AllocateSceneViewID</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;view)
<anchor xml:id="__photon_network_8cs_source_1l02374"/>02374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02375"/>02375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a8193e279f3ca157cbadeff44e1568a8b">AllocateRoomViewID</link>(view);
<anchor xml:id="__photon_network_8cs_source_1l02376"/>02376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02377"/>02377 
<anchor xml:id="__photon_network_8cs_source_1l02382"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a8193e279f3ca157cbadeff44e1568a8b">02382</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a8193e279f3ca157cbadeff44e1568a8b">AllocateRoomViewID</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;view)
<anchor xml:id="__photon_network_8cs_source_1l02383"/>02383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02384"/>02384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac00d87d1bbd7d63fa13e6d1823e2f576">IsMasterClient</link>)
<anchor xml:id="__photon_network_8cs_source_1l02385"/>02385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02386"/>02386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Only&#32;the&#32;Master&#32;Client&#32;can&#32;AllocateRoomViewID().&#32;Check&#32;PhotonNetwork.IsMasterClient!&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02387"/>02387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02388"/>02388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02389"/>02389 
<anchor xml:id="__photon_network_8cs_source_1l02390"/>02390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(view.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>&#32;!=&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l02391"/>02391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02392"/>02392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;AllocateRoomViewID()&#32;can&apos;t&#32;be&#32;used&#32;for&#32;PhotonViews&#32;that&#32;already&#32;have&#32;a&#32;viewID.&#32;This&#32;view&#32;is:&#32;&quot;</emphasis>&#32;+&#32;view.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1ae0793a8e08fd1b0954b4b391c6b6137b">ToString</link>());
<anchor xml:id="__photon_network_8cs_source_1l02393"/>02393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02394"/>02394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02395"/>02395 
<anchor xml:id="__photon_network_8cs_source_1l02396"/>02396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;manualId&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac9f5c2c968dc23f337092fedff586132">AllocateViewID</link>(0);
<anchor xml:id="__photon_network_8cs_source_1l02397"/>02397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a5ed698bf9795e566e9ff343a507de85f">ViewID</link>&#32;=&#32;manualId;
<anchor xml:id="__photon_network_8cs_source_1l02398"/>02398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02399"/>02399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02400"/>02400 
<anchor xml:id="__photon_network_8cs_source_1l02404"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac4a4aef738ff76e949df098847e9e3fe">02404</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac4a4aef738ff76e949df098847e9e3fe">AllocateViewID</link>(<emphasis role="keywordtype">bool</emphasis>&#32;roomObject)
<anchor xml:id="__photon_network_8cs_source_1l02405"/>02405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02406"/>02406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(roomObject&#32;&amp;&amp;&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a650042ff3d147ed8cd559b6258ce238d">IsMasterClient</link>)
<anchor xml:id="__photon_network_8cs_source_1l02407"/>02407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02408"/>02408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Only&#32;a&#32;Master&#32;Client&#32;can&#32;AllocateViewID()&#32;for&#32;room&#32;objects.&#32;This&#32;client/player&#32;is&#32;not&#32;a&#32;Master&#32;Client.&#32;Returning&#32;an&#32;invalid&#32;viewID:&#32;-1.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02409"/>02409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__photon_network_8cs_source_1l02410"/>02410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02411"/>02411 
<anchor xml:id="__photon_network_8cs_source_1l02412"/>02412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ownerActorNumber&#32;=&#32;roomObject&#32;?&#32;0&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>;
<anchor xml:id="__photon_network_8cs_source_1l02413"/>02413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac9f5c2c968dc23f337092fedff586132">AllocateViewID</link>(ownerActorNumber);
<anchor xml:id="__photon_network_8cs_source_1l02414"/>02414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02415"/>02415 
<anchor xml:id="__photon_network_8cs_source_1l02419"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3a45a00ed2210c47ccea385eee054177">02419</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3a45a00ed2210c47ccea385eee054177">AllocateViewID</link>(<emphasis role="keywordtype">int</emphasis>&#32;ownerId)
<anchor xml:id="__photon_network_8cs_source_1l02420"/>02420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02421"/>02421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ownerId&#32;==&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l02422"/>02422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02423"/>02423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;look&#32;up&#32;a&#32;fresh&#32;subId&#32;for&#32;the&#32;owner&#32;&quot;room&quot;&#32;(mind&#32;the&#32;&quot;sub&quot;&#32;in&#32;subId)</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02424"/>02424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newSubId&#32;=&#32;lastUsedViewSubIdStatic;
<anchor xml:id="__photon_network_8cs_source_1l02425"/>02425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newViewId;
<anchor xml:id="__photon_network_8cs_source_1l02426"/>02426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ownerIdOffset&#32;=&#32;ownerId&#32;*&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac1319ff7be49947b7018f18b438d175c">MAX_VIEW_IDS</link>;
<anchor xml:id="__photon_network_8cs_source_1l02427"/>02427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac1319ff7be49947b7018f18b438d175c">MAX_VIEW_IDS</link>;&#32;i++)
<anchor xml:id="__photon_network_8cs_source_1l02428"/>02428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02429"/>02429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSubId&#32;=&#32;(newSubId&#32;+&#32;1)&#32;%&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac1319ff7be49947b7018f18b438d175c">MAX_VIEW_IDS</link>;
<anchor xml:id="__photon_network_8cs_source_1l02430"/>02430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newSubId&#32;==&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l02431"/>02431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02432"/>02432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;&#32;&#32;&#32;<emphasis role="comment">//&#32;avoid&#32;using&#32;subID&#32;0</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02433"/>02433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02434"/>02434 
<anchor xml:id="__photon_network_8cs_source_1l02435"/>02435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newViewId&#32;=&#32;newSubId&#32;+&#32;ownerIdOffset;
<anchor xml:id="__photon_network_8cs_source_1l02436"/>02436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!photonViewList.ContainsKey(newViewId))
<anchor xml:id="__photon_network_8cs_source_1l02437"/>02437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02438"/>02438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastUsedViewSubIdStatic&#32;=&#32;newSubId;
<anchor xml:id="__photon_network_8cs_source_1l02439"/>02439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newViewId;
<anchor xml:id="__photon_network_8cs_source_1l02440"/>02440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02441"/>02441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02442"/>02442 
<anchor xml:id="__photon_network_8cs_source_1l02443"/>02443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;the&#32;error&#32;case:&#32;we&#32;didn&apos;t&#32;find&#32;any&#32;(!)&#32;free&#32;subId&#32;for&#32;this&#32;user</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02444"/>02444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Exception(<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;AllocateViewID()&#32;failed.&#32;The&#32;room&#32;(user&#32;{0})&#32;is&#32;out&#32;of&#32;&apos;room&apos;&#32;viewIDs.&#32;It&#32;seems&#32;all&#32;available&#32;are&#32;in&#32;use.&quot;</emphasis>,&#32;ownerId));
<anchor xml:id="__photon_network_8cs_source_1l02445"/>02445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02446"/>02446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02447"/>02447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02448"/>02448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;look&#32;up&#32;a&#32;fresh&#32;SUBid&#32;for&#32;the&#32;owner</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02449"/>02449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newSubId&#32;=&#32;lastUsedViewSubId;
<anchor xml:id="__photon_network_8cs_source_1l02450"/>02450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;newViewId;
<anchor xml:id="__photon_network_8cs_source_1l02451"/>02451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ownerIdOffset&#32;=&#32;ownerId&#32;*&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac1319ff7be49947b7018f18b438d175c">MAX_VIEW_IDS</link>;
<anchor xml:id="__photon_network_8cs_source_1l02452"/>02452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac1319ff7be49947b7018f18b438d175c">MAX_VIEW_IDS</link>;&#32;i++)
<anchor xml:id="__photon_network_8cs_source_1l02453"/>02453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02454"/>02454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newSubId&#32;=&#32;(newSubId&#32;+&#32;1)&#32;%&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac1319ff7be49947b7018f18b438d175c">MAX_VIEW_IDS</link>;
<anchor xml:id="__photon_network_8cs_source_1l02455"/>02455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newSubId&#32;==&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l02456"/>02456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02457"/>02457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;&#32;&#32;&#32;<emphasis role="comment">//&#32;avoid&#32;using&#32;subID&#32;0</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02458"/>02458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02459"/>02459 
<anchor xml:id="__photon_network_8cs_source_1l02460"/>02460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newViewId&#32;=&#32;newSubId&#32;+&#32;ownerIdOffset;
<anchor xml:id="__photon_network_8cs_source_1l02461"/>02461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!photonViewList.ContainsKey(newViewId))
<anchor xml:id="__photon_network_8cs_source_1l02462"/>02462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02463"/>02463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastUsedViewSubId&#32;=&#32;newSubId;
<anchor xml:id="__photon_network_8cs_source_1l02464"/>02464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newViewId;
<anchor xml:id="__photon_network_8cs_source_1l02465"/>02465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02466"/>02466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02467"/>02467 
<anchor xml:id="__photon_network_8cs_source_1l02468"/>02468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Exception(<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;AllocateViewID()&#32;failed.&#32;User&#32;{0}&#32;is&#32;out&#32;of&#32;viewIDs.&#32;It&#32;seems&#32;all&#32;available&#32;are&#32;in&#32;use.&quot;</emphasis>,&#32;ownerId));
<anchor xml:id="__photon_network_8cs_source_1l02469"/>02469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02470"/>02470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02471"/>02471 
<anchor xml:id="__photon_network_8cs_source_1l02472"/>02472 
<anchor xml:id="__photon_network_8cs_source_1l02473"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3c3998fe3bc09a7de8d09378d7a3e2d0">02473</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GameObject&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3c3998fe3bc09a7de8d09378d7a3e2d0">Instantiate</link>(<emphasis role="keywordtype">string</emphasis>&#32;prefabName,&#32;Vector3&#32;position,&#32;Quaternion&#32;rotation,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;group&#32;=&#32;0,&#32;<emphasis role="keywordtype">object</emphasis>[]&#32;data&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02474"/>02474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02475"/>02475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02476"/>02476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02477"/>02477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Can&#32;not&#32;Instantiate&#32;before&#32;the&#32;client&#32;joined/created&#32;a&#32;room.&#32;State:&#32;&quot;</emphasis>+<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a6ced17c19314be4dbd68c83d99a6df9e">NetworkClientState</link>);
<anchor xml:id="__photon_network_8cs_source_1l02478"/>02478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02479"/>02479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02480"/>02480 
<anchor xml:id="__photon_network_8cs_source_1l02481"/>02481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pun.InstantiateParameters&#32;netParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters">InstantiateParameters</link>(prefabName,&#32;position,&#32;rotation,&#32;group,&#32;data,&#32;currentLevelPrefix,&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">ServerTimestamp</link>);
<anchor xml:id="__photon_network_8cs_source_1l02482"/>02482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NetworkInstantiate(netParams,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02483"/>02483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02484"/>02484 
<anchor xml:id="__photon_network_8cs_source_1l02485"/>02485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Obsolete(<emphasis role="stringliteral">&quot;Renamed.&#32;Use&#32;InstantiateRoomObject&#32;instead&quot;</emphasis>)]
<anchor xml:id="__photon_network_8cs_source_1l02486"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1afa64fba6a5f05ede2706153c2cb4003e">02486</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GameObject&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1afa64fba6a5f05ede2706153c2cb4003e">InstantiateSceneObject</link>(<emphasis role="keywordtype">string</emphasis>&#32;prefabName,&#32;Vector3&#32;position,&#32;Quaternion&#32;rotation,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;group&#32;=&#32;0,&#32;<emphasis role="keywordtype">object</emphasis>[]&#32;data&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02487"/>02487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02488"/>02488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a7e68c3cae2b1b2b7495b545b246192c2">InstantiateRoomObject</link>(prefabName,&#32;position,&#32;rotation,&#32;group,&#32;data);
<anchor xml:id="__photon_network_8cs_source_1l02489"/>02489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02490"/>02490 
<anchor xml:id="__photon_network_8cs_source_1l02491"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a7e68c3cae2b1b2b7495b545b246192c2">02491</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GameObject&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a7e68c3cae2b1b2b7495b545b246192c2">InstantiateRoomObject</link>(<emphasis role="keywordtype">string</emphasis>&#32;prefabName,&#32;Vector3&#32;position,&#32;Quaternion&#32;rotation,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;group&#32;=&#32;0,&#32;<emphasis role="keywordtype">object</emphasis>[]&#32;data&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02492"/>02492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02493"/>02493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02494"/>02494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02495"/>02495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Can&#32;not&#32;Instantiate&#32;before&#32;the&#32;client&#32;joined/created&#32;a&#32;room.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02496"/>02496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02497"/>02497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02498"/>02498 
<anchor xml:id="__photon_network_8cs_source_1l02499"/>02499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a650042ff3d147ed8cd559b6258ce238d">IsMasterClient</link>)
<anchor xml:id="__photon_network_8cs_source_1l02500"/>02500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02501"/>02501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pun.InstantiateParameters&#32;netParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_pun_1_1_instantiate_parameters">InstantiateParameters</link>(prefabName,&#32;position,&#32;rotation,&#32;group,&#32;data,&#32;currentLevelPrefix,&#32;<emphasis role="keyword">null</emphasis>,&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">ServerTimestamp</link>);
<anchor xml:id="__photon_network_8cs_source_1l02502"/>02502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NetworkInstantiate(netParams,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02503"/>02503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02504"/>02504 
<anchor xml:id="__photon_network_8cs_source_1l02505"/>02505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02506"/>02506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02507"/>02507 
<anchor xml:id="__photon_network_8cs_source_1l02508"/>02508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GameObject&#32;NetworkInstantiate(<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;networkEvent,&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;creator)
<anchor xml:id="__photon_network_8cs_source_1l02509"/>02509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02510"/>02510 
<anchor xml:id="__photon_network_8cs_source_1l02511"/>02511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;some&#32;values&#32;always&#32;present:</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02512"/>02512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;prefabName&#32;=&#32;(string)networkEvent[keyByteZero];
<anchor xml:id="__photon_network_8cs_source_1l02513"/>02513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;serverTime&#32;=&#32;(int)networkEvent[keyByteSix];
<anchor xml:id="__photon_network_8cs_source_1l02514"/>02514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;instantiationId&#32;=&#32;(int)networkEvent[keyByteSeven];
<anchor xml:id="__photon_network_8cs_source_1l02515"/>02515 
<anchor xml:id="__photon_network_8cs_source_1l02516"/>02516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;position;
<anchor xml:id="__photon_network_8cs_source_1l02517"/>02517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(networkEvent.ContainsKey(keyByteOne))
<anchor xml:id="__photon_network_8cs_source_1l02518"/>02518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02519"/>02519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;(Vector3)networkEvent[keyByteOne];
<anchor xml:id="__photon_network_8cs_source_1l02520"/>02520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02521"/>02521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02522"/>02522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02523"/>02523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;Vector3.zero;
<anchor xml:id="__photon_network_8cs_source_1l02524"/>02524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02525"/>02525 
<anchor xml:id="__photon_network_8cs_source_1l02526"/>02526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotation&#32;=&#32;Quaternion.identity;
<anchor xml:id="__photon_network_8cs_source_1l02527"/>02527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(networkEvent.ContainsKey(keyByteTwo))
<anchor xml:id="__photon_network_8cs_source_1l02528"/>02528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02529"/>02529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;(Quaternion)networkEvent[keyByteTwo];
<anchor xml:id="__photon_network_8cs_source_1l02530"/>02530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02531"/>02531 
<anchor xml:id="__photon_network_8cs_source_1l02532"/>02532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;group&#32;=&#32;0;
<anchor xml:id="__photon_network_8cs_source_1l02533"/>02533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(networkEvent.ContainsKey(keyByteThree))
<anchor xml:id="__photon_network_8cs_source_1l02534"/>02534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02535"/>02535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;group&#32;=&#32;(byte)networkEvent[keyByteThree];
<anchor xml:id="__photon_network_8cs_source_1l02536"/>02536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02537"/>02537 
<anchor xml:id="__photon_network_8cs_source_1l02538"/>02538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;objLevelPrefix&#32;=&#32;0;
<anchor xml:id="__photon_network_8cs_source_1l02539"/>02539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(networkEvent.ContainsKey(keyByteEight))
<anchor xml:id="__photon_network_8cs_source_1l02540"/>02540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02541"/>02541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objLevelPrefix&#32;=&#32;(byte)networkEvent[keyByteEight];
<anchor xml:id="__photon_network_8cs_source_1l02542"/>02542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02543"/>02543 
<anchor xml:id="__photon_network_8cs_source_1l02544"/>02544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;viewsIDs;
<anchor xml:id="__photon_network_8cs_source_1l02545"/>02545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(networkEvent.ContainsKey(keyByteFour))
<anchor xml:id="__photon_network_8cs_source_1l02546"/>02546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02547"/>02547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewsIDs&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>[])networkEvent[keyByteFour];
<anchor xml:id="__photon_network_8cs_source_1l02548"/>02548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02549"/>02549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02550"/>02550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02551"/>02551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewsIDs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[1]&#32;{&#32;instantiationId&#32;};
<anchor xml:id="__photon_network_8cs_source_1l02552"/>02552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02553"/>02553 
<anchor xml:id="__photon_network_8cs_source_1l02554"/>02554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>[]&#32;incomingInstantiationData;
<anchor xml:id="__photon_network_8cs_source_1l02555"/>02555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(networkEvent.ContainsKey(keyByteFive))
<anchor xml:id="__photon_network_8cs_source_1l02556"/>02556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02557"/>02557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;incomingInstantiationData&#32;=&#32;(<emphasis role="keywordtype">object</emphasis>[])networkEvent[keyByteFive];
<anchor xml:id="__photon_network_8cs_source_1l02558"/>02558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02559"/>02559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02560"/>02560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02561"/>02561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;incomingInstantiationData&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02562"/>02562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02563"/>02563 
<anchor xml:id="__photon_network_8cs_source_1l02564"/>02564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SetReceiving&#32;filtering</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02565"/>02565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(group&#32;!=&#32;0&#32;&amp;&amp;&#32;!allowedReceivingGroups.Contains(group))
<anchor xml:id="__photon_network_8cs_source_1l02566"/>02566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02567"/>02567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;&#32;<emphasis role="comment">//&#32;Ignore&#32;group</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02568"/>02568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02569"/>02569 
<anchor xml:id="__photon_network_8cs_source_1l02570"/>02570 
<anchor xml:id="__photon_network_8cs_source_1l02571"/>02571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pun.InstantiateParameters&#32;netParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;InstantiateParameters(prefabName,&#32;position,&#32;rotation,&#32;group,&#32;incomingInstantiationData,&#32;objLevelPrefix,&#32;viewsIDs,&#32;creator,&#32;serverTime);
<anchor xml:id="__photon_network_8cs_source_1l02572"/>02572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NetworkInstantiate(netParams,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02573"/>02573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02574"/>02574 
<anchor xml:id="__photon_network_8cs_source_1l02575"/>02575 
<anchor xml:id="__photon_network_8cs_source_1l02576"/>02576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;HashSet&lt;string&gt;&#32;PrefabsWithoutMagicCallback&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;string&gt;();
<anchor xml:id="__photon_network_8cs_source_1l02577"/>02577 
<anchor xml:id="__photon_network_8cs_source_1l02578"/>02578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>&#32;NetworkInstantiate(Pun.InstantiateParameters&#32;parameters,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;roomObject&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;instantiateEvent&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02579"/>02579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02580"/>02580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Instantiate(name,&#32;pos,&#32;rot)</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02581"/>02581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//pv[]&#32;GetPhotonViewsInChildren()</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02582"/>02582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(event==null)&#32;init&#32;send-params</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02583"/>02583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Setup&#32;of&#32;PVs&#32;and&#32;callback</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02584"/>02584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(event&#32;==&#32;null)&#32;SendInstantiate(name,&#32;pos,&#32;rot,&#32;etc...)</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02585"/>02585 
<anchor xml:id="__photon_network_8cs_source_1l02586"/>02586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>&#32;go&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02587"/>02587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonView[]&#32;photonViews;
<anchor xml:id="__photon_network_8cs_source_1l02588"/>02588 
<anchor xml:id="__photon_network_8cs_source_1l02589"/>02589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;go&#32;=&#32;prefabPool.<link linkend="_interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a870a5155ad093e64f224a774cb1959d9">Instantiate</link>(parameters.prefabName,&#32;parameters.position,&#32;parameters.rotation);
<anchor xml:id="__photon_network_8cs_source_1l02590"/>02590 
<anchor xml:id="__photon_network_8cs_source_1l02591"/>02591 
<anchor xml:id="__photon_network_8cs_source_1l02592"/>02592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(go&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02593"/>02593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02594"/>02594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Failed&#32;to&#32;network-Instantiate:&#32;&quot;</emphasis>&#32;+&#32;parameters.prefabName);
<anchor xml:id="__photon_network_8cs_source_1l02595"/>02595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02596"/>02596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02597"/>02597 
<anchor xml:id="__photon_network_8cs_source_1l02598"/>02598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(go.activeSelf)
<anchor xml:id="__photon_network_8cs_source_1l02599"/>02599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02600"/>02600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;PrefabPool.Instantiate()&#32;should&#32;return&#32;an&#32;inactive&#32;GameObject.&#32;&quot;</emphasis>&#32;+&#32;prefabPool.GetType().Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;returned&#32;an&#32;active&#32;object.&#32;PrefabId:&#32;&quot;</emphasis>&#32;+&#32;parameters.prefabName);
<anchor xml:id="__photon_network_8cs_source_1l02601"/>02601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02602"/>02602 
<anchor xml:id="__photon_network_8cs_source_1l02603"/>02603 
<anchor xml:id="__photon_network_8cs_source_1l02604"/>02604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;photonViews&#32;=&#32;go.GetPhotonViewsInChildren();
<anchor xml:id="__photon_network_8cs_source_1l02605"/>02605 
<anchor xml:id="__photon_network_8cs_source_1l02606"/>02606 
<anchor xml:id="__photon_network_8cs_source_1l02607"/>02607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(photonViews.Length&#32;==&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l02608"/>02608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02609"/>02609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;PhotonNetwork.Instantiate()&#32;can&#32;only&#32;instantiate&#32;objects&#32;with&#32;a&#32;PhotonView&#32;component.&#32;This&#32;prefab&#32;does&#32;not&#32;have&#32;one:&#32;&quot;</emphasis>&#32;+&#32;parameters.prefabName);
<anchor xml:id="__photon_network_8cs_source_1l02610"/>02610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02611"/>02611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02612"/>02612 
<anchor xml:id="__photon_network_8cs_source_1l02613"/>02613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;localInstantiate&#32;=&#32;!instantiateEvent&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1af5a7ae0f4573b2611cfa0f6babae2fdf">Equals</link>(parameters.creator);
<anchor xml:id="__photon_network_8cs_source_1l02614"/>02614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(localInstantiate)
<anchor xml:id="__photon_network_8cs_source_1l02615"/>02615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02616"/>02616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;init&#32;viewIDs&#32;array,&#32;so&#32;it&#32;can&#32;be&#32;filled&#32;(below),&#32;before&#32;it&#32;gets&#32;sent</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02617"/>02617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.viewIDs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[photonViews.Length];
<anchor xml:id="__photon_network_8cs_source_1l02618"/>02618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02619"/>02619 
<anchor xml:id="__photon_network_8cs_source_1l02620"/>02620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;photonViews.Length;&#32;i++)
<anchor xml:id="__photon_network_8cs_source_1l02621"/>02621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02622"/>02622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(localInstantiate)
<anchor xml:id="__photon_network_8cs_source_1l02623"/>02623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02624"/>02624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;when&#32;this&#32;client&#32;instantiates&#32;a&#32;GO,&#32;it&#32;has&#32;to&#32;allocate&#32;viewIDs&#32;accordingly.</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02625"/>02625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ROOM&#32;objects&#32;are&#32;created&#32;as&#32;actorNumber&#32;0&#32;(no&#32;matter&#32;which&#32;number&#32;this&#32;player&#32;has).</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02626"/>02626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.viewIDs[i]&#32;=&#32;(roomObject)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac9f5c2c968dc23f337092fedff586132">AllocateViewID</link>(0)&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac9f5c2c968dc23f337092fedff586132">AllocateViewID</link>(parameters.creator.ActorNumber);
<anchor xml:id="__photon_network_8cs_source_1l02627"/>02627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02628"/>02628 
<anchor xml:id="__photon_network_8cs_source_1l02629"/>02629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;view&#32;=&#32;photonViews[i];
<anchor xml:id="__photon_network_8cs_source_1l02630"/>02630 
<anchor xml:id="__photon_network_8cs_source_1l02631"/>02631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.ViewID&#32;=&#32;0;
<anchor xml:id="__photon_network_8cs_source_1l02632"/>02632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.sceneViewId&#32;=&#32;0;
<anchor xml:id="__photon_network_8cs_source_1l02633"/>02633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.isRuntimeInstantiated&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02634"/>02634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.lastOnSerializeDataSent&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02635"/>02635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.lastOnSerializeDataReceived&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02636"/>02636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.Prefix&#32;=&#32;parameters.objLevelPrefix;
<anchor xml:id="__photon_network_8cs_source_1l02637"/>02637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.InstantiationId&#32;=&#32;parameters.viewIDs[0];
<anchor xml:id="__photon_network_8cs_source_1l02638"/>02638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.InstantiationData&#32;=&#32;parameters.data;
<anchor xml:id="__photon_network_8cs_source_1l02639"/>02639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.ViewID&#32;=&#32;parameters.viewIDs[i];&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;with&#32;didAwake&#32;true&#32;and&#32;viewID&#32;==&#32;0,&#32;this&#32;will&#32;also&#32;register&#32;the&#32;view</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02640"/>02640 
<anchor xml:id="__photon_network_8cs_source_1l02641"/>02641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view.Group&#32;=&#32;parameters.group;
<anchor xml:id="__photon_network_8cs_source_1l02642"/>02642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02643"/>02643 
<anchor xml:id="__photon_network_8cs_source_1l02644"/>02644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(localInstantiate)
<anchor xml:id="__photon_network_8cs_source_1l02645"/>02645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02646"/>02646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;send&#32;instantiate&#32;network&#32;event</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02647"/>02647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiate(parameters,&#32;roomObject);
<anchor xml:id="__photon_network_8cs_source_1l02648"/>02648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02649"/>02649 
<anchor xml:id="__photon_network_8cs_source_1l02650"/>02650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;go.SetActive(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02651"/>02651 
<anchor xml:id="__photon_network_8cs_source_1l02652"/>02652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;IPunInstantiateMagicCallback&#32;is&#32;implemented&#32;on&#32;any&#32;script&#32;of&#32;the&#32;instantiated&#32;GO,&#32;let&apos;s&#32;call&#32;it&#32;directly:</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02653"/>02653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!PrefabsWithoutMagicCallback.Contains(parameters.prefabName))
<anchor xml:id="__photon_network_8cs_source_1l02654"/>02654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02655"/>02655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;list&#32;=&#32;go.GetComponents&lt;IPunInstantiateMagicCallback&gt;();
<anchor xml:id="__photon_network_8cs_source_1l02656"/>02656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(list.Length&#32;&gt;&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l02657"/>02657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02658"/>02658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonMessageInfo&#32;pmi&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;PhotonMessageInfo(parameters.creator,&#32;parameters.timestamp,&#32;photonViews[0]);
<anchor xml:id="__photon_network_8cs_source_1l02659"/>02659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(IPunInstantiateMagicCallback&#32;callbackComponent&#32;<emphasis role="keywordflow">in</emphasis>&#32;list)
<anchor xml:id="__photon_network_8cs_source_1l02660"/>02660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02661"/>02661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;callbackComponent.OnPhotonInstantiate(pmi);
<anchor xml:id="__photon_network_8cs_source_1l02662"/>02662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02663"/>02663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02664"/>02664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02665"/>02665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02666"/>02666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PrefabsWithoutMagicCallback.Add(parameters.prefabName);
<anchor xml:id="__photon_network_8cs_source_1l02667"/>02667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02668"/>02668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02669"/>02669 
<anchor xml:id="__photon_network_8cs_source_1l02670"/>02670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;go;
<anchor xml:id="__photon_network_8cs_source_1l02671"/>02671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02672"/>02672 
<anchor xml:id="__photon_network_8cs_source_1l02673"/>02673 
<anchor xml:id="__photon_network_8cs_source_1l02674"/>02674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link>&#32;SendInstantiateEvHashtable&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SendInstantiate&#32;reuses&#32;this&#32;to&#32;reduce&#32;GC</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02675"/>02675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;RaiseEventOptions&#32;SendInstantiateRaiseEventOptions&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;RaiseEventOptions();&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SendInstantiate&#32;reuses&#32;this&#32;to&#32;reduce&#32;GC</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02676"/>02676 
<anchor xml:id="__photon_network_8cs_source_1l02677"/>02677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;SendInstantiate(Pun.InstantiateParameters&#32;parameters,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;roomObject&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02678"/>02678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02679"/>02679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;first&#32;viewID&#32;is&#32;now&#32;also&#32;the&#32;gameobject&apos;s&#32;instantiateId</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02680"/>02680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;instantiateId&#32;=&#32;parameters.viewIDs[0];&#32;&#32;&#32;<emphasis role="comment">//&#32;LIMITS&#32;PHOTONVIEWS&amp;PLAYERS</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02681"/>02681 
<anchor xml:id="__photon_network_8cs_source_1l02682"/>02682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable.Clear();&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SendInstantiate&#32;reuses&#32;this&#32;Hashtable&#32;to&#32;reduce&#32;GC</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02683"/>02683 
<anchor xml:id="__photon_network_8cs_source_1l02684"/>02684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable[keyByteZero]&#32;=&#32;parameters.prefabName;
<anchor xml:id="__photon_network_8cs_source_1l02685"/>02685 
<anchor xml:id="__photon_network_8cs_source_1l02686"/>02686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameters.position&#32;!=&#32;Vector3.zero)
<anchor xml:id="__photon_network_8cs_source_1l02687"/>02687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02688"/>02688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable[keyByteOne]&#32;=&#32;parameters.position;
<anchor xml:id="__photon_network_8cs_source_1l02689"/>02689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02690"/>02690 
<anchor xml:id="__photon_network_8cs_source_1l02691"/>02691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameters.rotation&#32;!=&#32;Quaternion.identity)
<anchor xml:id="__photon_network_8cs_source_1l02692"/>02692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02693"/>02693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable[keyByteTwo]&#32;=&#32;parameters.rotation;
<anchor xml:id="__photon_network_8cs_source_1l02694"/>02694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02695"/>02695 
<anchor xml:id="__photon_network_8cs_source_1l02696"/>02696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameters.group&#32;!=&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l02697"/>02697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02698"/>02698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable[keyByteThree]&#32;=&#32;parameters.group;
<anchor xml:id="__photon_network_8cs_source_1l02699"/>02699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02700"/>02700 
<anchor xml:id="__photon_network_8cs_source_1l02701"/>02701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;send&#32;the&#32;list&#32;of&#32;viewIDs&#32;only&#32;if&#32;there&#32;are&#32;more&#32;than&#32;one.&#32;else&#32;the&#32;instantiateId&#32;is&#32;the&#32;viewID</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02702"/>02702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameters.viewIDs.Length&#32;&gt;&#32;1)
<anchor xml:id="__photon_network_8cs_source_1l02703"/>02703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02704"/>02704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable[keyByteFour]&#32;=&#32;parameters.viewIDs;&#32;<emphasis role="comment">//&#32;LIMITS&#32;PHOTONVIEWS&amp;PLAYERS</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02705"/>02705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02706"/>02706 
<anchor xml:id="__photon_network_8cs_source_1l02707"/>02707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameters.data&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02708"/>02708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02709"/>02709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable[keyByteFive]&#32;=&#32;parameters.data;
<anchor xml:id="__photon_network_8cs_source_1l02710"/>02710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02711"/>02711 
<anchor xml:id="__photon_network_8cs_source_1l02712"/>02712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentLevelPrefix&#32;&gt;&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l02713"/>02713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02714"/>02714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable[keyByteEight]&#32;=&#32;currentLevelPrefix;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;photonview&apos;s&#32;/&#32;object&apos;s&#32;level&#32;prefix</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02715"/>02715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02716"/>02716 
<anchor xml:id="__photon_network_8cs_source_1l02717"/>02717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable[keyByteSix]&#32;=&#32;PhotonNetwork.ServerTimestamp;
<anchor xml:id="__photon_network_8cs_source_1l02718"/>02718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateEvHashtable[keyByteSeven]&#32;=&#32;instantiateId;
<anchor xml:id="__photon_network_8cs_source_1l02719"/>02719 
<anchor xml:id="__photon_network_8cs_source_1l02720"/>02720 
<anchor xml:id="__photon_network_8cs_source_1l02721"/>02721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SendInstantiateRaiseEventOptions.CachingOption&#32;=&#32;(roomObject)&#32;?&#32;<link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39d">EventCaching</link>.AddToRoomCacheGlobal&#32;:&#32;<link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39d">EventCaching</link>.AddToRoomCache;
<anchor xml:id="__photon_network_8cs_source_1l02722"/>02722 
<anchor xml:id="__photon_network_8cs_source_1l02723"/>02723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;PhotonNetwork.RaiseEventInternal(PunEvent.Instantiation,&#32;SendInstantiateEvHashtable,&#32;SendInstantiateRaiseEventOptions,&#32;SendOptions.SendReliable);
<anchor xml:id="__photon_network_8cs_source_1l02724"/>02724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02725"/>02725 
<anchor xml:id="__photon_network_8cs_source_1l02726"/>02726 
<anchor xml:id="__photon_network_8cs_source_1l02749"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ada7d7b9bdb306863c66b260dde7c544e">02749</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ada7d7b9bdb306863c66b260dde7c544e">Destroy</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;targetView)
<anchor xml:id="__photon_network_8cs_source_1l02750"/>02750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02751"/>02751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targetView&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02752"/>02752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02753"/>02753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemoveInstantiatedGO(targetView.gameObject,&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1acd3228520b05c60cddddb9a3b75f3b1d">InRoom</link>);
<anchor xml:id="__photon_network_8cs_source_1l02754"/>02754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02755"/>02755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02756"/>02756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02757"/>02757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Destroy(targetPhotonView)&#32;failed,&#32;cause&#32;targetPhotonView&#32;is&#32;null.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02758"/>02758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02759"/>02759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02760"/>02760 
<anchor xml:id="__photon_network_8cs_source_1l02783"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a839b3fdf0a5aa749db1fafeff8d51bdf">02783</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a839b3fdf0a5aa749db1fafeff8d51bdf">Destroy</link>(GameObject&#32;targetGo)
<anchor xml:id="__photon_network_8cs_source_1l02784"/>02784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02785"/>02785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemoveInstantiatedGO(targetGo,&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1acd3228520b05c60cddddb9a3b75f3b1d">InRoom</link>);
<anchor xml:id="__photon_network_8cs_source_1l02786"/>02786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02787"/>02787 
<anchor xml:id="__photon_network_8cs_source_1l02801"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aee9bc16543629db01f0879339c1fcc8e">02801</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aee9bc16543629db01f0879339c1fcc8e">DestroyPlayerObjects</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;targetPlayer)
<anchor xml:id="__photon_network_8cs_source_1l02802"/>02802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02803"/>02803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targetPlayer&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02804"/>02804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02805"/>02805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;DestroyPlayerObjects()&#32;failed,&#32;cause&#32;parameter&#32;&apos;targetPlayer&apos;&#32;was&#32;null.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02806"/>02806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02807"/>02807 
<anchor xml:id="__photon_network_8cs_source_1l02808"/>02808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aee9bc16543629db01f0879339c1fcc8e">DestroyPlayerObjects</link>(targetPlayer.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>);
<anchor xml:id="__photon_network_8cs_source_1l02809"/>02809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02810"/>02810 
<anchor xml:id="__photon_network_8cs_source_1l02824"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5bc1ff03b1dc2226490bff064aaf6275">02824</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5bc1ff03b1dc2226490bff064aaf6275">DestroyPlayerObjects</link>(<emphasis role="keywordtype">int</emphasis>&#32;targetPlayerId)
<anchor xml:id="__photon_network_8cs_source_1l02825"/>02825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02826"/>02826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!VerifyCanUseNetwork())
<anchor xml:id="__photon_network_8cs_source_1l02827"/>02827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02828"/>02828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02829"/>02829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02830"/>02830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1a650042ff3d147ed8cd559b6258ce238d">IsMasterClient</link>&#32;||&#32;targetPlayerId&#32;==&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>)
<anchor xml:id="__photon_network_8cs_source_1l02831"/>02831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02832"/>02832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aee9bc16543629db01f0879339c1fcc8e">DestroyPlayerObjects</link>(targetPlayerId,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02833"/>02833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02834"/>02834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02835"/>02835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02836"/>02836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;DestroyPlayerObjects()&#32;failed,&#32;cause&#32;players&#32;can&#32;only&#32;destroy&#32;their&#32;own&#32;GameObjects.&#32;A&#32;Master&#32;Client&#32;can&#32;destroy&#32;anyone&apos;s.&#32;This&#32;is&#32;master:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac00d87d1bbd7d63fa13e6d1823e2f576">IsMasterClient</link>);
<anchor xml:id="__photon_network_8cs_source_1l02837"/>02837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02838"/>02838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02839"/>02839 
<anchor xml:id="__photon_network_8cs_source_1l02856"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad2885fef5a61d3561a740f3abf3ab69a">02856</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad2885fef5a61d3561a740f3abf3ab69a">DestroyAll</link>()
<anchor xml:id="__photon_network_8cs_source_1l02857"/>02857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02858"/>02858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac00d87d1bbd7d63fa13e6d1823e2f576">IsMasterClient</link>)
<anchor xml:id="__photon_network_8cs_source_1l02859"/>02859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02860"/>02860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ad2885fef5a61d3561a740f3abf3ab69a">DestroyAll</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02861"/>02861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02862"/>02862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02863"/>02863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02864"/>02864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Couldn&apos;t&#32;call&#32;DestroyAll()&#32;as&#32;only&#32;the&#32;master&#32;client&#32;is&#32;allowed&#32;to&#32;call&#32;this.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02865"/>02865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02866"/>02866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02867"/>02867 
<anchor xml:id="__photon_network_8cs_source_1l02880"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a15db18b5389663d86c17117eba98714d">02880</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a15db18b5389663d86c17117eba98714d">RemoveRPCs</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;targetPlayer)
<anchor xml:id="__photon_network_8cs_source_1l02881"/>02881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02882"/>02882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!VerifyCanUseNetwork())
<anchor xml:id="__photon_network_8cs_source_1l02883"/>02883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02884"/>02884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02885"/>02885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02886"/>02886 
<anchor xml:id="__photon_network_8cs_source_1l02887"/>02887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!targetPlayer.<link linkend="_class_photon_1_1_realtime_1_1_player_1aeff26d47f29a2f3ecaae7e4cdae85bff">IsLocal</link>&#32;&amp;&amp;&#32;!<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ac00d87d1bbd7d63fa13e6d1823e2f576">IsMasterClient</link>)
<anchor xml:id="__photon_network_8cs_source_1l02888"/>02888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02889"/>02889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Error;&#32;Only&#32;the&#32;MasterClient&#32;can&#32;call&#32;RemoveRPCs&#32;for&#32;other&#32;players.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02890"/>02890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02891"/>02891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02892"/>02892 
<anchor xml:id="__photon_network_8cs_source_1l02893"/>02893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a92ebf88db80533a34e0dd73ffb6b1086">OpCleanActorRpcBuffer</link>(targetPlayer.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>);
<anchor xml:id="__photon_network_8cs_source_1l02894"/>02894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02895"/>02895 
<anchor xml:id="__photon_network_8cs_source_1l02905"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a157da0bb230e0ea5b209a462d81b115f">02905</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a157da0bb230e0ea5b209a462d81b115f">RemoveRPCs</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;targetPhotonView)
<anchor xml:id="__photon_network_8cs_source_1l02906"/>02906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02907"/>02907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!VerifyCanUseNetwork())
<anchor xml:id="__photon_network_8cs_source_1l02908"/>02908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02909"/>02909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02910"/>02910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02911"/>02911 
<anchor xml:id="__photon_network_8cs_source_1l02912"/>02912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1acf94c5d71fe4fc49213ff466d5613dce">CleanRpcBufferIfMine</link>(targetPhotonView);
<anchor xml:id="__photon_network_8cs_source_1l02913"/>02913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02914"/>02914 
<anchor xml:id="__photon_network_8cs_source_1l02915"/>02915 
<anchor xml:id="__photon_network_8cs_source_1l02919"/>02919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RPC(<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;view,&#32;<emphasis role="keywordtype">string</emphasis>&#32;methodName,&#32;<link linkend="_group__public_api_1gad59a35d37925dbf12a969adac050714b">RpcTarget</link>&#32;target,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;encrypt,&#32;params&#32;<emphasis role="keywordtype">object</emphasis>[]&#32;parameters)
<anchor xml:id="__photon_network_8cs_source_1l02920"/>02920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02921"/>02921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(methodName))
<anchor xml:id="__photon_network_8cs_source_1l02922"/>02922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02923"/>02923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;RPC&#32;method&#32;name&#32;cannot&#32;be&#32;null&#32;or&#32;empty.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02924"/>02924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02925"/>02925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02926"/>02926 
<anchor xml:id="__photon_network_8cs_source_1l02927"/>02927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!VerifyCanUseNetwork())
<anchor xml:id="__photon_network_8cs_source_1l02928"/>02928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02929"/>02929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02930"/>02930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02931"/>02931 
<anchor xml:id="__photon_network_8cs_source_1l02932"/>02932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02933"/>02933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02934"/>02934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;RPCs&#32;can&#32;only&#32;be&#32;sent&#32;in&#32;rooms.&#32;Call&#32;of&#32;\&quot;&quot;</emphasis>&#32;+&#32;methodName&#32;+&#32;<emphasis role="stringliteral">&quot;\&quot;&#32;gets&#32;executed&#32;locally&#32;only,&#32;if&#32;at&#32;all.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02935"/>02935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02936"/>02936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02937"/>02937 
<anchor xml:id="__photon_network_8cs_source_1l02938"/>02938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02939"/>02939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02940"/>02940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RPC(view,&#32;methodName,&#32;target,&#32;<emphasis role="keyword">null</emphasis>,&#32;encrypt,&#32;parameters);
<anchor xml:id="__photon_network_8cs_source_1l02941"/>02941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02942"/>02942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02943"/>02943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02944"/>02944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Could&#32;not&#32;execute&#32;RPC&#32;&quot;</emphasis>&#32;+&#32;methodName&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Possible&#32;scene&#32;loading&#32;in&#32;progress?&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02945"/>02945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02946"/>02946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02947"/>02947 
<anchor xml:id="__photon_network_8cs_source_1l02951"/>02951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RPC(PhotonView&#32;view,&#32;<emphasis role="keywordtype">string</emphasis>&#32;methodName,&#32;Player&#32;targetPlayer,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;encrypt,&#32;params&#32;<emphasis role="keywordtype">object</emphasis>[]&#32;parameters)
<anchor xml:id="__photon_network_8cs_source_1l02952"/>02952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02953"/>02953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!VerifyCanUseNetwork())
<anchor xml:id="__photon_network_8cs_source_1l02954"/>02954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02955"/>02955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02956"/>02956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02957"/>02957 
<anchor xml:id="__photon_network_8cs_source_1l02958"/>02958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02959"/>02959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02960"/>02960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;RPCs&#32;can&#32;only&#32;be&#32;sent&#32;in&#32;rooms.&#32;Call&#32;of&#32;\&quot;&quot;</emphasis>&#32;+&#32;methodName&#32;+&#32;<emphasis role="stringliteral">&quot;\&quot;&#32;gets&#32;executed&#32;locally&#32;only,&#32;if&#32;at&#32;all.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02961"/>02961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l02962"/>02962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02963"/>02963 
<anchor xml:id="__photon_network_8cs_source_1l02964"/>02964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02965"/>02965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02966"/>02966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;RPC&#32;can&apos;t&#32;be&#32;sent&#32;to&#32;target&#32;Player&#32;being&#32;null!&#32;Did&#32;not&#32;send&#32;\&quot;&quot;</emphasis>&#32;+&#32;methodName&#32;+&#32;<emphasis role="stringliteral">&quot;\&quot;&#32;call.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02967"/>02967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02968"/>02968 
<anchor xml:id="__photon_network_8cs_source_1l02969"/>02969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02970"/>02970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02971"/>02971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RPC(view,&#32;methodName,&#32;<link linkend="_group__public_api_1gad59a35d37925dbf12a969adac050714b">RpcTarget</link>.Others,&#32;targetPlayer,&#32;encrypt,&#32;parameters);
<anchor xml:id="__photon_network_8cs_source_1l02972"/>02972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02973"/>02973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l02974"/>02974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02975"/>02975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Could&#32;not&#32;execute&#32;RPC&#32;&quot;</emphasis>&#32;+&#32;methodName&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Possible&#32;scene&#32;loading&#32;in&#32;progress?&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l02976"/>02976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02977"/>02977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02978"/>02978 
<anchor xml:id="__photon_network_8cs_source_1l02979"/>02979 
<anchor xml:id="__photon_network_8cs_source_1l02983"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae755d87df334b523a0850c06879c3089">02983</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;HashSet&lt;GameObject&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae755d87df334b523a0850c06879c3089">FindGameObjectsWithComponent</link>(Type&#32;type)
<anchor xml:id="__photon_network_8cs_source_1l02984"/>02984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02985"/>02985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HashSet&lt;GameObject&gt;&#32;objectsWithComponent&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;GameObject&gt;();
<anchor xml:id="__photon_network_8cs_source_1l02986"/>02986 
<anchor xml:id="__photon_network_8cs_source_1l02987"/>02987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Component[]&#32;targetComponents&#32;=&#32;(Component[])&#32;GameObject.FindObjectsOfType(type);
<anchor xml:id="__photon_network_8cs_source_1l02988"/>02988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;&#32;index&#32;&lt;&#32;targetComponents.Length;&#32;index++)
<anchor xml:id="__photon_network_8cs_source_1l02989"/>02989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02990"/>02990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targetComponents[index]&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l02991"/>02991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l02992"/>02992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objectsWithComponent.Add(targetComponents[index].gameObject);
<anchor xml:id="__photon_network_8cs_source_1l02993"/>02993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02994"/>02994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02995"/>02995 
<anchor xml:id="__photon_network_8cs_source_1l02996"/>02996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;objectsWithComponent;
<anchor xml:id="__photon_network_8cs_source_1l02997"/>02997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l02998"/>02998 
<anchor xml:id="__photon_network_8cs_source_1l02999"/>02999 
<anchor xml:id="__photon_network_8cs_source_1l03011"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa941f29879694fd0a54f1ae58f8e394a">03011</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa941f29879694fd0a54f1ae58f8e394a">SetInterestGroups</link>(<emphasis role="keywordtype">byte</emphasis>&#32;group,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;enabled)
<anchor xml:id="__photon_network_8cs_source_1l03012"/>03012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03013"/>03013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!VerifyCanUseNetwork())
<anchor xml:id="__photon_network_8cs_source_1l03014"/>03014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03015"/>03015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03016"/>03016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03017"/>03017 
<anchor xml:id="__photon_network_8cs_source_1l03018"/>03018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enabled)
<anchor xml:id="__photon_network_8cs_source_1l03019"/>03019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03020"/>03020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;groups&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[1]&#32;{&#32;(byte)group&#32;};
<anchor xml:id="__photon_network_8cs_source_1l03021"/>03021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa941f29879694fd0a54f1ae58f8e394a">SetInterestGroups</link>(<emphasis role="keyword">null</emphasis>,&#32;groups);
<anchor xml:id="__photon_network_8cs_source_1l03022"/>03022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03023"/>03023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03024"/>03024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03025"/>03025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;groups&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[1]&#32;{&#32;(byte)group&#32;};
<anchor xml:id="__photon_network_8cs_source_1l03026"/>03026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa941f29879694fd0a54f1ae58f8e394a">SetInterestGroups</link>(groups,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l03027"/>03027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03028"/>03028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03029"/>03029 
<anchor xml:id="__photon_network_8cs_source_1l03030"/>03030 
<anchor xml:id="__photon_network_8cs_source_1l03056"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a9aa7d7a2389b180e95c81921076ac056">03056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a9aa7d7a2389b180e95c81921076ac056">LoadLevel</link>(<emphasis role="keywordtype">int</emphasis>&#32;levelNumber)
<anchor xml:id="__photon_network_8cs_source_1l03057"/>03057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03058"/>03058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1a6c131d595e0ac9be1bd269cb0f02a6b0">AppQuits</link>)
<anchor xml:id="__photon_network_8cs_source_1l03059"/>03059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03060"/>03060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03061"/>03061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03062"/>03062 
<anchor xml:id="__photon_network_8cs_source_1l03063"/>03063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a2440ba4650d0f1dbb3d3091bb44758d4">AutomaticallySyncScene</link>)
<anchor xml:id="__photon_network_8cs_source_1l03064"/>03064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03065"/>03065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetLevelInPropsIfSynced(levelNumber);
<anchor xml:id="__photon_network_8cs_source_1l03066"/>03066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03067"/>03067 
<anchor xml:id="__photon_network_8cs_source_1l03068"/>03068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03069"/>03069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loadingLevelAndPausedNetwork&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03070"/>03070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_AsyncLevelLoadingOperation&#32;=&#32;SceneManager.LoadSceneAsync(levelNumber,LoadSceneMode.Single);
<anchor xml:id="__photon_network_8cs_source_1l03071"/>03071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03072"/>03072 
<anchor xml:id="__photon_network_8cs_source_1l03098"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aae0580953bb12206178d0e7f438a01ed">03098</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aae0580953bb12206178d0e7f438a01ed">LoadLevel</link>(<emphasis role="keywordtype">string</emphasis>&#32;levelName)
<anchor xml:id="__photon_network_8cs_source_1l03099"/>03099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03100"/>03100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_handler">PhotonHandler</link>.<link linkend="_class_photon_1_1_realtime_1_1_connection_handler_1a6c131d595e0ac9be1bd269cb0f02a6b0">AppQuits</link>)
<anchor xml:id="__photon_network_8cs_source_1l03101"/>03101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03102"/>03102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03103"/>03103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03104"/>03104 
<anchor xml:id="__photon_network_8cs_source_1l03105"/>03105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a2440ba4650d0f1dbb3d3091bb44758d4">AutomaticallySyncScene</link>)
<anchor xml:id="__photon_network_8cs_source_1l03106"/>03106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03107"/>03107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetLevelInPropsIfSynced(levelName);
<anchor xml:id="__photon_network_8cs_source_1l03108"/>03108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03109"/>03109 
<anchor xml:id="__photon_network_8cs_source_1l03110"/>03110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a0ac7974d889dbb6498a161e62be6e4ff">IsMessageQueueRunning</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03111"/>03111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loadingLevelAndPausedNetwork&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03112"/>03112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_AsyncLevelLoadingOperation&#32;=&#32;SceneManager.LoadSceneAsync(levelName,&#32;LoadSceneMode.Single);
<anchor xml:id="__photon_network_8cs_source_1l03113"/>03113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03114"/>03114 
<anchor xml:id="__photon_network_8cs_source_1l03147"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1aec48642992944ee0a7ea14bd4c51a8a1">03147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aec48642992944ee0a7ea14bd4c51a8a1">WebRpc</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">object</emphasis>&#32;parameters,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;sendAuthCookie&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l03148"/>03148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03149"/>03149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a312fc99165f039e31b65bebbafdf6736">NetworkingClient</link>.<link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a60e3a0a39e040f625af0efc66a5022fa">OpWebRpc</link>(name,&#32;parameters,&#32;sendAuthCookie);
<anchor xml:id="__photon_network_8cs_source_1l03150"/>03150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03151"/>03151 
<anchor xml:id="__photon_network_8cs_source_1l03155"/>03155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetupLogging()
<anchor xml:id="__photon_network_8cs_source_1l03156"/>03156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03157"/>03157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;only&#32;apply&#32;Settings&#32;if&#32;LogLevel&#32;is&#32;default&#32;(&#32;see&#32;ServerSettings.cs),&#32;else&#32;it&#32;means&#32;it&apos;s&#32;been&#32;set&#32;programmatically</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03158"/>03158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa8af6239914ab71acd29b56e9610f534">LogLevel</link>&#32;==&#32;<link linkend="_group__public_api_1ga5a8128eaeb2f346d4cceb57d48caf9c1">PunLogLevel</link>.ErrorsOnly)
<anchor xml:id="__photon_network_8cs_source_1l03159"/>03159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03160"/>03160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aa8af6239914ab71acd29b56e9610f534">LogLevel</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1aabdd424fea2e89f679f6fcfb1ac71798">PunLogging</link>;
<anchor xml:id="__photon_network_8cs_source_1l03161"/>03161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03162"/>03162 
<anchor xml:id="__photon_network_8cs_source_1l03163"/>03163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;only&#32;apply&#32;Settings&#32;if&#32;LogLevel&#32;is&#32;default&#32;(&#32;see&#32;ServerSettings.cs),&#32;else&#32;it&#32;means&#32;it&apos;s&#32;been&#32;set&#32;programmatically</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03164"/>03164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PhotonNetwork.NetworkingClient.LoadBalancingPeer.DebugOut&#32;==&#32;DebugLevel.ERROR)
<anchor xml:id="__photon_network_8cs_source_1l03165"/>03165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03166"/>03166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonNetwork.NetworkingClient.LoadBalancingPeer.DebugOut&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1a1f6b368c3d10655148ebeba8d2376dd0">AppSettings</link>.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1a66709376461646f2508f08af9f3bcbae">NetworkLogging</link>;
<anchor xml:id="__photon_network_8cs_source_1l03167"/>03167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03168"/>03168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03169"/>03169 
<anchor xml:id="__photon_network_8cs_source_1l03170"/>03170 
<anchor xml:id="__photon_network_8cs_source_1l03171"/><link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3f82ce93e20527fd56d98e1c06717ae8">03171</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3f82ce93e20527fd56d98e1c06717ae8">LoadOrCreateSettings</link>(<emphasis role="keywordtype">bool</emphasis>&#32;reload&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l03172"/>03172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03173"/>03173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(reload)
<anchor xml:id="__photon_network_8cs_source_1l03174"/>03174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03175"/>03175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;photonServerSettings&#32;=&#32;<emphasis role="keyword">null</emphasis>;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PhotonEditor&#32;will&#32;use&#32;this&#32;to&#32;load&#32;and&#32;save&#32;the&#32;settings&#32;delayed</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03176"/>03176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03177"/>03177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(photonServerSettings&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l03178"/>03178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03179"/>03179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;photonServerSettings&#32;is&#32;not&#32;null.&#32;Will&#32;not&#32;LoadOrCreateSettings().&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l03180"/>03180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03181"/>03181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03182"/>03182 
<anchor xml:id="__photon_network_8cs_source_1l03183"/>03183 
<anchor xml:id="__photon_network_8cs_source_1l03184"/>03184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;try&#32;to&#32;load&#32;the&#32;resource&#32;/&#32;asset&#32;(ServerSettings&#32;a.k.a.&#32;PhotonServerSettings)</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03185"/>03185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;photonServerSettings&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_server_settings">ServerSettings</link>)Resources.Load(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a91a3d63d8d710b87e145a9b6a18a17e0">ServerSettingsFileName</link>,&#32;typeof(<link linkend="_class_photon_1_1_pun_1_1_server_settings">ServerSettings</link>));
<anchor xml:id="__photon_network_8cs_source_1l03186"/>03186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(photonServerSettings&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l03187"/>03187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03188"/>03188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03189"/>03189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03190"/>03190 
<anchor xml:id="__photon_network_8cs_source_1l03191"/>03191 
<anchor xml:id="__photon_network_8cs_source_1l03192"/>03192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;create&#32;the&#32;ScriptableObject&#32;if&#32;it&#32;could&#32;not&#32;be&#32;loaded</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03193"/>03193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(photonServerSettings&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l03194"/>03194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03195"/>03195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;photonServerSettings&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_server_settings">ServerSettings</link>)ScriptableObject.CreateInstance(<emphasis role="stringliteral">&quot;ServerSettings&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l03196"/>03196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(photonServerSettings&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l03197"/>03197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03198"/>03198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Failed&#32;to&#32;create&#32;ServerSettings.&#32;PUN&#32;is&#32;unable&#32;to&#32;run&#32;this&#32;way.&#32;If&#32;you&#32;deleted&#32;it&#32;from&#32;the&#32;project,&#32;reload&#32;the&#32;Editor.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l03199"/>03199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03200"/>03200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03201"/>03201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03202"/>03202 
<anchor xml:id="__photon_network_8cs_source_1l03203"/>03203 
<anchor xml:id="__photon_network_8cs_source_1l03204"/>03204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;in&#32;the&#32;editor,&#32;store&#32;the&#32;settings&#32;file&#32;as&#32;it&apos;s&#32;not&#32;loaded</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03205"/>03205 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03206"/>03206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;don&apos;t&#32;save&#32;the&#32;settings&#32;before&#32;OnProjectUpdated&#32;got&#32;called&#32;(this&#32;hints&#32;at&#32;an&#32;ongoing&#32;import/load)</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03207"/>03207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!PhotonEditorUtils.ProjectChangedWasCalled)
<anchor xml:id="__photon_network_8cs_source_1l03208"/>03208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03209"/>03209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03210"/>03210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03211"/>03211 
<anchor xml:id="__photon_network_8cs_source_1l03212"/>03212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;punResourcesDirectory&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.FindPunAssetFolder()&#32;+&#32;<emphasis role="stringliteral">&quot;Resources/&quot;</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03213"/>03213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;serverSettingsAssetPath&#32;=&#32;punResourcesDirectory&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a91a3d63d8d710b87e145a9b6a18a17e0">ServerSettingsFileName</link>&#32;+&#32;<emphasis role="stringliteral">&quot;.asset&quot;</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03214"/>03214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;serverSettingsDirectory&#32;=&#32;Path.GetDirectoryName(serverSettingsAssetPath);
<anchor xml:id="__photon_network_8cs_source_1l03215"/>03215 
<anchor xml:id="__photon_network_8cs_source_1l03216"/>03216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Directory.Exists(serverSettingsDirectory))
<anchor xml:id="__photon_network_8cs_source_1l03217"/>03217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03218"/>03218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Directory.CreateDirectory(serverSettingsDirectory);
<anchor xml:id="__photon_network_8cs_source_1l03219"/>03219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AssetDatabase.ImportAsset(serverSettingsDirectory);
<anchor xml:id="__photon_network_8cs_source_1l03220"/>03220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03221"/>03221 
<anchor xml:id="__photon_network_8cs_source_1l03222"/>03222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!File.Exists(serverSettingsAssetPath))
<anchor xml:id="__photon_network_8cs_source_1l03223"/>03223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03224"/>03224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AssetDatabase.CreateAsset(photonServerSettings,&#32;serverSettingsAssetPath);
<anchor xml:id="__photon_network_8cs_source_1l03225"/>03225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03226"/>03226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AssetDatabase.SaveAssets();
<anchor xml:id="__photon_network_8cs_source_1l03227"/>03227 
<anchor xml:id="__photon_network_8cs_source_1l03228"/>03228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;the&#32;project&#32;does&#32;not&#32;have&#32;PhotonServerSettings&#32;yet,&#32;enable&#32;&quot;Development&#32;Build&quot;&#32;to&#32;use&#32;the&#32;Dev&#32;Region.</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03229"/>03229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUserBuildSettings.development&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03230"/>03230 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03231"/>03231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03232"/>03232 
<anchor xml:id="__photon_network_8cs_source_1l03233"/>03233 
<anchor xml:id="__photon_network_8cs_source_1l03234"/>03234 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03235"/>03235 
<anchor xml:id="__photon_network_8cs_source_1l03241"/>03241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;FindAssetPath(<emphasis role="keywordtype">string</emphasis>&#32;asset)
<anchor xml:id="__photon_network_8cs_source_1l03242"/>03242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03243"/>03243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;guids&#32;=&#32;AssetDatabase.FindAssets&#32;(asset,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l03244"/>03244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(guids.Length&#32;!=&#32;1)
<anchor xml:id="__photon_network_8cs_source_1l03245"/>03245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03246"/>03246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Empty;
<anchor xml:id="__photon_network_8cs_source_1l03247"/>03247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03248"/>03248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03249"/>03249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;AssetDatabase.GUIDToAssetPath&#32;(guids&#32;[0]);
<anchor xml:id="__photon_network_8cs_source_1l03250"/>03250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03251"/>03251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03252"/>03252 
<anchor xml:id="__photon_network_8cs_source_1l03253"/>03253 
<anchor xml:id="__photon_network_8cs_source_1l03258"/>03258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;FindPunAssetFolder()
<anchor xml:id="__photon_network_8cs_source_1l03259"/>03259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03260"/>03260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;_thisPath&#32;=&#32;&#32;FindAssetPath(<emphasis role="stringliteral">&quot;PunClasses&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l03261"/>03261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;_PunFolderPath&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Empty;
<anchor xml:id="__photon_network_8cs_source_1l03262"/>03262 
<anchor xml:id="__photon_network_8cs_source_1l03263"/>03263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;FindPunAssetFolder&#32;&quot;+_thisPath);</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03264"/>03264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;subdirectoryEntries&#32;=&#32;_thisPath.Split&#32;(<emphasis role="charliteral">&apos;/&apos;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l03265"/>03265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>&#32;dir&#32;<emphasis role="keywordflow">in</emphasis>&#32;subdirectoryEntries)
<anchor xml:id="__photon_network_8cs_source_1l03266"/>03266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03267"/>03267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty&#32;(dir))
<anchor xml:id="__photon_network_8cs_source_1l03268"/>03268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03269"/>03269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_PunFolderPath&#32;+=&#32;dir&#32;+<emphasis role="stringliteral">&quot;/&quot;</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03270"/>03270 
<anchor xml:id="__photon_network_8cs_source_1l03271"/>03271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.Equals&#32;(dir,&#32;<emphasis role="stringliteral">&quot;PhotonUnityNetworking&quot;</emphasis>))
<anchor xml:id="__photon_network_8cs_source_1l03272"/>03272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03273"/>03273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.Log(&quot;_PunFolderPath&#32;&quot;+_PunFolderPath);</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03274"/>03274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_PunFolderPath;
<anchor xml:id="__photon_network_8cs_source_1l03275"/>03275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03276"/>03276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03277"/>03277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03278"/>03278 
<anchor xml:id="__photon_network_8cs_source_1l03279"/>03279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;_PunFolderPath&#32;fallback&#32;to&#32;default&#32;Assets/Photon&#32;Unity&#32;Networking/&quot;);</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03280"/>03280 
<anchor xml:id="__photon_network_8cs_source_1l03281"/>03281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Assets/Photon/PhotonUnityNetworking/&quot;</emphasis>;
<anchor xml:id="__photon_network_8cs_source_1l03282"/>03282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03283"/>03283 
<anchor xml:id="__photon_network_8cs_source_1l03284"/>03284 
<anchor xml:id="__photon_network_8cs_source_1l03289"/>03289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InternalCleanPhotonMonoFromSceneIfStuck()
<anchor xml:id="__photon_network_8cs_source_1l03290"/>03290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03291"/>03291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonHandler[]&#32;photonHandlers&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>.FindObjectsOfType(typeof(PhotonHandler))&#32;as&#32;PhotonHandler[];
<anchor xml:id="__photon_network_8cs_source_1l03292"/>03292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(photonHandlers&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;photonHandlers.Length&#32;&gt;&#32;0)
<anchor xml:id="__photon_network_8cs_source_1l03293"/>03293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03294"/>03294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;Cleaning&#32;up&#32;hidden&#32;PhotonHandler&#32;instances&#32;in&#32;scene.&#32;Please&#32;save&#32;the&#32;scene&#32;to&#32;fix&#32;the&#32;problem.&quot;</emphasis>);
<anchor xml:id="__photon_network_8cs_source_1l03295"/>03295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(PhotonHandler&#32;photonHandler&#32;<emphasis role="keywordflow">in</emphasis>&#32;photonHandlers)
<anchor xml:id="__photon_network_8cs_source_1l03296"/>03296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03297"/>03297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Debug.Log(&quot;Removing&#32;Handler:&#32;&quot;&#32;+&#32;photonHandler&#32;+&#32;&quot;&#32;photonHandler.gameObject:&#32;&quot;&#32;+&#32;photonHandler.gameObject);</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03298"/>03298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(photonHandler.gameObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;photonHandler.gameObject.name&#32;==&#32;<emphasis role="stringliteral">&quot;PhotonMono&quot;</emphasis>)
<anchor xml:id="__photon_network_8cs_source_1l03299"/>03299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_network_8cs_source_1l03300"/>03300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;photonHandler.gameObject.hideFlags&#32;=&#32;0;
<anchor xml:id="__photon_network_8cs_source_1l03301"/>03301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a3d164a4fbbdd103bddb596268f741bae">GameObject</link>.DestroyImmediate(photonHandler.gameObject);
<anchor xml:id="__photon_network_8cs_source_1l03302"/>03302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03303"/>03303 
<anchor xml:id="__photon_network_8cs_source_1l03304"/>03304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a2cb05e4bb7830be982f0922fed86b4cd">Component</link>.DestroyImmediate(photonHandler);
<anchor xml:id="__photon_network_8cs_source_1l03305"/>03305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03306"/>03306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03307"/>03307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03308"/>03308 
<anchor xml:id="__photon_network_8cs_source_1l03309"/>03309 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__photon_network_8cs_source_1l03310"/>03310 
<anchor xml:id="__photon_network_8cs_source_1l03311"/>03311 &#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_network_8cs_source_1l03312"/>03312 }
</programlisting></section>
