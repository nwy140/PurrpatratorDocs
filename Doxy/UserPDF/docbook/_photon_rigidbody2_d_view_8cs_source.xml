<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__photon_rigidbody2_d_view_8cs_source" xml:lang="en-US">
<title>PhotonRigidbody2DView.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Views/PhotonRigidbody2DView.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;PhotonRigidbody2DView.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2018&#32;Exit&#32;Games&#32;GmbH</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;&#32;Component&#32;to&#32;synchronize&#32;2d&#32;rigidbodies&#32;via&#32;PUN.</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00010"/>00010 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00011"/>00011 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun">Photon.Pun</link>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00013"/>00013 {
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00015"/>00015 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00016"/>00016 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;[RequireComponent(typeof(Rigidbody2D))]
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;[AddComponentMenu(<emphasis role="stringliteral">&quot;Photon&#32;Networking/Photon&#32;Rigidbody&#32;2D&#32;View&quot;</emphasis>)]
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00019"/><link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view">PhotonRigidbody2DView</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun">MonoBehaviourPun</link>,&#32;<link linkend="_interface_photon_1_1_pun_1_1_i_pun_observable">IPunObservable</link>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;m_Distance;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;m_Angle;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00023"/>00023 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Rigidbody2D&#32;m_Body;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00025"/>00025 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector2&#32;m_NetworkPosition;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00027"/>00027 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;m_NetworkRotation;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00029"/>00029 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00031"/><link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a363d60bad57d2a6f319b4258a68b7f11">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a363d60bad57d2a6f319b4258a68b7f11">m_SynchronizeVelocity</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00033"/><link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a01a03844d7c96f90c0d6974a10771174">00033</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a01a03844d7c96f90c0d6974a10771174">m_SynchronizeAngularVelocity</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00034"/>00034 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00036"/><link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1afd96cf9d983eed191b5d30d7f341b7eb">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1afd96cf9d983eed191b5d30d7f341b7eb">m_TeleportEnabled</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00038"/><link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a9a45c5aac6359dc0ab94a28ec11f656f">00038</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a9a45c5aac6359dc0ab94a28ec11f656f">m_TeleportIfDistanceGreaterThan</link>&#32;=&#32;3.0f;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00039"/>00039 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00040"/><link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1ad7c6ff17993caec10ec4b23e2454387b">00040</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1ad7c6ff17993caec10ec4b23e2454387b">Awake</link>()
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Body&#32;=&#32;GetComponent&lt;Rigidbody2D&gt;();
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00043"/>00043 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_NetworkPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2();
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00046"/>00046 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00047"/><link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a1893279384276075a0e2b7daae9e1159">00047</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a1893279384276075a0e2b7daae9e1159">FixedUpdate</link>()
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.<link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_1a95579fa46054897edb5dbc2356b3d5b7">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Body.position&#32;=&#32;Vector2.MoveTowards(this.m_Body.position,&#32;<emphasis role="keyword">this</emphasis>.m_NetworkPosition,&#32;<emphasis role="keyword">this</emphasis>.m_Distance&#32;*&#32;(1.0f&#32;/&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1add2c5cc89d654a90db576bc9a6e0411f">SerializationRate</link>));
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Body.rotation&#32;=&#32;Mathf.MoveTowards(this.m_Body.rotation,&#32;<emphasis role="keyword">this</emphasis>.m_NetworkRotation,&#32;<emphasis role="keyword">this</emphasis>.m_Angle&#32;*&#32;(1.0f&#32;/&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1add2c5cc89d654a90db576bc9a6e0411f">SerializationRate</link>));
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00055"/>00055 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00056"/><link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a11031cb31ea443bdc8989e2ff7023692">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a11031cb31ea443bdc8989e2ff7023692">OnPhotonSerializeView</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link>&#32;stream,&#32;<link linkend="_struct_photon_1_1_pun_1_1_photon_message_info">PhotonMessageInfo</link>&#32;info)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1afb5b9a03ecf814332d7ea282987e3fdc">IsWriting</link>)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">SendNext</link>(this.m_Body.position);
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">SendNext</link>(this.m_Body.rotation);
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00062"/>00062 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_SynchronizeVelocity)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">SendNext</link>(this.m_Body.velocity);
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00067"/>00067 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_SynchronizeAngularVelocity)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">SendNext</link>(this.m_Body.angularVelocity);
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_NetworkPosition&#32;=&#32;(Vector2)stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">ReceiveNext</link>();
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_NetworkRotation&#32;=&#32;(float)stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">ReceiveNext</link>();
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00077"/>00077 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_TeleportEnabled)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Vector3.Distance(<emphasis role="keyword">this</emphasis>.m_Body.position,&#32;<emphasis role="keyword">this</emphasis>.m_NetworkPosition)&#32;&gt;&#32;this.<link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a9a45c5aac6359dc0ab94a28ec11f656f">m_TeleportIfDistanceGreaterThan</link>)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Body.position&#32;=&#32;this.m_NetworkPosition;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00085"/>00085 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_SynchronizeVelocity&#32;||&#32;this.m_SynchronizeAngularVelocity)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;lag&#32;=&#32;Mathf.Abs((<emphasis role="keywordtype">float</emphasis>)(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a34964303a3ad5074da94cc1cd6f70a74">Time</link>&#32;-&#32;info.<link linkend="_struct_photon_1_1_pun_1_1_photon_message_info_1a7c6840975ccb322934529ca4c22de003">SentServerTime</link>));
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00089"/>00089 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_rigidbody2_d_view_1a363d60bad57d2a6f319b4258a68b7f11">m_SynchronizeVelocity</link>)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Body.velocity&#32;=&#32;(Vector2)stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">ReceiveNext</link>();
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00093"/>00093 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_NetworkPosition&#32;+=&#32;this.m_Body.velocity&#32;*&#32;lag;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00095"/>00095 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Distance&#32;=&#32;Vector2.Distance(this.m_Body.position,&#32;<emphasis role="keyword">this</emphasis>.m_NetworkPosition);
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00098"/>00098 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_SynchronizeAngularVelocity)
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Body.angularVelocity&#32;=&#32;(float)stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">ReceiveNext</link>();
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00102"/>00102 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_NetworkRotation&#32;+=&#32;this.m_Body.angularVelocity&#32;*&#32;lag;
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00104"/>00104 
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Angle&#32;=&#32;Mathf.Abs(this.m_Body.rotation&#32;-&#32;<emphasis role="keyword">this</emphasis>.m_NetworkRotation);
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_rigidbody2_d_view_8cs_source_1l00111"/>00111 }
</programlisting></section>
