<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__photon_stream_queue_8cs_source" xml:lang="en-US">
<title>PhotonStreamQueue.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/PhotonStreamQueue.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__photon_stream_queue_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;PhotonStreamQueue.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2018&#32;Exit&#32;Games&#32;GmbH</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;Contains&#32;the&#32;PhotonStreamQueue.</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00010"/>00010 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00011"/>00011 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun">Photon.Pun</link>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00013"/>00013 {
<anchor xml:id="__photon_stream_queue_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.<link linkend="_namespace_system_1_1_collections">Collections</link>.Generic;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00016"/>00016 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00024"/><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue">PhotonStreamQueue</link>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_SampleRate;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_SampleCount;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_ObjectsPerSample&#32;=&#32;-1;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00029"/>00029 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;m_LastSampleTime&#32;=&#32;-Mathf.Infinity;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_LastFrameCount&#32;=&#32;-1;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_NextObjectIndex&#32;=&#32;-1;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00033"/>00033 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;object&gt;&#32;m_Objects&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;object&gt;();
<anchor xml:id="__photon_stream_queue_8cs_source_1l00035"/>00035 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_IsWriting;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00037"/>00037 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00042"/><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a66c62b641df4f504070caa7c4ed87d64">00042</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a66c62b641df4f504070caa7c4ed87d64">PhotonStreamQueue</link>(<emphasis role="keywordtype">int</emphasis>&#32;sampleRate)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_SampleRate&#32;=&#32;sampleRate;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00046"/>00046 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;BeginWritePackage()
<anchor xml:id="__photon_stream_queue_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//If&#32;not&#32;enough&#32;time&#32;has&#32;passed&#32;since&#32;the&#32;last&#32;sample,&#32;we&#32;don&apos;t&#32;want&#32;to&#32;write&#32;anything</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Time.realtimeSinceStartup&#32;&lt;&#32;<emphasis role="keyword">this</emphasis>.m_LastSampleTime&#32;+&#32;1f&#32;/&#32;<emphasis role="keyword">this</emphasis>.m_SampleRate)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_IsWriting&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00055"/>00055 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_SampleCount&#32;==&#32;1)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_ObjectsPerSample&#32;=&#32;this.m_Objects.Count;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&#32;&quot;Setting&#32;m_ObjectsPerSample&#32;to&#32;&quot;&#32;+&#32;m_ObjectsPerSample&#32;);</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_SampleCount&#32;&gt;&#32;1)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Objects.Count&#32;/&#32;<emphasis role="keyword">this</emphasis>.m_SampleCount&#32;!=&#32;<emphasis role="keyword">this</emphasis>.m_ObjectsPerSample)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;The&#32;number&#32;of&#32;objects&#32;sent&#32;via&#32;a&#32;PhotonStreamQueue&#32;has&#32;to&#32;be&#32;the&#32;same&#32;each&#32;frame&quot;</emphasis>);
<anchor xml:id="__photon_stream_queue_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Objects&#32;in&#32;List:&#32;&quot;</emphasis>&#32;+&#32;this.m_Objects.Count&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;/&#32;Sample&#32;Count:&#32;&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">this</emphasis>.m_SampleCount&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;=&#32;&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">this</emphasis>.m_Objects.Count&#32;/&#32;<emphasis role="keyword">this</emphasis>.m_SampleCount&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;!=&#32;&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">this</emphasis>.m_ObjectsPerSample);
<anchor xml:id="__photon_stream_queue_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00069"/>00069 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_IsWriting&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_SampleCount++;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_LastSampleTime&#32;=&#32;Time.realtimeSinceStartup;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00073"/>00073 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*if(&#32;m_SampleCount&#32;&#32;&gt;&#32;1&#32;)</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00075"/>00075 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00076"/>00076 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(&#32;&quot;Check:&#32;&quot;&#32;+&#32;m_Objects.Count&#32;+&#32;&quot;&#32;/&#32;&quot;&#32;+&#32;m_SampleCount&#32;+&#32;&quot;&#32;=&#32;&quot;&#32;+&#32;(&#32;m_Objects.Count&#32;/&#32;m_SampleCount&#32;)&#32;+&#32;&quot;&#32;=&#32;&quot;&#32;+&#32;m_ObjectsPerSample&#32;);</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00077"/>00077 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}*/</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00079"/>00079 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00083"/><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a065ec40dbb214e468ede584377910e66">00083</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a065ec40dbb214e468ede584377910e66">Reset</link>()
<anchor xml:id="__photon_stream_queue_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_SampleCount&#32;=&#32;0;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_ObjectsPerSample&#32;=&#32;-1;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00087"/>00087 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_LastSampleTime&#32;=&#32;-Mathf.Infinity;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_LastFrameCount&#32;=&#32;-1;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00090"/>00090 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Objects.Clear();
<anchor xml:id="__photon_stream_queue_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00093"/>00093 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00098"/><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a42779b39aad4f458528b728a6ae9ca46">00098</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a42779b39aad4f458528b728a6ae9ca46">SendNext</link>(<emphasis role="keywordtype">object</emphasis>&#32;obj)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Time.frameCount&#32;!=&#32;<emphasis role="keyword">this</emphasis>.m_LastFrameCount)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.BeginWritePackage();
<anchor xml:id="__photon_stream_queue_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00104"/>00104 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_LastFrameCount&#32;=&#32;Time.frameCount;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00106"/>00106 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_IsWriting&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00111"/>00111 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Objects.Add(obj);
<anchor xml:id="__photon_stream_queue_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00114"/>00114 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00118"/><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a5ce6660209d3c8b2988d2e4444dfe36b">00118</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a5ce6660209d3c8b2988d2e4444dfe36b">HasQueuedObjects</link>()
<anchor xml:id="__photon_stream_queue_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.m_NextObjectIndex&#32;!=&#32;-1;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00122"/>00122 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00127"/><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a8ce49494951095aabcdc4d22d4420ea2">00127</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">object</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a8ce49494951095aabcdc4d22d4420ea2">ReceiveNext</link>()
<anchor xml:id="__photon_stream_queue_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_NextObjectIndex&#32;==&#32;-1)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00133"/>00133 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_NextObjectIndex&#32;&gt;=&#32;this.m_Objects.Count)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_NextObjectIndex&#32;-=&#32;this.m_ObjectsPerSample;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00138"/>00138 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.m_Objects[this.m_NextObjectIndex++];
<anchor xml:id="__photon_stream_queue_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00141"/>00141 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00146"/><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1aa894acf4883faf5806f75f4d757022a4">00146</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1aa894acf4883faf5806f75f4d757022a4">Serialize</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link>&#32;stream)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;find&#32;a&#32;better&#32;solution&#32;for&#32;this:</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;&quot;if&quot;&#32;is&#32;a&#32;workaround&#32;for&#32;packages&#32;which&#32;have&#32;only&#32;1&#32;sample/frame.&#32;in&#32;that&#32;case,&#32;SendNext&#32;didn&apos;t&#32;set&#32;the&#32;obj&#32;per&#32;sample.</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Objects.Count&#32;&gt;&#32;0&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>.m_ObjectsPerSample&#32;&lt;&#32;0)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_ObjectsPerSample&#32;=&#32;this.m_Objects.Count;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00154"/>00154 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">SendNext</link>(this.m_SampleCount);
<anchor xml:id="__photon_stream_queue_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">SendNext</link>(this.m_ObjectsPerSample);
<anchor xml:id="__photon_stream_queue_8cs_source_1l00157"/>00157 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.m_Objects.Count;&#32;++i)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">SendNext</link>(this.m_Objects[i]);
<anchor xml:id="__photon_stream_queue_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00162"/>00162 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&#32;&quot;Serialize&#32;&quot;&#32;+&#32;m_SampleCount&#32;+&#32;&quot;&#32;samples&#32;with&#32;&quot;&#32;+&#32;m_ObjectsPerSample&#32;+&#32;&quot;&#32;objects&#32;per&#32;sample.&#32;object&#32;count:&#32;&quot;&#32;+&#32;m_Objects.Count&#32;+&#32;&quot;&#32;/&#32;&quot;&#32;+&#32;(&#32;m_SampleCount&#32;*&#32;m_ObjectsPerSample&#32;)&#32;);</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00164"/>00164 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Objects.Clear();
<anchor xml:id="__photon_stream_queue_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_SampleCount&#32;=&#32;0;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00168"/>00168 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00173"/><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a576b08634a4833827b019071ddfefe09">00173</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a576b08634a4833827b019071ddfefe09">Deserialize</link>(<link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link>&#32;stream)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Objects.Clear();
<anchor xml:id="__photon_stream_queue_8cs_source_1l00176"/>00176 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_SampleCount&#32;=&#32;(int)&#32;stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">ReceiveNext</link>();
<anchor xml:id="__photon_stream_queue_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_ObjectsPerSample&#32;=&#32;(int)&#32;stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">ReceiveNext</link>();
<anchor xml:id="__photon_stream_queue_8cs_source_1l00179"/>00179 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.m_SampleCount&#32;*&#32;this.m_ObjectsPerSample;&#32;++i)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Objects.Add(stream.<link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">ReceiveNext</link>());
<anchor xml:id="__photon_stream_queue_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00184"/>00184 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Objects.Count&#32;&gt;&#32;0)
<anchor xml:id="__photon_stream_queue_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_NextObjectIndex&#32;=&#32;0;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_stream_queue_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_NextObjectIndex&#32;=&#32;-1;
<anchor xml:id="__photon_stream_queue_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00193"/>00193 
<anchor xml:id="__photon_stream_queue_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&#32;&quot;Deserialized&#32;&quot;&#32;+&#32;m_SampleCount&#32;+&#32;&quot;&#32;samples&#32;with&#32;&quot;&#32;+&#32;m_ObjectsPerSample&#32;+&#32;&quot;&#32;objects&#32;per&#32;sample.&#32;object&#32;count:&#32;&quot;&#32;+&#32;m_Objects.Count&#32;+&#32;&quot;&#32;/&#32;&quot;&#32;+&#32;(&#32;m_SampleCount&#32;*&#32;m_ObjectsPerSample&#32;)&#32;);</emphasis>
<anchor xml:id="__photon_stream_queue_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_stream_queue_8cs_source_1l00197"/>00197 }
</programlisting></section>
