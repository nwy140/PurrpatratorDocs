<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__photon_view_inspector_8cs_source" xml:lang="en-US">
<title>PhotonViewInspector.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Editor/PhotonViewInspector.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__photon_view_inspector_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;PhotonViewInspector.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2018&#32;Exit&#32;Games&#32;GmbH</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;&#32;Custom&#32;inspector&#32;for&#32;the&#32;PhotonView&#32;component.</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00010"/>00010 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00013"/>00013 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00014"/>00014 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00015"/>00015 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_realtime">Realtime</link>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00016"/>00016 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00017"/>00017 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun">Photon.Pun</link>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00018"/>00018 {
<anchor xml:id="__photon_view_inspector_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;[CustomEditor(typeof(PhotonView))]
<anchor xml:id="__photon_view_inspector_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;[CanEditMultipleObjects]
<anchor xml:id="__photon_view_inspector_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>PhotonViewInspector&#32;:&#32;Editor
<anchor xml:id="__photon_view_inspector_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;PhotonView&#32;m_Target;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00024"/>00024 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent&#32;ownerTransferGuiContent&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Ownership&#32;Transfer&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Determines&#32;how&#32;ownership&#32;changes&#32;may&#32;be&#32;initiated.&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent&#32;syncronizationGuiContent&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Synchronization&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Determines&#32;how&#32;sync&#32;updates&#32;are&#32;culled&#32;and&#32;sent.&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent&#32;observableSearchGuiContent&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Observable&#32;Search&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;When&#32;set&#32;to&#32;Auto,&#32;On&#32;Awake,&#32;Observables&#32;on&#32;this&#32;GameObject&#32;(and&#32;child&#32;GameObjects)&#32;will&#32;be&#32;found&#32;and&#32;populate&#32;the&#32;Observables&#32;List.&quot;</emphasis>&#32;+
<anchor xml:id="__photon_view_inspector_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\n\nNested&#32;PhotonViews&#32;(children&#32;with&#32;a&#32;PhotonView)&#32;and&#32;their&#32;children&#32;will&#32;not&#32;be&#32;included&#32;in&#32;the&#32;search.&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00029"/>00029 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__photon_view_inspector_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target&#32;=&#32;(PhotonView)this.target;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00033"/>00033 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Application.isPlaying)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Target.FindObservables();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnInspectorGUI()
<anchor xml:id="__photon_view_inspector_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00039"/>00039 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00040"/>00040 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target&#32;=&#32;(PhotonView)this.target;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isProjectPrefab&#32;=&#32;PhotonEditorUtils.IsPrefab(this.m_Target.gameObject);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;multiSelected&#32;=&#32;Selection.gameObjects.Length&#32;&gt;&#32;1;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00044"/>00044 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Target.ObservedComponents&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.ObservedComponents&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;System.Collections.Generic.List&lt;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a056d4010391c5d568746195703eff547a2cb05e4bb7830be982f0922fed86b4cd">Component</link>&gt;();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00049"/>00049 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Target.ObservedComponents.Count&#32;==&#32;0)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.ObservedComponents.Add(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00054"/>00054 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Space(5);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00056"/>00056 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginVertical((GUIStyle)<emphasis role="stringliteral">&quot;HelpBox&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;View&#32;ID&#32;-&#32;Hide&#32;if&#32;we&#32;are&#32;multi-selected</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!multiSelected)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isProjectPrefab)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;View&#32;ID&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&lt;i&gt;Set&#32;at&#32;runtime&lt;/i&gt;&quot;</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle(<emphasis role="stringliteral">&quot;Label&quot;</emphasis>)&#32;{&#32;richText&#32;=&#32;<emphasis role="keyword">true</emphasis>&#32;});
<anchor xml:id="__photon_view_inspector_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorApplication.isPlaying)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;View&#32;ID&quot;</emphasis>,&#32;this.m_Target.ViewID.ToString());
<anchor xml:id="__photon_view_inspector_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;an&#32;object&#32;in&#32;a&#32;scene,&#32;modified&#32;at&#32;edit-time.&#32;we&#32;can&#32;store&#32;this&#32;as&#32;sceneViewId</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;idValue&#32;=&#32;EditorGUILayout.IntField(<emphasis role="stringliteral">&quot;View&#32;ID&#32;[1..&quot;</emphasis>&#32;+&#32;(PhotonNetwork.MAX_VIEW_IDS&#32;-&#32;1)&#32;+&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>,&#32;this.m_Target.sceneViewId);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Target.sceneViewId&#32;!=&#32;idValue)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(this.m_Target,&#32;<emphasis role="stringliteral">&quot;Change&#32;PhotonView&#32;viewID&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.sceneViewId&#32;=&#32;idValue;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00080"/>00080 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Locally&#32;Controlled</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorApplication.isPlaying)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;masterClientHint&#32;=&#32;PhotonNetwork.IsMasterClient&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;(master)&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;IsMine:&quot;</emphasis>,&#32;this.m_Target.IsMine.ToString()&#32;+&#32;masterClientHint);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&#32;room&#32;=&#32;PhotonNetwork.CurrentRoom;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cretrId&#32;=&#32;this.m_Target.CreatorActorNr;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;cretr&#32;=&#32;(room&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_1a267b83eaa30e0f7486830dd25e07479c">GetPlayer</link>(cretrId)&#32;:&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;owner&#32;=&#32;this.m_Target.Owner;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;ctrlr&#32;=&#32;this.m_Target.Controller;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;Controller:&quot;</emphasis>,&#32;(ctrlr&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;(<emphasis role="stringliteral">&quot;[&quot;</emphasis>&#32;+&#32;ctrlr.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>&#32;+&#32;<emphasis role="stringliteral">&quot;]&#32;&apos;&quot;</emphasis>&#32;+&#32;ctrlr.<link linkend="_class_photon_1_1_realtime_1_1_player_1adf7350041e899cf8138dc2c31e2bbb62">NickName</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;&#32;&quot;</emphasis>&#32;+&#32;(ctrlr.<link linkend="_class_photon_1_1_realtime_1_1_player_1a650042ff3d147ed8cd559b6258ce238d">IsMasterClient</link>&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;(master)&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>))&#32;:&#32;<emphasis role="stringliteral">&quot;[0]&#32;&lt;null&gt;&quot;</emphasis>));
<anchor xml:id="__photon_view_inspector_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;Owner:&quot;</emphasis>,&#32;(owner&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;(<emphasis role="stringliteral">&quot;[&quot;</emphasis>&#32;+&#32;owner.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>&#32;+&#32;<emphasis role="stringliteral">&quot;]&#32;&apos;&quot;</emphasis>&#32;+&#32;owner.<link linkend="_class_photon_1_1_realtime_1_1_player_1adf7350041e899cf8138dc2c31e2bbb62">NickName</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;&#32;&quot;</emphasis>&#32;+&#32;(owner.<link linkend="_class_photon_1_1_realtime_1_1_player_1a650042ff3d147ed8cd559b6258ce238d">IsMasterClient</link>&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;(master)&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>))&#32;:&#32;<emphasis role="stringliteral">&quot;[0]&#32;&lt;null&gt;&quot;</emphasis>));
<anchor xml:id="__photon_view_inspector_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;Creator:&quot;</emphasis>,&#32;(cretr&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;(<emphasis role="stringliteral">&quot;[&quot;</emphasis>&#32;+cretrId&#32;+&#32;<emphasis role="stringliteral">&quot;]&#32;&apos;&quot;</emphasis>&#32;+&#32;cretr.<link linkend="_class_photon_1_1_realtime_1_1_player_1adf7350041e899cf8138dc2c31e2bbb62">NickName</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;&#32;&quot;</emphasis>&#32;+&#32;(cretr.<link linkend="_class_photon_1_1_realtime_1_1_player_1a650042ff3d147ed8cd559b6258ce238d">IsMasterClient</link>&#32;?&#32;<emphasis role="stringliteral">&quot;&#32;(master)&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>))&#32;:&#32;<emphasis role="stringliteral">&quot;[0]&#32;&lt;null&gt;&quot;</emphasis>));
<anchor xml:id="__photon_view_inspector_8cs_source_1l00094"/>00094 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00096"/>00096 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndVertical();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00098"/>00098 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(Application.isPlaying);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00100"/>00100 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Space(5);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00102"/>00102 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Ownership&#32;section</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00104"/>00104 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;Ownership&quot;</emphasis>,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;BoldLabel&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00106"/>00106 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1a35f7e59ff14396520c50af04b1d6479e">OwnershipOption</link>&#32;own&#32;=&#32;(<link linkend="_namespace_photon_1_1_pun_1a35f7e59ff14396520c50af04b1d6479e">OwnershipOption</link>)EditorGUILayout.EnumPopup(ownerTransferGuiContent,&#32;<emphasis role="keyword">this</emphasis>.m_Target.OwnershipTransfer<emphasis role="comment">/*,&#32;GUILayout.MaxWidth(68),&#32;GUILayout.MinWidth(68)*/</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(own&#32;!=&#32;this.m_Target.OwnershipTransfer)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;jf:&#32;fixed&#32;5&#32;and&#32;up&#32;prefab&#32;not&#32;accepting&#32;changes&#32;if&#32;you&#32;quit&#32;Unity&#32;straight&#32;after&#32;change.</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;not&#32;touching&#32;the&#32;define&#32;nor&#32;the&#32;rest&#32;of&#32;the&#32;code&#32;to&#32;avoid&#32;bringing&#32;more&#32;problem&#32;than&#32;solving.</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.SetDirty(this.m_Target);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00113"/>00113 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(this.m_Target,&#32;<emphasis role="stringliteral">&quot;Change&#32;PhotonView&#32;Ownership&#32;Transfer&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.OwnershipTransfer&#32;=&#32;own;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00117"/>00117 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Space(5);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00120"/>00120 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Observables&#32;section</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00122"/>00122 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;Observables&quot;</emphasis>,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;BoldLabel&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00124"/>00124 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;Synchronization&quot;</emphasis>),&#32;syncronizationGuiContent);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00126"/>00126 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Target.Synchronization&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1ad826bf995d229831e4d2aeadddc6a048">ViewSynchronization</link>.Off)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Show&#32;warning&#32;if&#32;there&#32;are&#32;any&#32;observables.&#32;The&#32;null&#32;check&#32;is&#32;because&#32;the&#32;list&#32;allows&#32;nulls.</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;observed&#32;=&#32;m_Target.ObservedComponents;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(observed.Count&#32;&gt;&#32;0)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;observed.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(observed[i]&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(<emphasis role="stringliteral">&quot;Synchronization&#32;is&#32;set&#32;to&#32;Off.&#32;Select&#32;a&#32;Synchronization&#32;setting&#32;in&#32;order&#32;to&#32;sync&#32;the&#32;listed&#32;Observables.&quot;</emphasis>,&#32;MessageType.Warning);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00141"/>00141 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00142"/>00142 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonView.ObservableSearch&#32;autoFindObservables&#32;=&#32;(PhotonView.ObservableSearch)EditorGUILayout.EnumPopup(observableSearchGuiContent,&#32;m_Target.observableSearch);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00144"/>00144 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Target.observableSearch&#32;!=&#32;autoFindObservables)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(this.m_Target,&#32;<emphasis role="stringliteral">&quot;Change&#32;Auto&#32;Find&#32;Observables&#32;Toggle&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Target.observableSearch&#32;=&#32;autoFindObservables;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00150"/>00150 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Target.FindObservables();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00152"/>00152 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!multiSelected)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;disableList&#32;=&#32;Application.isPlaying&#32;||&#32;autoFindObservables&#32;!=&#32;PhotonView.ObservableSearch.Manual;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00156"/>00156 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(disableList)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00159"/>00159 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.DrawObservedComponentsList(disableList);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00161"/>00161 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(disableList)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndDisabledGroup();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00165"/>00165 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Cleanup:&#32;save&#32;and&#32;fix&#32;look</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.changed)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonViewHandler.OnHierarchyChanged();&#32;<emphasis role="comment">//&#32;TODO:&#32;check&#32;if&#32;needed</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00171"/>00171 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndDisabledGroup();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00174"/>00174 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00175"/>00175 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00176"/>00176 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetObservedComponentsCount()
<anchor xml:id="__photon_view_inspector_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;0;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00180"/>00180 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;this.m_Target.ObservedComponents.Count;&#32;++i)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.m_Target.ObservedComponents[i]&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00188"/>00188 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;count;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00191"/>00191 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EditorFindObservables()
<anchor xml:id="__photon_view_inspector_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(serializedObject.targetObject,&#32;<emphasis role="stringliteral">&quot;Find&#32;Observables&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ObservedComponents&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Just&#32;doing&#32;a&#32;Find&#32;updates&#32;the&#32;Observables&#32;list,&#32;but&#32;Unity&#32;fails&#32;to&#32;save&#32;that&#32;change.</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Instead&#32;we&#32;do&#32;the&#32;find,&#32;and&#32;then&#32;iterate&#32;the&#32;found&#32;objects&#32;into&#32;the&#32;serialize&#32;property,&#32;then&#32;apply&#32;that.</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.ClearArray();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Target.FindObservables(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;&#32;m_Target.ObservedComponents.Count;&#32;++i)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.InsertArrayElementAtIndex(i);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.GetArrayElementAtIndex(i).objectReferenceValue&#32;=&#32;m_Target.ObservedComponents[i];
<anchor xml:id="__photon_view_inspector_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serializedObject.ApplyModifiedProperties();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00211"/>00211 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawObservedComponentsList(<emphasis role="keywordtype">bool</emphasis>&#32;disabled&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;listProperty&#32;=&#32;this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ObservedComponents&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00215"/>00215 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(listProperty&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00220"/>00220 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;containerElementHeight&#32;=&#32;22;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;containerHeight&#32;=&#32;listProperty.arraySize&#32;*&#32;containerElementHeight;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00223"/>00223 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;foldoutLabel&#32;=&#32;<emphasis role="stringliteral">&quot;Observed&#32;Components&#32;(&quot;</emphasis>&#32;+&#32;this.GetObservedComponentsCount()&#32;+&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isOpen&#32;=&#32;PhotonGUI.ContainerHeaderFoldout(foldoutLabel,&#32;this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ObservedComponentsFoldoutOpen&quot;</emphasis>).boolValue,&#32;()&#32;=&gt;&#32;EditorFindObservables(),&#32;<emphasis role="stringliteral">&quot;Find&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ObservedComponentsFoldoutOpen&quot;</emphasis>).boolValue&#32;=&#32;isOpen;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00227"/>00227 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isOpen&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerHeight&#32;=&#32;0;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00232"/>00232 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Texture2D&#32;statsIcon&#32;=&#32;AssetDatabase.LoadAssetAtPath(&#32;&quot;Assets/Photon&#32;Unity&#32;Networking/Editor/PhotonNetwork/PhotonViewStats.png&quot;,&#32;typeof(&#32;Texture2D&#32;)&#32;)&#32;as&#32;Texture2D;</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00234"/>00234 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;containerRect&#32;=&#32;PhotonGUI.ContainerBody(containerHeight);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00236"/>00236 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00237"/>00237 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;wasObservedComponentsEmpty&#32;=&#32;this.m_Target.ObservedComponents.FindAll(item&#32;=&gt;&#32;item&#32;!=&#32;<emphasis role="keyword">null</emphasis>).Count&#32;==&#32;0;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isOpen&#32;==&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;listProperty.arraySize;&#32;++i)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;elementRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(containerRect.xMin,&#32;containerRect.yMin&#32;+&#32;containerElementHeight&#32;*&#32;i,&#32;containerRect.width,&#32;containerElementHeight);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;texturePosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMin&#32;+&#32;6,&#32;elementRect.yMin&#32;+&#32;elementRect.height&#32;/&#32;2f&#32;-&#32;1,&#32;9,&#32;5);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReorderableListResources.DrawTexture(texturePosition,&#32;ReorderableListResources.texGrabHandle);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00247"/>00247 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;propertyPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMin&#32;+&#32;20,&#32;elementRect.yMin&#32;+&#32;3,&#32;elementRect.width&#32;-&#32;45,&#32;16);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00249"/>00249 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;keep&#32;track&#32;of&#32;old&#32;type&#32;to&#32;catch&#32;when&#32;a&#32;new&#32;type&#32;is&#32;observed</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Type&#32;_oldType&#32;=&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue.GetType()&#32;:&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00252"/>00252 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(propertyPosition,&#32;listProperty.GetArrayElementAtIndex(i),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent());
<anchor xml:id="__photon_view_inspector_8cs_source_1l00254"/>00254 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;new&#32;type,&#32;could&#32;be&#32;different&#32;from&#32;old&#32;type</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Type&#32;_newType&#32;=&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue.GetType()&#32;:&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00257"/>00257 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;user&#32;dropped&#32;a&#32;Transform,&#32;we&#32;must&#32;change&#32;it&#32;by&#32;adding&#32;a&#32;PhotonTransformView&#32;and&#32;observe&#32;that&#32;instead</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_oldType&#32;!=&#32;_newType)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_newType&#32;==&#32;typeof(PhotonView))
<anchor xml:id="__photon_view_inspector_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;PhotonView&#32;Detected&#32;you&#32;dropped&#32;a&#32;PhotonView,&#32;this&#32;is&#32;not&#32;allowed.&#32;\n&#32;It&apos;s&#32;been&#32;removed&#32;from&#32;observed&#32;field.&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00265"/>00265 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_newType&#32;==&#32;typeof(Transform))
<anchor xml:id="__photon_view_inspector_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00269"/>00269 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;try&#32;to&#32;get&#32;an&#32;existing&#32;PhotonTransformView&#32;(&#32;we&#32;don&apos;t&#32;want&#32;any&#32;duplicates...)</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonTransformView&#32;_ptv&#32;=&#32;this.m_Target.gameObject.GetComponent&lt;PhotonTransformView&gt;();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ptv&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;ptv&#32;yet,&#32;we&#32;create&#32;one&#32;and&#32;enable&#32;position&#32;and&#32;rotation,&#32;no&#32;scaling,&#32;as&#32;it&apos;s&#32;too&#32;rarely&#32;needed&#32;to&#32;take&#32;bandwidth&#32;for&#32;nothing</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ptv&#32;=&#32;Undo.AddComponent&lt;PhotonTransformView&gt;(this.m_Target.gameObject);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;switch&#32;observe&#32;from&#32;transform&#32;to&#32;_ptv</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue&#32;=&#32;_ptv;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;PhotonView&#32;has&#32;detected&#32;you&#32;dropped&#32;a&#32;Transform.&#32;Instead&#32;it&apos;s&#32;better&#32;to&#32;observe&#32;a&#32;PhotonTransformView&#32;for&#32;better&#32;control&#32;and&#32;performances&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_newType&#32;==&#32;typeof(Rigidbody))
<anchor xml:id="__photon_view_inspector_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00283"/>00283 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;_rb&#32;=&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue&#32;as&#32;Rigidbody;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00285"/>00285 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;try&#32;to&#32;get&#32;an&#32;existing&#32;PhotonRigidbodyView&#32;(&#32;we&#32;don&apos;t&#32;want&#32;any&#32;duplicates...)</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonRigidbodyView&#32;_prbv&#32;=&#32;_rb.gameObject.GetComponent&lt;PhotonRigidbodyView&gt;();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_prbv&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;_prbv&#32;yet,&#32;we&#32;create&#32;one</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_prbv&#32;=&#32;Undo.AddComponent&lt;PhotonRigidbodyView&gt;(_rb.gameObject);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;switch&#32;observe&#32;from&#32;transform&#32;to&#32;_prbv</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue&#32;=&#32;_prbv;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;PhotonView&#32;has&#32;detected&#32;you&#32;dropped&#32;a&#32;RigidBody.&#32;Instead&#32;it&apos;s&#32;better&#32;to&#32;observe&#32;a&#32;PhotonRigidbodyView&#32;for&#32;better&#32;control&#32;and&#32;performances&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_newType&#32;==&#32;typeof(Rigidbody2D))
<anchor xml:id="__photon_view_inspector_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00299"/>00299 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;try&#32;to&#32;get&#32;an&#32;existing&#32;PhotonRigidbody2DView&#32;(&#32;we&#32;don&apos;t&#32;want&#32;any&#32;duplicates...)</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonRigidbody2DView&#32;_prb2dv&#32;=&#32;this.m_Target.gameObject.GetComponent&lt;PhotonRigidbody2DView&gt;();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_prb2dv&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;_prb2dv&#32;yet,&#32;we&#32;create&#32;one</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_prb2dv&#32;=&#32;Undo.AddComponent&lt;PhotonRigidbody2DView&gt;(this.m_Target.gameObject);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;switch&#32;observe&#32;from&#32;transform&#32;to&#32;_prb2dv</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue&#32;=&#32;_prb2dv;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;PhotonView&#32;has&#32;detected&#32;you&#32;dropped&#32;a&#32;Rigidbody2D.&#32;Instead&#32;it&apos;s&#32;better&#32;to&#32;observe&#32;a&#32;PhotonRigidbody2DView&#32;for&#32;better&#32;control&#32;and&#32;performances&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_newType&#32;==&#32;typeof(Animator))
<anchor xml:id="__photon_view_inspector_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00313"/>00313 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;try&#32;to&#32;get&#32;an&#32;existing&#32;PhotonAnimatorView&#32;(&#32;we&#32;don&apos;t&#32;want&#32;any&#32;duplicates...)</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonAnimatorView&#32;_pav&#32;=&#32;this.m_Target.gameObject.GetComponent&lt;PhotonAnimatorView&gt;();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_pav&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;_pav&#32;yet,&#32;we&#32;create&#32;one</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pav&#32;=&#32;Undo.AddComponent&lt;PhotonAnimatorView&gt;(this.m_Target.gameObject);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;switch&#32;observe&#32;from&#32;transform&#32;to&#32;_prb2dv</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue&#32;=&#32;_pav;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;PhotonView&#32;has&#32;detected&#32;you&#32;dropped&#32;a&#32;Animator,&#32;so&#32;we&#32;switched&#32;to&#32;PhotonAnimatorView&#32;so&#32;that&#32;you&#32;can&#32;serialized&#32;the&#32;Animator&#32;variables&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!typeof(IPunObservable).IsAssignableFrom(_newType))
<anchor xml:id="__photon_view_inspector_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_ignore&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00328"/>00328 <emphasis role="preprocessor">#if&#32;PLAYMAKER</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ignore&#32;=&#32;_newType&#32;==&#32;typeof(PlayMakerFSM);<emphasis role="comment">//&#32;Photon&#32;Integration&#32;for&#32;PlayMaker&#32;will&#32;swap&#32;at&#32;runtime&#32;to&#32;a&#32;proxy&#32;using&#32;iPunObservable.</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00330"/>00330 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00331"/>00331 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_newType&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;_newType&#32;==&#32;typeof(Rigidbody)&#32;||&#32;_newType&#32;==&#32;typeof(Rigidbody2D))
<anchor xml:id="__photon_view_inspector_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ignore&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00336"/>00336 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_ignore)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listProperty.GetArrayElementAtIndex(i).objectReferenceValue&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;PhotonView&#32;Detected&#32;you&#32;dropped&#32;a&#32;Component&#32;missing&#32;IPunObservable&#32;Interface,\n&#32;You&#32;dropped&#32;a&#32;&lt;&quot;</emphasis>&#32;+&#32;_newType&#32;+&#32;<emphasis role="stringliteral">&quot;&gt;&#32;instead.&#32;It&apos;s&#32;been&#32;removed&#32;from&#32;observed&#32;field.&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00344"/>00344 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&#32;listProperty.GetArrayElementAtIndex(&#32;i&#32;).objectReferenceValue.GetType()&#32;);</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Rect&#32;statsPosition&#32;=&#32;new&#32;Rect(&#32;propertyPosition.xMax&#32;+&#32;7,&#32;propertyPosition.yMin,&#32;statsIcon.width,&#32;statsIcon.height&#32;);</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//ReorderableListResources.DrawTexture(&#32;statsPosition,&#32;statsIcon&#32;);</emphasis>
<anchor xml:id="__photon_view_inspector_8cs_source_1l00348"/>00348 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;removeButtonRect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMax&#32;-&#32;PhotonGUI.DefaultRemoveButtonStyle.fixedWidth,
<anchor xml:id="__photon_view_inspector_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elementRect.yMin&#32;+&#32;2,
<anchor xml:id="__photon_view_inspector_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonGUI.DefaultRemoveButtonStyle.fixedWidth,
<anchor xml:id="__photon_view_inspector_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonGUI.DefaultRemoveButtonStyle.fixedHeight);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00353"/>00353 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.enabled&#32;=&#32;!disabled&#32;&amp;&amp;&#32;listProperty.arraySize&#32;&gt;&#32;1;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(removeButtonRect,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(ReorderableListResources.texRemoveButton),&#32;PhotonGUI.DefaultRemoveButtonStyle))
<anchor xml:id="__photon_view_inspector_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listProperty.DeleteArrayElementAtIndex(i);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.enabled&#32;=&#32;!disabled;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00360"/>00360 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;listProperty.arraySize&#32;-&#32;1)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;texturePosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(elementRect.xMin&#32;+&#32;2,&#32;elementRect.yMax,&#32;elementRect.width&#32;-&#32;4,&#32;1);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonGUI.DrawSplitter(texturePosition);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00369"/>00369 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PhotonGUI.AddButton())
<anchor xml:id="__photon_view_inspector_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listProperty.InsertArrayElementAtIndex(Mathf.Max(0,&#32;listProperty.arraySize&#32;-&#32;1));
<anchor xml:id="__photon_view_inspector_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00374"/>00374 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.serializedObject.ApplyModifiedProperties();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00376"/>00376 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isObservedComponentsEmpty&#32;=&#32;this.m_Target.ObservedComponents.FindAll(item&#32;=&gt;&#32;item&#32;!=&#32;<emphasis role="keyword">null</emphasis>).Count&#32;==&#32;0;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00378"/>00378 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wasObservedComponentsEmpty&#32;==&#32;<emphasis role="keyword">true</emphasis>&#32;&amp;&amp;&#32;isObservedComponentsEmpty&#32;==&#32;<emphasis role="keyword">false</emphasis>&#32;&amp;&amp;&#32;this.m_Target.Synchronization&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1ad826bf995d229831e4d2aeadddc6a048">ViewSynchronization</link>.Off)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(this.m_Target,&#32;<emphasis role="stringliteral">&quot;Change&#32;PhotonView&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.Synchronization&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1ad826bf995d229831e4d2aeadddc6a048">ViewSynchronization</link>.UnreliableOnChange;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.serializedObject.Update();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00385"/>00385 
<anchor xml:id="__photon_view_inspector_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wasObservedComponentsEmpty&#32;==&#32;<emphasis role="keyword">false</emphasis>&#32;&amp;&amp;&#32;isObservedComponentsEmpty&#32;==&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__photon_view_inspector_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__photon_view_inspector_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(this.m_Target,&#32;<emphasis role="stringliteral">&quot;Change&#32;PhotonView&quot;</emphasis>);
<anchor xml:id="__photon_view_inspector_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Target.Synchronization&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1ad826bf995d229831e4d2aeadddc6a048">ViewSynchronization</link>.Off;
<anchor xml:id="__photon_view_inspector_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.serializedObject.Update();
<anchor xml:id="__photon_view_inspector_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;}
<anchor xml:id="__photon_view_inspector_8cs_source_1l00394"/>00394 }
</programlisting></section>
