<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__primitive_serialize_ext_8cs_source" xml:lang="en-US">
<title>PrimitiveSerializeExt.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/PrimitiveSerializeExt.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__primitive_serialize_ext_8cs_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00002"/>00002 <emphasis role="comment">*&#32;The&#32;MIT&#32;License&#32;(MIT)</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00003"/>00003 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00004"/>00004 <emphasis role="comment">*&#32;Copyright&#32;(c)&#32;2018-2019&#32;Davin&#32;Carten&#32;(emotitron)&#32;(davincarten@gmail.com)</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00005"/>00005 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00006"/>00006 <emphasis role="comment">*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00007"/>00007 <emphasis role="comment">*&#32;of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00008"/>00008 <emphasis role="comment">*&#32;in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00009"/>00009 <emphasis role="comment">*&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00010"/>00010 <emphasis role="comment">*&#32;copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00011"/>00011 <emphasis role="comment">*&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00012"/>00012 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00013"/>00013 <emphasis role="comment">*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00014"/>00014 <emphasis role="comment">*&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00015"/>00015 <emphasis role="comment">*&#32;</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00016"/>00016 <emphasis role="comment">*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00017"/>00017 <emphasis role="comment">*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00018"/>00018 <emphasis role="comment">*&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00019"/>00019 <emphasis role="comment">*&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00020"/>00020 <emphasis role="comment">*&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00021"/>00021 <emphasis role="comment">*&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00022"/>00022 <emphasis role="comment">*&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00023"/>00023 <emphasis role="comment">*/</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00024"/>00024 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00025"/>00025 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00026"/>00026 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00027"/>00027 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00028"/>00028 {
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00032"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext">PrimitiveSerializeExt</link>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;overrunerror&#32;=&#32;<emphasis role="stringliteral">&quot;Write&#32;buffer&#32;overrun.&#32;writepos&#32;+&#32;bits&#32;exceeds&#32;target&#32;length.&#32;Data&#32;loss&#32;will&#32;occur.&quot;</emphasis>;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00035"/>00035 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00036"/>00036 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Inject&#32;ByteConverted</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00037"/>00037 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00045"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad0f754546881d7407b2c925a5bcdf8c9">00045</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad0f754546881d7407b2c925a5bcdf8c9">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((ulong)value).Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00056"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a98c7f0e30157add71603903dfc041a84">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a98c7f0e30157add71603903dfc041a84">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((ulong)value).Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00067"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a5ff4d0f5e6a06218fcb5215543be7d9f">00067</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a5ff4d0f5e6a06218fcb5215543be7d9f">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((ulong)value).Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00078"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a1d1700667f8685c4971c43fa029f9245">00078</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a1d1700667f8685c4971c43fa029f9245">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((ulong)value).Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00082"/>00082 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00083"/>00083 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00084"/>00084 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00085"/>00085 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Signed&#32;Write/Inject/Extract</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00086"/>00086 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00091"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a112bb2700703829e787ae44c5684a6cd">00091</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a112bb2700703829e787ae44c5684a6cd">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00099"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a12676c774b405952a1ac5fdb86766098">00099</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a12676c774b405952a1ac5fdb86766098">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00107"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ae11f54eb5912d22fd16e6d27847f29c8">00107</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ae11f54eb5912d22fd16e6d27847f29c8">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00115"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a6d7d2fae45d456ec4cd353528184c4d6">00115</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a6d7d2fae45d456ec4cd353528184c4d6">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00123"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ae21829ab6389a68cdc19d81cf4b10829">00123</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ae21829ab6389a68cdc19d81cf4b10829">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00132"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ac1890c2edbb500d23931636058690875">00132</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ac1890c2edbb500d23931636058690875">ReadSigned</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;value&#32;=&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zagzig&#32;=&#32;(int)((value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(int)(value&#32;&amp;&#32;1)));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00138"/>00138 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00143"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aa765c7c01ac5e978a7b213ebcc3785c7">00143</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aa765c7c01ac5e978a7b213ebcc3785c7">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00151"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a36f282ed620e048f7241601c8e5808e6">00151</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a36f282ed620e048f7241601c8e5808e6">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00159"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9b24dfd743892f1c22f51d280c85730a">00159</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9b24dfd743892f1c22f51d280c85730a">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00167"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad8620a28ef40f702e7e8ba44aeee5489">00167</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad8620a28ef40f702e7e8ba44aeee5489">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00175"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a929204485b7e874d33bc286a4b188ccc">00175</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a929204485b7e874d33bc286a4b188ccc">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00184"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aa7ef85ac05889924ef911e5cd9201d73">00184</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aa7ef85ac05889924ef911e5cd9201d73">ReadSigned</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;value&#32;=&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zagzig&#32;=&#32;(int)((value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(int)(value&#32;&amp;&#32;1)));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00190"/>00190 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00195"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a1a31475b270845f0c11725750c23674b">00195</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ushort&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a1a31475b270845f0c11725750c23674b">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00203"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a2f67b01f90fd4e1375706be7b595be5f">00203</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a2f67b01f90fd4e1375706be7b595be5f">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00211"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a8939cca937a50c4598bfb2adfbaba78b">00211</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a8939cca937a50c4598bfb2adfbaba78b">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00219"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7e91850752b63419b8919de772b4669e">00219</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7e91850752b63419b8919de772b4669e">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00227"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a3aac61ddbcbe8ecd02130903afbaabaa">00227</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a3aac61ddbcbe8ecd02130903afbaabaa">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00236"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a66a693cfcbb059c3bec7db39645a6018">00236</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a66a693cfcbb059c3bec7db39645a6018">ReadSigned</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;value&#32;=&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zagzig&#32;=&#32;(int)((value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(int)(value&#32;&amp;&#32;1)));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00242"/>00242 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00247"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a92705ce06c30b60b30c51177a173c154">00247</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a92705ce06c30b60b30c51177a173c154">WriteSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer.Write(zigzag,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00255"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a68f41dcf564713b19334bf8d77e2a2af">00255</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a68f41dcf564713b19334bf8d77e2a2af">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00263"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9bb9c59c78c4621dada71990676ffb6d">00263</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9bb9c59c78c4621dada71990676ffb6d">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00271"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a060a71f95c47928f402e9ca734705fe6">00271</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a060a71f95c47928f402e9ca734705fe6">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00279"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a96e71d716a494e999155510b71d8bb84">00279</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a96e71d716a494e999155510b71d8bb84">InjectSigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;zigzag&#32;=&#32;(uint)((value&#32;&lt;&lt;&#32;1)&#32;^&#32;(value&#32;&gt;&gt;&#32;31));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zigzag.Inject(ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00288"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7a931b69b5c0b569e9948d9d176924df">00288</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7a931b69b5c0b569e9948d9d176924df">ReadSigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;value&#32;=&#32;(uint)buffer.Read(ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zagzig&#32;=&#32;(int)((value&#32;&gt;&gt;&#32;1)&#32;^&#32;(-(int)(value&#32;&amp;&#32;1)));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;zagzig;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00294"/>00294 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00295"/>00295 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00296"/>00296 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00297"/>00297 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Boolean&#32;Write/Inject/Extract</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00298"/>00298 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00299"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a19980420878c8fb2e69a5215c1043869">00299</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a19980420878c8fb2e69a5215c1043869">WritetBool</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;buffer,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)(value&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00303"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a409020ca6776c0920e492cb9c2cb6ca4">00303</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a409020ca6776c0920e492cb9c2cb6ca4">WritetBool</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;buffer,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)(value&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00307"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a12c4414b864c586205987ac92952e0b5">00307</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ushort&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a12c4414b864c586205987ac92952e0b5">WritetBool</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;buffer,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)(value&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00311"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ae0ef7a4a70fa529e48d1a3aa4a11af32">00311</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ae0ef7a4a70fa529e48d1a3aa4a11af32">WritetBool</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)(value&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00315"/>00315 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00316"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a2a4541ac706e33594f28ba0f29e9525b">00316</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a2a4541ac706e33594f28ba0f29e9525b">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad0f754546881d7407b2c925a5bcdf8c9">Inject</link>((ulong)(value&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;buffer,&#32;&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00320"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ac8abc24a30a07a2f45082b5e1ce43c73">00320</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ac8abc24a30a07a2f45082b5e1ce43c73">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad0f754546881d7407b2c925a5bcdf8c9">Inject</link>((ulong)(value&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00324"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad6b6dc6b5dd9e62a33b20d0d663c4239">00324</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad6b6dc6b5dd9e62a33b20d0d663c4239">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad0f754546881d7407b2c925a5bcdf8c9">Inject</link>((ulong)(value&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00328"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1acaabb75f70bc05819d292775017db6b8">00328</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1acaabb75f70bc05819d292775017db6b8">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad0f754546881d7407b2c925a5bcdf8c9">Inject</link>((ulong)(value&#32;?&#32;1&#32;:&#32;0),&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00332"/>00332 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00333"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a234852732365f5033672ba159d6aff05">00333</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a234852732365f5033672ba159d6aff05">ReadBool</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(buffer.Read(ref&#32;bitposition,&#32;1)&#32;==&#32;0)&#32;?&#32;false&#32;:&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00337"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a8ae9562165fd1c525d3249d749d083eb">00337</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a8ae9562165fd1c525d3249d749d083eb">ReadtBool</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(buffer.Read(ref&#32;bitposition,&#32;1)&#32;==&#32;0)&#32;?&#32;false&#32;:&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00341"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a50d801d7be19550900c6c91b11010a4e">00341</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a50d801d7be19550900c6c91b11010a4e">ReadBool</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(buffer.Read(ref&#32;bitposition,&#32;1)&#32;==&#32;0)&#32;?&#32;false&#32;:&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00345"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ac9cdd668e90360371fb8fccb59b6c27e">00345</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ac9cdd668e90360371fb8fccb59b6c27e">ReadBool</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(buffer.Read(ref&#32;bitposition,&#32;1)&#32;==&#32;0)&#32;?&#32;false&#32;:&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00349"/>00349 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00350"/>00350 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00351"/>00351 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00352"/>00352 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Primary&#32;Write</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00353"/>00353 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00363"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">00363</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert(bitposition&#32;+&#32;bits&#32;&lt;=&#32;64,&#32;overrunerror);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00366"/>00366 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetvalue&#32;=&#32;value&#32;&lt;&lt;&#32;bitposition;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits)&#32;&lt;&lt;&#32;bitposition;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00369"/>00369 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;bits&#32;in&#32;buffer&#32;we&#32;need&#32;to&#32;write&#32;to,&#32;then&#32;write&#32;to&#32;them.</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;&amp;=&#32;~mask;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;|=&#32;(mask&#32;&amp;&#32;offsetvalue);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00373"/>00373 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00377"/>00377 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00387"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ae787f840a5ea1e80c1898491714a335f">00387</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ae787f840a5ea1e80c1898491714a335f">Write</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert(bitposition&#32;+&#32;bits&#32;&lt;=&#32;32,&#32;overrunerror);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00390"/>00390 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;offsetvalue&#32;=&#32;(uint)value&#32;&lt;&lt;&#32;bitposition;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;uint.MaxValue&#32;&gt;&gt;&#32;(32&#32;-&#32;bits)&#32;&lt;&lt;&#32;bitposition;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00393"/>00393 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;bits&#32;in&#32;buffer&#32;we&#32;need&#32;to&#32;write&#32;to,&#32;then&#32;write&#32;to&#32;them.</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;&amp;=&#32;~mask;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;|=&#32;(mask&#32;&amp;&#32;offsetvalue);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00397"/>00397 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00401"/>00401 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00411"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a59029f2a2b31fe95b45165fa2b195348">00411</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ushort&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a59029f2a2b31fe95b45165fa2b195348">Write</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert(bitposition&#32;+&#32;bits&#32;&lt;=&#32;16,&#32;overrunerror);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00414"/>00414 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;offsetvalue&#32;=&#32;((uint)value&#32;&lt;&lt;&#32;bitposition);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;((uint)ushort.MaxValue&#32;&gt;&gt;&#32;(16&#32;-&#32;bits)&#32;&lt;&lt;&#32;bitposition);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00417"/>00417 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;bits&#32;in&#32;buffer&#32;we&#32;need&#32;to&#32;write&#32;to,&#32;then&#32;write&#32;to&#32;them.</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;_target&#32;=&#32;buffer&#32;&amp;&#32;~mask;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;|=&#32;(mask&#32;&amp;&#32;offsetvalue);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;(ushort)_target;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00422"/>00422 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00426"/>00426 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00436"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ab648c041531478f11a970a2a2f148661">00436</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ab648c041531478f11a970a2a2f148661">Write</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert(bitposition&#32;+&#32;bits&#32;&lt;=&#32;8,&#32;overrunerror);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00439"/>00439 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;offsetvalue&#32;=&#32;((uint)value&#32;&lt;&lt;&#32;bitposition);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;((uint)<emphasis role="keywordtype">byte</emphasis>.MaxValue&#32;&gt;&gt;&#32;(8&#32;-&#32;bits)&#32;&lt;&lt;&#32;bitposition);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00442"/>00442 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;bits&#32;in&#32;buffer&#32;we&#32;need&#32;to&#32;write&#32;to,&#32;then&#32;write&#32;to&#32;them.</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;_target&#32;=&#32;buffer&#32;&amp;&#32;~mask;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;|=&#32;(mask&#32;&amp;&#32;offsetvalue);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;(byte)_target;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00447"/>00447 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00451"/>00451 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00452"/>00452 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00453"/>00453 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00454"/>00454 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Inject&#32;UInt64&#32;Buffer</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00455"/>00455 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00463"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a75e12d7d7d6eaa11a7773fa35e88c0c7">00463</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a75e12d7d7d6eaa11a7773fa35e88c0c7">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00466"/>00466 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00475"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1abb155bdf3bba6822c96edf37c4943068">00475</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1abb155bdf3bba6822c96edf37c4943068">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert(bitposition&#32;+&#32;bits&#32;&lt;=&#32;64,&#32;overrunerror);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00478"/>00478 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetvalue&#32;=&#32;value&#32;&lt;&lt;&#32;bitposition;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits)&#32;&lt;&lt;&#32;bitposition;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00481"/>00481 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;bits&#32;in&#32;buffer&#32;we&#32;need&#32;to&#32;write&#32;to,&#32;then&#32;write&#32;to&#32;them.</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;&amp;=&#32;~mask;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;|=&#32;(mask&#32;&amp;&#32;offsetvalue);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00486"/>00486 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00487"/>00487 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00495"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aa0468524ca526ac6be462a7868b2141c">00495</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aa0468524ca526ac6be462a7868b2141c">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00498"/>00498 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00507"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a21e2bf67e0ef7d798abbb4bec701e6e1">00507</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a21e2bf67e0ef7d798abbb4bec701e6e1">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Diagnostics.Debug.Assert(bitposition&#32;+&#32;bits&#32;&lt;=&#32;64,&#32;overrunerror);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00510"/>00510 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;offsetvalue&#32;=&#32;((ulong)value&#32;&lt;&lt;&#32;bitposition);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits)&#32;&lt;&lt;&#32;bitposition;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00513"/>00513 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;bits&#32;in&#32;buffer&#32;we&#32;need&#32;to&#32;write&#32;to,&#32;then&#32;write&#32;to&#32;them.</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;&amp;=&#32;~mask;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;|=&#32;(mask&#32;&amp;&#32;offsetvalue);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00517"/>00517 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00519"/>00519 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00527"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a4a2c5c8ec324ee001202956188780a59">00527</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a4a2c5c8ec324ee001202956188780a59">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00530"/>00530 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00539"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a535a96862b13d053863f57a667ff1de3">00539</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a535a96862b13d053863f57a667ff1de3">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00543"/>00543 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00551"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1adb13e6c284bb816d546306113a244810">00551</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1adb13e6c284bb816d546306113a244810">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00562"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ab79088c9504087aa13f6ad10597beaa5">00562</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ab79088c9504087aa13f6ad10597beaa5">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00566"/>00566 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00575"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aa3bfafced2677c0afec78a9e02aea4d8">00575</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aa3bfafced2677c0afec78a9e02aea4d8">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00587"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a941735d609097cd9f92c65e51a2e2b01">00587</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a941735d609097cd9f92c65e51a2e2b01">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00599"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a06c81bd53599912a8cd0dfef94337ae4">00599</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a06c81bd53599912a8cd0dfef94337ae4">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00611"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a26b8e473c919ab24c5e556f5f53de326">00611</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a26b8e473c919ab24c5e556f5f53de326">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00615"/>00615 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00616"/>00616 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00617"/>00617 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00618"/>00618 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Inject&#32;UInt32&#32;Buffer</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00619"/>00619 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00627"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1afa8e7b5cedf0357d2d87b6a1bbb2ad2e">00627</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1afa8e7b5cedf0357d2d87b6a1bbb2ad2e">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00630"/>00630 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00639"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a4200b4eb9010c66866a06507e2389aba">00639</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a4200b4eb9010c66866a06507e2389aba">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00642"/>00642 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00644"/>00644 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00652"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aaecfa150071255cd1d8ae34d2007ac22">00652</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aaecfa150071255cd1d8ae34d2007ac22">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00655"/>00655 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00664"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a3548e13039183a4f914c73b431abcf5b">00664</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a3548e13039183a4f914c73b431abcf5b">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;32)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00667"/>00667 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00676"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a0330131d361e9f6c18f3eccfef65ac59">00676</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a0330131d361e9f6c18f3eccfef65ac59">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00679"/>00679 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00688"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aeaab6193ab16f61e6b6daecd560ad383">00688</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aeaab6193ab16f61e6b6daecd560ad383">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00691"/>00691 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00700"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aac0514aa32d2180620f6948c7340d9e5">00700</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aac0514aa32d2180620f6948c7340d9e5">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00703"/>00703 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00712"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a651f7d0d3f585783b7cf857f3806071b">00712</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a651f7d0d3f585783b7cf857f3806071b">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00715"/>00715 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00717"/>00717 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00724"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aff2cfab90fff5dd6d37f606e8796106e">00724</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aff2cfab90fff5dd6d37f606e8796106e">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00734"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a1a3a870fc3d350ea5cce488d1f96f83e">00734</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a1a3a870fc3d350ea5cce488d1f96f83e">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00744"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a679ba58a3368b06e217cd65eaa6eb8f5">00744</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a679ba58a3368b06e217cd65eaa6eb8f5">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00754"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1afbb070425f844254c5c754508a1d0665">00754</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1afbb070425f844254c5c754508a1d0665">InjectUnsigned</link>(<emphasis role="keyword">this</emphasis>&#32;sbyte&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;64)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00758"/>00758 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00759"/>00759 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00760"/>00760 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00761"/>00761 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Inject&#32;UInt16&#32;Buffer</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00762"/>00762 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00770"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a592170894f9f658d08194515a9f33ae1">00770</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a592170894f9f658d08194515a9f33ae1">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00781"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a8d03397a065ef414be86b7f830644297">00781</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a8d03397a065ef414be86b7f830644297">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00792"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a5a0ab696359c84a1b710cdad1b3ede86">00792</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a5a0ab696359c84a1b710cdad1b3ede86">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00803"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aedf8eae2cd8dd696b131dd9bdca0859e">00803</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1aedf8eae2cd8dd696b131dd9bdca0859e">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00814"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a6bcbc9920538b8bffd9d7ba965c1bf5d">00814</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a6bcbc9920538b8bffd9d7ba965c1bf5d">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00825"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad09544535bcafd8b731c39616431d605">00825</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad09544535bcafd8b731c39616431d605">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;16)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00836"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ac4806deb65a362b40dca6ce69e0b3887">00836</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ac4806deb65a362b40dca6ce69e0b3887">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00847"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9fec43ed585892b829fa011da1573d5d">00847</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9fec43ed585892b829fa011da1573d5d">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;ushort&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00851"/>00851 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00852"/>00852 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00853"/>00853 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00854"/>00854 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Inject&#32;UInt8&#32;Buffer</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00855"/>00855 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00863"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a90a832689f03c7434097115a9103b86b">00863</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a90a832689f03c7434097115a9103b86b">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00874"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1acbac922de4696789e4f39363c3508ba8">00874</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1acbac922de4696789e4f39363c3508ba8">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00878"/>00878 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00886"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a8c8f7f7fe54ff7f5115a41ae125e02b3">00886</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a8c8f7f7fe54ff7f5115a41ae125e02b3">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00897"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ab3a6d9788478415ab9d1be207b5cef77">00897</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ab3a6d9788478415ab9d1be207b5cef77">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00901"/>00901 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00909"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7f7bbbc1a021444455c78bd3b21b9f23">00909</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7f7bbbc1a021444455c78bd3b21b9f23">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00920"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1abf08dad85addce551b34f49e1670519d">00920</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1abf08dad85addce551b34f49e1670519d">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00924"/>00924 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00932"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ab37846a1247ab78dfa1fede5b0bb02fc">00932</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ab37846a1247ab78dfa1fede5b0bb02fc">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00943"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a12d328bca042ed594f389246665a5d1f">00943</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a12d328bca042ed594f389246665a5d1f">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">byte</emphasis>&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits&#32;=&#32;8)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;(ulong)value,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00947"/>00947 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00948"/>00948 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00949"/>00949 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Obsolete&#32;Extract</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00950"/>00950 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;changed&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00959"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a19caecbccef94eb0efce9c421c9c99ba">00959</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a19caecbccef94eb0efce9c421c9c99ba">Extract</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a19caecbccef94eb0efce9c421c9c99ba">Extract</link>(value,&#32;bits,&#32;ref&#32;bitposition);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00963"/>00963 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00964"/>00964 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00965"/>00965 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00966"/>00966 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Read&#32;-&#32;Uint64&#32;Buffer</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00967"/>00967 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00975"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a0132f5eae1b91637deb706059fd98a64">00975</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a0132f5eae1b91637deb706059fd98a64">Read</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;(ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;fragment&#32;=&#32;(((ulong)value&#32;&gt;&gt;&#32;bitposition)&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00979"/>00979 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;Read&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00984"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9e887e1c7245a7dcf2434c1c7b1333ba">00984</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9e887e1c7245a7dcf2434c1c7b1333ba">Extract</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00986"/>00986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;(ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;fragment&#32;=&#32;(((ulong)value&#32;&gt;&gt;&#32;bitposition)&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00988"/>00988 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00992"/>00992 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Always&#32;include&#32;the&#32;[ref&#32;int&#32;bitposition]&#32;argument.&#32;Extracting&#32;from&#32;position&#32;0&#32;would&#32;be&#32;better&#32;handled&#32;with&#32;a&#32;mask&#32;operation.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01000"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a2a87de4b4c4b4537033cdde042732c34">01000</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a2a87de4b4c4b4537033cdde042732c34">Extract</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;mask&#32;=&#32;(ulong.MaxValue&#32;&gt;&gt;&#32;(64&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulong&#32;fragment&#32;=&#32;((ulong)value&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01004"/>01004 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01007"/>01007 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01008"/>01008 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01009"/>01009 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01010"/>01010 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Read&#32;-&#32;Uint32&#32;Buffer</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01011"/>01011 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01019"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a5ddc061108ee29dbd94e9b7b7d2f1b12">01019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a5ddc061108ee29dbd94e9b7b7d2f1b12">Read</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;(uint.MaxValue&#32;&gt;&gt;&#32;(32&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;fragment&#32;=&#32;(((uint)value&#32;&gt;&gt;&#32;bitposition)&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01023"/>01023 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;Read&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01028"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a2e035608f4bfd5adee9b8176fab11439">01028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a2e035608f4bfd5adee9b8176fab11439">Extract</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;(uint.MaxValue&#32;&gt;&gt;&#32;(32&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;fragment&#32;=&#32;(((uint)value&#32;&gt;&gt;&#32;bitposition)&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01032"/>01032 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Always&#32;include&#32;the&#32;[ref&#32;int&#32;bitposition]&#32;argument.&#32;Extracting&#32;from&#32;position&#32;0&#32;would&#32;be&#32;better&#32;handled&#32;with&#32;a&#32;mask&#32;operation.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01043"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9e2575cea71b6a833c1fc56fe8e5a9f0">01043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9e2575cea71b6a833c1fc56fe8e5a9f0">Extract</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;(uint.MaxValue&#32;&gt;&gt;&#32;(32&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;fragment&#32;=&#32;((uint)value&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01047"/>01047 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01049"/>01049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01050"/>01050 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01051"/>01051 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01052"/>01052 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01053"/>01053 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Read&#32;-&#32;Uint16&#32;Buffer</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01054"/>01054 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01062"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a828787b2e2e734e80e541c1ddfa5a5ff">01062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a828787b2e2e734e80e541c1ddfa5a5ff">Read</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01063"/>01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01064"/>01064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;((uint)ushort.MaxValue&#32;&gt;&gt;&#32;(16&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01065"/>01065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;fragment&#32;=&#32;(((uint)value&#32;&gt;&gt;&#32;bitposition)&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01066"/>01066 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01067"/>01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;Read&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01071"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9a433eafc20a132151b582d27436329f">01071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a9a433eafc20a132151b582d27436329f">Extract</link>(<emphasis role="keyword">this</emphasis>&#32;ushort&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01072"/>01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;((uint)ushort.MaxValue&#32;&gt;&gt;&#32;(16&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;fragment&#32;=&#32;(((uint)value&#32;&gt;&gt;&#32;bitposition)&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01075"/>01075 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01076"/>01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01077"/>01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01078"/>01078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01079"/>01079 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01080"/>01080 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01081"/>01081 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01082"/>01082 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Read&#32;-&#32;Uint8&#32;Buffer</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01083"/>01083 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01091"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7f3a9236ce940fb03fa7383d627df157">01091</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7f3a9236ce940fb03fa7383d627df157">Read</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;((uint)<emphasis role="keywordtype">byte</emphasis>.MaxValue&#32;&gt;&gt;&#32;(8&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01094"/>01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;fragment&#32;=&#32;(((uint)value&#32;&gt;&gt;&#32;bitposition)&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01095"/>01095 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01097"/>01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01099"/>01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;Read&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01100"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a37a78db9df2ccad6c84752f1ac144ae6">01100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;uint&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a37a78db9df2ccad6c84752f1ac144ae6">Extract</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01101"/>01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01102"/>01102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;((uint)<emphasis role="keywordtype">byte</emphasis>.MaxValue&#32;&gt;&gt;&#32;(8&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01103"/>01103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;fragment&#32;=&#32;(((uint)value&#32;&gt;&gt;&#32;bitposition)&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01104"/>01104 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01105"/>01105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;+=&#32;bits;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01106"/>01106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01114"/>01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Always&#32;include&#32;the&#32;[ref&#32;int&#32;bitposition]&#32;argument.&#32;Extracting&#32;from&#32;position&#32;0&#32;would&#32;be&#32;better&#32;handled&#32;with&#32;a&#32;mask&#32;operation.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01115"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a06796e8c4a39e503e11765f9c892e34d">01115</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a06796e8c4a39e503e11765f9c892e34d">Extract</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01116"/>01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01117"/>01117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;mask&#32;=&#32;((uint)<emphasis role="keywordtype">byte</emphasis>.MaxValue&#32;&gt;&gt;&#32;(8&#32;-&#32;bits));
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01118"/>01118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;fragment&#32;=&#32;((uint)value&#32;&amp;&#32;mask);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01119"/>01119 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01120"/>01120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)fragment;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01122"/>01122 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01123"/>01123 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01124"/>01124 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01125"/>01125 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01126"/>01126 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Float</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01127"/>01127 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01134"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1abc700df05535ce73fc05ea8a7fa492e1">01134</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1abc700df05535ce73fc05ea8a7fa492e1">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;f,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;((ulong)(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)f),&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01138"/>01138 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01145"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1acf3ee7f75db2b512733995478f6ea1d0">01145</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1acf3ee7f75db2b512733995478f6ea1d0">ReadFloat</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01146"/>01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01147"/>01147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a0132f5eae1b91637deb706059fd98a64">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;Read&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01150"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a3d7a7f956e3c2e0f88d238c96d87cb6f">01150</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a3d7a7f956e3c2e0f88d238c96d87cb6f">ExtractFloat</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01152"/>01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a19caecbccef94eb0efce9c421c9c99ba">Extract</link>(buffer,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01154"/>01154 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01155"/>01155 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01156"/>01156 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01157"/>01157 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;HalfFloat</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01158"/>01158 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01165"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1afb4f68c52b992ac5a865c06bd45588b4">01165</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ushort&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1afb4f68c52b992ac5a865c06bd45588b4">InjectAsHalfFloat</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;f,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01167"/>01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ushort&#32;c&#32;=&#32;HalfFloat.HalfUtilities.Pack(f);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;c,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01177"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a60558f3169e4459e7e8497ec8005f2ca">01177</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ushort&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a60558f3169e4459e7e8497ec8005f2ca">InjectAsHalfFloat</link>(<emphasis role="keyword">this</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;f,&#32;ref&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01178"/>01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01179"/>01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ushort&#32;c&#32;=&#32;HalfFloat.HalfUtilities.Pack(f);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1af74dae9cc660cf99d47fa97641a1669d">Write</link>(buffer,&#32;c,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c;
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01183"/>01183 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01190"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad7b7cd9f72ad3be70b9dfff0f4b42849">01190</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad7b7cd9f72ad3be70b9dfff0f4b42849">ReadHalfFloat</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01192"/>01192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ushort&#32;c&#32;=&#32;(ushort)<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a0132f5eae1b91637deb706059fd98a64">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HalfFloat.HalfUtilities.Unpack(c);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;Read&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01196"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a4d32e12011cff23c75036d9d8b6568e7">01196</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a4d32e12011cff23c75036d9d8b6568e7">ExtractHalfFloat</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ushort&#32;c&#32;=&#32;(ushort)<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a19caecbccef94eb0efce9c421c9c99ba">Extract</link>(buffer,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01199"/>01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HalfFloat.HalfUtilities.Unpack(c);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01207"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7b4bc0080ecd990128c009f8c1321205">01207</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a7b4bc0080ecd990128c009f8c1321205">ReadHalfFloat</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ushort&#32;c&#32;=&#32;(ushort)<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a0132f5eae1b91637deb706059fd98a64">Read</link>(buffer,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HalfFloat.HalfUtilities.Unpack(c);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;Read&#32;instead.&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01213"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a4bc4eb48aecfa5d44d09b65b3b6483fe">01213</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a4bc4eb48aecfa5d44d09b65b3b6483fe">ExtractHalfFloat</link>(<emphasis role="keyword">this</emphasis>&#32;uint&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01215"/>01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ushort&#32;c&#32;=&#32;(ushort)<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a19caecbccef94eb0efce9c421c9c99ba">Extract</link>(buffer,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01216"/>01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HalfFloat.HalfUtilities.Unpack(c);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01217"/>01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01218"/>01218 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01219"/>01219 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01220"/>01220 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01221"/>01221 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01222"/>01222 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Obsolete&#32;Inject</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01223"/>01223 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;changed&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01232"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a52dc76f79ef10866a388356a2b969948">01232</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a52dc76f79ef10866a388356a2b969948">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;uint&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad0f754546881d7407b2c925a5bcdf8c9">Inject</link>(value,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Argument&#32;order&#32;changed&quot;</emphasis>)]
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01244"/><link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a5342077bb4841a0670f7d3ea7551633e">01244</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1a5342077bb4841a0670f7d3ea7551633e">Inject</link>(<emphasis role="keyword">this</emphasis>&#32;ulong&#32;value,&#32;ref&#32;ulong&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01245"/>01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01246"/>01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_primitive_serialize_ext_1ad0f754546881d7407b2c925a5bcdf8c9">Inject</link>(value,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bits);
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01247"/>01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01248"/>01248 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01249"/>01249 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01250"/>01250 
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01251"/>01251 &#32;&#32;&#32;&#32;}
<anchor xml:id="__primitive_serialize_ext_8cs_source_1l01252"/>01252 }
</programlisting></section>
