<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__pun_turn_manager_8cs_source" xml:lang="en-US">
<title>PunTurnManager.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/UtilityScripts/TurnBased/PunTurnManager.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__pun_turn_manager_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;PunTurnManager.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2018&#32;Exit&#32;Games&#32;GmbH</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;Manager&#32;for&#32;Turn&#32;Based&#32;games,&#32;using&#32;PUN</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00010"/>00010 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00013"/>00013 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00014"/>00014 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00015"/>00015 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00016"/>00016 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_realtime">Realtime</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00017"/>00017 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00018"/>00018 <emphasis role="keyword">using</emphasis>&#32;ExitGames.Client.<link linkend="_namespace_exit_games_1_1_client_1_1_photon">Photon</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00019"/><link linkend="__pun_turn_manager_8cs_1afa613ef589c02dbd94acc273b62cdcfd">00019</link> <emphasis role="keyword">using</emphasis>&#32;<link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link>&#32;=&#32;ExitGames.Client.Photon.Hashtable;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00020"/>00020 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00021"/>00021 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_utility_scripts">Photon.Pun.UtilityScripts</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00022"/>00022 {
<anchor xml:id="__pun_turn_manager_8cs_source_1l00028"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager">PunTurnManager</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks">MonoBehaviourPunCallbacks</link>,&#32;<link linkend="_interface_photon_1_1_realtime_1_1_i_on_event_callback">IOnEventCallback</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;sender;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00040"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">00040</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.GetTurn();&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00045"/>00045 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_isOverCallProcessed&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00047"/>00047 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.SetTurn(value,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00051"/>00051 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00052"/>00052 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00056"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1aae3199cb5a0ab292c1344b6898d1b824">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1aae3199cb5a0ab292c1344b6898d1b824">TurnDuration</link>&#32;=&#32;20f;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00057"/>00057 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00062"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ae1880e4e03759a28171afa5304bb9e3d">00062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ae1880e4e03759a28171afa5304bb9e3d">ElapsedTimeInTurn</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;((<emphasis role="keywordtype">float</emphasis>)&#32;(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">ServerTimestamp</link>&#32;-&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.GetTurnStart()))&#32;/&#32;1000.0f;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00066"/>00066 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00067"/>00067 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00072"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a46da7b693ff34fdd4c2c6a154bcdb6cd">00072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a46da7b693ff34fdd4c2c6a154bcdb6cd">RemainingSecondsInTurn</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Max(0f,&#32;this.TurnDuration&#32;-&#32;this.<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ae1880e4e03759a28171afa5304bb9e3d">ElapsedTimeInTurn</link>);&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00076"/>00076 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00077"/>00077 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00082"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a1d0481928e708ea80a90c1507e64df9f">00082</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a1d0481928e708ea80a90c1507e64df9f">IsCompletedByAll</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;this.finishedPlayers.Count&#32;==&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1a04089922748d1e98fcb3397dd7d33bf2">PlayerCount</link>;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00086"/>00086 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00091"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a09c1d8987062dfb803bc0ab608ff10e9">00091</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a09c1d8987062dfb803bc0ab608ff10e9">IsFinishedByMe</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.finishedPlayers.Contains(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>);&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00095"/>00095 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00100"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ab2454753f95b0104525ec929426b4482">00100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ab2454753f95b0104525ec929426b4482">IsOver</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a46da7b693ff34fdd4c2c6a154bcdb6cd">RemainingSecondsInTurn</link>&#32;&lt;=&#32;0f;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00104"/>00104 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00108"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a580c146b2391edc6bf386e6cec6725ea">00108</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks">IPunTurnManagerCallbacks</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a580c146b2391edc6bf386e6cec6725ea">TurnManagerListener</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00109"/>00109 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00110"/>00110 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;HashSet&lt;Player&gt;&#32;finishedPlayers&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;Player&gt;();
<anchor xml:id="__pun_turn_manager_8cs_source_1l00115"/>00115 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00119"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ad9f1632f03e7ef3485fc9aa626aa316a">00119</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ad9f1632f03e7ef3485fc9aa626aa316a">TurnManagerEventOffset</link>&#32;=&#32;0;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00120"/>00120 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00124"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1af7e6e4e8d9615d27cab41a27e2a8ac4f">00124</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1af7e6e4e8d9615d27cab41a27e2a8ac4f">EvMove</link>&#32;=&#32;1&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ad9f1632f03e7ef3485fc9aa626aa316a">TurnManagerEventOffset</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00125"/>00125 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00129"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ac9542439442dfe21d077957152cad3ec">00129</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ac9542439442dfe21d077957152cad3ec">EvFinalMove</link>&#32;=&#32;2&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ad9f1632f03e7ef3485fc9aa626aa316a">TurnManagerEventOffset</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00130"/>00130 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;keep&#32;track&#32;of&#32;message&#32;calls</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_isOverCallProcessed&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00133"/>00133 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00134"/>00134 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;MonoBehaviour&#32;CallBack</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00135"/>00135 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00136"/>00136 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start(){}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00138"/>00138 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__pun_turn_manager_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;this.<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ab2454753f95b0104525ec929426b4482">IsOver</link>&#32;&amp;&amp;&#32;!_isOverCallProcessed)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_isOverCallProcessed&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TurnManagerListener.<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a027fdca7ca7475db51f189a04e182641">OnTurnTimeEnds</link>(this.<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00146"/>00146 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00148"/>00148 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00149"/>00149 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00150"/>00150 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00151"/>00151 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00155"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a4c96ab5e25fd5b2bb3ed992d99f5e19b">00155</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a4c96ab5e25fd5b2bb3ed992d99f5e19b">BeginTurn</link>()
<anchor xml:id="__pun_turn_manager_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>&#32;=&#32;this.<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>&#32;+&#32;1;&#32;<emphasis role="comment">//&#32;note:&#32;this&#32;will&#32;set&#32;a&#32;property&#32;in&#32;the&#32;room,&#32;which&#32;is&#32;available&#32;to&#32;the&#32;other&#32;players.</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00159"/>00159 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00160"/>00160 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00167"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1af340724c75d6fed806a4c144ca4f0fc0">00167</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1af340724c75d6fed806a4c144ca4f0fc0">SendMove</link>(<emphasis role="keywordtype">object</emphasis>&#32;move,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;finished)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a09c1d8987062dfb803bc0ab608ff10e9">IsFinishedByMe</link>)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnityEngine.Debug.LogWarning(<emphasis role="stringliteral">&quot;Can&apos;t&#32;SendMove.&#32;Turn&#32;is&#32;finished&#32;by&#32;this&#32;player.&quot;</emphasis>);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00174"/>00174 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;along&#32;with&#32;the&#32;actual&#32;move,&#32;we&#32;have&#32;to&#32;send&#32;which&#32;turn&#32;this&#32;move&#32;belongs&#32;to</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;moveHt&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>();
<anchor xml:id="__pun_turn_manager_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;moveHt.Add(<emphasis role="stringliteral">&quot;turn&quot;</emphasis>,&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;moveHt.Add(<emphasis role="stringliteral">&quot;move&quot;</emphasis>,&#32;move);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00179"/>00179 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;evCode&#32;=&#32;(finished)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ac9542439442dfe21d077957152cad3ec">EvFinalMove</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1af7e6e4e8d9615d27cab41a27e2a8ac4f">EvMove</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a9445d7b33be290e7a668284bad051e79">RaiseEvent</link>(evCode,&#32;moveHt,&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_raise_event_options">RaiseEventOptions</link>()&#32;{CachingOption&#32;=&#32;<link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39d">EventCaching</link>.AddToRoomCache},&#32;SendOptions.SendReliable);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(finished)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.SetFinishedTurn(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00186"/>00186 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;server&#32;won&apos;t&#32;send&#32;the&#32;event&#32;back&#32;to&#32;the&#32;origin&#32;(by&#32;default).&#32;to&#32;get&#32;the&#32;event,&#32;call&#32;it&#32;locally</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(note:&#32;the&#32;order&#32;of&#32;events&#32;might&#32;be&#32;mixed&#32;up&#32;as&#32;we&#32;do&#32;this&#32;locally)</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProcessOnEvent(evCode,&#32;moveHt,&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724">LocalPlayer</link>.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00191"/>00191 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00197"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1aaf05b97eba9bc8696e3b772d2cf4f7f0">00197</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1aaf05b97eba9bc8696e3b772d2cf4f7f0">GetPlayerFinishedTurn</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;player)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(player&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.finishedPlayers&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;this.finishedPlayers.Contains(player))
<anchor xml:id="__pun_turn_manager_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00203"/>00203 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00206"/>00206 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00207"/>00207 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Callbacks</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00208"/>00208 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;called&#32;internally</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ProcessOnEvent(<emphasis role="keywordtype">byte</emphasis>&#32;eventCode,&#32;<emphasis role="keywordtype">object</emphasis>&#32;content,&#32;<emphasis role="keywordtype">int</emphasis>&#32;senderId)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(senderId&#32;==&#32;-1)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sender&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>.<link linkend="_class_photon_1_1_realtime_1_1_room_1a267b83eaa30e0f7486830dd25e07479c">GetPlayer</link>(senderId);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(eventCode)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1af7e6e4e8d9615d27cab41a27e2a8ac4f">EvMove</link>:
<anchor xml:id="__pun_turn_manager_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;evTable&#32;=&#32;content&#32;as&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;turn&#32;=&#32;(int)evTable[<emphasis role="stringliteral">&quot;turn&quot;</emphasis>];
<anchor xml:id="__pun_turn_manager_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;move&#32;=&#32;evTable[<emphasis role="stringliteral">&quot;move&quot;</emphasis>];
<anchor xml:id="__pun_turn_manager_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TurnManagerListener.<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a96bca2882eff28c51f299f5178dadecb">OnPlayerMove</link>(sender,&#32;turn,&#32;move);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00227"/>00227 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1ac9542439442dfe21d077957152cad3ec">EvFinalMove</link>:
<anchor xml:id="__pun_turn_manager_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link>&#32;evTable&#32;=&#32;content&#32;as&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;turn&#32;=&#32;(int)evTable[<emphasis role="stringliteral">&quot;turn&quot;</emphasis>];
<anchor xml:id="__pun_turn_manager_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;move&#32;=&#32;evTable[<emphasis role="stringliteral">&quot;move&quot;</emphasis>];
<anchor xml:id="__pun_turn_manager_8cs_source_1l00235"/>00235 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(turn&#32;==&#32;this.<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.finishedPlayers.Add(sender);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00239"/>00239 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TurnManagerListener.<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a1bd8368f6f5129842bc27e74e99f9d2e">OnPlayerFinished</link>(sender,&#32;turn,&#32;move);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00241"/>00241 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00243"/>00243 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a1d0481928e708ea80a90c1507e64df9f">IsCompletedByAll</link>)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TurnManagerListener.<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a2aa4132b7ef4b81892af1028a5eb00c9">OnTurnCompleted</link>(this.<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00252"/>00252 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00257"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a424cfc42821109e8b15b2c6fd6f6d67f">00257</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a424cfc42821109e8b15b2c6fd6f6d67f">OnEvent</link>(EventData&#32;photonEvent)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.ProcessOnEvent(photonEvent.Code,&#32;photonEvent.CustomData,&#32;photonEvent.Sender);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00261"/>00261 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00266"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a47537e5b4e90f3e259a728412b80977c">00266</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a47537e5b4e90f3e259a728412b80977c">OnRoomPropertiesUpdate</link>(<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;propertiesThatChanged)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00268"/>00268 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;Debug.Log(&quot;OnRoomPropertiesUpdate:&#32;&quot;+propertiesThatChanged.ToStringFull());</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00270"/>00270 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(propertiesThatChanged.ContainsKey(<emphasis role="stringliteral">&quot;Turn&quot;</emphasis>))
<anchor xml:id="__pun_turn_manager_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_isOverCallProcessed&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.finishedPlayers.Clear();
<anchor xml:id="__pun_turn_manager_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.TurnManagerListener.<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1acd12eabdddc7d9d7fcc28d5699e13a0c">OnTurnBegins</link>(this.<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1addf6810d42630114d4ee5958dbdcf6ed">Turn</link>);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00278"/>00278 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00279"/>00279 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00281"/>00281 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00282"/>00282 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00283"/><link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks">00283</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks">IPunTurnManagerCallbacks</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00289"/><link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1acd12eabdddc7d9d7fcc28d5699e13a0c">00289</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1acd12eabdddc7d9d7fcc28d5699e13a0c">OnTurnBegins</link>(<emphasis role="keywordtype">int</emphasis>&#32;turn);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00290"/>00290 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00295"/><link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a2aa4132b7ef4b81892af1028a5eb00c9">00295</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a2aa4132b7ef4b81892af1028a5eb00c9">OnTurnCompleted</link>(<emphasis role="keywordtype">int</emphasis>&#32;turn);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00296"/>00296 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00303"/><link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a96bca2882eff28c51f299f5178dadecb">00303</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a96bca2882eff28c51f299f5178dadecb">OnPlayerMove</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;player,&#32;<emphasis role="keywordtype">int</emphasis>&#32;turn,&#32;<emphasis role="keywordtype">object</emphasis>&#32;move);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00304"/>00304 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00311"/><link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a1bd8368f6f5129842bc27e74e99f9d2e">00311</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a1bd8368f6f5129842bc27e74e99f9d2e">OnPlayerFinished</link>(<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;player,&#32;<emphasis role="keywordtype">int</emphasis>&#32;turn,&#32;<emphasis role="keywordtype">object</emphasis>&#32;move);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00312"/>00312 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00313"/>00313 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00318"/><link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a027fdca7ca7475db51f189a04e182641">00318</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_interface_photon_1_1_pun_1_1_utility_scripts_1_1_i_pun_turn_manager_callbacks_1a027fdca7ca7475db51f189a04e182641">OnTurnTimeEnds</link>(<emphasis role="keywordtype">int</emphasis>&#32;turn);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00320"/>00320 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00321"/>00321 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00322"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions">00322</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions">TurnExtensions</link>
<anchor xml:id="__pun_turn_manager_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00327"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a5d91984071cf0cb2836dac2fd2005de1">00327</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a5d91984071cf0cb2836dac2fd2005de1">TurnPropKey</link>&#32;=&#32;<emphasis role="stringliteral">&quot;Turn&quot;</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00328"/>00328 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00332"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1aa96b8cf5e92a9d7816387ddae33961bc">00332</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1aa96b8cf5e92a9d7816387ddae33961bc">TurnStartPropKey</link>&#32;=&#32;<emphasis role="stringliteral">&quot;TStart&quot;</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00333"/>00333 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00337"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a8c2152d0fb81ea562153dc65be5c2a3d">00337</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a8c2152d0fb81ea562153dc65be5c2a3d">FinishedTurnPropKey</link>&#32;=&#32;<emphasis role="stringliteral">&quot;FToA&quot;</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00338"/>00338 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00345"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a070bc42720b2746a843bc1c98e5b6b32">00345</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a070bc42720b2746a843bc1c98e5b6b32">SetTurn</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&#32;room,&#32;<emphasis role="keywordtype">int</emphasis>&#32;turn,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;setStartTime&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(room&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00351"/>00351 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;turnProps&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>();
<anchor xml:id="__pun_turn_manager_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;turnProps[<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a5d91984071cf0cb2836dac2fd2005de1">TurnPropKey</link>]&#32;=&#32;turn;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(setStartTime)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;turnProps[<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1aa96b8cf5e92a9d7816387ddae33961bc">TurnStartPropKey</link>]&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1ae1b1a5deb3158065875cbf357827e420">ServerTimestamp</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00358"/>00358 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_1aff6e067d041db92e4fbde6a3277926ad">SetCustomProperties</link>(turnProps);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00361"/>00361 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00367"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a3f92ec27aff756601465663c9a8bf30e">00367</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a3f92ec27aff756601465663c9a8bf30e">GetTurn</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link>&#32;room)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(room&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;!room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>.ContainsKey(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a5d91984071cf0cb2836dac2fd2005de1">TurnPropKey</link>))
<anchor xml:id="__pun_turn_manager_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00373"/>00373 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>[<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a5d91984071cf0cb2836dac2fd2005de1">TurnPropKey</link>];
<anchor xml:id="__pun_turn_manager_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00376"/>00376 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00377"/>00377 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00383"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a241392c71755bb372396f96cc448e304">00383</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a241392c71755bb372396f96cc448e304">GetTurnStart</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link>&#32;room)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(room&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;!room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>.ContainsKey(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1aa96b8cf5e92a9d7816387ddae33961bc">TurnStartPropKey</link>))
<anchor xml:id="__pun_turn_manager_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00389"/>00389 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>[<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1aa96b8cf5e92a9d7816387ddae33961bc">TurnStartPropKey</link>];
<anchor xml:id="__pun_turn_manager_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00392"/>00392 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00398"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a9df0ecfd305520b71553da044123a0ea">00398</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a9df0ecfd305520b71553da044123a0ea">GetFinishedTurn</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;player)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&#32;room&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(room&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;!room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>.ContainsKey(<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a5d91984071cf0cb2836dac2fd2005de1">TurnPropKey</link>))
<anchor xml:id="__pun_turn_manager_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00405"/>00405 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;propKey&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a8c2152d0fb81ea562153dc65be5c2a3d">FinishedTurnPropKey</link>&#32;+&#32;player.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>[propKey];
<anchor xml:id="__pun_turn_manager_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00409"/>00409 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00415"/><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a6171fa93edee212a38f93c261be850c8">00415</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a6171fa93edee212a38f93c261be850c8">SetFinishedTurn</link>(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&#32;player,&#32;<emphasis role="keywordtype">int</emphasis>&#32;turn)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&#32;room&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a5339e137c6b1461d090f658012ee62c7">CurrentRoom</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(room&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">CustomProperties</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__pun_turn_manager_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__pun_turn_manager_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00422"/>00422 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;propKey&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_turn_extensions_1a8c2152d0fb81ea562153dc65be5c2a3d">FinishedTurnPropKey</link>&#32;+&#32;player.<link linkend="_class_photon_1_1_realtime_1_1_player_1ab06642bd6b1e192ed22a48832cd1b28a">ActorNumber</link>;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>&#32;finishedTurnProp&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link>();
<anchor xml:id="__pun_turn_manager_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;finishedTurnProp[propKey]&#32;=&#32;turn;
<anchor xml:id="__pun_turn_manager_8cs_source_1l00426"/>00426 
<anchor xml:id="__pun_turn_manager_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;room.<link linkend="_class_photon_1_1_realtime_1_1_room_1aff6e067d041db92e4fbde6a3277926ad">SetCustomProperties</link>(finishedTurnProp);
<anchor xml:id="__pun_turn_manager_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;}
<anchor xml:id="__pun_turn_manager_8cs_source_1l00430"/>00430 }
</programlisting></section>
