<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__scene_transition_8cs_source" xml:lang="en-US">
<title>SceneTransition.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/_Developers/Adriana/Scripts/UI/SceneTransition.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__scene_transition_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
<anchor xml:id="__scene_transition_8cs_source_1l00002"/>00002 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__scene_transition_8cs_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__scene_transition_8cs_source_1l00004"/>00004 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.Events;
<anchor xml:id="__scene_transition_8cs_source_1l00005"/>00005 
<anchor xml:id="__scene_transition_8cs_source_1l00006"/><link linkend="_class_scene_transition">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_scene_transition">SceneTransition</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__scene_transition_8cs_source_1l00007"/>00007 {
<anchor xml:id="__scene_transition_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__scene_transition_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;screenTransMat;
<anchor xml:id="__scene_transition_8cs_source_1l00010"/>00010 
<anchor xml:id="__scene_transition_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__scene_transition_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;transTime&#32;=&#32;1f;
<anchor xml:id="__scene_transition_8cs_source_1l00013"/>00013 
<anchor xml:id="__scene_transition_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__scene_transition_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName&#32;=&#32;<emphasis role="stringliteral">&quot;_Transition&quot;</emphasis>;
<anchor xml:id="__scene_transition_8cs_source_1l00016"/>00016 
<anchor xml:id="__scene_transition_8cs_source_1l00017"/><link linkend="_class_scene_transition_1a5abf6a3ffd4ff8abde9390d4b47374fd">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;UnityEvent&#32;<link linkend="_class_scene_transition_1a5abf6a3ffd4ff8abde9390d4b47374fd">OnTransDone</link>;
<anchor xml:id="__scene_transition_8cs_source_1l00018"/>00018 
<anchor xml:id="__scene_transition_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__scene_transition_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__scene_transition_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(TransCoroutine());
<anchor xml:id="__scene_transition_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;}
<anchor xml:id="__scene_transition_8cs_source_1l00023"/>00023 
<anchor xml:id="__scene_transition_8cs_source_1l00024"/>00024 
<anchor xml:id="__scene_transition_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;TransCoroutine()
<anchor xml:id="__scene_transition_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;{
<anchor xml:id="__scene_transition_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;currentTime&#32;=&#32;0f;
<anchor xml:id="__scene_transition_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(currentTime&#32;&lt;&#32;transTime)
<anchor xml:id="__scene_transition_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__scene_transition_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentTime&#32;+=&#32;Time.deltaTime;
<anchor xml:id="__scene_transition_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;screenTransMat.SetFloat(propertyName,&#32;Mathf.Clamp01(currentTime&#32;/&#32;transTime));
<anchor xml:id="__scene_transition_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__scene_transition_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__scene_transition_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_scene_transition_1a5abf6a3ffd4ff8abde9390d4b47374fd">OnTransDone</link>?.Invoke();
<anchor xml:id="__scene_transition_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;}
<anchor xml:id="__scene_transition_8cs_source_1l00036"/>00036 }
</programlisting></section>
