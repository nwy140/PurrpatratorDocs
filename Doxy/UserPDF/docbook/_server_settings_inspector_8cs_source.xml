<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__server_settings_inspector_8cs_source" xml:lang="en-US">
<title>ServerSettingsInspector.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Editor/ServerSettingsInspector.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__server_settings_inspector_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&#32;file=&quot;ServerSettingsInspector.cs&quot;&#32;company=&quot;Exit&#32;Games&#32;GmbH&quot;&gt;</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;&#32;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2018&#32;Exit&#32;Games&#32;GmbH</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;/copyright&gt;</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;&#32;This&#32;is&#32;a&#32;custom&#32;editor&#32;for&#32;the&#32;ServerSettings&#32;scriptable&#32;object.</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00009"/>00009 <emphasis role="comment">//&#32;----------------------------------------------------------------------------</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00010"/>00010 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00013"/>00013 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00014"/>00014 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00015"/>00015 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00016"/>00016 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00017"/>00017 <emphasis role="keyword">using</emphasis>&#32;ExitGames.Client.<link linkend="_namespace_exit_games_1_1_client_1_1_photon">Photon</link>;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00018"/>00018 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00019"/>00019 <emphasis role="keyword">using</emphasis>&#32;System.Reflection;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00020"/>00020 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_realtime">Realtime</link>;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00021"/>00021 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00022"/>00022 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun">Photon.Pun</link>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00023"/>00023 {
<anchor xml:id="__server_settings_inspector_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;[CustomEditor(typeof(<link linkend="_class_photon_1_1_pun_1_1_server_settings">ServerSettings</link>))]
<anchor xml:id="__server_settings_inspector_8cs_source_1l00025"/><link linkend="_class_photon_1_1_pun_1_1_server_settings_inspector">00025</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_server_settings_inspector">ServerSettingsInspector</link>&#32;:&#32;Editor
<anchor xml:id="__server_settings_inspector_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;versionPhoton;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00028"/>00028 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;regionsPrefsList;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00030"/>00030 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;prefLabel;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;notAvailableLabel&#32;=&#32;<emphasis role="stringliteral">&quot;n/a&quot;</emphasis>;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00033"/>00033 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;rpcCrc;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;showRpcs;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00036"/>00036 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GUIStyle&#32;vertboxStyle;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00038"/>00038 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00039"/><link linkend="_class_photon_1_1_pun_1_1_server_settings_inspector_1aa06d42531ab44ce10ac7c3b3e769a58c">00039</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_server_settings_inspector_1aa06d42531ab44ce10ac7c3b3e769a58c">Awake</link>()
<anchor xml:id="__server_settings_inspector_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.versionPhoton&#32;=&#32;System.Reflection.Assembly.GetAssembly(typeof(PhotonPeer)).GetName().Version.ToString();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00043"/>00043 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00044"/>00044 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00045"/><link linkend="_class_photon_1_1_pun_1_1_server_settings_inspector_1a67d7ccd0426a1ce463f88cb35e670b82">00045</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_server_settings_inspector_1a67d7ccd0426a1ce463f88cb35e670b82">OnInspectorGUI</link>()
<anchor xml:id="__server_settings_inspector_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(vertboxStyle&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vertboxStyle&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle(<emphasis role="stringliteral">&quot;HelpBox&quot;</emphasis>)&#32;{&#32;padding&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;RectOffset(6,&#32;6,&#32;6,&#32;6)&#32;};
<anchor xml:id="__server_settings_inspector_8cs_source_1l00049"/>00049 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedObject&#32;sObj&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;SerializedObject(this.target);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_server_settings">ServerSettings</link>&#32;settings&#32;=&#32;this.target&#32;as&#32;<link linkend="_class_photon_1_1_pun_1_1_server_settings">ServerSettings</link>;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00052"/>00052 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00053"/>00053 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00055"/>00055 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00056"/>00056 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Version&#32;Vertical&#32;Box</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00057"/>00057 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginVertical(<emphasis role="comment">/*vertboxStyle*/</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PrefixLabel(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Version:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Version&#32;of&#32;PUN&#32;and&#32;Photon3Unity3d.dll.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.FlexibleSpace();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;helpicorect&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MaxWidth(16));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUIUtility.AddCursorRect(helpicorect,&#32;MouseCursor.Link);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(helpicorect,&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_g_u_i">PhotonGUI</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_g_u_i_1a79b19a07d09330a9ddb110a19f99e63d">HelpIcon</link>,&#32;GUIStyle.none))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Application.OpenURL(<link linkend="_class_photon_1_1_pun_1_1_photon_editor">PhotonEditor</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_editor_1a4bc5922a69364a2a91a5fc14030dce4a">UrlPunSettings</link>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;Pun:&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1aab822b6132ca8d749211babcc69eb79f">PunVersion</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;Photon&#32;lib:&#32;&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">this</emphasis>.versionPhoton);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndVertical();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00071"/>00071 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00072"/>00072 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;Version&#32;Vertical&#32;Box</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00073"/>00073 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel--;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;showSettingsProp&#32;=&#32;this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ShowSettings&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;showSettings&#32;=&#32;showSettingsProp.Foldout(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Server/Cloud&#32;Settings&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Core&#32;Photon&#32;Server/Cloud&#32;settings.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel++;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00078"/>00078 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00079"/>00079 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(showSettings&#32;!=&#32;settings.ShowSettings)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;showSettingsProp.boolValue&#32;=&#32;showSettings;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00084"/>00084 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(showSettingsProp.boolValue)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;settingsSp&#32;=&#32;this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;AppSettings&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00088"/>00088 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel++;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00090"/>00090 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Realtime&#32;APP&#32;ID</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.BuildAppIdField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;AppIdRealtime&quot;</emphasis>),&#32;<emphasis role="stringliteral">&quot;App&#32;Id&#32;PUN&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00093"/>00093 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PhotonEditorUtils.HasChat)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.BuildAppIdField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;AppIdChat&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PhotonEditorUtils.HasVoice)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.BuildAppIdField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;AppIdVoice&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00102"/>00102 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;AppVersion&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;UseNameServer&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Use&#32;Name&#32;Server&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Photon&#32;Cloud&#32;requires&#32;this&#32;checked.\nUncheck&#32;for&#32;Photon&#32;Server&#32;SDK&#32;(OnPremise).&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;FixedRegion&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Fixed&#32;Region&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Photon&#32;Cloud&#32;setting,&#32;needs&#32;a&#32;Name&#32;Server.\nDefine&#32;one&#32;region&#32;to&#32;always&#32;connect&#32;to.\nLeave&#32;empty&#32;to&#32;use&#32;the&#32;best&#32;region&#32;from&#32;a&#32;server-side&#32;region&#32;list.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;Server&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Server&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Typically&#32;empty&#32;for&#32;Photon&#32;Cloud.\nFor&#32;Photon&#32;OnPremise,&#32;enter&#32;your&#32;host&#32;name&#32;or&#32;IP.&#32;Also&#32;uncheck&#32;\&quot;Use&#32;Name&#32;Server\&quot;&#32;for&#32;older&#32;Photon&#32;OnPremise&#32;servers.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;Port&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Port&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Leave&#32;0&#32;to&#32;use&#32;default&#32;Photon&#32;Cloud&#32;ports&#32;for&#32;the&#32;Name&#32;Server.\nOnPremise&#32;defaults&#32;to&#32;5055&#32;for&#32;UDP&#32;and&#32;4530&#32;for&#32;TCP.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;ProxyServer&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Proxy&#32;Server&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;HTTP&#32;Proxy&#32;Server&#32;for&#32;WebSocket&#32;connection.&#32;See&#32;LoadBalancingClient.ProxyServerAddress&#32;for&#32;options.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;Protocol&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Protocol&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Use&#32;UDP&#32;where&#32;possible.\nWSS&#32;works&#32;on&#32;WebGL&#32;and&#32;Xbox&#32;exports.\nDefine&#32;WEBSOCKET&#32;for&#32;use&#32;on&#32;other&#32;platforms.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;EnableProtocolFallback&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Protocol&#32;Fallback&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Automatically&#32;try&#32;another&#32;network&#32;protocol,&#32;if&#32;initial&#32;connect&#32;fails.\nWill&#32;use&#32;default&#32;Name&#32;Server&#32;ports.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;EnableLobbyStatistics&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Lobby&#32;Statistics&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;When&#32;using&#32;multiple&#32;room&#32;lists&#32;(lobbies),&#32;the&#32;server&#32;can&#32;send&#32;info&#32;about&#32;their&#32;usage.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(settingsSp.FindPropertyRelative(<emphasis role="stringliteral">&quot;NetworkLogging&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Network&#32;Logging&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Log&#32;level&#32;for&#32;the&#32;Photon&#32;libraries.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel--;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00115"/>00115 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;PunLogging&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;PUN&#32;Logging&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Log&#32;level&#32;for&#32;the&#32;PUN&#32;layer.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;EnableSupportLogger&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Support&#32;Logger&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Logs&#32;additional&#32;info&#32;for&#32;debugging.\nUse&#32;this&#32;when&#32;you&#32;submit&#32;bugs&#32;to&#32;the&#32;Photon&#32;Team.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;RunInBackground&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Run&#32;In&#32;Background&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Enables&#32;apps&#32;to&#32;keep&#32;the&#32;connection&#32;without&#32;focus.&#32;Android&#32;and&#32;iOS&#32;ignore&#32;this.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;StartInOfflineMode&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Start&#32;In&#32;Offline&#32;Mode&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Simulates&#32;an&#32;online&#32;connection.\nPUN&#32;can&#32;be&#32;used&#32;as&#32;usual.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00120"/>00120 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(this.serializedObject.FindProperty(<emphasis role="stringliteral">&quot;DevRegion&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Dev&#32;Region&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Photon&#32;Cloud&#32;setting,&#32;needs&#32;a&#32;Name&#32;Server.\nDefine&#32;region&#32;the&#32;Editor&#32;and&#32;Development&#32;builds&#32;will&#32;always&#32;connect&#32;to&#32;-&#32;ensuring&#32;all&#32;users&#32;can&#32;find&#32;common&#32;rooms.\nLeave&#32;empty&#32;to&#32;use&#32;the&#32;Fixed&#32;Region&#32;or&#32;best&#32;region&#32;from&#32;a&#32;server-side&#32;region&#32;list.&#32;This&#32;value&#32;will&#32;be&#32;ignored&#32;for&#32;non-Development&#32;builds.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00122"/>00122 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00123"/>00123 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Best&#32;Region&#32;Box</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00124"/>00124 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginVertical(vertboxStyle);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00126"/>00126 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a00c321ca2b6e39ab5288f3f40215fb00">BestRegionSummaryInPreferences</link>))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.regionsPrefsList&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a00c321ca2b6e39ab5288f3f40215fb00">BestRegionSummaryInPreferences</link>.Split(<emphasis role="keyword">new</emphasis>[]&#32;{<emphasis role="charliteral">&apos;;&apos;</emphasis>},&#32;StringSplitOptions.RemoveEmptyEntries);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.regionsPrefsList.Length&#32;&lt;&#32;2)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.prefLabel&#32;=&#32;notAvailableLabel;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.prefLabel&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;&apos;{0}&apos;&#32;ping:{1}ms&#32;&quot;</emphasis>,&#32;this.regionsPrefsList[0],&#32;this.regionsPrefsList[1]);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.prefLabel&#32;=&#32;notAvailableLabel;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00143"/>00143 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Best&#32;Region&#32;Preference:&#32;&quot;</emphasis>&#32;+&#32;prefLabel,&#32;<emphasis role="stringliteral">&quot;Best&#32;region&#32;is&#32;used&#32;if&#32;Fixed&#32;Region&#32;is&#32;empty.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00145"/>00145 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00147"/>00147 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;resetrect&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(64));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;editrect&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(64));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(resetrect,&#32;<emphasis role="stringliteral">&quot;Reset&quot;</emphasis>,&#32;EditorStyles.miniButton))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_server_settings">ServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1a2939fa45d56ed480a95051cc7d313a94">ResetBestRegionCodeInPreferences</link>();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00154"/>00154 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(editrect,&#32;<emphasis role="stringliteral">&quot;Edit&#32;WhiteList&quot;</emphasis>,&#32;EditorStyles.miniButton))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Application.OpenURL(<emphasis role="stringliteral">&quot;https://dashboard.photonengine.com/en-US/App/RegionsWhitelistEdit/&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1a1f6b368c3d10655148ebeba8d2376dd0">AppSettings</link>.<link linkend="_class_photon_1_1_realtime_1_1_app_settings_1afecc1328df070c755034b7ba4711aaba">AppIdRealtime</link>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00158"/>00158 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00160"/>00160 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndVertical();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00163"/>00163 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00164"/>00164 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;Best&#32;Region&#32;Box</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00165"/>00165 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00166"/>00166 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//this.showRpcs&#32;=&#32;EditorGUILayout.Foldout(this.showRpcs,&#32;new&#32;GUIContent(&quot;RPCs&quot;,&#32;&quot;RPC&#32;shortcut&#32;list.&quot;));</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel--;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.showRpcs&#32;=&#32;this.showRpcs.Foldout(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;RPCs&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;RPC&#32;shortcut&#32;list.&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel++;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00171"/>00171 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.showRpcs)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;first&#32;time&#32;check&#32;to&#32;get&#32;the&#32;rpc&#32;has&#32;proper</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(this.rpcCrc))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.rpcCrc&#32;=&#32;this.RpcListHashCode().ToString(<emphasis role="stringliteral">&quot;X&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00179"/>00179 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00180"/>00180 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Begin&#32;Vertical&#32;Box&#32;CRC</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00181"/>00181 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginVertical(vertboxStyle);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00183"/>00183 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PrefixLabel(<emphasis role="stringliteral">&quot;List&#32;CRC&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00186"/>00186 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel--;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;copyrect&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MaxWidth(16));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.GetControlRect(GUILayout.MaxWidth(12));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;hashrect&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(16));&#32;<emphasis role="comment">//&#32;new&#32;Rect(copyrect)&#32;{&#32;xMin&#32;=&#32;copyrect.xMin&#32;+&#32;32&#32;};</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00191"/>00191 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUIUtility.AddCursorRect(copyrect,&#32;MouseCursor.Link);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(copyrect,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Copy&#32;Hashcode&#32;to&#32;Clipboard&quot;</emphasis>));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(copyrect,&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_g_u_i">PhotonGUI</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_g_u_i_1a3c384d19393265f176c4675cb64831d1">CopyIcon</link>,&#32;GUIStyle.none))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.Log(<emphasis role="stringliteral">&quot;RPC-List&#32;HashCode&#32;copied&#32;into&#32;your&#32;ClipBoard:&#32;&quot;</emphasis>&#32;+&#32;this.rpcCrc&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;Make&#32;sure&#32;clients&#32;that&#32;send&#32;each&#32;other&#32;RPCs&#32;have&#32;the&#32;same&#32;RPC-List.&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUIUtility.systemCopyBuffer&#32;=&#32;this.rpcCrc;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.SelectableLabel(hashrect,&#32;this.rpcCrc);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00200"/>00200 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00202"/>00202 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel++;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00204"/>00204 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00206"/>00206 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;refreshrect&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(64));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;clearrect&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(64));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00209"/>00209 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(refreshrect,&#32;<emphasis role="stringliteral">&quot;Refresh&#32;RPCs&quot;</emphasis>,&#32;EditorStyles.miniButton))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_editor">PhotonEditor</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_editor_1aee48466365cb5f846694f12272085961">UpdateRpcList</link>();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.Repaint();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00215"/>00215 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(clearrect,&#32;<emphasis role="stringliteral">&quot;Clear&#32;RPCs&quot;</emphasis>,&#32;EditorStyles.miniButton))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_editor">PhotonEditor</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_editor_1a9d00973f12ad43cd9c500a8a7eb3fcf0">ClearRpcList</link>();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00220"/>00220 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00222"/>00222 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndVertical();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00224"/>00224 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00225"/>00225 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;End&#32;Vertical&#32;Box&#32;CRC</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00226"/>00226 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel++;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00228"/>00228 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;sRpcs&#32;=&#32;sObj.FindProperty(<emphasis role="stringliteral">&quot;RpcList&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(sRpcs,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00231"/>00231 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel--;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00234"/>00234 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
<anchor xml:id="__server_settings_inspector_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sObj.ApplyModifiedProperties();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.serializedObject.ApplyModifiedProperties();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00239"/>00239 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cache&#32;the&#32;rpc&#32;hash</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.rpcCrc&#32;=&#32;this.RpcListHashCode().ToString(<emphasis role="stringliteral">&quot;X&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00243"/>00243 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00244"/>00244 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Simple&#32;Settings</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00245"/>00245 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;SettingsScriptableObjectBaseType&#32;=&#32;GetType(<emphasis role="stringliteral">&quot;Photon.Utilities.SettingsScriptableObjectBase&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SettingsScriptableObjectBaseType&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.GetControlRect(<emphasis role="keyword">false</emphasis>,&#32;3);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00251"/>00251 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(<emphasis role="stringliteral">&quot;Simple&#32;Extension&#32;Settings&quot;</emphasis>,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;BoldLabel&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00253"/>00253 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;drawAllMethod&#32;=&#32;SettingsScriptableObjectBaseType.GetMethod(<emphasis role="stringliteral">&quot;DrawAllSettings&quot;</emphasis>);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00255"/>00255 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drawAllMethod&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;initializeAsOpen&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drawAllMethod.Invoke(<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">object</emphasis>[2]&#32;{&#32;<emphasis role="keyword">this</emphasis>,&#32;initializeAsOpen&#32;});
<anchor xml:id="__server_settings_inspector_8cs_source_1l00260"/>00260 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00263"/>00263 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00264"/>00264 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00265"/>00265 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00267"/>00267 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Type&#32;GetType(<emphasis role="keywordtype">string</emphasis>&#32;typeName)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;Type.GetType(typeName);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;type;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;a&#32;<emphasis role="keywordflow">in</emphasis>&#32;AppDomain.CurrentDomain.GetAssemblies())
<anchor xml:id="__server_settings_inspector_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type&#32;=&#32;a.GetType(typeName);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;type;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00280"/>00280 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;RpcListHashCode()
<anchor xml:id="__server_settings_inspector_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;is&#32;a&#32;hashcode&#32;generated&#32;to&#32;(more)&#32;easily&#32;compare&#32;this&#32;Editor&apos;s&#32;RPC&#32;List&#32;with&#32;some&#32;other</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hashCode&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1ae968e7308a692f86a2df3a328beff970">RpcList</link>.Count&#32;+&#32;1;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_network">PhotonNetwork</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_network_1a44320ea58c806435375af9fedaafc56d">PhotonServerSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_server_settings_1ae968e7308a692f86a2df3a328beff970">RpcList</link>)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;h1&#32;=&#32;s.GetHashCode();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;((h1&#32;&lt;&lt;&#32;5)&#32;+&#32;h1)&#32;^&#32;hashCode;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hashCode;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00292"/>00292 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;BuildAppIdField(SerializedProperty&#32;property,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00296"/>00296 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(label&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__server_settings_inspector_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(property,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(label),&#32;GUILayout.MinWidth(32));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__server_settings_inspector_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(property,&#32;GUILayout.MinWidth(32));
<anchor xml:id="__server_settings_inspector_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00305"/>00305 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.stringValue&#32;=&#32;<emphasis role="keyword">property</emphasis>.stringValue.Trim();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;appId&#32;=&#32;<emphasis role="keyword">property</emphasis>.stringValue;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00308"/>00308 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;url&#32;=&#32;<emphasis role="stringliteral">&quot;https://dashboard.photonengine.com/en-US/PublicCloud&quot;</emphasis>;
<anchor xml:id="__server_settings_inspector_8cs_source_1l00310"/>00310 
<anchor xml:id="__server_settings_inspector_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(appId))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;url&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;https://dashboard.photonengine.com/en-US/App/Manage/{0}&quot;</emphasis>,&#32;appId);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button(<emphasis role="stringliteral">&quot;Dashboard&quot;</emphasis>,&#32;EditorStyles.miniButton,&#32;GUILayout.MinWidth(78),&#32;GUILayout.MaxWidth(78)))
<anchor xml:id="__server_settings_inspector_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__server_settings_inspector_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Application.OpenURL(url);
<anchor xml:id="__server_settings_inspector_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__server_settings_inspector_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;}
<anchor xml:id="__server_settings_inspector_8cs_source_1l00322"/>00322 }
</programlisting></section>
