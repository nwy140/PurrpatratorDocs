<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__simple_data_monitor_8cs_source" xml:lang="en-US">
<title>SimpleDataMonitor.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/DataMonitor/SimpleDataMonitor.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__simple_data_monitor_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__simple_data_monitor_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__simple_data_monitor_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__simple_data_monitor_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__simple_data_monitor_8cs_source_1l00005"/>00005 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;System.Text;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00010"/>00010 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00011"/>00011 <emphasis role="preprocessor">#if&#32;SNS_REPORTS&#32;&amp;&amp;&#32;(UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD)</emphasis>
<anchor xml:id="__simple_data_monitor_8cs_source_1l00012"/>00012 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00013"/>00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__simple_data_monitor_8cs_source_1l00014"/>00014 {
<anchor xml:id="__simple_data_monitor_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>SimpleDataMonitor
<anchor xml:id="__simple_data_monitor_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>CountValue&#32;{&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value;&#32;<emphasis role="keyword">public</emphasis>&#32;CountValue(<emphasis role="keywordtype">int</emphasis>&#32;val)&#32;{&#32;value&#32;=&#32;val;&#32;}&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00021"/>00021 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;NetObject,&#32;CountValue&gt;&#32;byteTotalsPerNetObj&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;NetObject,&#32;CountValue&gt;();
<anchor xml:id="__simple_data_monitor_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;NetObject,&#32;Dictionary&lt;SyncObject,&#32;CountValue&gt;&gt;&#32;bitsPerSyncObj&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;NetObject,&#32;Dictionary&lt;SyncObject,&#32;CountValue&gt;&gt;();
<anchor xml:id="__simple_data_monitor_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;NetObject,&#32;Dictionary&lt;SyncObject,&#32;CountValue&gt;&gt;&#32;byteTotalsPerSyncObj&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;NetObject,&#32;Dictionary&lt;SyncObject,&#32;CountValue&gt;&gt;();
<anchor xml:id="__simple_data_monitor_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;byteTotalLastSecond;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00026"/>00026 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;lastTotalsTime;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00028"/>00028 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddData(SyncObject&#32;so,&#32;<emphasis role="keywordtype">int</emphasis>&#32;bits)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;no&#32;=&#32;so.NetObj;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00032"/>00032 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnsureKeysExists(so);
<anchor xml:id="__simple_data_monitor_8cs_source_1l00034"/>00034 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;t&#32;=&#32;(int)Time.time;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(t&#32;!=&#32;lastTotalsTime)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NextSecond();
<anchor xml:id="__simple_data_monitor_8cs_source_1l00038"/>00038 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;soDict&#32;=&#32;bitsPerSyncObj[no];
<anchor xml:id="__simple_data_monitor_8cs_source_1l00040"/>00040 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;soDict[so].value&#32;+=&#32;bits;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00043"/>00043 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EnsureKeysExists(SyncObject&#32;so)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;no&#32;=&#32;so.NetObj;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00047"/>00047 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bitsPerSyncObj.ContainsKey(no))
<anchor xml:id="__simple_data_monitor_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitsPerSyncObj.Add(no,&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;SyncObject,&#32;CountValue&gt;());
<anchor xml:id="__simple_data_monitor_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitsPerSyncObj[no][so]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CountValue(0);
<anchor xml:id="__simple_data_monitor_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteTotalsPerSyncObj.Add(no,&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;SyncObject,&#32;CountValue&gt;());
<anchor xml:id="__simple_data_monitor_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteTotalsPerSyncObj[no][so]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CountValue(0);
<anchor xml:id="__simple_data_monitor_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteTotalsPerNetObj.Add(no,&#32;<emphasis role="keyword">new</emphasis>&#32;CountValue(0));
<anchor xml:id="__simple_data_monitor_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00056"/>00056 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;soDict&#32;=&#32;bitsPerSyncObj[no];
<anchor xml:id="__simple_data_monitor_8cs_source_1l00058"/>00058 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!soDict.ContainsKey(so))
<anchor xml:id="__simple_data_monitor_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;soDict.Add(so,&#32;<emphasis role="keyword">new</emphasis>&#32;CountValue(0));
<anchor xml:id="__simple_data_monitor_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteTotalsPerSyncObj[no].Add(so,&#32;<emphasis role="keyword">new</emphasis>&#32;CountValue(0));
<anchor xml:id="__simple_data_monitor_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00065"/>00065 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;NextSecond()
<anchor xml:id="__simple_data_monitor_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteTotalLastSecond&#32;=&#32;0;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00069"/>00069 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;noKvp&#32;<emphasis role="keywordflow">in</emphasis>&#32;bitsPerSyncObj)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;no&#32;=&#32;noKvp.Key;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteTotalsPerNetObj[no].value&#32;=&#32;0;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00074"/>00074 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;byteDict&#32;=&#32;byteTotalsPerSyncObj[no];
<anchor xml:id="__simple_data_monitor_8cs_source_1l00076"/>00076 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;soKvp&#32;<emphasis role="keywordflow">in</emphasis>&#32;noKvp.Value)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;so&#32;=&#32;soKvp.Key;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00080"/>00080 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytes&#32;=&#32;(soKvp.Value.value&#32;+&#32;7)&#32;&gt;&gt;&#32;3;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00082"/>00082 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteDict[so].value&#32;=&#32;bytes;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteTotalLastSecond&#32;+=&#32;bytes;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;byteTotalsPerNetObj[no].value&#32;+=&#32;bytes;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00086"/>00086 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;reset&#32;the&#32;syncObj&#32;bit&#32;counter</emphasis>
<anchor xml:id="__simple_data_monitor_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitsPerSyncObj[no][so].value&#32;=&#32;0;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00090"/>00090 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastTotalsTime&#32;=&#32;(int)Time.time;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Length&#32;=&#32;0;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(Report(strb,&#32;ReportType.PerSyncObject).ToString());
<anchor xml:id="__simple_data_monitor_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00096"/>00096 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;ReportType&#32;{&#32;Total,&#32;PerNetObject,&#32;PerSyncObject&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00098"/>00098 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;strb&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder();
<anchor xml:id="__simple_data_monitor_8cs_source_1l00100"/>00100 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;Report(StringBuilder&#32;strb,&#32;ReportType&#32;reportType)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00103"/>00103 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(byteTotalLastSecond).Append(<emphasis role="stringliteral">&quot;&#32;Total&#32;Sent&#32;Bytes/Sec\n&quot;</emphasis>);
<anchor xml:id="__simple_data_monitor_8cs_source_1l00105"/>00105 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(reportType&#32;!=&#32;ReportType.Total)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;noKvp&#32;<emphasis role="keywordflow">in</emphasis>&#32;byteTotalsPerNetObj)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;no&#32;=&#32;noKvp.Key;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;noTotal&#32;=&#32;noKvp.Value.value;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00112"/>00112 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!no)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00115"/>00115 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(<emphasis role="stringliteral">&quot;-&#32;&quot;</emphasis>).Append(noTotal).Append(<emphasis role="stringliteral">&quot;&#32;Bytes&#32;from&#32;&quot;</emphasis>).Append(no.name).Append(no.NetObjId).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_data_monitor_8cs_source_1l00117"/>00117 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(reportType&#32;==&#32;ReportType.PerSyncObject)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;soKvp&#32;<emphasis role="keywordflow">in</emphasis>&#32;byteTotalsPerSyncObj[no])
<anchor xml:id="__simple_data_monitor_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_data_monitor_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;so&#32;=&#32;soKvp.Key;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;soTotal&#32;=&#32;soKvp.Value.value;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(<emphasis role="stringliteral">&quot;--&#32;&quot;</emphasis>).Append(soTotal.ToString(<emphasis role="stringliteral">&quot;0000&quot;</emphasis>)).Append(<emphasis role="stringliteral">&quot;&#32;Bytes&#32;from&#32;&quot;</emphasis>).Append(so.GetType().Name);
<anchor xml:id="__simple_data_monitor_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(so.transform.parent&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__simple_data_monitor_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(<emphasis role="stringliteral">&quot;&#32;(&quot;</emphasis>).Append(so.name).Append(<emphasis role="stringliteral">&quot;)&quot;</emphasis>);
<anchor xml:id="__simple_data_monitor_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strb.Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_data_monitor_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00130"/>00130 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;strb;
<anchor xml:id="__simple_data_monitor_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_data_monitor_8cs_source_1l00134"/>00134 }
<anchor xml:id="__simple_data_monitor_8cs_source_1l00135"/>00135 
<anchor xml:id="__simple_data_monitor_8cs_source_1l00136"/>00136 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
