<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__simple_o_v_r_grabbable_8cs_source" xml:lang="en-US">
<title>SimpleOVRGrabbable.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/SyncOculus/SimpleOVRGrabbable.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00005"/>00005 
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00006"/>00006 <emphasis role="preprocessor">#if&#32;OCULUS</emphasis>
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00007"/>00007 
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00009"/>00009 
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00010"/>00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00011"/>00011 {
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>SimpleOVRGrabbable&#32;:&#32;OVRGrabbable
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;SyncState&#32;syncState;
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00015"/>00015 
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.Start();
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncState&#32;=&#32;transform.GetComponentInParent&lt;SyncState&gt;();
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00021"/>00021 
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;GrabBegin(OVRGrabber&#32;hand,&#32;Collider&#32;grabPoint)
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.GrabBegin(hand,&#32;grabPoint);
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00025"/>00025 
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(syncState)
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mount&#32;=&#32;hand.GetComponent&lt;Mount&gt;();
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mount)
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncState.HardMount(mount);
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00035"/>00035 
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;GrabEnd(Vector3&#32;linearVelocity,&#32;Vector3&#32;angularVelocity)
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.GrabEnd(linearVelocity,&#32;angularVelocity);
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(syncState)
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncState.HardMount(<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00043"/>00043 }
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00044"/>00044 
<anchor xml:id="__simple_o_v_r_grabbable_8cs_source_1l00045"/>00045 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
