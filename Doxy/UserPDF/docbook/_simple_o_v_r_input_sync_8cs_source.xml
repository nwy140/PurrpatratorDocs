<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__simple_o_v_r_input_sync_8cs_source" xml:lang="en-US">
<title>SimpleOVRInputSync.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/SyncOculus/SimpleOVRInputSync.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00001"/>00001 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00002"/>00002 <emphasis role="preprocessor">#if&#32;OCULUS</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00003"/>00003 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00004"/>00004 <emphasis role="preprocessor">#if&#32;USING_XR_MANAGEMENT&#32;&amp;&amp;&#32;USING_XR_SDK_OCULUS</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00005"/>00005 <emphasis role="preprocessor">#define&#32;USING_XR_SDK</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00006"/>00006 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00007"/>00007 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;System.Text;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00010"/>00010 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00011"/>00011 <emphasis role="preprocessor">#if&#32;UNITY_2017_2_OR_NEWER</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;InputTracking&#32;=&#32;UnityEngine.XR.InputTracking;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00013"/>00013 <emphasis role="keyword">using</emphasis>&#32;Node&#32;=&#32;UnityEngine.XR.XRNode;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00014"/>00014 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00015"/>00015 <emphasis role="keyword">using</emphasis>&#32;InputTracking&#32;=&#32;UnityEngine.VR.InputTracking;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00016"/>00016 <emphasis role="keyword">using</emphasis>&#32;Node&#32;=&#32;UnityEngine.VR.VRNode;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00017"/>00017 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00018"/>00018 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00019"/>00019 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00020"/>00020 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00021"/>00021 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00022"/>00022 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00023"/>00023 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00024"/>00024 {
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>OVRInputFrame
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;bodyPos,&#32;bodyRot,&#32;headPos,&#32;handPosL,&#32;handPosR;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector2&#32;stickL,&#32;stickR;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;headRot,&#32;handRotL,&#32;handRotR;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;a,&#32;b,&#32;x,&#32;y,&#32;thumbL,&#32;thumbR,&#32;gripL,&#32;gripR,&#32;triggerL,&#32;triggerR;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;triggerLValue,&#32;triggerRValue,&#32;gripLValue,&#32;gripRValue;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00032"/>00032 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;sb;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ToString()
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sb&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder();
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00038"/>00038 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Length&#32;=&#32;0;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;Body:&#32;&quot;</emphasis>).Append(bodyPos).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(bodyRot).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;Head:&#32;&quot;</emphasis>).Append(headPos).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(headRot).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;Left:&#32;&quot;</emphasis>).Append(handPosL).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(handRotL).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;Rght:&#32;&quot;</emphasis>).Append(handPosR).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(handRotR).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;Stick&#32;&quot;</emphasis>).Append(stickL).Append(<emphasis role="stringliteral">&quot;&#32;&lt;-&gt;&#32;&quot;</emphasis>).Append(stickR).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00045"/>00045 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;Bttns&#32;&quot;</emphasis>).Append(a).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(b).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(x).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(y).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;Thumb&#32;&quot;</emphasis>).Append(thumbL).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(thumbR).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;Grip&#32;&quot;</emphasis>).Append(gripL).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(gripR).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(<emphasis role="stringliteral">&quot;Trigger&#32;&quot;</emphasis>).Append(triggerL).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(triggerR).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00050"/>00050 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sb.ToString();
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00054"/>00054 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>SimpleOVRInputSync&#32;:&#32;NetComponent
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;IOnPreSimulate
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00058"/>00058 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00059"/>00059 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;OVRInputFrame&#32;PollInputs()
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;OVRInputFrame()
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyPos&#32;=&#32;PollVInput(Node.HardwareTracker,&#32;OVRPlugin.Node.TrackerOne,&#32;NodeStatePropertyType.Position),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bodyRot&#32;=&#32;PollVInput(Node.TrackingReference,&#32;OVRPlugin.Node.TrackerOne,&#32;NodeStatePropertyType.Orientation),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00066"/>00066 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;headPos&#32;=&#32;PollVInput(Node.HardwareTracker,&#32;OVRPlugin.Node.Head,&#32;NodeStatePropertyType.Position),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;headRot&#32;=&#32;PollQInput(Node.Head,&#32;OVRPlugin.Node.Head,&#32;NodeStatePropertyType.Orientation),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00069"/>00069 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handPosL&#32;=&#32;PollVInput(Node.LeftHand,&#32;OVRPlugin.Node.HandLeft,&#32;NodeStatePropertyType.Position),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handRotL&#32;=&#32;PollQInput(Node.LeftHand,&#32;OVRPlugin.Node.HandLeft,&#32;NodeStatePropertyType.Orientation),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00072"/>00072 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handPosR&#32;=&#32;PollVInput(Node.RightHand,&#32;OVRPlugin.Node.HandRight,&#32;NodeStatePropertyType.Position),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handRotR&#32;=&#32;PollQInput(Node.RightHand,&#32;OVRPlugin.Node.HandRight,&#32;NodeStatePropertyType.Orientation),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00075"/>00075 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stickR&#32;=&#32;OVRInput.Get(OVRInput.Axis2D.PrimaryThumbstick),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stickL&#32;=&#32;OVRInput.Get(OVRInput.Axis2D.SecondaryThumbstick),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00078"/>00078 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;OVRInput.Get(OVRInput.Button.One),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;OVRInput.Get(OVRInput.Button.Two),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;OVRInput.Get(OVRInput.Button.Three),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;OVRInput.Get(OVRInput.Button.Four),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00083"/>00083 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thumbL&#32;=&#32;OVRInput.Get(OVRInput.Button.SecondaryThumbstick),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thumbR&#32;=&#32;OVRInput.Get(OVRInput.Button.PrimaryThumbstick),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00086"/>00086 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gripL&#32;=&#32;OVRInput.Get(OVRInput.Button.SecondaryHandTrigger),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gripR&#32;=&#32;OVRInput.Get(OVRInput.Button.PrimaryHandTrigger),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00089"/>00089 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;triggerL&#32;=&#32;OVRInput.Get(OVRInput.Button.SecondaryIndexTrigger),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;triggerR&#32;=&#32;OVRInput.Get(OVRInput.Button.PrimaryIndexTrigger),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00092"/>00092 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;triggerLValue&#32;=&#32;OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;triggerRValue&#32;=&#32;OVRInput.Get(OVRInput.Axis1D.PrimaryIndexTrigger),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00095"/>00095 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gripLValue&#32;=&#32;OVRInput.Get(OVRInput.Axis1D.SecondaryHandTrigger),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gripRValue&#32;=&#32;OVRInput.Get(OVRInput.Axis1D.PrimaryHandTrigger),
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00100"/>00100 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;PollVInput(Node&#32;node,&#32;OVRPlugin.Node&#32;ovrNode,&#32;NodeStatePropertyType&#32;type)
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;value;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OVRNodeStateProperties.GetNodeStatePropertyVector3(node,&#32;type,&#32;ovrNode,&#32;OVRPlugin.Step.Render,&#32;out&#32;value);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00107"/>00107 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Quaternion&#32;PollQInput(Node&#32;node,&#32;OVRPlugin.Node&#32;ovrNode,&#32;NodeStatePropertyType&#32;type)
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;value;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OVRNodeStateProperties.GetNodeStatePropertyQuaternion(node,&#32;type,&#32;ovrNode,&#32;OVRPlugin.Step.Render,&#32;out&#32;value);
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00115"/>00115 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnPreSimulate(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;subFrameId)
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;val&#32;=&#32;PollInputs();
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SimpleOVRDebug.Clear();
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SimpleOVRDebug.Log(val.ToString());
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00123"/>00123 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00124"/>00124 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;[CustomEditor(typeof(SimpleOVRInputSync))]
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;[CanEditMultipleObjects]
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>SimpleOVRInputSyncEditor&#32;:&#32;HeaderEditorBase
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00129"/>00129 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00131"/>00131 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00132"/>00132 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00133"/>00133 }
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00134"/>00134 
<anchor xml:id="__simple_o_v_r_input_sync_8cs_source_1l00135"/>00135 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
