<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__simple_oculus_automation_8cs_source" xml:lang="en-US">
<title>SimpleOculusAutomation.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/SyncOculus/SimpleOculusAutomation.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__simple_oculus_automation_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00005"/>00005 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00006"/>00006 <emphasis role="preprocessor">#if&#32;OCULUS</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00007"/>00007 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00008"/>00008 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00011"/>00011 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00012"/>00012 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00013"/>00013 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00014"/>00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple">Simple</link>.Assists;
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00015"/>00015 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00016"/>00016 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00017"/>00017 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00018"/>00018 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00019"/>00019 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00020"/>00020 {
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00021"/>00021 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>SimpleOculusAutomation&#32;:&#32;NetComponent
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00024"/>00024 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;List&lt;Camera&gt;&#32;cameras&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Camera&gt;();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00026"/>00026 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00027"/>00027 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Reset()
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.Reset();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00031"/>00031 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;trackingSpace&#32;=&#32;transform.RecursiveFind(<emphasis role="stringliteral">&quot;TrackingSpace&quot;</emphasis>);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(trackingSpace)
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackingSpace.Add3DHandsRot().transform.Add3DHandsPos();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00035"/>00035 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;test&#32;=&#32;trackingSpace.AddDefaultSyncTransform3DRigidbody();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00037"/>00037 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;leftHandAnchor&#32;=&#32;transform.RecursiveFind(<emphasis role="stringliteral">&quot;LeftHandAnchor&quot;</emphasis>);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(leftHandAnchor)
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftHandAnchor.Add3DHandsRot().transform.Add3DHandsPos();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00041"/>00041 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rightHandAnchor&#32;=&#32;transform.RecursiveFind(<emphasis role="stringliteral">&quot;RightHandAnchor&quot;</emphasis>);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rightHandAnchor)
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rightHandAnchor.Add3DHandsRot().transform.Add3DHandsPos();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00045"/>00045 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00047"/>00047 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00048"/>00048 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonNetwork.AddCallbackTarget(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00053"/>00053 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable()
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhotonNetwork.RemoveCallbackTarget(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00058"/>00058 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00059"/>00059 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnAwake()
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnAwake();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.GetNestedComponentsInChildren(cameras);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00065"/>00065 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnStart()
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnStart();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00069"/>00069 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(Camera&#32;cam&#32;<emphasis role="keywordflow">in</emphasis>&#32;cameras)
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(cam.name&#32;==&#32;&quot;CenterEyeAnchor&quot;)</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cam.enabled&#32;=&#32;false;</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cam.gameObject.SetActive(IsMine);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00078"/>00078 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnAuthorityChanged(<emphasis role="keywordtype">bool</emphasis>&#32;isMine,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;asServer)
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnAuthorityChanged(isMine,&#32;asServer);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00082"/>00082 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(Camera&#32;cam&#32;<emphasis role="keywordflow">in</emphasis>&#32;cameras)
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(cam.name&#32;==&#32;&quot;CenterEyeAnchor&quot;)</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;cam.enabled&#32;=&#32;false;</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cam.gameObject.SetActive(IsMine);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00091"/>00091 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnJoinedRoom()
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnJoinedRoom();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00095"/>00095 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(Camera&#32;cam&#32;<emphasis role="keywordflow">in</emphasis>&#32;cameras)
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(cam.name&#32;==&#32;&quot;CenterEyeAnchor&quot;)</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;cam.enabled&#32;=&#32;false;</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cam.gameObject.SetActive(IsMine);
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00104"/>00104 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00106"/>00106 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00107"/>00107 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;[CustomEditor(typeof(SimpleOculusAutomation))]
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;[CanEditMultipleObjects]
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>SimpleOculusAutomationEditor&#32;:&#32;HeaderEditorBase&#32;<emphasis role="comment">//&#32;</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Instructions
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Automatically&#32;disables&#32;of&#32;camera&#32;objects&#32;based&#32;in&#32;IsMine&#32;==&#32;false.&#32;Provides&#32;Automation&#32;options&#32;for&#32;adding&#32;Sync&#32;components.&quot;</emphasis>;
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00119"/>00119 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnInspectorGUI()
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnInspectorGUI();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00123"/>00123 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(EditorGUILayout.GetControlRect(),&#32;<emphasis role="stringliteral">&quot;Auto&#32;Add&#32;Syncs&quot;</emphasis>))
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OculusAssist.ConvertOculus();
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;}
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00128"/>00128 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00129"/>00129 }
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00130"/>00130 
<anchor xml:id="__simple_oculus_automation_8cs_source_1l00131"/>00131 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
