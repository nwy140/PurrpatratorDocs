<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__single_shot_gun_8cs_source" xml:lang="en-US">
<title>SingleShotGun.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/_Developers/_Shared/_NetcodePhoton/Scripts/~Samples/SimpleFPSOnline/Scripts/SingleShotGun.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__single_shot_gun_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>;
<anchor xml:id="__single_shot_gun_8cs_source_1l00002"/>00002 <emphasis role="keyword">using</emphasis>&#32;System.<link linkend="_namespace_system_1_1_collections">Collections</link>;
<anchor xml:id="__single_shot_gun_8cs_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__single_shot_gun_8cs_source_1l00004"/>00004 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__single_shot_gun_8cs_source_1l00005"/>00005 
<anchor xml:id="__single_shot_gun_8cs_source_1l00006"/>00006 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online">SInt.Netcode.PhotonPUN.Samples.SimpleFPSOnline</link>
<anchor xml:id="__single_shot_gun_8cs_source_1l00007"/>00007 {
<anchor xml:id="__single_shot_gun_8cs_source_1l00008"/><link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_single_shot_gun">00008</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_single_shot_gun">SingleShotGun</link>&#32;:&#32;<link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_gun">Gun</link>
<anchor xml:id="__single_shot_gun_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__single_shot_gun_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;Camera&#32;cam;
<anchor xml:id="__single_shot_gun_8cs_source_1l00011"/>00011 
<anchor xml:id="__single_shot_gun_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>&#32;PV;
<anchor xml:id="__single_shot_gun_8cs_source_1l00013"/>00013 
<anchor xml:id="__single_shot_gun_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__single_shot_gun_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__single_shot_gun_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PV&#32;=&#32;GetComponent&lt;PhotonView&gt;();
<anchor xml:id="__single_shot_gun_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__single_shot_gun_8cs_source_1l00018"/>00018 
<anchor xml:id="__single_shot_gun_8cs_source_1l00019"/><link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_single_shot_gun_1aa131a64c1664fef25ba5ffaab38ecf26">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_single_shot_gun_1aa131a64c1664fef25ba5ffaab38ecf26">Use</link>()
<anchor xml:id="__single_shot_gun_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__single_shot_gun_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Shoot();
<anchor xml:id="__single_shot_gun_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__single_shot_gun_8cs_source_1l00023"/>00023 
<anchor xml:id="__single_shot_gun_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Shoot()
<anchor xml:id="__single_shot_gun_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__single_shot_gun_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ray&#32;ray&#32;=&#32;cam.ViewportPointToRay(<emphasis role="keyword">new</emphasis>&#32;Vector3(0.5f,&#32;0.5f));
<anchor xml:id="__single_shot_gun_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ray.origin&#32;=&#32;cam.transform.position;
<anchor xml:id="__single_shot_gun_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Physics.Raycast(ray,&#32;out&#32;RaycastHit&#32;hit))
<anchor xml:id="__single_shot_gun_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__single_shot_gun_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hit.collider.gameObject.GetComponent&lt;<link linkend="_interface_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_i_damageable">IDamageable</link>&gt;()?.TakeDamage(((<link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_gun_info">GunInfo</link>)<link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_item_1a65c9be74639cb2dcc9daf1d8670816ae">itemInfo</link>).damage);
<anchor xml:id="__single_shot_gun_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PV.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1a92bc79e36a53f2137e4b45e5162bdd7b">RPC</link>(<emphasis role="stringliteral">&quot;RPC_Shoot&quot;</emphasis>,&#32;<link linkend="_group__public_api_1gad59a35d37925dbf12a969adac050714b">RpcTarget</link>.All,&#32;hit.point,&#32;hit.normal);
<anchor xml:id="__single_shot_gun_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__single_shot_gun_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__single_shot_gun_8cs_source_1l00034"/>00034 
<anchor xml:id="__single_shot_gun_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_class_photon_1_1_pun_1_1_pun_r_p_c">PunRPC</link>]
<anchor xml:id="__single_shot_gun_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;RPC_Shoot(Vector3&#32;hitPosition,&#32;Vector3&#32;hitNormal)
<anchor xml:id="__single_shot_gun_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__single_shot_gun_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Collider[]&#32;colliders&#32;=&#32;Physics.OverlapSphere(hitPosition,&#32;0.3f);
<anchor xml:id="__single_shot_gun_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(colliders.Length&#32;!=&#32;0)
<anchor xml:id="__single_shot_gun_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__single_shot_gun_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;bulletImpactObj&#32;=&#32;Instantiate(<link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_gun_1ac0487436a0a347eb714e7fec39836f85">bulletImpactPrefab</link>,&#32;hitPosition&#32;+&#32;hitNormal&#32;*&#32;0.001f,&#32;Quaternion.LookRotation(hitNormal,&#32;Vector3.up)&#32;*&#32;<link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_gun_1ac0487436a0a347eb714e7fec39836f85">bulletImpactPrefab</link>.transform.rotation);
<anchor xml:id="__single_shot_gun_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(bulletImpactObj,&#32;10f);
<anchor xml:id="__single_shot_gun_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bulletImpactObj.transform.SetParent(colliders[0].transform);
<anchor xml:id="__single_shot_gun_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__single_shot_gun_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__single_shot_gun_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;}
<anchor xml:id="__single_shot_gun_8cs_source_1l00047"/>00047 }
</programlisting></section>
