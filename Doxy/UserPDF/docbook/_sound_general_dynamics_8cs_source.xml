<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__sound_general_dynamics_8cs_source" xml:lang="en-US">
<title>SoundGeneralDynamics.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/_Developers/Chan Kwok Chun/Scripts/SoundGeneralDynamics.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__sound_general_dynamics_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00002"/>00002 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00004"/>00004 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.Audio;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00005"/>00005 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00028"/><link linkend="_class_sound_general_dynamics">00028</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_sound_general_dynamics">SoundGeneralDynamics</link>&#32;:&#32;MonoBehaviour
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00029"/>00029 {
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;[SerializeField]&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>[]&#32;soundChains;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;[SerializeField]&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>[]&#32;soundChunks;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;[SerializeField]&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>[]&#32;soundPieces;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;[SerializeField]&#32;<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>[]&#32;soundCasts;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00034"/>00034 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;ears;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00036"/>00036 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00037"/><link linkend="_class_sound_general_dynamics_1ac7ccd66ff48f6ad8ccf6c6053dbba954">00037</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1ac7ccd66ff48f6ad8ccf6c6053dbba954">Initialization</link>()&#32;<emphasis role="comment">//Public&#32;so&#32;outside&#32;sources&#32;can&#32;reach&#32;this&#32;if&#32;needed</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundChains)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a9dadac634b119cf62dc057e63ee3d156">soundChunks</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1aacd3dfad207bc1ec2421d40c68eab47d">soundPieces</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aff11c2a4ff2a8f9070c4442fa2b033d3">soundCastName</link>&#32;!=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;SoundCast&gt;&#32;_CommonCasts&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;SoundCast&gt;();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>&#32;<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundCasts)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast">SoundCast</link>&#32;SoundCasts&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>.<link linkend="_class_sound_cast_dynamics_1a7b026648ad1b53a52d1ca64c212db53a">soundCasts</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SoundCasts.<link linkend="_class_sound_cast_1ab36109038c5e93ebcc1aa5b35cac9cbc">castName</link>&#32;==&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aff11c2a4ff2a8f9070c4442fa2b033d3">soundCastName</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CommonCasts.Add(SoundCasts);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1adba63f9fc079fb3439e99ca680444ed9">soundCastSource</link>&#32;=&#32;_CommonCasts.ToArray();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundChunks)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1aacd3dfad207bc1ec2421d40c68eab47d">soundPieces</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aff11c2a4ff2a8f9070c4442fa2b033d3">soundCastName</link>&#32;!=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;SoundCast&gt;&#32;_CommonCasts&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;SoundCast&gt;();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>&#32;<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundCasts)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast">SoundCast</link>&#32;SoundCasts&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>.<link linkend="_class_sound_cast_dynamics_1a7b026648ad1b53a52d1ca64c212db53a">soundCasts</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SoundCasts.<link linkend="_class_sound_cast_1ab36109038c5e93ebcc1aa5b35cac9cbc">castName</link>&#32;==&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aff11c2a4ff2a8f9070c4442fa2b033d3">soundCastName</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CommonCasts.Add(SoundCasts);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1adba63f9fc079fb3439e99ca680444ed9">soundCastSource</link>&#32;=&#32;_CommonCasts.ToArray();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundPieces)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aff11c2a4ff2a8f9070c4442fa2b033d3">soundCastName</link>&#32;!=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;SoundCast&gt;&#32;_CommonCasts&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;SoundCast&gt;();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>&#32;<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundCasts)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast">SoundCast</link>&#32;SoundCasts&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>.<link linkend="_class_sound_cast_dynamics_1a7b026648ad1b53a52d1ca64c212db53a">soundCasts</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SoundCasts.<link linkend="_class_sound_cast_1ab36109038c5e93ebcc1aa5b35cac9cbc">castName</link>&#32;==&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aff11c2a4ff2a8f9070c4442fa2b033d3">soundCastName</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_CommonCasts.Add(SoundCasts);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1adba63f9fc079fb3439e99ca680444ed9">soundCastSource</link>&#32;=&#32;_CommonCasts.ToArray();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;Sound&#32;Setting&#32;Sound&#32;Casts&#32;to&#32;sound&#32;pieces</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundChains)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a9dadac634b119cf62dc057e63ee3d156">soundChunks</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1aacd3dfad207bc1ec2421d40c68eab47d">soundPieces</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>&#32;=&#32;gameObject.AddComponent&lt;AudioSource&gt;();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.clip&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7553dc88433961b21763329206fbbbc3">Audio</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.volume&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ae567e910e7f840e2b2440eadef10e45c">originalMaxVolume</link>&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a35f84d071cd4ea42ff67f8905b40f3f0">Volume</link>&#32;*&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a6a7fae172f6ebe718e5e1507a3aa2a05">Volume</link>&#32;*&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a28c9f04322eeeb815ff1b6df77466fa5">Volume</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.pitch&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7fbe482b4c8fe36cfb7cf9b566f85539">originalPitch</link>&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chain_1ad0dbebd0e79f6654391e2917cf15794e">Pitch</link>&#32;*&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a6fb02d7bbdf7ded0d97db0b1f8ee1662">Pitch</link>&#32;*&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a490d0cae5eb45bdff326276f91e8b367">Pitch</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.spatialBlend&#32;=&#32;1;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa8922906e9d5ed7a897b10fedfe9f1a0">AudioMixer</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.outputAudioMixerGroup&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa8922906e9d5ed7a897b10fedfe9f1a0">AudioMixer</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aea341746cf48403dbd2171b5bac61687">delayBeforeWait</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ad2421776b7ccdf2b7ae0f9827daa8da8">delayBefore</link>);&#32;<emphasis role="comment">//Create&#32;and&#32;Cache&#32;all&#32;wait&#32;for&#32;second&#32;objects.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1afa034fb67df6326f3613d7260219883c">delayDuringWait</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitWhile(()&#32;=&gt;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.isPlaying);&#32;<emphasis role="comment">//Create&#32;and&#32;Cache&#32;all&#32;wait&#32;for&#32;second&#32;objects.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ab0634fe299b8ddc6ffc4143c6d180cdb">delayAfterWait</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a092323101d274096356e4b1f5fbb868b">delayAfter</link>);&#32;<emphasis role="comment">//Create&#32;and&#32;Cache&#32;all&#32;wait&#32;for&#32;second&#32;objects.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundChunks)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1aacd3dfad207bc1ec2421d40c68eab47d">soundPieces</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>&#32;=&#32;gameObject.AddComponent&lt;AudioSource&gt;();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.clip&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7553dc88433961b21763329206fbbbc3">Audio</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.volume&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ae567e910e7f840e2b2440eadef10e45c">originalMaxVolume</link>&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a6a7fae172f6ebe718e5e1507a3aa2a05">Volume</link>&#32;*&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a28c9f04322eeeb815ff1b6df77466fa5">Volume</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.pitch&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7fbe482b4c8fe36cfb7cf9b566f85539">originalPitch</link>&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a6fb02d7bbdf7ded0d97db0b1f8ee1662">Pitch</link>&#32;*&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a490d0cae5eb45bdff326276f91e8b367">Pitch</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.spatialBlend&#32;=&#32;1;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa8922906e9d5ed7a897b10fedfe9f1a0">AudioMixer</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.outputAudioMixerGroup&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa8922906e9d5ed7a897b10fedfe9f1a0">AudioMixer</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aea341746cf48403dbd2171b5bac61687">delayBeforeWait</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ad2421776b7ccdf2b7ae0f9827daa8da8">delayBefore</link>);&#32;<emphasis role="comment">//Create&#32;and&#32;Cache&#32;all&#32;wait&#32;for&#32;second&#32;objects.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1afa034fb67df6326f3613d7260219883c">delayDuringWait</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitWhile(()&#32;=&gt;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.isPlaying);&#32;<emphasis role="comment">//Create&#32;and&#32;Cache&#32;all&#32;wait&#32;for&#32;second&#32;objects.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ab0634fe299b8ddc6ffc4143c6d180cdb">delayAfterWait</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a092323101d274096356e4b1f5fbb868b">delayAfter</link>);&#32;<emphasis role="comment">//Create&#32;and&#32;Cache&#32;all&#32;wait&#32;for&#32;second&#32;objects.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundPieces)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>&#32;=&#32;gameObject.AddComponent&lt;AudioSource&gt;();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.clip&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7553dc88433961b21763329206fbbbc3">Audio</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.volume&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ae567e910e7f840e2b2440eadef10e45c">originalMaxVolume</link>&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a28c9f04322eeeb815ff1b6df77466fa5">Volume</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.pitch&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7fbe482b4c8fe36cfb7cf9b566f85539">originalPitch</link>&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a490d0cae5eb45bdff326276f91e8b367">Pitch</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.spatialBlend&#32;=&#32;1;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa8922906e9d5ed7a897b10fedfe9f1a0">AudioMixer</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.outputAudioMixerGroup&#32;=&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa8922906e9d5ed7a897b10fedfe9f1a0">AudioMixer</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aea341746cf48403dbd2171b5bac61687">delayBeforeWait</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ad2421776b7ccdf2b7ae0f9827daa8da8">delayBefore</link>);&#32;<emphasis role="comment">//Create&#32;and&#32;Cache&#32;all&#32;wait&#32;for&#32;second&#32;objects.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1afa034fb67df6326f3613d7260219883c">delayDuringWait</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitWhile(()&#32;=&gt;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>.isPlaying);&#32;<emphasis role="comment">//Create&#32;and&#32;Cache&#32;all&#32;wait&#32;for&#32;second&#32;objects.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ab0634fe299b8ddc6ffc4143c6d180cdb">delayAfterWait</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>.<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a092323101d274096356e4b1f5fbb868b">delayAfter</link>);&#32;<emphasis role="comment">//Create&#32;and&#32;Cache&#32;all&#32;wait&#32;for&#32;second&#32;objects.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;Setting&#32;values&#32;to&#32;each&#32;sound&#32;Pieces</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00143"/>00143 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Awake&#32;is&#32;a&#32;preload</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_sound_general_dynamics_1ac7ccd66ff48f6ad8ccf6c6053dbba954">Initialization</link>();
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00149"/>00149 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ears&#32;=&#32;FindObjectOfType&lt;AudioListener&gt;().gameObject;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00154"/>00154 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;is&#32;called&#32;once&#32;per&#32;frame</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ears&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ears&#32;=&#32;FindObjectOfType&lt;AudioListener&gt;().gameObject;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(SoundChain&#32;soundChain&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundChains)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(SoundChunk&#32;soundChunk&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundChain.soundChunks)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(SoundPiece&#32;SoundPiece&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundChunk.soundPieces)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SoundPiece.source&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;SoundPiece.source.isPlaying&#32;&amp;&amp;&#32;SoundPiece.soundCastSource&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_tempVolume&#32;=&#32;0;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_tempPan&#32;=&#32;0;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00172"/>00172 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.originalMaxVolume&#32;=&#32;soundChain.Volume&#32;*&#32;soundChunk.Volume&#32;*&#32;SoundPiece.Volume;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.originalPitch&#32;=&#32;SoundPiece.Pitch;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.volume&#32;=&#32;0f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast">SoundCast</link>&#32;<link linkend="_class_sound_cast">SoundCast</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;SoundPiece.soundCastSource)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;distance&#32;=&#32;Vector3.Distance(ears.transform.position,&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aeae611da0c6ee3918f240810c1a248f7">soundDynamic</link>.gameObject.transform.position);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_tempVolume&#32;=&#32;Mathf.Min(_tempVolume,&#32;distance&#32;/&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aed83336578afac76d57d39ae13f1ddb5">soundRange</link>);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.panStereo&#32;=&#32;(<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aeae611da0c6ee3918f240810c1a248f7">soundDynamic</link>.gameObject.transform.position.x&#32;-&#32;ears.transform.position.x)&#32;/&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aed83336578afac76d57d39ae13f1ddb5">soundRange</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SoundPiece.source.pitch&#32;=&#32;(1f&#32;-&#32;(distance&#32;/&#32;SC.soundRange))&#32;*&#32;SoundPiece.originalPitch;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.volume&#32;=&#32;(1f&#32;-&#32;_tempVolume)&#32;*&#32;SoundPiece.originalMaxVolume;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.panStereo&#32;=&#32;_tempPan;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(SoundChunk&#32;soundChunk&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundChunks)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(SoundPiece&#32;SoundPiece&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundChunk.soundPieces)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SoundPiece.source&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;SoundPiece.source.isPlaying&#32;&amp;&amp;&#32;SoundPiece.soundCastSource&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_tempVolume&#32;=&#32;0;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_tempPan&#32;=&#32;0;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00197"/>00197 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.originalMaxVolume&#32;=&#32;soundChunk.Volume&#32;*&#32;SoundPiece.Volume;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.originalPitch&#32;=&#32;SoundPiece.Pitch;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.volume&#32;=&#32;0f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast">SoundCast</link>&#32;<link linkend="_class_sound_cast">SoundCast</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;SoundPiece.soundCastSource)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;distance&#32;=&#32;Vector3.Distance(ears.transform.position,&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aeae611da0c6ee3918f240810c1a248f7">soundDynamic</link>.gameObject.transform.position);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_tempVolume&#32;=&#32;Mathf.Min(_tempVolume,&#32;distance&#32;/&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aed83336578afac76d57d39ae13f1ddb5">soundRange</link>);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.panStereo&#32;=&#32;(<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aeae611da0c6ee3918f240810c1a248f7">soundDynamic</link>.gameObject.transform.position.x&#32;-&#32;ears.transform.position.x)&#32;/&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aed83336578afac76d57d39ae13f1ddb5">soundRange</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SoundPiece.source.pitch&#32;=&#32;(1f&#32;-&#32;(distance&#32;/&#32;SC.soundRange))&#32;*&#32;SoundPiece.originalPitch;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.volume&#32;=&#32;(1f&#32;-&#32;_tempVolume)&#32;*&#32;SoundPiece.originalMaxVolume;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.panStereo&#32;=&#32;_tempPan;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(SoundPiece&#32;SoundPiece&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundPieces)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(SoundPiece.source&#32;!=&#32;null&#32;&amp;&amp;&#32;SoundPiece.source.isPlaying&#32;&amp;&amp;&#32;SoundPiece.soundCastSource&#32;!=&#32;null)</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;float&#32;_tempVolume&#32;=&#32;0;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;float&#32;_tempPan&#32;=&#32;0;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;float&#32;ImaginaryXPos&#32;=&#32;0;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;float&#32;ImaginaryYPos&#32;=&#32;0;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;float&#32;ImaginaryZPos&#32;=&#32;0;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;releventPosNum&#32;=&#32;0;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00224"/>00224 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;SoundPiece.originalMaxVolume&#32;=&#32;SoundPiece.Volume;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;SoundPiece.originalPitch&#32;=&#32;SoundPiece.Pitch;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;SoundPiece.source.volume&#32;=&#32;0f;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;foreach&#32;(SoundCast&#32;SoundCast&#32;in&#32;SoundPiece.soundCastSource)</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float&#32;distance&#32;=&#32;Vector3.Distance(ears.transform.position,&#32;SoundCast.soundDynamic.gameObject.transform.position);</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(distance&#32;&lt;&#32;SoundCast.soundRange)</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float&#32;staticVolume&#32;=&#32;SoundCast.soundRange&#32;/&#32;distance;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float&#32;SpeculativeXPos&#32;=&#32;ears.transform.position.x&#32;/&#32;staticVolume;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float&#32;SpeculativeYPos&#32;=&#32;ears.transform.position.y&#32;/&#32;staticVolume;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float&#32;SpeculativeZPos&#32;=&#32;ears.transform.position.z&#32;/&#32;staticVolume;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImaginaryXPos&#32;+=&#32;SpeculativeXPos;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImaginaryYPos&#32;+=&#32;SpeculativeYPos;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImaginaryZPos&#32;+=&#32;SpeculativeZPos;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;releventPosNum++;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_tempVolume&#32;=&#32;Mathf.Min(_tempVolume,&#32;distance&#32;/&#32;SoundCast.soundRange);</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.panStereo&#32;=&#32;(SoundCast.soundDynamic.gameObject.transform.position.x&#32;-&#32;ears.transform.position.x)&#32;/&#32;SoundCast.soundRange;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.pitch&#32;=&#32;(1f&#32;-&#32;(distance&#32;/&#32;SC.soundRange))&#32;*&#32;SoundPiece.originalPitch;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00246"/>00246 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;SoundPiece.source.volume&#32;=&#32;(1f&#32;-&#32;_tempVolume)&#32;*&#32;SoundPiece.originalMaxVolume;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00248"/>00248 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Vector3&#32;soundPoint&#32;=&#32;new&#32;Vector3(ImaginaryXPos&#32;/&#32;releventPosNum,&#32;ImaginaryYPos&#32;/&#32;releventPosNum,&#32;ImaginaryZPos&#32;/&#32;releventPosNum);</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00250"/>00250 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Vector3&#32;head&#32;=&#32;ears.transform.eulerAngles;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Vector3&#32;soundDirection&#32;=&#32;(soundPoint&#32;-&#32;ears.transform.position).normalized;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00253"/>00253 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00254"/>00254 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;SoundPiece.source.panStereo&#32;=&#32;_tempPan;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Quaternion.FromToRotation</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SoundPiece.source&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;SoundPiece.source.isPlaying&#32;&amp;&amp;&#32;SoundPiece.soundCastSource&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_tempVolume&#32;=&#32;0;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_tempPan&#32;=&#32;0;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00263"/>00263 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.originalMaxVolume&#32;=&#32;SoundPiece.Volume;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.originalPitch&#32;=&#32;SoundPiece.Pitch;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.volume&#32;=&#32;0f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast">SoundCast</link>&#32;<link linkend="_class_sound_cast">SoundCast</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;SoundPiece.soundCastSource)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;distance&#32;=&#32;Vector3.Distance(ears.transform.position,&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aeae611da0c6ee3918f240810c1a248f7">soundDynamic</link>.gameObject.transform.position);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_tempVolume&#32;=&#32;Mathf.Min(_tempVolume,&#32;distance&#32;/&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aed83336578afac76d57d39ae13f1ddb5">soundRange</link>);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.panStereo&#32;=&#32;(<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aeae611da0c6ee3918f240810c1a248f7">soundDynamic</link>.gameObject.transform.position.x&#32;-&#32;ears.transform.position.x)&#32;/&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aed83336578afac76d57d39ae13f1ddb5">soundRange</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SoundPiece.source.pitch&#32;=&#32;(1f&#32;-&#32;(distance&#32;/&#32;SC.soundRange))&#32;*&#32;SoundPiece.originalPitch;</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.volume&#32;=&#32;(1f&#32;-&#32;_tempVolume)&#32;*&#32;SoundPiece.originalMaxVolume;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SoundPiece.source.panStereo&#32;=&#32;_tempPan;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00279"/>00279 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDrawGizmosSelected()
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>&#32;<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;soundCasts)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<link linkend="_class_sound_cast">SoundCast</link>&#32;<link linkend="_class_sound_cast">SoundCast</link>&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>.<link linkend="_class_sound_cast_dynamics_1a7b026648ad1b53a52d1ca64c212db53a">soundCasts</link>)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gizmos.DrawWireSphere(<link linkend="_class_sound_cast_dynamics">SoundCastDynamics</link>.gameObject.transform.position,&#32;<link linkend="_class_sound_cast">SoundCast</link>.<link linkend="_class_sound_cast_1aed83336578afac76d57d39ae13f1ddb5">soundRange</link>);
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00290"/>00290 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------------------------------------------------------&#32;!!!Code&#32;Divider&#32;to&#32;Keep&#32;it&#32;clean</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00293"/><link linkend="_class_sound_general_dynamics_1ad9b604e8094f8b070b7f2acb0541b75f">00293</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1ad9b604e8094f8b070b7f2acb0541b75f">PlayChain</link>(<emphasis role="keywordtype">int</emphasis>&#32;soundChainID)&#32;<emphasis role="comment">//Chain&#32;plays&#32;chunks&#32;of&#32;sound&#32;until&#32;there&#32;is&#32;no&#32;more&#32;in&#32;that&#32;chain,&#32;set&#32;the&#32;delay&#32;to&#32;0&#32;on&#32;the&#32;sound&#32;chunk&#32;to&#32;make&#32;them&#32;play&#32;together</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(playSoundChain(soundChainID));
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00298"/><link linkend="_class_sound_general_dynamics_1afd6f4d0b797e2e02d4863643580aea40">00298</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1afd6f4d0b797e2e02d4863643580aea40">PlayChunk</link>(<emphasis role="keywordtype">int</emphasis>&#32;soundChunkID)&#32;<emphasis role="comment">//Chunk&#32;randomizes&#32;1&#32;sound&#32;from&#32;the&#32;list&#32;to&#32;create&#32;uniqueness</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(playSoundChunk(soundChunkID));
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00303"/><link linkend="_class_sound_general_dynamics_1a11fc8c58fd4cde4e6e71dab7088c5b94">00303</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1a11fc8c58fd4cde4e6e71dab7088c5b94">PlayPiece</link>(<emphasis role="keywordtype">int</emphasis>&#32;soundPieceID)&#32;<emphasis role="comment">//Piece&#32;plays&#32;a&#32;sound&#32;based&#32;on&#32;volume&#32;and&#32;pitch</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//soundPieces[soundPieceID].source.PlayDelayed(soundPieces[soundPieceID].delayBefore);</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(playSoundPiece(soundPieceID));
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00308"/>00308 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------------------------------------------------------&#32;!!!Code&#32;Divider&#32;to&#32;Keep&#32;it&#32;clean</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00311"/><link linkend="_class_sound_general_dynamics_1a58b999af5ec73e21dff6bce5c2ed39c8">00311</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1a58b999af5ec73e21dff6bce5c2ed39c8">PlayChain</link>(<emphasis role="keywordtype">string</emphasis>&#32;soundChainName)&#32;<emphasis role="comment">//Chain&#32;plays&#32;chunks&#32;of&#32;sound&#32;until&#32;there&#32;is&#32;no&#32;more&#32;in&#32;that&#32;chain,&#32;set&#32;the&#32;delay&#32;to&#32;0&#32;on&#32;the&#32;sound&#32;chunk&#32;to&#32;make&#32;them&#32;play&#32;together,&#32;overload&#32;for&#32;name&#32;instead&#32;of&#32;id</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//System.Array.Find(soundChains,&#32;soundChains&#32;=&gt;&#32;soundChains.chainName&#32;==&#32;soundChainName);&#32;!!!Note&#32;Possible&#32;usable&#32;system&#32;method,&#32;very&#32;useful</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;System.Array.IndexOf(soundChains,&#32;System.Array.Find(soundChains,&#32;soundChains&#32;=&gt;&#32;soundChains.chainName&#32;==&#32;soundChainName));
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(playSoundChain(i));&#32;<emphasis role="comment">//Using&#32;system&#32;to&#32;search&#32;for&#32;the&#32;instance&#32;value&#32;of&#32;array&#32;with&#32;the&#32;desired&#32;name,&#32;and&#32;pick&#32;it&apos;s&#32;instance&#32;index&#32;for&#32;array&#32;call&#32;usage</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00318"/><link linkend="_class_sound_general_dynamics_1a5afcc722d9b2f79884bd86416492f14b">00318</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1a5afcc722d9b2f79884bd86416492f14b">PlayChunk</link>(<emphasis role="keywordtype">string</emphasis>&#32;soundChunkName)&#32;<emphasis role="comment">//Chunk&#32;randomizes&#32;1&#32;sound&#32;from&#32;the&#32;list&#32;to&#32;create&#32;uniqueness,&#32;overload&#32;for&#32;name&#32;instead&#32;of&#32;id</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;System.Array.IndexOf(soundChunks,&#32;System.Array.Find(soundChunks,&#32;soundChunks&#32;=&gt;&#32;soundChunks.chunkName&#32;==&#32;soundChunkName));
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(playSoundChunk(i));&#32;<emphasis role="comment">//Using&#32;system&#32;to&#32;search&#32;for&#32;the&#32;instance&#32;value&#32;of&#32;array&#32;with&#32;the&#32;desired&#32;name,&#32;and&#32;pick&#32;it&apos;s&#32;instance&#32;index&#32;for&#32;array&#32;call&#32;usage</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00324"/><link linkend="_class_sound_general_dynamics_1aebb53133f4fbe079046817c9b4ac0397">00324</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1aebb53133f4fbe079046817c9b4ac0397">PlayPiece</link>(<emphasis role="keywordtype">string</emphasis>&#32;soundPieceName)&#32;<emphasis role="comment">//Piece&#32;plays&#32;a&#32;sound&#32;based&#32;on&#32;volume&#32;and&#32;pitch,&#32;overload&#32;for&#32;name&#32;instead&#32;of&#32;id</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;System.Array.IndexOf(soundPieces,&#32;System.Array.Find(soundPieces,&#32;soundPieces&#32;=&gt;&#32;soundPieces.pieceName&#32;==&#32;soundPieceName));
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(playSoundPiece(i));&#32;<emphasis role="comment">//Using&#32;system&#32;to&#32;search&#32;for&#32;the&#32;instance&#32;value&#32;of&#32;array&#32;with&#32;the&#32;desired&#32;name,&#32;and&#32;pick&#32;it&apos;s&#32;instance&#32;index&#32;for&#32;array&#32;call&#32;usage</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00329"/>00329 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00330"/>00330 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------------------------------------------------------&#32;!!!Code&#32;Divider&#32;to&#32;Keep&#32;it&#32;clean</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00332"/>00332 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;IEnumerator&#32;playSoundChain(<emphasis role="keywordtype">int</emphasis>&#32;soundChainID)&#32;<emphasis role="comment">//An&#32;IEnumerator&#32;to&#32;play&#32;the&#32;specific&#32;sound(Chain,&#32;Chunk&#32;or&#32;Piece)&#32;by&#32;ID</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tempLooper&#32;=&#32;soundChains[soundChainID].loopNum;&#32;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(tempLooper--&#32;!=&#32;0)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;soundChains[soundChainID].soundChunks.Length;&#32;i++)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_tempLooper&#32;=&#32;soundChains[soundChainID].soundChunks[i].loopNum;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(_tempLooper--&#32;!=&#32;0)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rand&#32;=&#32;<link linkend="__linear_motion_8cs_1a832e8f52fca5a678819ec96269dcb532">Random</link>.Range(0,&#32;soundChains[soundChainID].soundChunks[i].soundPieces.Length);&#32;<emphasis role="comment">//Produce&#32;the&#32;random&#32;instance&#32;of&#32;the&#32;choosen&#32;chunk&#32;in&#32;the&#32;chain,&#32;picked&#32;and&#32;used&#32;to&#32;check&#32;for&#32;the&#32;following&#32;array.</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;__tempLooper&#32;=&#32;soundChains[soundChainID].soundChunks[i].soundPieces[rand].loopNum;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(__tempLooper--&#32;!=&#32;0)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;soundChains[soundChainID].soundChunks[i].soundPieces[rand].delayBeforeWait;&#32;<emphasis role="comment">//Delay&#32;the&#32;sound&#32;until&#32;as&#32;stated&#32;duration&#32;later,&#32;used&#32;for&#32;timing</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;soundChains[soundChainID].soundChunks[i].soundPieces[rand].source.Play();&#32;<emphasis role="comment">//Play&#32;the&#32;attributed&#32;sound&#32;source</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(soundChains[soundChainID].soundChunks[i].soundPieces[rand].waitForSoundFinish)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;soundChains[soundChainID].soundChunks[i].soundPieces[rand].delayDuringWait;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;soundChains[soundChainID].soundChunks[i].soundPieces[rand].delayAfterWait;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//audioSource.PlayOneShot(soundChains[soundChainID].soundChunks[i].soundPieces[rand].Audio,&#32;soundChains[soundChainID].Volume&#32;*&#32;soundChains[soundChainID].soundChunks[i].Volume&#32;*&#32;soundChains[soundChainID].soundChunks[i].soundPieces[rand].Volume&#32;*&#32;Volume);&#32;//Play&#32;the&#32;sound&#32;stated&#32;following&#32;the&#32;Volume&#32;multipliers</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00358"/>00358 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;IEnumerator&#32;playSoundChunk(<emphasis role="keywordtype">int</emphasis>&#32;soundChunkID)&#32;<emphasis role="comment">//An&#32;IEnumerator&#32;to&#32;play&#32;the&#32;specific&#32;sound(Chain,&#32;Chunk&#32;or&#32;Piece)&#32;by&#32;ID</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tempLooper&#32;=&#32;soundChunks[soundChunkID].loopNum;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(tempLooper--&#32;!=&#32;0)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rand&#32;=&#32;<link linkend="__linear_motion_8cs_1a832e8f52fca5a678819ec96269dcb532">Random</link>.Range(0,&#32;soundChunks[soundChunkID].soundPieces.Length);&#32;<emphasis role="comment">//Produce&#32;the&#32;random&#32;instance&#32;of&#32;the&#32;choosen&#32;sound&#32;in&#32;the&#32;chunk,&#32;picked&#32;and&#32;used&#32;to&#32;check&#32;for&#32;the&#32;following&#32;arrays</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_tempLooper&#32;=&#32;soundChunks[soundChunkID].soundPieces[rand].loopNum;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(_tempLooper--&#32;!=&#32;0)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;soundChunks[soundChunkID].soundPieces[rand].delayBeforeWait;&#32;<emphasis role="comment">//Delay&#32;the&#32;sound&#32;until&#32;as&#32;stated&#32;duration&#32;later,&#32;used&#32;for&#32;timing</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;soundChunks[soundChunkID].soundPieces[rand].source.Play();&#32;<emphasis role="comment">//Play&#32;the&#32;attributed&#32;sound&#32;source</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(soundChunks[soundChunkID].soundPieces[rand].waitForSoundFinish)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;soundChunks[soundChunkID].soundPieces[rand].delayDuringWait;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;soundChunks[soundChunkID].soundPieces[rand].delayAfterWait;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00374"/>00374 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//audioSource.PlayOneShot(soundChunks[soundChunkID].soundPieces[rand].Audio,&#32;soundChunks[soundChunkID].Volume&#32;*&#32;soundChunks[soundChunkID].soundPieces[rand].Volume&#32;*&#32;Volume);&#32;//Play&#32;the&#32;sound&#32;stated&#32;following&#32;the&#32;Volume&#32;multipliers</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00376"/>00376 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00379"/>00379 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;IEnumerator&#32;playSoundPiece(<emphasis role="keywordtype">int</emphasis>&#32;soundPieceID)&#32;<emphasis role="comment">//An&#32;IEnumerator&#32;to&#32;play&#32;the&#32;specific&#32;sound(Chain,&#32;Chunk&#32;or&#32;Piece)&#32;by&#32;ID</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tempLooper&#32;=&#32;soundPieces[soundPieceID].loopNum;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(tempLooper--&#32;!=&#32;0)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;soundPieces[soundPieceID].delayBeforeWait;&#32;<emphasis role="comment">//Delay&#32;the&#32;sound&#32;until&#32;as&#32;stated&#32;duration&#32;later,&#32;used&#32;for&#32;timing</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;soundPieces[soundPieceID].source.Play();&#32;<emphasis role="comment">//Play&#32;the&#32;attributed&#32;sound&#32;source</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(soundPieces[soundPieceID].source.clip.length);</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(soundPieces[soundPieceID].waitForSoundFinish)
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;soundPieces[soundPieceID].delayDuringWait;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;soundPieces[soundPieceID].delayAfterWait;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00391"/>00391 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//audioSource.PlayOneShot(soundPieces[soundPieceID].Audio,&#32;soundPieces[soundPieceID].Volume&#32;*&#32;Volume);&#32;//Play&#32;the&#32;sound&#32;stated&#32;following&#32;the&#32;Volume&#32;multipliers</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00393"/>00393 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00396"/>00396 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;<emphasis role="comment">//-----------------------------------------------------------------------------------------------------------&#32;!!!Code&#32;Divider&#32;to&#32;Keep&#32;it&#32;clean</emphasis>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00398"/>00398 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;[System.Serializable]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00400"/><link linkend="_class_sound_general_dynamics_1_1_sound_chain">00400</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_sound_general_dynamics_1_1_sound_chain">SoundChain</link>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00402"/><link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a4a93e5f504d57ef606d9aad98eb27993">00402</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a4a93e5f504d57ef606d9aad98eb27993">chainName</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00403"/><link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a9dadac634b119cf62dc057e63ee3d156">00403</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>[]&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a9dadac634b119cf62dc057e63ee3d156">soundChunks</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00404"/>00404 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Sound&#32;Settings&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;sets&#32;the&#32;number&#32;of&#32;looping&#32;before&#32;stopping,&#32;put&#32;the&#32;value&#32;below&#32;0&#32;for&#32;infinity.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00407"/><link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a1c87a677a9723c2df9a58727eb4debc1">00407</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a1c87a677a9723c2df9a58727eb4debc1">loopNum</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;sets&#32;the&#32;volume,&#32;multiplicative&#32;of&#32;each&#32;of&#32;the&#32;volumes&#32;within&#32;the&#32;structures.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00409"/><link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a35f84d071cd4ea42ff67f8905b40f3f0">00409</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Min(0f)]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain_1a35f84d071cd4ea42ff67f8905b40f3f0">Volume</link>&#32;=&#32;1f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;sets&#32;the&#32;pitch,&#32;multiplicative&#32;of&#32;each&#32;of&#32;the&#32;pitches&#32;within&#32;the&#32;structures.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00411"/><link linkend="_class_sound_general_dynamics_1_1_sound_chain_1ad0dbebd0e79f6654391e2917cf15794e">00411</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Min(0.1f)]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chain_1ad0dbebd0e79f6654391e2917cf15794e">Pitch</link>&#32;=&#32;1f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00413"/>00413 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00414"/>00414 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;[System.Serializable]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00416"/><link linkend="_class_sound_general_dynamics_1_1_sound_chunk">00416</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_sound_general_dynamics_1_1_sound_chunk">SoundChunk</link>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00418"/><link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a9b047e5aa8c40f6451b6a33028eff624">00418</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a9b047e5aa8c40f6451b6a33028eff624">chunkName</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00419"/><link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1aacd3dfad207bc1ec2421d40c68eab47d">00419</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>[]&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1aacd3dfad207bc1ec2421d40c68eab47d">soundPieces</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00420"/>00420 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Sound&#32;Settings&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;sets&#32;the&#32;number&#32;of&#32;looping&#32;before&#32;stopping,&#32;put&#32;the&#32;value&#32;below&#32;0&#32;for&#32;infinity.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00423"/><link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a109cbd8be41cac0a666c3cad5c634424">00423</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a109cbd8be41cac0a666c3cad5c634424">loopNum</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;sets&#32;the&#32;volume,&#32;multiplicative&#32;of&#32;each&#32;of&#32;the&#32;volumes&#32;within&#32;the&#32;structures.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00425"/><link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a6a7fae172f6ebe718e5e1507a3aa2a05">00425</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Min(0f)]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a6a7fae172f6ebe718e5e1507a3aa2a05">Volume</link>&#32;=&#32;1f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;sets&#32;the&#32;pitch,&#32;multiplicative&#32;of&#32;each&#32;of&#32;the&#32;pitches&#32;within&#32;the&#32;structures.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00427"/><link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a6fb02d7bbdf7ded0d97db0b1f8ee1662">00427</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Min(0.1f)]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_chunk_1a6fb02d7bbdf7ded0d97db0b1f8ee1662">Pitch</link>&#32;=&#32;1f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00429"/>00429 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00430"/>00430 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;[System.Serializable]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00432"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece">00432</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_sound_general_dynamics_1_1_sound_piece">SoundPiece</link>
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00434"/>00434 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00435"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7dc0aaf5494b1b3ec6f10d8150039a0d">00435</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7dc0aaf5494b1b3ec6f10d8150039a0d">pieceName</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00436"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7553dc88433961b21763329206fbbbc3">00436</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;AudioClip&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7553dc88433961b21763329206fbbbc3">Audio</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00437"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa8922906e9d5ed7a897b10fedfe9f1a0">00437</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;AudioMixerGroup&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa8922906e9d5ed7a897b10fedfe9f1a0">AudioMixer</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00438"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aff11c2a4ff2a8f9070c4442fa2b033d3">00438</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aff11c2a4ff2a8f9070c4442fa2b033d3">soundCastName</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00439"/>00439 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Sound&#32;Settings&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;sets&#32;the&#32;number&#32;of&#32;looping&#32;before&#32;stopping,&#32;put&#32;the&#32;value&#32;below&#32;0&#32;for&#32;infinity.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00442"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa45cd58847d146871934bf8d3417d00e">00442</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aa45cd58847d146871934bf8d3417d00e">loopNum</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Delay&#32;before&#32;will&#32;cause&#32;the&#32;sound&#32;to&#32;wait&#32;the&#32;set&#32;moment&#32;before&#32;being&#32;played,&#32;useful&#32;for&#32;timing&#32;chains&#32;of&#32;sound&#32;as&#32;well&#32;as&#32;making&#32;cooldown&#32;time.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00444"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ad2421776b7ccdf2b7ae0f9827daa8da8">00444</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Min(0f)]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ad2421776b7ccdf2b7ae0f9827daa8da8">delayBefore</link>&#32;=&#32;0f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Causes&#32;the&#32;sound&#32;to&#32;finish&#32;playing&#32;before&#32;the&#32;next&#32;one&#32;can&#32;start,&#32;use&#32;this&#32;to&#32;make&#32;sure&#32;your&#32;loops&#32;don&apos;t&#32;play&#32;all&#32;at&#32;once,&#32;as&#32;well&#32;as&#32;delaying&#32;chains&#32;of&#32;sounds&#32;for&#32;timing.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00446"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a73f1ce8c088d63ea980f3c55587aeff1">00446</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a73f1ce8c088d63ea980f3c55587aeff1">waitForSoundFinish</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Delay&#32;after&#32;will&#32;cause&#32;the&#32;sound&#32;to&#32;wait&#32;the&#32;set&#32;moment&#32;after&#32;being&#32;played,&#32;useful&#32;for&#32;timing&#32;chains&#32;of&#32;sound&#32;as&#32;well&#32;as&#32;making&#32;cooldown&#32;time.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00448"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a092323101d274096356e4b1f5fbb868b">00448</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Min(0f)]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a092323101d274096356e4b1f5fbb868b">delayAfter</link>&#32;=&#32;0f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;sets&#32;the&#32;volume,&#32;multiplicative&#32;of&#32;each&#32;of&#32;the&#32;volumes&#32;within&#32;the&#32;structures.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00450"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a28c9f04322eeeb815ff1b6df77466fa5">00450</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Min(0f)]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a28c9f04322eeeb815ff1b6df77466fa5">Volume</link>&#32;=&#32;1f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;sets&#32;the&#32;pitch,&#32;multiplicative&#32;of&#32;each&#32;of&#32;the&#32;pitches&#32;within&#32;the&#32;structures.&quot;</emphasis>)]
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00452"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a490d0cae5eb45bdff326276f91e8b367">00452</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Min(0.1f)]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a490d0cae5eb45bdff326276f91e8b367">Pitch</link>&#32;=&#32;1f;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00453"/>00453 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00454"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ae567e910e7f840e2b2440eadef10e45c">00454</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ae567e910e7f840e2b2440eadef10e45c">originalMaxVolume</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00455"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7fbe482b4c8fe36cfb7cf9b566f85539">00455</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a7fbe482b4c8fe36cfb7cf9b566f85539">originalPitch</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00456"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">00456</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;AudioSource&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1a003a746bad40a7761f89abec435ec693">source</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00457"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1adba63f9fc079fb3439e99ca680444ed9">00457</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_sound_cast">SoundCast</link>[]&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1adba63f9fc079fb3439e99ca680444ed9">soundCastSource</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00458"/>00458 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00459"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aea341746cf48403dbd2171b5bac61687">00459</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;WaitForSeconds&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1aea341746cf48403dbd2171b5bac61687">delayBeforeWait</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00460"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1afa034fb67df6326f3613d7260219883c">00460</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;WaitWhile&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1afa034fb67df6326f3613d7260219883c">delayDuringWait</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00461"/><link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ab0634fe299b8ddc6ffc4143c6d180cdb">00461</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;WaitForSeconds&#32;<link linkend="_class_sound_general_dynamics_1_1_sound_piece_1ab0634fe299b8ddc6ffc4143c6d180cdb">delayAfterWait</link>;
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00463"/>00463 
<anchor xml:id="__sound_general_dynamics_8cs_source_1l00464"/>00464 }
</programlisting></section>
