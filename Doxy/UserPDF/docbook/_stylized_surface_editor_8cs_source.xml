<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__stylized_surface_editor_8cs_source" xml:lang="en-US">
<title>StylizedSurfaceEditor.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/FlatKit/Shaders/Editor/StylizedSurfaceEditor.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__stylized_surface_editor_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00002"/>00002 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;System.IO;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00004"/>00004 <emphasis role="keyword">using</emphasis>&#32;System.Text.RegularExpressions;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00005"/>00005 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_flat_kit">FlatKit</link>.<link linkend="_namespace_flat_kit_1_1_stylized_surface">StylizedSurface</link>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;UnityEngine.Rendering;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00009"/>00009 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00010"/><link linkend="__stylized_surface_editor_8cs_1a24dfdcf13ae4e2b7985a3868a1b5169f">00010</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="__stylized_surface_editor_8cs_1a24dfdcf13ae4e2b7985a3868a1b5169f">SurfaceType</link>&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1a24dfdcf13ae4e2b7985a3868a1b5169fafaa90538de35640e4b1e31ccf35b6eb5">Opaque</link>,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1a24dfdcf13ae4e2b7985a3868a1b5169fa3d971943089a3388c01fb297a32d9ba7">Transparent</link>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00013"/>00013 }
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00014"/>00014 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00015"/><link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">00015</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">BlendMode</link>&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85a6132295fcf5570fb8b0a944ef322a598">Alpha</link>,&#32;<emphasis role="comment">//&#32;Old&#32;school&#32;alpha-blending&#32;mode,&#32;fresnel&#32;does&#32;not&#32;affect&#32;amount&#32;of&#32;transparency</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85aa50753605fc5e7d59b79eb5fbf6bc301">Premultiply</link>,&#32;<emphasis role="comment">//&#32;Physically&#32;plausible&#32;transparency&#32;mode,&#32;implemented&#32;as&#32;alpha&#32;pre-multiply</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85a3f7b3d8ee7bf0d542bd50821c083888f">Additive</link>,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85ae257376d913f3b53cbb4a9b19d770648">Multiply</link>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00020"/>00020 }
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00021"/>00021 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00022"/><link linkend="__stylized_surface_editor_8cs_1abaf89b458d4f49369c6d66162532f9c5">00022</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="__stylized_surface_editor_8cs_1abaf89b458d4f49369c6d66162532f9c5">RenderFace</link>&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1abaf89b458d4f49369c6d66162532f9c5a5835bab1ade0060909e31a06af2e2cde">Front</link>&#32;=&#32;2,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1abaf89b458d4f49369c6d66162532f9c5a0557fa923dcee4d0f86b1409f5c2167f">Back</link>&#32;=&#32;1,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1abaf89b458d4f49369c6d66162532f9c5a130c5b3473c57faa76e2a1c54e26f88e">Both</link>&#32;=&#32;0
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00026"/>00026 }
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00027"/>00027 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00028"/><link linkend="_class_stylized_surface_editor">00028</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_stylized_surface_editor">StylizedSurfaceEditor</link>&#32;:&#32;BaseShaderGUI&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;_target;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;MaterialProperty[]&#32;_properties;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_celShadingNumSteps&#32;=&#32;0;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;AnimationCurve&#32;_gradient&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve(<emphasis role="keyword">new</emphasis>&#32;Keyframe(0,&#32;0),&#32;<emphasis role="keyword">new</emphasis>&#32;Keyframe(1,&#32;1));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00033"/>00033 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;MaterialProperty&#32;QueueOffsetProp&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00035"/>00035 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;Dictionary&lt;string,&#32;bool&gt;&#32;FoldoutStates&#32;=
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;bool&gt;&#32;{{<emphasis role="stringliteral">&quot;Rendering&#32;options&quot;</emphasis>,&#32;<emphasis role="keyword">false</emphasis>}};
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00038"/>00038 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;Color&#32;HashColor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(0.85023f,&#32;0.85034f,&#32;0.85045f,&#32;0.85056f);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;ColorPropertyName&#32;=&#32;Shader.PropertyToID(<emphasis role="stringliteral">&quot;_BaseColor&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00041"/>00041 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawStandard(MaterialProperty&#32;property)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;displayName&#32;=&#32;<emphasis role="keyword">property</emphasis>.displayName;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Remove&#32;everything&#32;in&#32;square&#32;brackets.</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displayName&#32;=&#32;Regex.Replace(displayName,&#32;<emphasis role="stringliteral">@&quot;&#32;?\[.*?\]&quot;</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>.Empty);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_flat_kit_1_1_stylized_surface_1_1_tooltips">Tooltips</link>.<link linkend="_class_flat_kit_1_1_stylized_surface_1_1_tooltips_1ad54a161ed873ed50b0fad5a216daaac3">map</link>.TryGetValue(displayName,&#32;out&#32;<emphasis role="keywordtype">string</emphasis>&#32;tooltip);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;guiContent&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(displayName,&#32;tooltip);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(property.type&#32;==&#32;MaterialProperty.PropType.Texture)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!property.name.Contains(<emphasis role="stringliteral">&quot;_BaseMap&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space(15);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00052"/>00052 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;materialEditor.TexturePropertySingleLine(guiContent,&#32;property);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;materialEditor.ShaderProperty(property,&#32;guiContent);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00058"/>00058 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;MaterialProperty&#32;FindProperty(<emphasis role="keywordtype">string</emphasis>&#32;name)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;FindProperty(name,&#32;_properties);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00062"/>00062 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;HasProperty(<emphasis role="keywordtype">string</emphasis>&#32;name)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;_target.HasProperty(name);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00066"/>00066 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00067"/>00067 <emphasis role="preprocessor">#if&#32;UNITY_2021_2_OR_NEWER</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;[Obsolete(<emphasis role="stringliteral">&quot;MaterialChanged&#32;has&#32;been&#32;renamed&#32;ValidateMaterial&quot;</emphasis>,&#32;<emphasis role="keyword">false</emphasis>)]
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00069"/>00069 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00070"/><link linkend="_class_stylized_surface_editor_1ab64be4dde47a014f79de8e0a4573e778">00070</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_stylized_surface_editor_1ab64be4dde47a014f79de8e0a4573e778">MaterialChanged</link>(Material&#32;material)&#32;{&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00071"/>00071 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00072"/><link linkend="_class_stylized_surface_editor_1ad7e3e876fa588069693838767be87dbf">00072</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_stylized_surface_editor_1ad7e3e876fa588069693838767be87dbf">OnGUI</link>(MaterialEditor&#32;materialEditor,&#32;MaterialProperty[]&#32;properties)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.materialEditor&#32;=&#32;materialEditor;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_properties&#32;=&#32;properties;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;materialEditor.target&#32;as&#32;Material;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Assert(_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="stringliteral">&quot;_target&#32;!=&#32;null&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00077"/>00077 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_target.shader.name.Equals(<emphasis role="stringliteral">&quot;FlatKit/Stylized&#32;Surface&#32;With&#32;Outline&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&apos;Stylized&#32;Surface&#32;with&#32;Outline&apos;&#32;shader&#32;has&#32;been&#32;deprecated.&#32;Please&#32;use&#32;the&#32;outline&#32;section&#32;in&#32;the&#32;&apos;Stylized&#32;Surface&apos;&#32;shader.&quot;</emphasis>,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MessageType.Warning);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00083"/>00083 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;originalIntentLevel&#32;=&#32;EditorGUI.indentLevel;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;foldoutRemainingItems&#32;=&#32;0;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;latestFoldoutState&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00087"/>00087 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(MaterialProperty&#32;property&#32;<emphasis role="keywordflow">in</emphasis>&#32;properties)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;displayName&#32;=&#32;<emphasis role="keyword">property</emphasis>.displayName;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00090"/>00090 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(displayName.Contains(<emphasis role="stringliteral">&quot;[&quot;</emphasis>)&#32;&amp;&amp;&#32;!displayName.Contains(<emphasis role="stringliteral">&quot;FOLDOUT&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;+=&#32;1;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00094"/>00094 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;skipProperty&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[_CELPRIMARYMODE_SINGLE]&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;_CELPRIMARYMODE_SINGLE&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[_CELPRIMARYMODE_STEPS]&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;_CELPRIMARYMODE_STEPS&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[_CELPRIMARYMODE_CURVE]&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;_CELPRIMARYMODE_CURVE&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[DR_CEL_EXTRA_ON]&quot;</emphasis>)&#32;&amp;&amp;&#32;!<emphasis role="keyword">property</emphasis>.name.Equals(<emphasis role="stringliteral">&quot;_CelExtraEnabled&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;DR_CEL_EXTRA_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[DR_SPECULAR_ON]&quot;</emphasis>)&#32;&amp;&amp;&#32;!<emphasis role="keyword">property</emphasis>.name.Equals(<emphasis role="stringliteral">&quot;_SpecularEnabled&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;DR_SPECULAR_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[DR_RIM_ON]&quot;</emphasis>)&#32;&amp;&amp;&#32;!<emphasis role="keyword">property</emphasis>.name.Equals(<emphasis role="stringliteral">&quot;_RimEnabled&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;DR_RIM_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[DR_GRADIENT_ON]&quot;</emphasis>)&#32;&amp;&amp;&#32;!<emphasis role="keyword">property</emphasis>.name.Equals(<emphasis role="stringliteral">&quot;_GradientEnabled&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;DR_GRADIENT_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[_UNITYSHADOWMODE_MULTIPLY]&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;_UNITYSHADOWMODE_MULTIPLY&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[_UNITYSHADOWMODE_COLOR]&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;_UNITYSHADOWMODE_COLOR&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[DR_ENABLE_LIGHTMAP_DIR]&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;DR_ENABLE_LIGHTMAP_DIR&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;|=&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[DR_OUTLINE_ON]&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;DR_OUTLINE_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00118"/>00118 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;DR_ENABLE_LIGHTMAP_DIR&quot;</emphasis>)&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displayName.Contains(<emphasis role="stringliteral">&quot;Override&#32;light&#32;direction&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dirPitch&#32;=&#32;_target.GetFloat(<emphasis role="stringliteral">&quot;_LightmapDirectionPitch&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dirYaw&#32;=&#32;_target.GetFloat(<emphasis role="stringliteral">&quot;_LightmapDirectionYaw&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00123"/>00123 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dirPitchRad&#32;=&#32;dirPitch&#32;*&#32;Mathf.Deg2Rad;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dirYawRad&#32;=&#32;dirYaw&#32;*&#32;Mathf.Deg2Rad;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00126"/>00126 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;direction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector4(Mathf.Sin(dirPitchRad)&#32;*&#32;Mathf.Sin(dirYawRad),&#32;Mathf.Cos(dirPitchRad),
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mathf.Sin(dirPitchRad)&#32;*&#32;Mathf.Cos(dirYawRad),&#32;0.0f);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetVector(<emphasis role="stringliteral">&quot;_LightmapDirection&quot;</emphasis>,&#32;direction);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00131"/>00131 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(displayName.Contains(<emphasis role="stringliteral">&quot;FOLDOUT&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;foldoutName&#32;=&#32;displayName.Split(<emphasis role="charliteral">&apos;(&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;)&apos;</emphasis>)[1];
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;foldoutItemCount&#32;=&#32;displayName.Split(<emphasis role="charliteral">&apos;{&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;}&apos;</emphasis>)[1];
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foldoutRemainingItems&#32;=&#32;Convert.ToInt32(foldoutItemCount);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!FoldoutStates.ContainsKey(property.name))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FoldoutStates.Add(property.name,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00139"/>00139 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FoldoutStates[<emphasis role="keyword">property</emphasis>.name]&#32;=
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Foldout(FoldoutStates[property.name],&#32;foldoutName);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;latestFoldoutState&#32;=&#32;FoldoutStates[<emphasis role="keyword">property</emphasis>.name];
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00145"/>00145 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(foldoutRemainingItems&#32;&gt;&#32;0)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skipProperty&#32;=&#32;skipProperty&#32;||&#32;!latestFoldoutState;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;+=&#32;1;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--foldoutRemainingItems;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00151"/>00151 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;_CELPRIMARYMODE_STEPS&quot;</emphasis>)&#32;&amp;&amp;&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[LAST_PROP_STEPS]&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;This&#32;mode&#32;creates&#32;a&#32;step&#32;texture&#32;that&#32;control&#32;the&#32;light/shadow&#32;transition.&#32;To&#32;use:\n&quot;</emphasis>&#32;+
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;1.&#32;Set&#32;the&#32;number&#32;of&#32;steps&#32;(e.g.&#32;3&#32;means&#32;three&#32;steps&#32;between&#32;lit&#32;and&#32;shaded&#32;regions),&#32;\n&quot;</emphasis>&#32;+
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;2.&#32;Save&#32;the&#32;steps&#32;as&#32;a&#32;texture&#32;-&#32;&apos;Save&#32;Ramp&#32;Texture&apos;&#32;button&quot;</emphasis>,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MessageType.Info);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentNumSteps&#32;=&#32;_target.GetInt(<emphasis role="stringliteral">&quot;_CelNumSteps&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentNumSteps&#32;!=&#32;_celShadingNumSteps)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button(<emphasis role="stringliteral">&quot;Save&#32;Ramp&#32;Texture&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_celShadingNumSteps&#32;=&#32;currentNumSteps;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PromptTextureSave(materialEditor,&#32;GenerateStepTexture,&#32;<emphasis role="stringliteral">&quot;_CelStepTexture&quot;</emphasis>,&#32;FilterMode.Point);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00166"/>00166 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;_CELPRIMARYMODE_CURVE&quot;</emphasis>)&#32;&amp;&amp;&#32;displayName.Contains(<emphasis role="stringliteral">&quot;[LAST_PROP_CURVE]&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;This&#32;mode&#32;uses&#32;arbitrary&#32;curves&#32;to&#32;control&#32;the&#32;light/shadow&#32;transition.&#32;How&#32;to&#32;use:\n&quot;</emphasis>&#32;+
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;1.&#32;Set&#32;shading&#32;curve&#32;(generally&#32;from&#32;0.0&#32;to&#32;1.0)\n&quot;</emphasis>&#32;+
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;2.&#32;[Optional]&#32;Save&#32;the&#32;curve&#32;preset\n&quot;</emphasis>&#32;+
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;3.&#32;Save&#32;the&#32;curve&#32;as&#32;a&#32;texture.&quot;</emphasis>,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MessageType.Info);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gradient&#32;=&#32;EditorGUILayout.CurveField(<emphasis role="stringliteral">&quot;Shading&#32;curve&quot;</emphasis>,&#32;_gradient);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00175"/>00175 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button(<emphasis role="stringliteral">&quot;Save&#32;Ramp&#32;Texture&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PromptTextureSave(materialEditor,&#32;GenerateCurveTexture,&#32;<emphasis role="stringliteral">&quot;_CelCurveTexture&quot;</emphasis>,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FilterMode.Trilinear);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00181"/>00181 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!skipProperty&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;property.type&#32;==&#32;MaterialProperty.PropType.Color&#32;&amp;&amp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;property.colorValue&#32;==&#32;HashColor)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.colorValue&#32;=&#32;_target.GetColor(ColorPropertyName);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00187"/>00187 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!skipProperty&#32;&amp;&amp;&#32;property.name.Contains(<emphasis role="stringliteral">&quot;_EmissionMap&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;emission&#32;=&#32;materialEditor.EmissionEnabledProperty();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(emission)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.EnableKeyword(<emphasis role="stringliteral">&quot;_EMISSION&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.DisableKeyword(<emphasis role="stringliteral">&quot;_EMISSION&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00196"/>00196 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hideInInspector&#32;=&#32;(<emphasis role="keyword">property</emphasis>.flags&#32;&amp;&#32;MaterialProperty.PropFlags.HideInInspector)&#32;!=&#32;0;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!hideInInspector&#32;&amp;&amp;&#32;!skipProperty)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawStandard(property);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00201"/>00201 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!skipProperty&#32;&amp;&amp;&#32;property.name.Contains(<emphasis role="stringliteral">&quot;_EmissionColor&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space(15);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawTileOffset(materialEditor,&#32;FindProperty(<emphasis role="stringliteral">&quot;_BaseMap&quot;</emphasis>));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00206"/>00206 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;originalIntentLevel;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00209"/>00209 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FoldoutStates[<emphasis role="stringliteral">&quot;Rendering&#32;options&quot;</emphasis>]&#32;=
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Foldout(FoldoutStates[<emphasis role="stringliteral">&quot;Rendering&#32;options&quot;</emphasis>],&#32;<emphasis role="stringliteral">&quot;Rendering&#32;options&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(FoldoutStates[<emphasis role="stringliteral">&quot;Rendering&#32;options&quot;</emphasis>])&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;+=&#32;1;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00215"/>00215 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HandleUrpSettings(_target,&#32;materialEditor);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00217"/>00217 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueueOffsetProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_QueueOffset&quot;</emphasis>,&#32;_properties,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawQueueOffsetField();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00220"/>00220 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;materialEditor.EnableInstancingField();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00223"/>00223 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Toggle&#32;the&#32;outline&#32;pass.</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetShaderPassEnabled(<emphasis role="stringliteral">&quot;SRPDefaultUnlit&quot;</emphasis>,&#32;_target.IsKeywordEnabled(<emphasis role="stringliteral">&quot;DR_OUTLINE_ON&quot;</emphasis>));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00226"/>00226 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00228"/>00228 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(HasProperty(&quot;_MainTex&quot;))&#32;{</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00229"/>00229 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TransferToBaseMap();</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00230"/>00230 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00231"/>00231 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//*/</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00233"/>00233 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Adapted&#32;from&#32;BaseShaderGUI.cs.</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleUrpSettings(Material&#32;material,&#32;MaterialEditor&#32;materialEditor)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;alphaClip&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(material.HasProperty(<emphasis role="stringliteral">&quot;_AlphaClip&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alphaClip&#32;=&#32;material.GetFloat(<emphasis role="stringliteral">&quot;_AlphaClip&quot;</emphasis>)&#32;&gt;=&#32;0.5;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00240"/>00240 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(alphaClip)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.EnableKeyword(<emphasis role="stringliteral">&quot;_ALPHATEST_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.DisableKeyword(<emphasis role="stringliteral">&quot;_ALPHATEST_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00246"/>00246 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HasProperty(<emphasis role="stringliteral">&quot;_Surface&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;surfaceProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_Surface&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;surfaceProp.hasMixedValue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;surfaceType&#32;=&#32;(<link linkend="__stylized_surface_editor_8cs_1a24dfdcf13ae4e2b7985a3868a1b5169f">SurfaceType</link>)&#32;surfaceProp.floatValue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Separator();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;surfaceType&#32;=&#32;(<link linkend="__stylized_surface_editor_8cs_1a24dfdcf13ae4e2b7985a3868a1b5169f">SurfaceType</link>)&#32;EditorGUILayout.EnumPopup(<emphasis role="stringliteral">&quot;Surface&#32;Type&quot;</emphasis>,&#32;surfaceType);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;materialEditor.RegisterPropertyChangeUndo(<emphasis role="stringliteral">&quot;Surface&#32;Type&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;surfaceProp.floatValue&#32;=&#32;(float)&#32;surfaceType;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00258"/>00258 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(surfaceType&#32;==&#32;<link linkend="__stylized_surface_editor_8cs_1a24dfdcf13ae4e2b7985a3868a1b5169f">SurfaceType</link>.Opaque)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(alphaClip)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.renderQueue&#32;=&#32;(int)&#32;UnityEngine.Rendering.RenderQueue.AlphaTest;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetOverrideTag(<emphasis role="stringliteral">&quot;RenderType&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;TransparentCutout&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.renderQueue&#32;=&#32;(int)&#32;UnityEngine.Rendering.RenderQueue.Geometry;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetOverrideTag(<emphasis role="stringliteral">&quot;RenderType&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Opaque&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00267"/>00267 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.renderQueue&#32;+=
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.HasProperty(<emphasis role="stringliteral">&quot;_QueueOffset&quot;</emphasis>)&#32;?&#32;(int)&#32;material.GetFloat(<emphasis role="stringliteral">&quot;_QueueOffset&quot;</emphasis>)&#32;:&#32;0;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_SrcBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.One);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_DstBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.Zero);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_ZWrite&quot;</emphasis>,&#32;1);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.DisableKeyword(<emphasis role="stringliteral">&quot;_ALPHAPREMULTIPLY_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetShaderPassEnabled(<emphasis role="stringliteral">&quot;ShadowCaster&quot;</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="comment">//&#32;Transparent</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">BlendMode</link>&#32;blendMode&#32;=&#32;(<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">BlendMode</link>)&#32;material.GetFloat(<emphasis role="stringliteral">&quot;_Blend&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00278"/>00278 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Specific&#32;Transparent&#32;Mode&#32;Settings</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(blendMode)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">BlendMode</link>.Alpha:
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_SrcBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.SrcAlpha);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_DstBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.OneMinusSrcAlpha);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.DisableKeyword(<emphasis role="stringliteral">&quot;_ALPHAPREMULTIPLY_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">BlendMode</link>.Premultiply:
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_SrcBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.One);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_DstBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.OneMinusSrcAlpha);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.EnableKeyword(<emphasis role="stringliteral">&quot;_ALPHAPREMULTIPLY_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">BlendMode</link>.Additive:
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_SrcBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.SrcAlpha);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_DstBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.One);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.DisableKeyword(<emphasis role="stringliteral">&quot;_ALPHAPREMULTIPLY_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">BlendMode</link>.Multiply:
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_SrcBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.DstColor);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_DstBlend&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;UnityEngine.Rendering.BlendMode.Zero);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.DisableKeyword(<emphasis role="stringliteral">&quot;_ALPHAPREMULTIPLY_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.EnableKeyword(<emphasis role="stringliteral">&quot;_ALPHAMODULATE_ON&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00303"/>00303 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;General&#32;Transparent&#32;Material&#32;Settings</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetOverrideTag(<emphasis role="stringliteral">&quot;RenderType&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Transparent&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetInt(<emphasis role="stringliteral">&quot;_ZWrite&quot;</emphasis>,&#32;0);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.renderQueue&#32;=&#32;(int)&#32;UnityEngine.Rendering.RenderQueue.Transparent;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.renderQueue&#32;+=
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.HasProperty(<emphasis role="stringliteral">&quot;_QueueOffset&quot;</emphasis>)&#32;?&#32;(int)&#32;material.GetFloat(<emphasis role="stringliteral">&quot;_QueueOffset&quot;</emphasis>)&#32;:&#32;0;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.SetShaderPassEnabled(<emphasis role="stringliteral">&quot;ShadowCaster&quot;</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00312"/>00312 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DR:&#32;draw&#32;popup.</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(surfaceType&#32;==&#32;<link linkend="__stylized_surface_editor_8cs_1a24dfdcf13ae4e2b7985a3868a1b5169f">SurfaceType</link>.Transparent&#32;&amp;&amp;&#32;HasProperty(<emphasis role="stringliteral">&quot;_Blend&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;blendModeProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_Blend&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;blendModeProp.hasMixedValue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;blendMode&#32;=&#32;(<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">BlendMode</link>)&#32;blendModeProp.floatValue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blendMode&#32;=&#32;(<link linkend="__stylized_surface_editor_8cs_1a30323fa90e24ca484998b9fba6c40e85">BlendMode</link>)&#32;EditorGUILayout.EnumPopup(<emphasis role="stringliteral">&quot;Blend&#32;Mode&quot;</emphasis>,&#32;blendMode);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;materialEditor.RegisterPropertyChangeUndo(<emphasis role="stringliteral">&quot;Blend&#32;Mode&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blendModeProp.floatValue&#32;=&#32;(float)&#32;blendMode;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00326"/>00326 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DR:&#32;draw&#32;popup.</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HasProperty(<emphasis role="stringliteral">&quot;_Cull&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Separator();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cullingProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_Cull&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;cullingProp.hasMixedValue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;culling&#32;=&#32;(<link linkend="__stylized_surface_editor_8cs_1abaf89b458d4f49369c6d66162532f9c5">RenderFace</link>)&#32;cullingProp.floatValue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;culling&#32;=&#32;(<link linkend="__stylized_surface_editor_8cs_1abaf89b458d4f49369c6d66162532f9c5">RenderFace</link>)&#32;EditorGUILayout.EnumPopup(<emphasis role="stringliteral">&quot;Render&#32;Faces&quot;</emphasis>,&#32;culling);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;materialEditor.RegisterPropertyChangeUndo(<emphasis role="stringliteral">&quot;Render&#32;Faces&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cullingProp.floatValue&#32;=&#32;(float)&#32;culling;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.doubleSidedGI&#32;=&#32;(<link linkend="__stylized_surface_editor_8cs_1abaf89b458d4f49369c6d66162532f9c5">RenderFace</link>)&#32;cullingProp.floatValue&#32;!=&#32;<link linkend="__stylized_surface_editor_8cs_1abaf89b458d4f49369c6d66162532f9c5">RenderFace</link>.Front;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00341"/>00341 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HasProperty(<emphasis role="stringliteral">&quot;_AlphaClip&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Separator();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;alphaClipProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_AlphaClip&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;alphaClipProp.hasMixedValue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;alphaClipEnabled&#32;=&#32;EditorGUILayout.Toggle(<emphasis role="stringliteral">&quot;Alpha&#32;Clipping&quot;</emphasis>,&#32;alphaClipProp.floatValue&#32;==&#32;1);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alphaClipProp.floatValue&#32;=&#32;alphaClipEnabled&#32;?&#32;1&#32;:&#32;0;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00351"/>00351 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(alphaClipProp.floatValue&#32;==&#32;1&#32;&amp;&amp;&#32;HasProperty(<emphasis role="stringliteral">&quot;_Cutoff&quot;</emphasis>))&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;alphaCutoffProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_Cutoff&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;materialEditor.ShaderProperty(alphaCutoffProp,&#32;<emphasis role="stringliteral">&quot;Threshold&quot;</emphasis>,&#32;1);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00358"/>00358 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;PromptTextureSave(MaterialEditor&#32;materialEditor,&#32;Func&lt;Texture2D&gt;&#32;generate,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FilterMode&#32;filterMode)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rampTexture&#32;=&#32;generate();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;pngNameNoExtension&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;{0}{1}-ramp&quot;</emphasis>,&#32;materialEditor.target.name,&#32;propertyName);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fullPath&#32;=
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.SaveFilePanel(<emphasis role="stringliteral">&quot;Save&#32;Ramp&#32;Texture&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Assets&quot;</emphasis>,&#32;pngNameNoExtension,&#32;<emphasis role="stringliteral">&quot;png&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fullPath.Length&#32;&gt;&#32;0)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SaveTextureAsPng(rampTexture,&#32;fullPath,&#32;filterMode);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;loadedTexture&#32;=&#32;LoadTexture(fullPath);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(loadedTexture&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetTexture(propertyName,&#32;loadedTexture);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Could&#32;not&#32;save&#32;the&#32;texture.&#32;Make&#32;sure&#32;the&#32;destination&#32;is&#32;in&#32;the&#32;Assets&#32;folder.&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00375"/>00375 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Texture2D&#32;GenerateStepTexture()&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numSteps&#32;=&#32;_celShadingNumSteps;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;t2d&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Texture2D(numSteps&#32;+&#32;1,&#32;<emphasis role="comment">/*height=*/</emphasis>1,&#32;TextureFormat.R8,&#32;<emphasis role="comment">/*mipChain=*/</emphasis><emphasis role="keyword">false</emphasis>)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filterMode&#32;=&#32;FilterMode.Point,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wrapMode&#32;=&#32;TextureWrapMode.Clamp
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numSteps&#32;+&#32;1;&#32;i++)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;color&#32;=&#32;Color.white&#32;*&#32;i&#32;/&#32;numSteps;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t2d.SetPixel(i,&#32;0,&#32;color);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00386"/>00386 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t2d.Apply();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;t2d;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00390"/>00390 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Texture2D&#32;GenerateCurveTexture()&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;width&#32;=&#32;256;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;height&#32;=&#32;1;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lut&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Texture2D(width,&#32;height,&#32;TextureFormat.R8,&#32;<emphasis role="comment">/*mipChain=*/</emphasis><emphasis role="keyword">false</emphasis>)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alphaIsTransparency&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wrapMode&#32;=&#32;TextureWrapMode.Clamp,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hideFlags&#32;=&#32;HideFlags.HideAndDontSave,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filterMode&#32;=&#32;FilterMode.Trilinear
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00400"/>00400 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;width;&#32;x++)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;value&#32;=&#32;_gradient.Evaluate(x&#32;/&#32;width);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;y&#32;=&#32;0;&#32;y&#32;&lt;&#32;height;&#32;y++)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;color&#32;=&#32;Color.white&#32;*&#32;value;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lut.SetPixel(Mathf.CeilToInt(x),&#32;Mathf.CeilToInt(y),&#32;color);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00408"/>00408 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lut;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00411"/>00411 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SaveTextureAsPng(Texture2D&#32;texture,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fullPath,&#32;FilterMode&#32;filterMode)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes&#32;=&#32;texture.EncodeToPNG();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;File.WriteAllBytes(fullPath,&#32;bytes);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AssetDatabase.Refresh();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Texture&#32;saved&#32;as:&#32;{0}&quot;</emphasis>,&#32;fullPath));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00417"/>00417 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;pathRelativeToAssets&#32;=&#32;ConvertFullPathToAssetPath(fullPath);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TextureImporter&#32;importer&#32;=&#32;(TextureImporter)&#32;TextureImporter.GetAtPath(pathRelativeToAssets);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(importer&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;importer.filterMode&#32;=&#32;filterMode;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;importer.textureType&#32;=&#32;TextureImporterType.SingleChannel;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;importer.textureCompression&#32;=&#32;TextureImporterCompression.Uncompressed;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;importer.mipmapEnabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;textureSettings&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;TextureImporterPlatformSettings&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;format&#32;=&#32;TextureImporterFormat.R8
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;importer.SetPlatformTextureSettings(textureSettings);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.SetDirty(importer);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;importer.SaveAndReimport();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00432"/>00432 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//22b5f7ed-989d-49d1-90d9-c62d76c3081a</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00434"/>00434 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Assert(importer,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;[FlatKit]&#32;Could&#32;not&#32;change&#32;import&#32;settings&#32;of&#32;{0}&#32;[{1}]&quot;</emphasis>,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fullPath,&#32;pathRelativeToAssets));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00439"/>00439 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Texture2D&#32;LoadTexture(<emphasis role="keywordtype">string</emphasis>&#32;fullPath)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;pathRelativeToAssets&#32;=&#32;ConvertFullPathToAssetPath(fullPath);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pathRelativeToAssets.Length&#32;==&#32;0)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00445"/>00445 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;loadedTexture&#32;=&#32;AssetDatabase.LoadAssetAtPath(pathRelativeToAssets,&#32;typeof(Texture2D))&#32;as&#32;Texture2D;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(loadedTexture&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;[FlatKit]&#32;Could&#32;not&#32;load&#32;texture&#32;from&#32;{0}&#32;[{1}].&quot;</emphasis>,&#32;fullPath,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pathRelativeToAssets));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00452"/>00452 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loadedTexture.filterMode&#32;=&#32;FilterMode.Point;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loadedTexture.wrapMode&#32;=&#32;TextureWrapMode.Clamp;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00455"/>00455 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;loadedTexture;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00458"/>00458 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ConvertFullPathToAssetPath(<emphasis role="keywordtype">string</emphasis>&#32;fullPath)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(Directory.GetCurrentDirectory()&#32;+&#32;Path.DirectorySeparatorChar).Length;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count&#32;&lt;&#32;0)&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;String.Empty;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00464"/>00464 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fullPath.Remove(0,&#32;count);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00467"/>00467 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00468"/>00468 <emphasis role="preprocessor">#if&#32;!UNITY_2020_3_OR_NEWER</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawQueueOffsetField()&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUIContent&#32;queueSlider&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;&#32;Priority&quot;</emphasis>,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Determines&#32;the&#32;chronological&#32;rendering&#32;order&#32;for&#32;a&#32;Material.&#32;High&#32;values&#32;are&#32;rendered&#32;first.&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;queueOffsetRange&#32;=&#32;50;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;queueOffsetProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_QueueOffset&quot;</emphasis>,&#32;_properties,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(queueOffsetProp&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;queueOffsetProp.hasMixedValue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;queue&#32;=&#32;EditorGUILayout.IntSlider(queueSlider,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;queueOffsetProp.floatValue,&#32;-queueOffsetRange,
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queueOffsetRange);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queueOffsetProp.floatValue&#32;=&#32;queue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00482"/>00482 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.renderQueue&#32;=&#32;(int)RenderQueue.Transparent&#32;+&#32;queue;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00485"/>00485 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00486"/>00486 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TransferToBaseMap()&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;baseMapProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;baseColorProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetTexture(<emphasis role="stringliteral">&quot;_BaseMap&quot;</emphasis>,&#32;baseMapProp.textureValue);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;baseMapTiling&#32;=&#32;baseMapProp.textureScaleAndOffset;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetTextureScale(<emphasis role="stringliteral">&quot;_BaseMap&quot;</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(baseMapTiling.x,&#32;baseMapTiling.y));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetTextureOffset(<emphasis role="stringliteral">&quot;_BaseMap&quot;</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(baseMapTiling.z,&#32;baseMapTiling.w));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetColor(<emphasis role="stringliteral">&quot;_BaseColor&quot;</emphasis>,&#32;baseColorProp.colorValue);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00496"/>00496 
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TransferToMainTex()&#32;{
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;baseMapProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_BaseMap&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;baseColorProp&#32;=&#32;FindProperty(<emphasis role="stringliteral">&quot;_BaseColor&quot;</emphasis>);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetTexture(<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>,&#32;baseMapProp.textureValue);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;baseMapTiling&#32;=&#32;baseMapProp.textureScaleAndOffset;
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetTextureScale(<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(baseMapTiling.x,&#32;baseMapTiling.y));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetTextureOffset(<emphasis role="stringliteral">&quot;_MainTex&quot;</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(baseMapTiling.z,&#32;baseMapTiling.w));
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.SetColor(<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>,&#32;baseColorProp.colorValue);
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;}
<anchor xml:id="__stylized_surface_editor_8cs_source_1l00506"/>00506 }
</programlisting></section>
