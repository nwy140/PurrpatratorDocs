<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__sync_animator_8cs_source" xml:lang="en-US">
<title>SyncAnimator.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/SyncAnimator/SyncAnimator.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__sync_animator_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00005"/>00005 
<anchor xml:id="__sync_animator_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__sync_animator_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__sync_animator_8cs_source_1l00008"/>00008 
<anchor xml:id="__sync_animator_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespaceemotitron">emotitron</link>.Compression;
<anchor xml:id="__sync_animator_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple">Simple</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal">Internal</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_utility_scripts">UtilityScripts</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_utilities">Utilities</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00013"/>00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_compression">Compression</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00014"/>00014 
<anchor xml:id="__sync_animator_8cs_source_1l00015"/>00015 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00016"/>00016 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__sync_animator_8cs_source_1l00017"/>00017 <emphasis role="keyword">using</emphasis>&#32;UnityEditor.Animations;
<anchor xml:id="__sync_animator_8cs_source_1l00018"/>00018 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00019"/>00019 
<anchor xml:id="__sync_animator_8cs_source_1l00020"/>00020 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__sync_animator_8cs_source_1l00021"/>00021 {
<anchor xml:id="__sync_animator_8cs_source_1l00022"/>00022 
<anchor xml:id="__sync_animator_8cs_source_1l00023"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator">00023</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator">SyncAnimator</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object">SyncObject</link>&lt;SyncAnimator.Frame&gt;
<anchor xml:id="__sync_animator_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_snapshot">IOnSnapshot</link>
<anchor xml:id="__sync_animator_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_net_serialize">IOnNetSerialize</link>
<anchor xml:id="__sync_animator_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_authority_changed">IOnAuthorityChanged</link>
<anchor xml:id="__sync_animator_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_sync_animator">ISyncAnimator</link>
<anchor xml:id="__sync_animator_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_readyable">IReadyable</link>
<anchor xml:id="__sync_animator_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_use_keyframes">IUseKeyframes</link>
<anchor xml:id="__sync_animator_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//,&#32;IAdjustableApplyOrder</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_interpolate">IOnInterpolate</link>
<anchor xml:id="__sync_animator_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_capture_state">IOnCaptureState</link>
<anchor xml:id="__sync_animator_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00034"/>00034 
<anchor xml:id="__sync_animator_8cs_source_1l00035"/>00035 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Shared&#32;Cache&#32;(to&#32;avoid&#32;repeats&#32;of&#32;animator&#32;definitions&#32;with&#32;every&#32;prefab&#32;instance)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00036"/>00036 
<anchor xml:id="__sync_animator_8cs_source_1l00037"/>00037 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;List&lt;string&gt;&#32;tempNamesList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;string&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;string&gt;&#32;sharedTriggNames&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;string&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;string&gt;&#32;sharedStateNames&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;string&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;string&gt;&#32;sharedTransNames&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;string&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00042"/>00042 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;Dictionary&lt;int,&#32;int&gt;&gt;&#32;masterSharedTriggHashes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;Dictionary&lt;int,&#32;int&gt;&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;List&lt;int&gt;&gt;&#32;masterSharedTriggIndexes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;List&lt;int&gt;&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00045"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">00045</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;int&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Dictionary&lt;int,&#32;int&gt;&#32;sharedTriggHashes;
<anchor xml:id="__sync_animator_8cs_source_1l00047"/>00047 
<anchor xml:id="__sync_animator_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;Dictionary&lt;int,&#32;int&gt;&gt;&#32;masterSharedStateHashes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;Dictionary&lt;int,&#32;int&gt;&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;List&lt;int&gt;&gt;&#32;masterSharedStateIndexes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;List&lt;int&gt;&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00050"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">00050</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;int&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Dictionary&lt;int,&#32;int&gt;&#32;sharedStateHashes;
<anchor xml:id="__sync_animator_8cs_source_1l00052"/>00052 
<anchor xml:id="__sync_animator_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//private&#32;static&#32;Dictionary&lt;int,&#32;Dictionary&lt;int,&#32;TransitionInfo&gt;&gt;&#32;masterSharedTransHashes&#32;=&#32;new&#32;Dictionary&lt;int,&#32;Dictionary&lt;int,&#32;TransitionInfo&gt;&gt;();</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//private&#32;static&#32;Dictionary&lt;int,&#32;List&lt;TransitionInfo&gt;&gt;&#32;masterSharedTransIndexes&#32;=&#32;new&#32;Dictionary&lt;int,&#32;List&lt;TransitionInfo&gt;&gt;();</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[HideInInspector]&#32;public&#32;List&lt;TransitionInfo&gt;&#32;sharedTransIndexes&#32;=&#32;new&#32;List&lt;TransitionInfo&gt;();</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//private&#32;Dictionary&lt;int,&#32;TransitionInfo&gt;&#32;sharedTransHashes;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00057"/>00057 
<anchor xml:id="__sync_animator_8cs_source_1l00058"/>00058 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00059"/>00059 
<anchor xml:id="__sync_animator_8cs_source_1l00060"/>00060 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Inspector&#32;Items</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00061"/>00061 
<anchor xml:id="__sync_animator_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;Animator&#32;to&#32;sync.&#32;If&#32;null&#32;the&#32;first&#32;animator&#32;on&#32;this&#32;game&#32;object&#32;will&#32;be&#32;found&#32;and&#32;used.&quot;</emphasis>)]
<anchor xml:id="__sync_animator_8cs_source_1l00063"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">00063</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Animator&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00064"/>00064 
<anchor xml:id="__sync_animator_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Disables&#32;applyRootMotion&#32;on&#32;any&#32;non-authority&#32;instances,&#32;to&#32;avoid&#32;a&#32;tug&#32;of&#32;war&#32;between&#32;the&#32;transform&#32;sync&#32;and&#32;root&#32;motion.&quot;</emphasis>)]
<anchor xml:id="__sync_animator_8cs_source_1l00066"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa9373dc814e930474e0a4f2d7b3b7cb1">00066</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa9373dc814e930474e0a4f2d7b3b7cb1">autoRootMotion</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00067"/>00067 
<anchor xml:id="__sync_animator_8cs_source_1l00069"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">00069</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">syncPassThrus</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00070"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1af29fb093c6b42cd7bba2e3ffa61fe0cc">00070</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1af29fb093c6b42cd7bba2e3ffa61fe0cc">passthruNormTimeCompress</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>.Bits10;
<anchor xml:id="__sync_animator_8cs_source_1l00071"/>00071 
<anchor xml:id="__sync_animator_8cs_source_1l00073"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">00073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[HideInInspector]&#32;public&#32;bool&#32;syncTransitions&#32;=&#32;false;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00075"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa32bfcbb2dc8915d1af1734f56f95c8c">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa32bfcbb2dc8915d1af1734f56f95c8c">normalizedTimeCompress</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>.Bits10;
<anchor xml:id="__sync_animator_8cs_source_1l00076"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00077"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00078"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a7d3e408c37a872e36d55ecd640a22909">00078</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a7d3e408c37a872e36d55ecd640a22909">layerWeightCompress</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>.Bits10;
<anchor xml:id="__sync_animator_8cs_source_1l00079"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">00079</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00080"/>00080 
<anchor xml:id="__sync_animator_8cs_source_1l00082"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">00082</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">syncParams</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00083"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">00083</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00084"/>00084 
<anchor xml:id="__sync_animator_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;ParameterDefaults&gt;&#32;masterSharedParamDefaults&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;ParameterDefaults&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00086"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">00086</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults">ParameterDefaults</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults">ParameterDefaults</link>();
<anchor xml:id="__sync_animator_8cs_source_1l00087"/>00087 
<anchor xml:id="__sync_animator_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;ParameterSettings[]&gt;&#32;masterSharedParamSettings&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;ParameterSettings[]&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00089"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">00089</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings">ParameterSettings</link>[]&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings">ParameterSettings</link>[0];
<anchor xml:id="__sync_animator_8cs_source_1l00090"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">00090</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00091"/>00091 
<anchor xml:id="__sync_animator_8cs_source_1l00092"/>00092 
<anchor xml:id="__sync_animator_8cs_source_1l00093"/>00093 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00094"/>00094 
<anchor xml:id="__sync_animator_8cs_source_1l00095"/>00095 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Local&#32;Cache</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00096"/>00096 
<anchor xml:id="__sync_animator_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForTriggerIndex;
<anchor xml:id="__sync_animator_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForStateIndex;
<anchor xml:id="__sync_animator_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForTransIndex;
<anchor xml:id="__sync_animator_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitsForLayerIndex;
<anchor xml:id="__sync_animator_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;defaultRootMotion;
<anchor xml:id="__sync_animator_8cs_source_1l00103"/>00103 
<anchor xml:id="__sync_animator_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;lastAnimationHash;
<anchor xml:id="__sync_animator_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;uint[]&#32;lastLayerWeight;
<anchor xml:id="__sync_animator_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>[]&#32;lastSentParams;
<anchor xml:id="__sync_animator_8cs_source_1l00108"/>00108 
<anchor xml:id="__sync_animator_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;currentFrame;
<anchor xml:id="__sync_animator_8cs_source_1l00110"/>00110 
<anchor xml:id="__sync_animator_8cs_source_1l00111"/>00111 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00112"/>00112 
<anchor xml:id="__sync_animator_8cs_source_1l00113"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1c45e758b0bc1754cdc3fc44478cdc">00113</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1c45e758b0bc1754cdc3fc44478cdc">ApplyOrder</link>
<anchor xml:id="__sync_animator_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_apply_order_constants">ApplyOrderConstants</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_apply_order_constants_1adc9e2701d246a2d86f2319b2c1c6a8ca">ANIMATOR</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00120"/>00120 
<anchor xml:id="__sync_animator_8cs_source_1l00121"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a6a44b5c1d29d866de4e023b386821d58">00121</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a6a44b5c1d29d866de4e023b386821d58">AllowReconstructionOfEmpty</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;}&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00122"/>00122 
<anchor xml:id="__sync_animator_8cs_source_1l00123"/>00123 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Frame&#32;Struct/Queue/Pools</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00124"/>00124 
<anchor xml:id="__sync_animator_8cs_source_1l00129"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9631f346f5192ce168f847118a93f502">00129</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;Stack&lt;Frame[]&gt;&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9631f346f5192ce168f847118a93f502">masterSharedFramePool</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;Stack&lt;Frame[]&gt;&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00130"/>00130 
<anchor xml:id="__sync_animator_8cs_source_1l00131"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">00131</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_frame_base">FrameBase</link>
<anchor xml:id="__sync_animator_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00133"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">00133</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator">SyncAnimator</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00134"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a3ff15d6c965e0812c53114739c33f6e7">00134</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>[]&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a3ff15d6c965e0812c53114739c33f6e7">parameters</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00135"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a90f8f204acd3513d778c1c911b3dcc97">00135</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>?[]&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a90f8f204acd3513d778c1c911b3dcc97">stateHashes</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00136"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a97209da1d2f8bdb0bacebe8e6fc860e0">00136</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>[]&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a97209da1d2f8bdb0bacebe8e6fc860e0">layerIsInTransition</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00137"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a7e6f38b7b78f8bdc14e688b0744263ab">00137</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a7e6f38b7b78f8bdc14e688b0744263ab">normalizedTime</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00138"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1aca37f61774f4e911256234c9957a4dc1">00138</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>?[]&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1aca37f61774f4e911256234c9957a4dc1">layerWeights</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00139"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a0a25a1e537b426baca6e26e772b7c46c">00139</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Queue&lt;AnimPassThru&gt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a0a25a1e537b426baca6e26e772b7c46c">passThrus</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00140"/>00140 
<anchor xml:id="__sync_animator_8cs_source_1l00141"/>00141 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;IKState[]&#32;ikStates;
<anchor xml:id="__sync_animator_8cs_source_1l00143"/>00143 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00144"/>00144 
<anchor xml:id="__sync_animator_8cs_source_1l00145"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1ad916d0743b2942ae81b97268697234b5">00145</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1ad916d0743b2942ae81b97268697234b5">Frame</link>()&#32;:&#32;base()&#32;{&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00146"/>00146 
<anchor xml:id="__sync_animator_8cs_source_1l00147"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a3fd518abe237293b1ad9532068976484">00147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a3fd518abe237293b1ad9532068976484">Frame</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator">SyncAnimator</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_frame_base_1a70a7d966476c07b28baeef8c7cdb2fb6">frameId</link>)&#32;:&#32;base(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_frame_base_1a70a7d966476c07b28baeef8c7cdb2fb6">frameId</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.syncAnimator&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00150"/>00150 
<anchor xml:id="__sync_animator_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00152"/>00152 
<anchor xml:id="__sync_animator_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a90f8f204acd3513d778c1c911b3dcc97">stateHashes</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>?[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a97209da1d2f8bdb0bacebe8e6fc860e0">layerIsInTransition</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a7e6f38b7b78f8bdc14e688b0744263ab">normalizedTime</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1aca37f61774f4e911256234c9957a4dc1">layerWeights</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>?[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a0a25a1e537b426baca6e26e772b7c46c">passThrus</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Queue&lt;AnimPassThru&gt;(2);
<anchor xml:id="__sync_animator_8cs_source_1l00158"/>00158 
<anchor xml:id="__sync_animator_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a3ff15d6c965e0812c53114739c33f6e7">parameters</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;paramcnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;pid&#32;=&#32;0;&#32;pid&#32;&lt;&#32;paramcnt;&#32;++pid)
<anchor xml:id="__sync_animator_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a3ff15d6c965e0812c53114739c33f6e7">parameters</link>[pid]&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>[pid].<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings_1afc4745a914ecd8bf7b7a40af413e54d9">defaultValue</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00165"/>00165 
<anchor xml:id="__sync_animator_8cs_source_1l00166"/>00166 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00167"/>00167 
<anchor xml:id="__sync_animator_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;syncfeet&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.syncIKFeet;
<anchor xml:id="__sync_animator_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;synchands&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.syncIKHands;
<anchor xml:id="__sync_animator_8cs_source_1l00171"/>00171 
<anchor xml:id="__sync_animator_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(syncfeet&#32;||&#32;synchands)
<anchor xml:id="__sync_animator_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikStates&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;IKState[4]
<anchor xml:id="__sync_animator_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncfeet&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;IKState()&#32;:&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__sync_animator_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncfeet&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;IKState()&#32;:&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__sync_animator_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;synchands&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;IKState()&#32;:&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__sync_animator_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;synchands&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;IKState()&#32;:&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__sync_animator_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__sync_animator_8cs_source_1l00180"/>00180 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00182"/>00182 
<anchor xml:id="__sync_animator_8cs_source_1l00183"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1ad5d09b7b22e66228d0788902fc1bdc60">00183</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1ad5d09b7b22e66228d0788902fc1bdc60">CopyFrom</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_frame_base">FrameBase</link>&#32;sourceFrame)
<anchor xml:id="__sync_animator_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.CopyFrom(sourceFrame);
<anchor xml:id="__sync_animator_8cs_source_1l00186"/>00186 
<anchor xml:id="__sync_animator_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;frame&#32;=&#32;sourceFrame&#32;as&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1ad916d0743b2942ae81b97268697234b5">Frame</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00188"/>00188 
<anchor xml:id="__sync_animator_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">syncParams</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ps&#32;=&#32;frame.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a3ff15d6c965e0812c53114739c33f6e7">parameters</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;paramcnt&#32;=&#32;ps.Length;
<anchor xml:id="__sync_animator_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;paramcnt;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a3ff15d6c965e0812c53114739c33f6e7">parameters</link>[i]&#32;=&#32;ps[i];
<anchor xml:id="__sync_animator_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00196"/>00196 
<anchor xml:id="__sync_animator_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lyrCnt&#32;=&#32;frame.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a90f8f204acd3513d778c1c911b3dcc97">stateHashes</link>.Length;
<anchor xml:id="__sync_animator_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;lyrCnt;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a90f8f204acd3513d778c1c911b3dcc97">stateHashes</link>[i]&#32;=&#32;frame.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a90f8f204acd3513d778c1c911b3dcc97">stateHashes</link>[i];
<anchor xml:id="__sync_animator_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a97209da1d2f8bdb0bacebe8e6fc860e0">layerIsInTransition</link>[i]&#32;=&#32;frame.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a97209da1d2f8bdb0bacebe8e6fc860e0">layerIsInTransition</link>[i];
<anchor xml:id="__sync_animator_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a7e6f38b7b78f8bdc14e688b0744263ab">normalizedTime</link>[i]&#32;=&#32;frame.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a7e6f38b7b78f8bdc14e688b0744263ab">normalizedTime</link>[i];
<anchor xml:id="__sync_animator_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1aca37f61774f4e911256234c9957a4dc1">layerWeights</link>[i]&#32;=&#32;frame.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1aca37f61774f4e911256234c9957a4dc1">layerWeights</link>[i];
<anchor xml:id="__sync_animator_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00208"/>00208 
<anchor xml:id="__sync_animator_8cs_source_1l00209"/>00209 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00210"/>00210 
<anchor xml:id="__sync_animator_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.syncIKHands&#32;||&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a208b38822881fe94c443264c8b93ff9c">syncAnimator</link>.syncIKFeet)
<anchor xml:id="__sync_animator_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ikTrg&#32;=&#32;ikStates[i];
<anchor xml:id="__sync_animator_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ikSrc&#32;=&#32;frame.ikStates[i];
<anchor xml:id="__sync_animator_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikTrg.pos&#32;=&#32;ikSrc.pos;
<anchor xml:id="__sync_animator_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikTrg.rot&#32;=&#32;ikSrc.rot;
<anchor xml:id="__sync_animator_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00221"/>00221 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00222"/>00222 
<anchor xml:id="__sync_animator_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//triggers&#32;=&#32;new&#32;Queue&lt;TriggerItem&gt;();</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//crossFades&#32;=&#32;new&#32;Queue&lt;TriggerItem&gt;();</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00227"/>00227 
<anchor xml:id="__sync_animator_8cs_source_1l00228"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1ac5cf94dc9fbfb993bcae99ad8a0b92b2">00228</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1ac5cf94dc9fbfb993bcae99ad8a0b92b2">Clear</link>()
<anchor xml:id="__sync_animator_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.Clear();
<anchor xml:id="__sync_animator_8cs_source_1l00231"/>00231 
<anchor xml:id="__sync_animator_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a90f8f204acd3513d778c1c911b3dcc97">stateHashes</link>.Length;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a90f8f204acd3513d778c1c911b3dcc97">stateHashes</link>[i]&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00234"/>00234 
<anchor xml:id="__sync_animator_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a0a25a1e537b426baca6e26e772b7c46c">passThrus</link>.Clear();
<anchor xml:id="__sync_animator_8cs_source_1l00236"/>00236 
<anchor xml:id="__sync_animator_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0,&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1aca37f61774f4e911256234c9957a4dc1">layerWeights</link>.Length;&#32;layer&#32;&lt;&#32;cnt;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1aca37f61774f4e911256234c9957a4dc1">layerWeights</link>[layer]&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a90f8f204acd3513d778c1c911b3dcc97">stateHashes</link>[layer]&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1a7e6f38b7b78f8bdc14e688b0744263ab">normalizedTime</link>[layer]&#32;=&#32;0;
<anchor xml:id="__sync_animator_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1aca37f61774f4e911256234c9957a4dc1">layerWeights</link>[layer]&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00244"/>00244 
<anchor xml:id="__sync_animator_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00247"/>00247 
<anchor xml:id="__sync_animator_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//private&#32;void&#32;InvalidateFrame(Frame&#32;frame)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;count&#32;=&#32;(syncLayers)&#32;?&#32;layerCount&#32;:&#32;1;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;for&#32;(int&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.layerWeights[layer]&#32;=&#32;null;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.stateHashes[layer]&#32;=&#32;null;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.normalizedTime[layer]&#32;=&#32;0;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.layerWeights[layer]&#32;=&#32;null;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00259"/>00259 
<anchor xml:id="__sync_animator_8cs_source_1l00260"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ace4e00dec1e0b990b9ce0e298ce74105">00260</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ace4e00dec1e0b990b9ce0e298ce74105">PopulateFrames</link>()
<anchor xml:id="__sync_animator_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initialize();
<anchor xml:id="__sync_animator_8cs_source_1l00263"/>00263 
<anchor xml:id="__sync_animator_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameCount&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings">TickEngineSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_tick_engine_settings_1a7feaad83116bd66166a5d2de35ff10a8">frameCount</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00265"/>00265 
<anchor xml:id="__sync_animator_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stack&lt;Frame[]&gt;&#32;pool;
<anchor xml:id="__sync_animator_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9631f346f5192ce168f847118a93f502">masterSharedFramePool</link>.TryGetValue(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;out&#32;pool))
<anchor xml:id="__sync_animator_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pool&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Stack&lt;Frame[]&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9631f346f5192ce168f847118a93f502">masterSharedFramePool</link>.Add(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;pool);
<anchor xml:id="__sync_animator_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pool.Count&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a972e47bd4f848149984309e8c6c6a452">frames</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>[frameCount&#32;+&#32;1];
<anchor xml:id="__sync_animator_8cs_source_1l00276"/>00276 
<anchor xml:id="__sync_animator_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;=&#32;frameCount;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a972e47bd4f848149984309e8c6c6a452">frames</link>[i]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>(<emphasis role="keyword">this</emphasis>,&#32;i);
<anchor xml:id="__sync_animator_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a972e47bd4f848149984309e8c6c6a452">frames</link>&#32;=&#32;pool.Pop();
<anchor xml:id="__sync_animator_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;=&#32;frameCount;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a972e47bd4f848149984309e8c6c6a452">frames</link>[i].Clear();
<anchor xml:id="__sync_animator_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00287"/>00287 
<anchor xml:id="__sync_animator_8cs_source_1l00288"/>00288 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00289"/>00289 
<anchor xml:id="__sync_animator_8cs_source_1l00290"/>00290 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Unity&#32;Timings</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00291"/>00291 
<anchor xml:id="__sync_animator_8cs_source_1l00292"/>00292 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00293"/>00293 
<anchor xml:id="__sync_animator_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;AUTO_REBUILD_RATE&#32;=&#32;10f;
<anchor xml:id="__sync_animator_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;lastReuildTime;
<anchor xml:id="__sync_animator_8cs_source_1l00296"/>00296 
<anchor xml:id="__sync_animator_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RebuildIndexedNames()
<anchor xml:id="__sync_animator_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>&#32;=&#32;GetComponent&lt;Animator&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00305"/>00305 
<anchor xml:id="__sync_animator_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>&#32;&amp;&amp;&#32;EditorApplication.timeSinceStartup&#32;-&#32;lastReuildTime&#32;&gt;&#32;AUTO_REBUILD_RATE)
<anchor xml:id="__sync_animator_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastReuildTime&#32;=&#32;EditorApplication.timeSinceStartup;
<anchor xml:id="__sync_animator_8cs_source_1l00309"/>00309 
<anchor xml:id="__sync_animator_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimatorController&#32;ac&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetController();
<anchor xml:id="__sync_animator_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ac&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ac.animationClips&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;ac.animationClips.Length&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1ac6a6ed4f0d7a7522026d8cd2beec9671">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;&apos;&quot;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;&#32;has&#32;an&#32;Animator&#32;with&#32;no&#32;animation&#32;clips.&#32;Some&#32;Animator&#32;Controllers&#32;require&#32;a&#32;restart&#32;of&#32;Unity,&#32;or&#32;for&#32;a&#32;Build&#32;to&#32;be&#32;made&#32;in&#32;order&#32;to&#32;initialize&#32;correctly.&quot;</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l00315"/>00315 
<anchor xml:id="__sync_animator_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;haschanged&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00317"/>00317 
<anchor xml:id="__sync_animator_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ac.GetTriggerNames(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ac.GetStatesNames(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00320"/>00320 
<anchor xml:id="__sync_animator_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ac.GetTriggerNames(tempNamesList);
<anchor xml:id="__sync_animator_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!CompareNameLists(tempNamesList,&#32;sharedTriggNames))
<anchor xml:id="__sync_animator_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CopyNameList(tempNamesList,&#32;sharedTriggNames);
<anchor xml:id="__sync_animator_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;haschanged&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00327"/>00327 
<anchor xml:id="__sync_animator_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ac.GetStatesNames(tempNamesList);
<anchor xml:id="__sync_animator_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!CompareNameLists(tempNamesList,&#32;sharedStateNames))
<anchor xml:id="__sync_animator_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CopyNameList(tempNamesList,&#32;sharedStateNames);
<anchor xml:id="__sync_animator_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;haschanged&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00334"/>00334 
<anchor xml:id="__sync_animator_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(haschanged)
<anchor xml:id="__sync_animator_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;has&#32;changed.&#32;SyncAnimator&#32;indexes&#32;updated.&quot;</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.SetDirty(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00343"/>00343 
<anchor xml:id="__sync_animator_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CompareNameLists(List&lt;string&gt;&#32;one,&#32;List&lt;string&gt;&#32;two)
<anchor xml:id="__sync_animator_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(one.Count&#32;!=&#32;two.Count)
<anchor xml:id="__sync_animator_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00348"/>00348 
<anchor xml:id="__sync_animator_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;one.Count;&#32;i++)
<anchor xml:id="__sync_animator_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(one[i]&#32;!=&#32;two[i])
<anchor xml:id="__sync_animator_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00352"/>00352 
<anchor xml:id="__sync_animator_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00355"/>00355 
<anchor xml:id="__sync_animator_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CopyNameList(List&lt;string&gt;&#32;src,&#32;List&lt;string&gt;&#32;trg)
<anchor xml:id="__sync_animator_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trg.Clear();
<anchor xml:id="__sync_animator_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;src.Count;&#32;i++)
<anchor xml:id="__sync_animator_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trg.Add(src[i]);
<anchor xml:id="__sync_animator_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00362"/>00362 
<anchor xml:id="__sync_animator_8cs_source_1l00363"/>00363 
<anchor xml:id="__sync_animator_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a8c23a7659fce7cbddf605cb4d2ae487c">Reset</link>()
<anchor xml:id="__sync_animator_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.Reset();
<anchor xml:id="__sync_animator_8cs_source_1l00367"/>00367 
<anchor xml:id="__sync_animator_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FindUnsyncedAnimator();
<anchor xml:id="__sync_animator_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RebuildIndexedNames();
<anchor xml:id="__sync_animator_8cs_source_1l00371"/>00371 
<anchor xml:id="__sync_animator_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00373"/>00373 
<anchor xml:id="__sync_animator_8cs_source_1l00374"/>00374 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00375"/>00375 
<anchor xml:id="__sync_animator_8cs_source_1l00376"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa4d73d9bfd743306de78d57e6179fbba">00376</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa4d73d9bfd743306de78d57e6179fbba">OnAwake</link>()
<anchor xml:id="__sync_animator_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FindUnsyncedAnimator();
<anchor xml:id="__sync_animator_8cs_source_1l00380"/>00380 
<anchor xml:id="__sync_animator_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnAwake();
<anchor xml:id="__sync_animator_8cs_source_1l00382"/>00382 
<anchor xml:id="__sync_animator_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConnectSharedCaches();
<anchor xml:id="__sync_animator_8cs_source_1l00384"/>00384 
<anchor xml:id="__sync_animator_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultRootMotion&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.applyRootMotion;
<anchor xml:id="__sync_animator_8cs_source_1l00387"/>00387 
<anchor xml:id="__sync_animator_8cs_source_1l00388"/>00388 
<anchor xml:id="__sync_animator_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.LogError(prefabInstanceId);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00391"/>00391 
<anchor xml:id="__sync_animator_8cs_source_1l00392"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aca2b2cf0034f3f90fd7bbfaa45c2a456">00392</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aca2b2cf0034f3f90fd7bbfaa45c2a456">OnJoinedRoom</link>()
<anchor xml:id="__sync_animator_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnJoinedRoom();
<anchor xml:id="__sync_animator_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AutoRootMotion(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a07f3cb70e7a939e8069acee601ada57b">IsMine</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00397"/>00397 
<anchor xml:id="__sync_animator_8cs_source_1l00398"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a07ab41eb6d0f87ab05973529d091829c">00398</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a07ab41eb6d0f87ab05973529d091829c">OnStart</link>()
<anchor xml:id="__sync_animator_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnStart();
<anchor xml:id="__sync_animator_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AutoRootMotion(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a07f3cb70e7a939e8069acee601ada57b">IsMine</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00403"/>00403 
<anchor xml:id="__sync_animator_8cs_source_1l00404"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a4f2847f19fc12bc9c029cf1d23617530">00404</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a4f2847f19fc12bc9c029cf1d23617530">OnAuthorityChanged</link>(<emphasis role="keywordtype">bool</emphasis>&#32;isMine,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;controllerChanged)
<anchor xml:id="__sync_animator_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnAuthorityChanged(isMine,&#32;controllerChanged);
<anchor xml:id="__sync_animator_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AutoRootMotion(isMine);
<anchor xml:id="__sync_animator_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00409"/>00409 
<anchor xml:id="__sync_animator_8cs_source_1l00410"/>00410 
<anchor xml:id="__sync_animator_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AutoRootMotion(<emphasis role="keywordtype">bool</emphasis>&#32;isMine)
<anchor xml:id="__sync_animator_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa9373dc814e930474e0a4f2d7b3b7cb1">autoRootMotion</link>&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.applyRootMotion&#32;=&#32;(isMine)&#32;?&#32;defaultRootMotion&#32;:&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00418"/>00418 
<anchor xml:id="__sync_animator_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;Animator&gt;&#32;foundAnimators&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Animator&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;SyncAnimator&gt;&#32;foundSyncs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;SyncAnimator&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;FindUnsyncedAnimator()
<anchor xml:id="__sync_animator_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.GetNestedComponentsInChildren&lt;Animator,&#32;NetObject&gt;(foundAnimators);
<anchor xml:id="__sync_animator_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.GetNestedComponentsInChildren&lt;SyncAnimator,&#32;NetObject&gt;(foundSyncs);
<anchor xml:id="__sync_animator_8cs_source_1l00430"/>00430 
<anchor xml:id="__sync_animator_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;a&#32;<emphasis role="keywordflow">in</emphasis>&#32;foundAnimators)
<anchor xml:id="__sync_animator_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;used&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;foundSyncs)
<anchor xml:id="__sync_animator_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;used&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s.animator&#32;==&#32;a)
<anchor xml:id="__sync_animator_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;used&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!used)
<anchor xml:id="__sync_animator_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>&#32;=&#32;a;
<anchor xml:id="__sync_animator_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00450"/>00450 
<anchor xml:id="__sync_animator_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Initialize()
<anchor xml:id="__sync_animator_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitsForTriggerIndex&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>.Count&#32;-&#32;1).GetBitsForMaxValue();
<anchor xml:id="__sync_animator_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitsForStateIndex&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>.Count&#32;-&#32;1).GetBitsForMaxValue();
<anchor xml:id="__sync_animator_8cs_source_1l00455"/>00455 
<anchor xml:id="__sync_animator_8cs_source_1l00456"/>00456 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR&#32;||&#32;DEVELOPMENT_BUILD</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;No&#32;Animator&#32;component&#32;found.&#32;Be&#32;sure&#32;&quot;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;has&#32;an&#32;animator,&#32;or&#32;remove&#32;&quot;</emphasis>&#32;+&#32;GetType().Name&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l00459"/>00459 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.parameters.Length;
<anchor xml:id="__sync_animator_8cs_source_1l00461"/>00461 
<anchor xml:id="__sync_animator_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.layerCount;
<anchor xml:id="__sync_animator_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitsForLayerIndex&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>.GetBitsForMaxValue();
<anchor xml:id="__sync_animator_8cs_source_1l00465"/>00465 
<anchor xml:id="__sync_animator_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastSentParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings">ParameterSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings_1a43420057e6248ad045cad79b4937c1fc">RebuildParamSettings</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>,&#32;ref&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>,&#32;ref&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00469"/>00469 
<anchor xml:id="__sync_animator_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastAnimationHash&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastLayerWeight&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;uint[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00472"/>00472 
<anchor xml:id="__sync_animator_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Cache&#32;some&#32;of&#32;the&#32;readonly&#32;parameter&#32;attributes</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;pid&#32;=&#32;0;&#32;pid&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;&#32;++pid)
<anchor xml:id="__sync_animator_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastSentParams[pid]&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>[pid].<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings_1afc4745a914ecd8bf7b7a40af413e54d9">defaultValue</link>;&#32;<emphasis role="comment">//&#32;;&#32;paramDefValue[pid];</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00479"/>00479 
<anchor xml:id="__sync_animator_8cs_source_1l00480"/>00480 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitIK();
<anchor xml:id="__sync_animator_8cs_source_1l00482"/>00482 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00483"/>00483 
<anchor xml:id="__sync_animator_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00485"/>00485 
<anchor xml:id="__sync_animator_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConnectSharedCaches()
<anchor xml:id="__sync_animator_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!masterSharedTriggHashes.ContainsKey(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>))
<anchor xml:id="__sync_animator_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sharedTriggHashes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;int&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>.Count;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sharedTriggHashes.ContainsKey(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>[i]))
<anchor xml:id="__sync_animator_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;There&#32;appear&#32;to&#32;be&#32;duplicate&#32;Trigger&#32;names&#32;in&#32;the&#32;animator&#32;controller&#32;on&#32;&apos;&quot;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;.&#32;This&#32;will&#32;break&#32;&quot;</emphasis>&#32;+&#32;GetType().Name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;s&#32;ability&#32;to&#32;sync&#32;triggers.&quot;</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sharedTriggHashes.Add(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>[i],&#32;i);
<anchor xml:id="__sync_animator_8cs_source_1l00504"/>00504 
<anchor xml:id="__sync_animator_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;masterSharedTriggHashes.Add(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;sharedTriggHashes);
<anchor xml:id="__sync_animator_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;masterSharedTriggIndexes.Add(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sharedTriggHashes&#32;=&#32;masterSharedTriggHashes[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>&#32;=&#32;masterSharedTriggIndexes[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00513"/>00513 
<anchor xml:id="__sync_animator_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!masterSharedStateHashes.ContainsKey(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>))
<anchor xml:id="__sync_animator_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sharedStateHashes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;int&gt;();
<anchor xml:id="__sync_animator_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>.Count;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sharedStateHashes.ContainsKey(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>[i]))
<anchor xml:id="__sync_animator_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;There&#32;appear&#32;to&#32;be&#32;duplicate&#32;State&#32;names&#32;in&#32;the&#32;animator&#32;controller&#32;on&#32;&apos;&quot;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;.&#32;This&#32;will&#32;break&#32;&quot;</emphasis>&#32;+&#32;GetType().Name&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;s&#32;ability&#32;to&#32;sync&#32;states.&quot;</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sharedStateHashes.Add(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>[i],&#32;i);
<anchor xml:id="__sync_animator_8cs_source_1l00525"/>00525 
<anchor xml:id="__sync_animator_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;masterSharedStateHashes.Add(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;sharedStateHashes);
<anchor xml:id="__sync_animator_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;masterSharedStateIndexes.Add(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sharedStateHashes&#32;=&#32;masterSharedStateHashes[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>&#32;=&#32;masterSharedStateIndexes[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>];
<anchor xml:id="__sync_animator_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00534"/>00534 
<anchor xml:id="__sync_animator_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults">ParameterDefaults</link>&#32;pd;
<anchor xml:id="__sync_animator_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(masterSharedParamDefaults.TryGetValue(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;out&#32;pd))
<anchor xml:id="__sync_animator_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>&#32;=&#32;pd;
<anchor xml:id="__sync_animator_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;masterSharedParamDefaults.Add(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00540"/>00540 
<anchor xml:id="__sync_animator_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings">ParameterSettings</link>[]&#32;ps;
<anchor xml:id="__sync_animator_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(masterSharedParamSettings.TryGetValue(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;out&#32;ps))
<anchor xml:id="__sync_animator_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>&#32;=&#32;ps;
<anchor xml:id="__sync_animator_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;masterSharedParamSettings.Add(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00547"/>00547 
<anchor xml:id="__sync_animator_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDestroy()
<anchor xml:id="__sync_animator_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9631f346f5192ce168f847118a93f502">masterSharedFramePool</link>[<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a1a195e0c094e2b1f3ec35f9c046df382">prefabInstanceId</link>].Push(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a972e47bd4f848149984309e8c6c6a452">frames</link>);
<anchor xml:id="__sync_animator_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00553"/>00553 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00554"/>00554 
<anchor xml:id="__sync_animator_8cs_source_1l00555"/>00555 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Net&#32;Serialization/Deserialization</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00556"/>00556 
<anchor xml:id="__sync_animator_8cs_source_1l00560"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a15fe835d0286ce119203834f2911ece3">00560</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a15fe835d0286ce119203834f2911ece3">OnNetSerialize</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_animator_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;frame&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a972e47bd4f848149984309e8c6c6a452">frames</link>[frameId];
<anchor xml:id="__sync_animator_8cs_source_1l00563"/>00563 
<anchor xml:id="__sync_animator_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frame.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_frame_base_1a45da8bf6405dbfdc980de84c05bbb281">content</link>&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_animator_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00571"/>00571 
<anchor xml:id="__sync_animator_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00574"/>00574 
<anchor xml:id="__sync_animator_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe&#32;=&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_use_keyframes_1a7e4806962882ee4530fb8ae47021c37c">IsKeyframe</link>(frameId);
<anchor xml:id="__sync_animator_8cs_source_1l00576"/>00576 
<anchor xml:id="__sync_animator_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;WriteAllToBuffer(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00579"/>00579 
<anchor xml:id="__sync_animator_8cs_source_1l00583"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a2feefd3ad96eb24de78192fac3921433">00583</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a2feefd3ad96eb24de78192fac3921433">OnNetDeserialize</link>(<emphasis role="keywordtype">int</emphasis>&#32;originFrameId,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1afad021fc5045c5c4d2a18701c296c9db">FrameArrival</link>&#32;arrival)
<anchor xml:id="__sync_animator_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe&#32;=&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_use_keyframes_1a7e4806962882ee4530fb8ae47021c37c">IsKeyframe</link>(originFrameId);
<anchor xml:id="__sync_animator_8cs_source_1l00586"/>00586 
<anchor xml:id="__sync_animator_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;frame&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a07f3cb70e7a939e8069acee601ada57b">IsMine</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aff1fdaa9e9af21dac22f224d13599775">offtickFrame</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a972e47bd4f848149984309e8c6c6a452">frames</link>[originFrameId];
<anchor xml:id="__sync_animator_8cs_source_1l00589"/>00589 
<anchor xml:id="__sync_animator_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!buffer.ReadBool(ref&#32;bitposition))
<anchor xml:id="__sync_animator_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_animator_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00595"/>00595 
<anchor xml:id="__sync_animator_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.content&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae412f4c62f5640c95deca829169e33f2">FrameContents</link>.Complete;
<anchor xml:id="__sync_animator_8cs_source_1l00597"/>00597 
<anchor xml:id="__sync_animator_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReadAllFromBuffer(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00601"/>00601 
<anchor xml:id="__sync_animator_8cs_source_1l00602"/>00602 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00603"/>00603 
<anchor xml:id="__sync_animator_8cs_source_1l00604"/>00604 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Buffer&#32;Writer/Readers</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00605"/>00605 
<anchor xml:id="__sync_animator_8cs_source_1l00606"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ad36a4cb5145f1f1d8ee41c22a81bf177">00606</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ad36a4cb5145f1f1d8ee41c22a81bf177">OnCaptureCurrentState</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId)
<anchor xml:id="__sync_animator_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;frame&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a972e47bd4f848149984309e8c6c6a452">frames</link>[frameId];
<anchor xml:id="__sync_animator_8cs_source_1l00609"/>00609 
<anchor xml:id="__sync_animator_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isActiveAndEnabled&#32;||&#32;!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.isActiveAndEnabled)
<anchor xml:id="__sync_animator_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_frame_base_1a45da8bf6405dbfdc980de84c05bbb281">content</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae412f4c62f5640c95deca829169e33f2">FrameContents</link>.Empty;
<anchor xml:id="__sync_animator_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00616"/>00616 
<anchor xml:id="__sync_animator_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">syncParams</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CaptureParameters(frame);
<anchor xml:id="__sync_animator_8cs_source_1l00619"/>00619 
<anchor xml:id="__sync_animator_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">syncPassThrus</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CapturePassThrus(frame);
<anchor xml:id="__sync_animator_8cs_source_1l00622"/>00622 
<anchor xml:id="__sync_animator_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CaptureStates(frame);
<anchor xml:id="__sync_animator_8cs_source_1l00625"/>00625 
<anchor xml:id="__sync_animator_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CaptureLayerWeights(frame);
<anchor xml:id="__sync_animator_8cs_source_1l00628"/>00628 
<anchor xml:id="__sync_animator_8cs_source_1l00629"/>00629 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(syncIKFeet)
<anchor xml:id="__sync_animator_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CaptureIK(frame);
<anchor xml:id="__sync_animator_8cs_source_1l00632"/>00632 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00633"/>00633 
<anchor xml:id="__sync_animator_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_frame_base_1a45da8bf6405dbfdc980de84c05bbb281">content</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae412f4c62f5640c95deca829169e33f2">FrameContents</link>.Complete;
<anchor xml:id="__sync_animator_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00636"/>00636 
<anchor xml:id="__sync_animator_8cs_source_1l00637"/>00637 
<anchor xml:id="__sync_animator_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;WriteAllToBuffer(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_animator_8cs_source_1l00641"/>00641 
<anchor xml:id="__sync_animator_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">syncPassThrus</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;WritePassThrus(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00645"/>00645 
<anchor xml:id="__sync_animator_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">syncParams</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;WriteParameters(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00648"/>00648 
<anchor xml:id="__sync_animator_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;WriteStates(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00651"/>00651 
<anchor xml:id="__sync_animator_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;WriteLayerWeights(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00654"/>00654 
<anchor xml:id="__sync_animator_8cs_source_1l00655"/>00655 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(syncIKFeet)
<anchor xml:id="__sync_animator_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;WriteIK(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00658"/>00658 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Mark&#32;as&#32;always&#32;having&#32;content.&#32;Can&#32;revisit&#32;this&#32;later.</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__sync_animator_8cs_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00662"/>00662 
<anchor xml:id="__sync_animator_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ReadAllFromBuffer(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">syncPassThrus</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReadPassThrus(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00667"/>00667 
<anchor xml:id="__sync_animator_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">syncParams</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReadParameters(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00670"/>00670 
<anchor xml:id="__sync_animator_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReadStates(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00673"/>00673 
<anchor xml:id="__sync_animator_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReadLayerWeights(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00676"/>00676 
<anchor xml:id="__sync_animator_8cs_source_1l00677"/>00677 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(syncIKFeet)
<anchor xml:id="__sync_animator_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReadIK(frame,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyframe);
<anchor xml:id="__sync_animator_8cs_source_1l00680"/>00680 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00681"/>00681 
<anchor xml:id="__sync_animator_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00683"/>00683 
<anchor xml:id="__sync_animator_8cs_source_1l00684"/>00684 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Parameter&#32;Handling</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00685"/>00685 
<anchor xml:id="__sync_animator_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;WriteParameters(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;paramaters&#32;=&#32;frame.parameters;
<anchor xml:id="__sync_animator_8cs_source_1l00692"/>00692 
<anchor xml:id="__sync_animator_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_animator_8cs_source_1l00694"/>00694 
<anchor xml:id="__sync_animator_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;pid&#32;=&#32;0;&#32;pid&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;&#32;++pid)
<anchor xml:id="__sync_animator_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ps&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00698"/>00698 
<anchor xml:id="__sync_animator_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>&#32;&amp;&amp;&#32;!ps.include)
<anchor xml:id="__sync_animator_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00701"/>00701 
<anchor xml:id="__sync_animator_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;ps.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings_1a033815b404e4243b17c4d3eb2c855783">paramType</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00703"/>00703 
<anchor xml:id="__sync_animator_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Int)
<anchor xml:id="__sync_animator_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;val&#32;=&#32;paramaters[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00707"/>00707 
<anchor xml:id="__sync_animator_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isKeyframe&#32;||&#32;val&#32;!=&#32;lastSentParams[pid])
<anchor xml:id="__sync_animator_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00712"/>00712 
<anchor xml:id="__sync_animator_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(val,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_animator_8cs_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps.icrusher.WriteValue(val,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00717"/>00717 
<anchor xml:id="__sync_animator_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastSentParams[pid]&#32;=&#32;val;
<anchor xml:id="__sync_animator_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00727"/>00727 
<anchor xml:id="__sync_animator_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Float)
<anchor xml:id="__sync_animator_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;val&#32;=&#32;paramaters[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fcrusher&#32;=&#32;ps.fcrusher;
<anchor xml:id="__sync_animator_8cs_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint&#32;cval&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)&#32;?&#32;HalfUtilities.Pack(val)&#32;:&#32;(uint)fcrusher.Encode(val);
<anchor xml:id="__sync_animator_8cs_source_1l00733"/>00733 
<anchor xml:id="__sync_animator_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isKeyframe&#32;||&#32;cval&#32;!=&#32;lastSentParams[pid].UInt)
<anchor xml:id="__sync_animator_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00738"/>00738 
<anchor xml:id="__sync_animator_8cs_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)
<anchor xml:id="__sync_animator_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(cval,&#32;ref&#32;bitposition,&#32;16);
<anchor xml:id="__sync_animator_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fcrusher.WriteCValue(cval,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00743"/>00743 
<anchor xml:id="__sync_animator_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastSentParams[pid]&#32;=&#32;cval;
<anchor xml:id="__sync_animator_8cs_source_1l00745"/>00745 
<anchor xml:id="__sync_animator_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;Float&#32;&quot;&#32;+&#32;cval&#32;+&#32;&quot;:&quot;&#32;+&#32;val);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00754"/>00754 
<anchor xml:id="__sync_animator_8cs_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00756"/>00756 
<anchor xml:id="__sync_animator_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Bool)
<anchor xml:id="__sync_animator_8cs_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;val&#32;=&#32;paramaters[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(val,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00761"/>00761 
<anchor xml:id="__sync_animator_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isKeyframe&#32;||&#32;val&#32;!=&#32;lastSentParams[pid])
<anchor xml:id="__sync_animator_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00765"/>00765 
<anchor xml:id="__sync_animator_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Trigger)
<anchor xml:id="__sync_animator_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00768"/>00768 
<anchor xml:id="__sync_animator_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;val&#32;=&#32;paramaters[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(val,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00771"/>00771 
<anchor xml:id="__sync_animator_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isKeyframe&#32;||&#32;val&#32;!=&#32;lastSentParams[pid])
<anchor xml:id="__sync_animator_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__sync_animator_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00778"/>00778 
<anchor xml:id="__sync_animator_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CaptureParameters(Frame&#32;frame)
<anchor xml:id="__sync_animator_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;paramaters&#32;=&#32;frame.parameters;
<anchor xml:id="__sync_animator_8cs_source_1l00782"/>00782 
<anchor xml:id="__sync_animator_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;pid&#32;=&#32;0;&#32;pid&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;&#32;++pid)
<anchor xml:id="__sync_animator_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ps&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00786"/>00786 
<anchor xml:id="__sync_animator_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>&#32;&amp;&amp;&#32;!ps.include)
<anchor xml:id="__sync_animator_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00789"/>00789 
<anchor xml:id="__sync_animator_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;ps.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings_1a033815b404e4243b17c4d3eb2c855783">paramType</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nameHash&#32;=&#32;ps.hash;
<anchor xml:id="__sync_animator_8cs_source_1l00792"/>00792 
<anchor xml:id="__sync_animator_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(type)
<anchor xml:id="__sync_animator_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.Float:
<anchor xml:id="__sync_animator_8cs_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paramaters[pid]&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetFloat(nameHash);
<anchor xml:id="__sync_animator_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00798"/>00798 
<anchor xml:id="__sync_animator_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.Int:
<anchor xml:id="__sync_animator_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paramaters[pid]&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetInteger(nameHash);
<anchor xml:id="__sync_animator_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00802"/>00802 
<anchor xml:id="__sync_animator_8cs_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.Bool:
<anchor xml:id="__sync_animator_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paramaters[pid]&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetBool(nameHash);
<anchor xml:id="__sync_animator_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00806"/>00806 
<anchor xml:id="__sync_animator_8cs_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.Trigger:
<anchor xml:id="__sync_animator_8cs_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paramaters[pid]&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetBool(nameHash);
<anchor xml:id="__sync_animator_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00810"/>00810 
<anchor xml:id="__sync_animator_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__sync_animator_8cs_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00813"/>00813 
<anchor xml:id="__sync_animator_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00817"/>00817 
<anchor xml:id="__sync_animator_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ReadParameters(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>[]&#32;parms&#32;=&#32;frame.parameters;
<anchor xml:id="__sync_animator_8cs_source_1l00821"/>00821 
<anchor xml:id="__sync_animator_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;frameIsInUse&#32;=&#32;(ReferenceEquals(frame,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>))&#32;||&#32;(ReferenceEquals(frame,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a19daa1a2df5ff1a0028edece59912024">snapFrame</link>));
<anchor xml:id="__sync_animator_8cs_source_1l00825"/>00825 
<anchor xml:id="__sync_animator_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;pid&#32;=&#32;0;&#32;pid&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;&#32;++pid)
<anchor xml:id="__sync_animator_8cs_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ps&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00829"/>00829 
<anchor xml:id="__sync_animator_8cs_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>&#32;&amp;&amp;&#32;!ps.include)
<anchor xml:id="__sync_animator_8cs_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00832"/>00832 
<anchor xml:id="__sync_animator_8cs_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;ps.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings_1a033815b404e4243b17c4d3eb2c855783">paramType</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00834"/>00834 
<anchor xml:id="__sync_animator_8cs_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(type)
<anchor xml:id="__sync_animator_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.Int:
<anchor xml:id="__sync_animator_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;used&#32;=&#32;isKeyframe&#32;?&#32;true&#32;:&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00840"/>00840 
<anchor xml:id="__sync_animator_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(used)
<anchor xml:id="__sync_animator_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;val&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)&#32;?
<anchor xml:id="__sync_animator_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32)&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps.icrusher.ReadValue(buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00846"/>00846 
<anchor xml:id="__sync_animator_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;val;
<anchor xml:id="__sync_animator_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!frameIsInUse)
<anchor xml:id="__sync_animator_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>.<link linkend="_struct_photon_1_1_utilities_1_1_smart_var_1a8d8262ffedf27e602e8a8a4a6e27db19">None</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.<link linkend="_struct_photon_1_1_utilities_1_1_smart_var_1a01ddc1761f304e599a2c656db850d828">Float</link>:
<anchor xml:id="__sync_animator_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;used&#32;=&#32;isKeyframe&#32;?&#32;true&#32;:&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00859"/>00859 
<anchor xml:id="__sync_animator_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(used)
<anchor xml:id="__sync_animator_8cs_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)&#32;?
<anchor xml:id="__sync_animator_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadHalf(ref&#32;bitposition)&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps.fcrusher.ReadValue(buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!frameIsInUse)
<anchor xml:id="__sync_animator_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>.<link linkend="_struct_photon_1_1_utilities_1_1_smart_var_1a8d8262ffedf27e602e8a8a4a6e27db19">None</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.<link linkend="_struct_photon_1_1_utilities_1_1_smart_var_1ab158402861fc7c64ec73426664085cb3">Bool</link>:
<anchor xml:id="__sync_animator_8cs_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;val&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00876"/>00876 
<anchor xml:id="__sync_animator_8cs_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;val;
<anchor xml:id="__sync_animator_8cs_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00880"/>00880 
<anchor xml:id="__sync_animator_8cs_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.Trigger:
<anchor xml:id="__sync_animator_8cs_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;val&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;val;
<anchor xml:id="__sync_animator_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00887"/>00887 
<anchor xml:id="__sync_animator_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00889"/>00889 
<anchor xml:id="__sync_animator_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(type&#32;==&#32;AnimatorControllerParameterType.Int)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;bool&#32;used&#32;=&#32;isKeyframe&#32;?&#32;true&#32;:&#32;buffer.ReadBool(ref&#32;bitposition);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00893"/>00893 
<anchor xml:id="__sync_animator_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(used)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;int&#32;val&#32;=&#32;(useGlobalParamSettings)&#32;?</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32)&#32;:</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps.icrusher.ReadValue(buffer,&#32;ref&#32;bitposition);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00899"/>00899 
<anchor xml:id="__sync_animator_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;val;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(!frameIsInUse)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;SmartVar.None;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00908"/>00908 
<anchor xml:id="__sync_animator_8cs_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else&#32;if&#32;(type&#32;==&#32;AnimatorControllerParameterType.Float)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;bool&#32;used&#32;=&#32;isKeyframe&#32;?&#32;true&#32;:&#32;buffer.ReadBool(ref&#32;bitposition);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00912"/>00912 
<anchor xml:id="__sync_animator_8cs_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(used)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;(useGlobalParamSettings)&#32;?</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadHalf(ref&#32;bitposition)&#32;:</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps.fcrusher.ReadValue(buffer,&#32;ref&#32;bitposition);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(!frameIsInUse)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parms[pid]&#32;=&#32;SmartVar.None;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00925"/>00925 
<anchor xml:id="__sync_animator_8cs_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else&#32;if&#32;(type&#32;==&#32;AnimatorControllerParameterType.Bool)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;bool&#32;val&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;parms[pid]&#32;=&#32;val;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00932"/>00932 
<anchor xml:id="__sync_animator_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else&#32;if&#32;(type&#32;==&#32;AnimatorControllerParameterType.Trigger)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;bool&#32;val&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;parms[pid]&#32;=&#32;val;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00941"/>00941 
<anchor xml:id="__sync_animator_8cs_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CompleteTargetParameters()
<anchor xml:id="__sync_animator_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>[]&#32;prevParams&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a19daa1a2df5ff1a0028edece59912024">snapFrame</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a19daa1a2df5ff1a0028edece59912024">snapFrame</link>.parameters&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>.parameters;
<anchor xml:id="__sync_animator_8cs_source_1l00949"/>00949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>[]&#32;targParams&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>.parameters;
<anchor xml:id="__sync_animator_8cs_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(<emphasis role="keywordtype">int</emphasis>&#32;pid&#32;=&#32;0;&#32;pid&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;&#32;++pid)
<anchor xml:id="__sync_animator_8cs_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>&#32;prevParam&#32;=&#32;prevParams[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>&#32;targParam&#32;=&#32;targParams[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;psettings&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00959"/>00959 
<anchor xml:id="__sync_animator_8cs_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prevParam.<link linkend="_struct_photon_1_1_utilities_1_1_smart_var_1a88e8f36c54b37a40ee94f9a09bc545bf">TypeCode</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_utilities_1a3bfa5049728e06afa002851a4f694a4f">SmartVarTypeCode</link>.None)
<anchor xml:id="__sync_animator_8cs_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevParam&#32;=&#32;psettings.defaultValue;
<anchor xml:id="__sync_animator_8cs_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevParams[pid]&#32;=&#32;prevParam;
<anchor xml:id="__sync_animator_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00965"/>00965 
<anchor xml:id="__sync_animator_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targParam.<link linkend="_struct_photon_1_1_utilities_1_1_smart_var_1a88e8f36c54b37a40ee94f9a09bc545bf">TypeCode</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_utilities_1a3bfa5049728e06afa002851a4f694a4f">SmartVarTypeCode</link>.None)
<anchor xml:id="__sync_animator_8cs_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targParam&#32;=&#32;prevParam;
<anchor xml:id="__sync_animator_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targParams[pid]&#32;=&#32;prevParam;
<anchor xml:id="__sync_animator_8cs_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00971"/>00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00972"/>00972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l00973"/>00973 
<anchor xml:id="__sync_animator_8cs_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InterpolateParams(<emphasis role="keywordtype">float</emphasis>&#32;t)
<anchor xml:id="__sync_animator_8cs_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00980"/>00980 
<anchor xml:id="__sync_animator_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>[]&#32;prevParams&#32;=<emphasis role="comment">/*&#32;(snapF&#32;!=&#32;null)&#32;?*/</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a19daa1a2df5ff1a0028edece59912024">snapFrame</link>.parameters&#32;<emphasis role="comment">/*:&#32;targF.parameters*/</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>[]&#32;targParams&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>.parameters;
<anchor xml:id="__sync_animator_8cs_source_1l00983"/>00983 
<anchor xml:id="__sync_animator_8cs_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;pid&#32;=&#32;0;&#32;pid&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;&#32;++pid)
<anchor xml:id="__sync_animator_8cs_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l00986"/>00986 
<anchor xml:id="__sync_animator_8cs_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;psettings&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;psettings.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings_1a8e2b2a9d97232c8c1f902c8f4c18d2ee">hash</link>;
<anchor xml:id="__sync_animator_8cs_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>&#32;&amp;&amp;&#32;!psettings.include)
<anchor xml:id="__sync_animator_8cs_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00991"/>00991 
<anchor xml:id="__sync_animator_8cs_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;psettings.paramType;
<anchor xml:id="__sync_animator_8cs_source_1l00993"/>00993 
<anchor xml:id="__sync_animator_8cs_source_1l00994"/>00994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>&#32;prevParam&#32;=&#32;prevParams[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>&#32;targParam&#32;=&#32;targParams[pid];
<anchor xml:id="__sync_animator_8cs_source_1l00996"/>00996 
<anchor xml:id="__sync_animator_8cs_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prevParam.<link linkend="_struct_photon_1_1_utilities_1_1_smart_var_1a88e8f36c54b37a40ee94f9a09bc545bf">TypeCode</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_utilities_1a3bfa5049728e06afa002851a4f694a4f">SmartVarTypeCode</link>.None)
<anchor xml:id="__sync_animator_8cs_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l00999"/>00999 
<anchor xml:id="__sync_animator_8cs_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targParam.<link linkend="_struct_photon_1_1_utilities_1_1_smart_var_1a88e8f36c54b37a40ee94f9a09bc545bf">TypeCode</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_utilities_1a3bfa5049728e06afa002851a4f694a4f">SmartVarTypeCode</link>.None)
<anchor xml:id="__sync_animator_8cs_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01002"/>01002 
<anchor xml:id="__sync_animator_8cs_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(type)
<anchor xml:id="__sync_animator_8cs_source_1l01004"/>01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.<link linkend="_struct_photon_1_1_utilities_1_1_smart_var_1a66f9fce558770d6c3077ee4ddde46ee8">Int</link>:
<anchor xml:id="__sync_animator_8cs_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a6055a02b73320ec888851987f32ef69f">includeInts</link>&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01009"/>01009 
<anchor xml:id="__sync_animator_8cs_source_1l01011"/>01011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01012"/>01012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetInteger(hash,&#32;prevParam);
<anchor xml:id="__sync_animator_8cs_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01015"/>01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01016"/>01016 
<anchor xml:id="__sync_animator_8cs_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>&#32;interpmethod;
<anchor xml:id="__sync_animator_8cs_source_1l01018"/>01018 
<anchor xml:id="__sync_animator_8cs_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)
<anchor xml:id="__sync_animator_8cs_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interpmethod&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a01f8d7627b277a1dad424c8ba9371e84">interpolateInts</link>;
<anchor xml:id="__sync_animator_8cs_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interpmethod&#32;=&#32;psettings.interpolate;
<anchor xml:id="__sync_animator_8cs_source_1l01023"/>01023 
<anchor xml:id="__sync_animator_8cs_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(interpmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>.Hold)
<anchor xml:id="__sync_animator_8cs_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01026"/>01026 
<anchor xml:id="__sync_animator_8cs_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;value&#32;=
<anchor xml:id="__sync_animator_8cs_source_1l01028"/>01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(interpmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>.Advance)&#32;?&#32;(<emphasis role="keywordtype">int</emphasis>)targParam&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(interpmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>.Lerp)&#32;?&#32;(<emphasis role="keywordtype">int</emphasis>)Mathf.Lerp(prevParam,&#32;targParam,&#32;t)&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(int)psettings.defaultValue;
<anchor xml:id="__sync_animator_8cs_source_1l01031"/>01031 
<anchor xml:id="__sync_animator_8cs_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetInteger(hash,&#32;value);
<anchor xml:id="__sync_animator_8cs_source_1l01033"/>01033 
<anchor xml:id="__sync_animator_8cs_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01036"/>01036 
<anchor xml:id="__sync_animator_8cs_source_1l01037"/>01037 
<anchor xml:id="__sync_animator_8cs_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.Float:
<anchor xml:id="__sync_animator_8cs_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a9a55d95a7153db6343195aacf8b7bcb5">includeFloats</link>&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01042"/>01042 
<anchor xml:id="__sync_animator_8cs_source_1l01043"/>01043 
<anchor xml:id="__sync_animator_8cs_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetFloat(hash,&#32;prevParam);
<anchor xml:id="__sync_animator_8cs_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01049"/>01049 
<anchor xml:id="__sync_animator_8cs_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>&#32;interpmethod;
<anchor xml:id="__sync_animator_8cs_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)
<anchor xml:id="__sync_animator_8cs_source_1l01052"/>01052 
<anchor xml:id="__sync_animator_8cs_source_1l01053"/>01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interpmethod&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1ad6ba5744c96039b3db7089de9e3b0ce4">interpolateFloats</link>;
<anchor xml:id="__sync_animator_8cs_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interpmethod&#32;=&#32;psettings.interpolate;
<anchor xml:id="__sync_animator_8cs_source_1l01056"/>01056 
<anchor xml:id="__sync_animator_8cs_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(interpmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>.Hold)
<anchor xml:id="__sync_animator_8cs_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01059"/>01059 
<anchor xml:id="__sync_animator_8cs_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>&#32;value&#32;=
<anchor xml:id="__sync_animator_8cs_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(interpmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>.Lerp)&#32;?&#32;(<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>)(Mathf.Lerp((<emphasis role="keywordtype">float</emphasis>)prevParam,&#32;(float)targParam,&#32;t))&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l01062"/>01062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(interpmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>.Advance)&#32;?&#32;targParam&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l01063"/>01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;psettings.defaultValue;
<anchor xml:id="__sync_animator_8cs_source_1l01064"/>01064 
<anchor xml:id="__sync_animator_8cs_source_1l01065"/>01065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetFloat(hash,&#32;value);
<anchor xml:id="__sync_animator_8cs_source_1l01066"/>01066 
<anchor xml:id="__sync_animator_8cs_source_1l01067"/>01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01069"/>01069 
<anchor xml:id="__sync_animator_8cs_source_1l01070"/>01070 
<anchor xml:id="__sync_animator_8cs_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.Bool:
<anchor xml:id="__sync_animator_8cs_source_1l01072"/>01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;!=&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01075"/>01075 
<anchor xml:id="__sync_animator_8cs_source_1l01076"/>01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a220e36c0b983be93980f96357dfeb362">includeBools</link>)
<anchor xml:id="__sync_animator_8cs_source_1l01077"/>01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01078"/>01078 
<anchor xml:id="__sync_animator_8cs_source_1l01079"/>01079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetBool(hash,&#32;prevParam);
<anchor xml:id="__sync_animator_8cs_source_1l01080"/>01080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01081"/>01081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01082"/>01082 
<anchor xml:id="__sync_animator_8cs_source_1l01083"/>01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnimatorControllerParameterType.Trigger:
<anchor xml:id="__sync_animator_8cs_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01085"/>01085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t&#32;!=&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01087"/>01087 
<anchor xml:id="__sync_animator_8cs_source_1l01088"/>01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1abd9eaf031ae77e581983282e40022db2">includeTriggers</link>)
<anchor xml:id="__sync_animator_8cs_source_1l01089"/>01089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01090"/>01090 
<anchor xml:id="__sync_animator_8cs_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prevParam)
<anchor xml:id="__sync_animator_8cs_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetTrigger(hash);
<anchor xml:id="__sync_animator_8cs_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01094"/>01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01095"/>01095 
<anchor xml:id="__sync_animator_8cs_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__sync_animator_8cs_source_1l01097"/>01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01099"/>01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01100"/>01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01101"/>01101 
<anchor xml:id="__sync_animator_8cs_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ExtrapolateParams(Frame&#32;prev,&#32;Frame&#32;targ,&#32;Frame&#32;newtarg)
<anchor xml:id="__sync_animator_8cs_source_1l01108"/>01108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(prev,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__sync_animator_8cs_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01111"/>01111 
<anchor xml:id="__sync_animator_8cs_source_1l01112"/>01112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;prev_params&#32;=&#32;prev.parameters;
<anchor xml:id="__sync_animator_8cs_source_1l01113"/>01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;targ_params&#32;=&#32;targ.parameters;
<anchor xml:id="__sync_animator_8cs_source_1l01114"/>01114 
<anchor xml:id="__sync_animator_8cs_source_1l01116"/>01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;pid&#32;=&#32;0;&#32;pid&#32;&lt;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;&#32;++pid)
<anchor xml:id="__sync_animator_8cs_source_1l01117"/>01117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01118"/>01118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ps&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>[pid];
<anchor xml:id="__sync_animator_8cs_source_1l01119"/>01119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;ps.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings_1a033815b404e4243b17c4d3eb2c855783">paramType</link>;
<anchor xml:id="__sync_animator_8cs_source_1l01120"/>01120 
<anchor xml:id="__sync_animator_8cs_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>&#32;&amp;&amp;&#32;!ps.include)
<anchor xml:id="__sync_animator_8cs_source_1l01122"/>01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01123"/>01123 
<anchor xml:id="__sync_animator_8cs_source_1l01126"/>01126 
<anchor xml:id="__sync_animator_8cs_source_1l01127"/>01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Float&#32;lerps&#32;back&#32;toward&#32;default&#32;value&#32;on&#32;lost&#32;frames&#32;as&#32;a&#32;loss&#32;handling&#32;compromise&#32;currently.</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Float)
<anchor xml:id="__sync_animator_8cs_source_1l01129"/>01129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01130"/>01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;extrapmethod&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1ac847f0ba38f660462b280161f9c8b839">extrapolateFloats</link>&#32;:&#32;ps.extrapolate;
<anchor xml:id="__sync_animator_8cs_source_1l01131"/>01131 
<anchor xml:id="__sync_animator_8cs_source_1l01132"/>01132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newtarg.parameters[pid]&#32;=
<anchor xml:id="__sync_animator_8cs_source_1l01133"/>01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(extrapmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>.Hold)&#32;?&#32;targ_params[pid]&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l01134"/>01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(extrapmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>.Lerp)&#32;?&#32;(<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>)(targ_params[pid]&#32;+&#32;((float)targ_params[pid]&#32;-&#32;prev_params[pid]))&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps.defaultValue;
<anchor xml:id="__sync_animator_8cs_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01137"/>01137 
<anchor xml:id="__sync_animator_8cs_source_1l01138"/>01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Int)
<anchor xml:id="__sync_animator_8cs_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;extrapmethod&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a15d81f697f07d67e35057f62a2df179b">extrapolateInts</link>&#32;:&#32;ps.extrapolate;
<anchor xml:id="__sync_animator_8cs_source_1l01141"/>01141 
<anchor xml:id="__sync_animator_8cs_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newtarg.parameters[pid]&#32;=
<anchor xml:id="__sync_animator_8cs_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(extrapmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>.Hold)&#32;?&#32;targ_params[pid]&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l01144"/>01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(extrapmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>.Lerp)&#32;?&#32;(<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>)(targ_params[pid]&#32;+&#32;(targ_params[pid]&#32;-&#32;prev_params[pid]))&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps.defaultValue;
<anchor xml:id="__sync_animator_8cs_source_1l01146"/>01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01147"/>01147 
<anchor xml:id="__sync_animator_8cs_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Bool)
<anchor xml:id="__sync_animator_8cs_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01150"/>01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;extrapmethod&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a27fcc6c2dffb66ac256b67489ddd7f62">extrapolateBools</link>&#32;:&#32;ps.extrapolate;
<anchor xml:id="__sync_animator_8cs_source_1l01151"/>01151 
<anchor xml:id="__sync_animator_8cs_source_1l01152"/>01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newtarg.parameters[pid]&#32;=
<anchor xml:id="__sync_animator_8cs_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(extrapmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>.Hold)&#32;?&#32;targ_params[pid]&#32;:&#32;ps.defaultValue;
<anchor xml:id="__sync_animator_8cs_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01155"/>01155 
<anchor xml:id="__sync_animator_8cs_source_1l01157"/>01157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="comment">/*if&#32;(includeTriggers)*/</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01158"/>01158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01159"/>01159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;extrapmethod&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a5169111cbf5e4390d4302c9088ab143b">extrapolateTriggers</link>&#32;:&#32;ps.extrapolate;
<anchor xml:id="__sync_animator_8cs_source_1l01160"/>01160 
<anchor xml:id="__sync_animator_8cs_source_1l01161"/>01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newtarg.parameters[pid]&#32;=
<anchor xml:id="__sync_animator_8cs_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(extrapmethod&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>.Hold)&#32;?&#32;targ_params[pid]&#32;:&#32;ps.defaultValue;
<anchor xml:id="__sync_animator_8cs_source_1l01163"/>01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01164"/>01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01165"/>01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01166"/>01166 
<anchor xml:id="__sync_animator_8cs_source_1l01167"/>01167 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01168"/>01168 
<anchor xml:id="__sync_animator_8cs_source_1l01169"/>01169 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Passhthru&#32;Calls</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01170"/>01170 
<anchor xml:id="__sync_animator_8cs_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;Queue&lt;AnimPassThru&gt;&#32;passThruQueue&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Queue&lt;AnimPassThru&gt;(2);
<anchor xml:id="__sync_animator_8cs_source_1l01172"/>01172 
<anchor xml:id="__sync_animator_8cs_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>&#32;type,&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer,&#32;<emphasis role="keywordtype">float</emphasis>&#32;ntime,&#32;<emphasis role="keywordtype">float</emphasis>&#32;otime,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming)
<anchor xml:id="__sync_animator_8cs_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;apt&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimPassThru(type,&#32;hash,&#32;layer,&#32;ntime,&#32;otime,&#32;duration,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;passThruQueue.Enqueue(apt);
<anchor xml:id="__sync_animator_8cs_source_1l01177"/>01177 
<anchor xml:id="__sync_animator_8cs_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(localApplyTiming&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.Immediately&#32;||&#32;!<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">syncPassThrus</link>)
<anchor xml:id="__sync_animator_8cs_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExecutePassThru(apt);
<anchor xml:id="__sync_animator_8cs_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01183"/>01183 
<anchor xml:id="__sync_animator_8cs_source_1l01184"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a44046507aa203a26ea88573e549c302b">01184</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a44046507aa203a26ea88573e549c302b">SetTrigger</link>(<emphasis role="keywordtype">string</emphasis>&#32;triggerName,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;Animator.StringToHash(triggerName);
<anchor xml:id="__sync_animator_8cs_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.SetTrigger,&#32;hash,&#32;-1,&#32;-1,&#32;-1,&#32;-1,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01188"/>01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01189"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a54caab6c33dd51cdde38f1dc84e6d0cc">01189</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a54caab6c33dd51cdde38f1dc84e6d0cc">SetTrigger</link>(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.SetTrigger,&#32;hash,&#32;-1,&#32;-1,&#32;-1,&#32;-1,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01192"/>01192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01193"/>01193 
<anchor xml:id="__sync_animator_8cs_source_1l01194"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a6c5f26c6f220b60f9c66dcc432a21b79">01194</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a6c5f26c6f220b60f9c66dcc432a21b79">ResetTrigger</link>(<emphasis role="keywordtype">string</emphasis>&#32;triggerName,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01196"/>01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;Animator.StringToHash(triggerName);
<anchor xml:id="__sync_animator_8cs_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.ResetTrigger,&#32;hash,&#32;-1,&#32;-1,&#32;-1,&#32;-1,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01199"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a16e0edb0b16e5b82593792f17f7582e0">01199</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a16e0edb0b16e5b82593792f17f7582e0">ResetTrigger</link>(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01201"/>01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.ResetTrigger,&#32;hash,&#32;-1,&#32;-1,&#32;-1,&#32;-1,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01202"/>01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01203"/>01203 
<anchor xml:id="__sync_animator_8cs_source_1l01204"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9ebf3b194070e49d8b6ca0224b499168">01204</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9ebf3b194070e49d8b6ca0224b499168">Play</link>(<emphasis role="keywordtype">string</emphasis>&#32;stateName,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;-1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;normalizedTime&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01205"/>01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01206"/>01206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;Animator.StringToHash(stateName);
<anchor xml:id="__sync_animator_8cs_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.Play,&#32;hash,&#32;layer,&#32;normalizedTime,&#32;-1,&#32;-1,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01209"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a33e019663b55467fa4135c1c84757d22">01209</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a33e019663b55467fa4135c1c84757d22">Play</link>(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;-1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;normalizedTime&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.Play,&#32;hash,&#32;layer,&#32;normalizedTime,&#32;-1,&#32;-1,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01213"/>01213 
<anchor xml:id="__sync_animator_8cs_source_1l01214"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a517eec14eb0d8b168332c789df04220f">01214</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a517eec14eb0d8b168332c789df04220f">PlayInFixedTime</link>(<emphasis role="keywordtype">string</emphasis>&#32;stateName,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;-1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;fixedTime&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01215"/>01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01216"/>01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;Animator.StringToHash(stateName);
<anchor xml:id="__sync_animator_8cs_source_1l01217"/>01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.PlayFixed,&#32;hash,&#32;layer,&#32;-1,&#32;fixedTime,&#32;-1,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01218"/>01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01219"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a40fcfe3cc010f6bff4e1fdf09d0e082a">01219</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a40fcfe3cc010f6bff4e1fdf09d0e082a">PlayInFixedTime</link>(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;-1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;fixedTime&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01220"/>01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01221"/>01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.PlayFixed,&#32;hash,&#32;layer,&#32;-1,&#32;fixedTime,&#32;-1,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01222"/>01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01223"/>01223 
<anchor xml:id="__sync_animator_8cs_source_1l01224"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a39d4a0b3336da15e491f4b20b2682c98">01224</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a39d4a0b3336da15e491f4b20b2682c98">CrossFade</link>(<emphasis role="keywordtype">string</emphasis>&#32;stateName,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;-1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;normalizedTime&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01225"/>01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;Animator.StringToHash(stateName);
<anchor xml:id="__sync_animator_8cs_source_1l01227"/>01227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFade,&#32;hash,&#32;layer,&#32;normalizedTime,&#32;-1,&#32;duration,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01228"/>01228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01229"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a61196f2a5e2853d7eafd7c66c5155816">01229</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a61196f2a5e2853d7eafd7c66c5155816">CrossFade</link>(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;-1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;normalizedTime&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01230"/>01230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFade,&#32;hash,&#32;layer,&#32;normalizedTime,&#32;-1,&#32;duration,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01233"/>01233 
<anchor xml:id="__sync_animator_8cs_source_1l01234"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a397b57d444920f40604e8ac31b744036">01234</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a397b57d444920f40604e8ac31b744036">CrossFadeInFixedTime</link>(<emphasis role="keywordtype">string</emphasis>&#32;stateName,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;-1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;fixedTime&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;Animator.StringToHash(stateName);
<anchor xml:id="__sync_animator_8cs_source_1l01237"/>01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFadeFixed,&#32;hash,&#32;layer,&#32;-1,&#32;fixedTime,&#32;duration,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01238"/>01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01239"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aeba9ffacf6e913a9e3549029453bb6be">01239</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aeba9ffacf6e913a9e3549029453bb6be">CrossFadeInFixedTime</link>(<emphasis role="keywordtype">int</emphasis>&#32;hash,&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;-1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;fixedTime&#32;=&#32;0,&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>&#32;localApplyTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnqueuePassthrough(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFadeFixed,&#32;hash,&#32;layer,&#32;-1,&#32;fixedTime,&#32;duration,&#32;localApplyTiming);
<anchor xml:id="__sync_animator_8cs_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01243"/>01243 
<anchor xml:id="__sync_animator_8cs_source_1l01244"/>01244 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01245"/>01245 
<anchor xml:id="__sync_animator_8cs_source_1l01246"/>01246 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Passthru&#32;Handling</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01247"/>01247 
<anchor xml:id="__sync_animator_8cs_source_1l01251"/>01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ExecutePassThruQueue(Frame&#32;frame)
<anchor xml:id="__sync_animator_8cs_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01253"/>01253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;passThrus&#32;=&#32;frame.passThrus;
<anchor xml:id="__sync_animator_8cs_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(passThrus.Count&#32;&gt;&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01255"/>01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;pt&#32;=&#32;passThrus.Dequeue();
<anchor xml:id="__sync_animator_8cs_source_1l01257"/>01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExecutePassThru(pt);
<anchor xml:id="__sync_animator_8cs_source_1l01258"/>01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01260"/>01260 
<anchor xml:id="__sync_animator_8cs_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ExecutePassThru(AnimPassThru&#32;pt)
<anchor xml:id="__sync_animator_8cs_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01263"/>01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;pt.hash;
<anchor xml:id="__sync_animator_8cs_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(pt.passThruType)
<anchor xml:id="__sync_animator_8cs_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01266"/>01266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.SetTrigger:
<anchor xml:id="__sync_animator_8cs_source_1l01267"/>01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetTrigger(pt.hash);
<anchor xml:id="__sync_animator_8cs_source_1l01268"/>01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01269"/>01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.ResetTrigger:
<anchor xml:id="__sync_animator_8cs_source_1l01270"/>01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.ResetTrigger(pt.hash);
<anchor xml:id="__sync_animator_8cs_source_1l01271"/>01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01272"/>01272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.Play:
<anchor xml:id="__sync_animator_8cs_source_1l01273"/>01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.Play(hash,&#32;pt.layer,&#32;pt.normlTime);
<anchor xml:id="__sync_animator_8cs_source_1l01274"/>01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01275"/>01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.PlayFixed:
<anchor xml:id="__sync_animator_8cs_source_1l01276"/>01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.PlayInFixedTime(hash,&#32;pt.layer,&#32;pt.fixedTime);
<anchor xml:id="__sync_animator_8cs_source_1l01277"/>01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01278"/>01278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFade:
<anchor xml:id="__sync_animator_8cs_source_1l01279"/>01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.CrossFade(hash,&#32;pt.duration,&#32;pt.layer,&#32;pt.normlTime);
<anchor xml:id="__sync_animator_8cs_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFadeFixed:
<anchor xml:id="__sync_animator_8cs_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.CrossFadeInFixedTime(hash,&#32;pt.duration,&#32;pt.layer,&#32;pt.fixedTime);
<anchor xml:id="__sync_animator_8cs_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01286"/>01286 
<anchor xml:id="__sync_animator_8cs_source_1l01287"/>01287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;WritePassThrus(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l01288"/>01288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01289"/>01289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;passThrus&#32;=&#32;frame.passThrus;
<anchor xml:id="__sync_animator_8cs_source_1l01290"/>01290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;(passThrus.Count&#32;==&#32;0)&#32;?&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None&#32;:&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l01291"/>01291 
<anchor xml:id="__sync_animator_8cs_source_1l01292"/>01292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;while&#32;(passThrus.Count&#32;&gt;&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01293"/>01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01294"/>01294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;pt&#32;=&#32;passThrus.Dequeue();
<anchor xml:id="__sync_animator_8cs_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;triggerType&#32;=&#32;pt.passThruType;
<anchor xml:id="__sync_animator_8cs_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;pt.hash;
<anchor xml:id="__sync_animator_8cs_source_1l01297"/>01297 
<anchor xml:id="__sync_animator_8cs_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isTrigger&#32;=&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.SetTrigger&#32;||&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.ResetTrigger;
<anchor xml:id="__sync_animator_8cs_source_1l01299"/>01299 
<anchor xml:id="__sync_animator_8cs_source_1l01300"/>01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pt.localApplyTiming&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1a1985b3b15da34328c675909e04d9097f">LocalApplyTiming</link>.OnSend)
<anchor xml:id="__sync_animator_8cs_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExecutePassThru(pt);
<anchor xml:id="__sync_animator_8cs_source_1l01302"/>01302 
<anchor xml:id="__sync_animator_8cs_source_1l01304"/>01304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01305"/>01305 
<anchor xml:id="__sync_animator_8cs_source_1l01307"/>01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)triggerType,&#32;ref&#32;bitposition,&#32;3);
<anchor xml:id="__sync_animator_8cs_source_1l01308"/>01308 
<anchor xml:id="__sync_animator_8cs_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index;
<anchor xml:id="__sync_animator_8cs_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isIndexed;
<anchor xml:id="__sync_animator_8cs_source_1l01311"/>01311 
<anchor xml:id="__sync_animator_8cs_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isIndexed&#32;=
<anchor xml:id="__sync_animator_8cs_source_1l01313"/>01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(isTrigger)&#32;?&#32;sharedTriggHashes.TryGetValue(hash,&#32;out&#32;index)&#32;:
<anchor xml:id="__sync_animator_8cs_source_1l01314"/>01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sharedStateHashes.TryGetValue(pt.hash,&#32;out&#32;index);
<anchor xml:id="__sync_animator_8cs_source_1l01315"/>01315 
<anchor xml:id="__sync_animator_8cs_source_1l01316"/>01316 
<anchor xml:id="__sync_animator_8cs_source_1l01317"/>01317 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isIndexed)
<anchor xml:id="__sync_animator_8cs_source_1l01319"/>01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(GetType().Name&#32;+
<anchor xml:id="__sync_animator_8cs_source_1l01320"/>01320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;is&#32;networking&#32;a&#32;state/trigger&#32;that&#32;has&#32;not&#32;been&#32;indexed,&#32;resulting&#32;in&#32;greatly&#32;increased&#32;size.&#32;Be&#32;sure&#32;to&#32;click&#32;&apos;Rebuild&#32;Indexes&apos;&#32;whenever&#32;states/triggers&#32;are&#32;added&#32;or&#32;removed.&quot;</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l01321"/>01321 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(isIndexed,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01324"/>01324 
<anchor xml:id="__sync_animator_8cs_source_1l01326"/>01326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isIndexed)
<anchor xml:id="__sync_animator_8cs_source_1l01327"/>01327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)index,&#32;ref&#32;bitposition,&#32;isTrigger&#32;?&#32;bitsForTriggerIndex&#32;:&#32;bitsForStateIndex);
<anchor xml:id="__sync_animator_8cs_source_1l01328"/>01328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01329"/>01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSigned(pt.hash,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_animator_8cs_source_1l01330"/>01330 
<anchor xml:id="__sync_animator_8cs_source_1l01332"/>01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isTrigger)
<anchor xml:id="__sync_animator_8cs_source_1l01333"/>01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01334"/>01334 
<anchor xml:id="__sync_animator_8cs_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useLayer&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;&gt;&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(useLayer)
<anchor xml:id="__sync_animator_8cs_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)pt.layer&#32;+&#32;1,&#32;ref&#32;bitposition,&#32;bitsForLayerIndex);
<anchor xml:id="__sync_animator_8cs_source_1l01339"/>01339 
<anchor xml:id="__sync_animator_8cs_source_1l01340"/>01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useNormalizedTime&#32;=&#32;(triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.Play&#32;||&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFade);
<anchor xml:id="__sync_animator_8cs_source_1l01341"/>01341 
<anchor xml:id="__sync_animator_8cs_source_1l01343"/>01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(useNormalizedTime)
<anchor xml:id="__sync_animator_8cs_source_1l01344"/>01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ntime&#32;=&#32;pt.normlTime;
<anchor xml:id="__sync_animator_8cs_source_1l01346"/>01346 
<anchor xml:id="__sync_animator_8cs_source_1l01347"/>01347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ntime&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01348"/>01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01350"/>01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01351"/>01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01352"/>01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteNorm(ntime,&#32;ref&#32;bitposition,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1af29fb093c6b42cd7bba2e3ffa61fe0cc">passthruNormTimeCompress</link>);
<anchor xml:id="__sync_animator_8cs_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01355"/>01355 
<anchor xml:id="__sync_animator_8cs_source_1l01357"/>01357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01358"/>01358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01359"/>01359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ftime&#32;=&#32;pt.fixedTime;
<anchor xml:id="__sync_animator_8cs_source_1l01360"/>01360 
<anchor xml:id="__sync_animator_8cs_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ftime&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01362"/>01362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01363"/>01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01364"/>01364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01365"/>01365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteHalf(ftime,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01369"/>01369 
<anchor xml:id="__sync_animator_8cs_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isCrossFade&#32;=&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFade&#32;||&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFadeFixed;
<anchor xml:id="__sync_animator_8cs_source_1l01371"/>01371 
<anchor xml:id="__sync_animator_8cs_source_1l01373"/>01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isCrossFade)
<anchor xml:id="__sync_animator_8cs_source_1l01374"/>01374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteHalf(pt.duration,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01375"/>01375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01376"/>01376 
<anchor xml:id="__sync_animator_8cs_source_1l01378"/>01378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01379"/>01379 
<anchor xml:id="__sync_animator_8cs_source_1l01380"/>01380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__sync_animator_8cs_source_1l01381"/>01381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01382"/>01382 
<anchor xml:id="__sync_animator_8cs_source_1l01383"/>01383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CapturePassThrus(Frame&#32;frame)
<anchor xml:id="__sync_animator_8cs_source_1l01384"/>01384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01385"/>01385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">syncPassThrus</link>)
<anchor xml:id="__sync_animator_8cs_source_1l01386"/>01386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(passThruQueue.Count&#32;&gt;&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01387"/>01387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.passThrus.Enqueue(passThruQueue.Dequeue());
<anchor xml:id="__sync_animator_8cs_source_1l01388"/>01388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01389"/>01389 
<anchor xml:id="__sync_animator_8cs_source_1l01390"/>01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ReadPassThrus(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l01391"/>01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01392"/>01392 
<anchor xml:id="__sync_animator_8cs_source_1l01393"/>01393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(buffer.ReadBool(ref&#32;bitposition))
<anchor xml:id="__sync_animator_8cs_source_1l01394"/>01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01396"/>01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>&#32;triggerType&#32;=&#32;(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>)buffer.Read(ref&#32;bitposition,&#32;3);
<anchor xml:id="__sync_animator_8cs_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isTrigger&#32;=&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.SetTrigger&#32;||&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.ResetTrigger;
<anchor xml:id="__sync_animator_8cs_source_1l01398"/>01398 
<anchor xml:id="__sync_animator_8cs_source_1l01400"/>01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isIndexed&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01401"/>01401 
<anchor xml:id="__sync_animator_8cs_source_1l01403"/>01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash;
<anchor xml:id="__sync_animator_8cs_source_1l01404"/>01404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isIndexed)
<anchor xml:id="__sync_animator_8cs_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01406"/>01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isTrigger)
<anchor xml:id="__sync_animator_8cs_source_1l01407"/>01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01408"/>01408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;(int)buffer.Read(ref&#32;bitposition,&#32;bitsForTriggerIndex);
<anchor xml:id="__sync_animator_8cs_source_1l01409"/>01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>[hash];
<anchor xml:id="__sync_animator_8cs_source_1l01410"/>01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01411"/>01411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01412"/>01412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01413"/>01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;(int)buffer.Read(ref&#32;bitposition,&#32;bitsForStateIndex);
<anchor xml:id="__sync_animator_8cs_source_1l01414"/>01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>[hash];
<anchor xml:id="__sync_animator_8cs_source_1l01415"/>01415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01416"/>01416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01418"/>01418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01419"/>01419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;buffer.ReadSigned(ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_animator_8cs_source_1l01420"/>01420 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01421"/>01421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(GetType().Name&#32;+
<anchor xml:id="__sync_animator_8cs_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;is&#32;networking&#32;a&#32;state/trigger&#32;that&#32;has&#32;not&#32;been&#32;indexed,&#32;resulting&#32;in&#32;greatly&#32;increased&#32;size.&#32;Be&#32;sure&#32;to&#32;click&#32;&apos;Rebuild&#32;Indexes&apos;&#32;whenever&#32;states/triggers&#32;are&#32;added&#32;or&#32;removed.&#32;&quot;</emphasis>&#32;+&#32;hash);
<anchor xml:id="__sync_animator_8cs_source_1l01423"/>01423 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01424"/>01424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01426"/>01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isTrigger)
<anchor xml:id="__sync_animator_8cs_source_1l01427"/>01427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01428"/>01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.passThrus.Enqueue(<emphasis role="keyword">new</emphasis>&#32;AnimPassThru(triggerType,&#32;hash,&#32;-1,&#32;-1,&#32;-1,&#32;-1));
<anchor xml:id="__sync_animator_8cs_source_1l01429"/>01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01430"/>01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01431"/>01431 
<anchor xml:id="__sync_animator_8cs_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer;
<anchor xml:id="__sync_animator_8cs_source_1l01434"/>01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useLayer&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;&gt;&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01435"/>01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;layer&#32;=&#32;useLayer&#32;?&#32;((int)buffer.Read(ref&#32;bitposition,&#32;bitsForLayerIndex)&#32;-&#32;1)&#32;:&#32;-1;
<anchor xml:id="__sync_animator_8cs_source_1l01436"/>01436 
<anchor xml:id="__sync_animator_8cs_source_1l01437"/>01437 
<anchor xml:id="__sync_animator_8cs_source_1l01438"/>01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;normTime;
<anchor xml:id="__sync_animator_8cs_source_1l01439"/>01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fixedTime;
<anchor xml:id="__sync_animator_8cs_source_1l01440"/>01440 
<anchor xml:id="__sync_animator_8cs_source_1l01441"/>01441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useNormalizedTime&#32;=&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.Play&#32;||&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFade;
<anchor xml:id="__sync_animator_8cs_source_1l01442"/>01442 
<anchor xml:id="__sync_animator_8cs_source_1l01444"/>01444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(useNormalizedTime)
<anchor xml:id="__sync_animator_8cs_source_1l01445"/>01445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01446"/>01446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;nonZeroTime&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01447"/>01447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normTime&#32;=&#32;(nonZeroTime)&#32;?&#32;buffer.ReadNorm(ref&#32;bitposition,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1af29fb093c6b42cd7bba2e3ffa61fe0cc">passthruNormTimeCompress</link>)&#32;:&#32;0;
<anchor xml:id="__sync_animator_8cs_source_1l01448"/>01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixedTime&#32;=&#32;-1;
<anchor xml:id="__sync_animator_8cs_source_1l01449"/>01449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01451"/>01451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01452"/>01452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01453"/>01453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;nonZeroTime&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01454"/>01454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixedTime&#32;=&#32;(nonZeroTime)&#32;?&#32;buffer.ReadHalf(ref&#32;bitposition)&#32;:&#32;0;
<anchor xml:id="__sync_animator_8cs_source_1l01455"/>01455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normTime&#32;=&#32;-1;
<anchor xml:id="__sync_animator_8cs_source_1l01456"/>01456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01457"/>01457 
<anchor xml:id="__sync_animator_8cs_source_1l01459"/>01459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isCrossFade&#32;=&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFade&#32;||&#32;triggerType&#32;==&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>.CrossFadeFixed;
<anchor xml:id="__sync_animator_8cs_source_1l01460"/>01460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;duration&#32;=&#32;isCrossFade&#32;?&#32;buffer.ReadHalf(ref&#32;bitposition)&#32;:&#32;-1;
<anchor xml:id="__sync_animator_8cs_source_1l01461"/>01461 
<anchor xml:id="__sync_animator_8cs_source_1l01462"/>01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.passThrus.Enqueue(<emphasis role="keyword">new</emphasis>&#32;AnimPassThru(triggerType,&#32;hash,&#32;layer,&#32;normTime,&#32;fixedTime,&#32;duration));
<anchor xml:id="__sync_animator_8cs_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01465"/>01465 
<anchor xml:id="__sync_animator_8cs_source_1l01466"/>01466 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01467"/>01467 
<anchor xml:id="__sync_animator_8cs_source_1l01468"/>01468 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01469"/>01469 
<anchor xml:id="__sync_animator_8cs_source_1l01470"/>01470 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;IK&#32;Handling</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01471"/>01471 
<anchor xml:id="__sync_animator_8cs_source_1l01472"/>01472 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;IK&#32;Inspector</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01474"/>01474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;syncIKHands&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01475"/>01475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;syncIKFeet&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01476"/>01476 
<anchor xml:id="__sync_animator_8cs_source_1l01477"/>01477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__sync_animator_8cs_source_1l01478"/>01478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ikFeetPosCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>(TRSType.Position,&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l01479"/>01479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01480"/>01480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;local&#32;=&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__sync_animator_8cs_source_1l01481"/>01481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(Axis.X,&#32;TRSType.Position,&#32;<emphasis role="keyword">true</emphasis>)&#32;{&#32;BitsDeterminedBy&#32;=&#32;BitsDeterminedBy.HalfFloat&#32;},
<anchor xml:id="__sync_animator_8cs_source_1l01482"/>01482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;YCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(Axis.Y,&#32;TRSType.Position,&#32;<emphasis role="keyword">true</emphasis>)&#32;{&#32;BitsDeterminedBy&#32;=&#32;BitsDeterminedBy.HalfFloat&#32;},
<anchor xml:id="__sync_animator_8cs_source_1l01483"/>01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(Axis.Z,&#32;TRSType.Position,&#32;<emphasis role="keyword">true</emphasis>)&#32;{&#32;BitsDeterminedBy&#32;=&#32;BitsDeterminedBy.HalfFloat&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01484"/>01484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__sync_animator_8cs_source_1l01485"/>01485 
<anchor xml:id="__sync_animator_8cs_source_1l01486"/>01486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__sync_animator_8cs_source_1l01487"/>01487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ikHandPosCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>(TRSType.Position,&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l01488"/>01488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01489"/>01489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;local&#32;=&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__sync_animator_8cs_source_1l01490"/>01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(Axis.X,&#32;TRSType.Position,&#32;<emphasis role="keyword">true</emphasis>)&#32;{&#32;BitsDeterminedBy&#32;=&#32;BitsDeterminedBy.HalfFloat&#32;},
<anchor xml:id="__sync_animator_8cs_source_1l01491"/>01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;YCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(Axis.Y,&#32;TRSType.Position,&#32;<emphasis role="keyword">true</emphasis>)&#32;{&#32;BitsDeterminedBy&#32;=&#32;BitsDeterminedBy.HalfFloat&#32;},
<anchor xml:id="__sync_animator_8cs_source_1l01492"/>01492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(Axis.Z,&#32;TRSType.Position,&#32;<emphasis role="keyword">true</emphasis>)&#32;{&#32;BitsDeterminedBy&#32;=&#32;BitsDeterminedBy.HalfFloat&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01493"/>01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__sync_animator_8cs_source_1l01494"/>01494 
<anchor xml:id="__sync_animator_8cs_source_1l01495"/>01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__sync_animator_8cs_source_1l01496"/>01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ikFeetRotCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>(TRSType.Quaternion,&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l01497"/>01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01498"/>01498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;local&#32;=&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__sync_animator_8cs_source_1l01499"/>01499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_quat_crusher">QuatCrusher</link>(<link linkend="_namespace_photon_1_1_compression_1af48bff148a03c9b6e95d1895b28024b4">CompressLevel</link>.uint32Med,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l01500"/>01500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__sync_animator_8cs_source_1l01501"/>01501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__sync_animator_8cs_source_1l01502"/>01502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;ikHandRotCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>(TRSType.Quaternion,&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l01503"/>01503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01504"/>01504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;local&#32;=&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__sync_animator_8cs_source_1l01505"/>01505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_quat_crusher">QuatCrusher</link>(<link linkend="_namespace_photon_1_1_compression_1af48bff148a03c9b6e95d1895b28024b4">CompressLevel</link>.uint32Med,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l01506"/>01506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__sync_animator_8cs_source_1l01507"/>01507 
<anchor xml:id="__sync_animator_8cs_source_1l01508"/>01508 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;IK&#32;Inspector</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01509"/>01509 
<anchor xml:id="__sync_animator_8cs_source_1l01510"/>01510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Vector3&#32;heldLHandIKPos,&#32;heldLFeetIKPos,&#32;heldRHandIKPos,&#32;heldRFeetIKPos;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01511"/>01511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Quaternion&#32;heldLHandIKRot,&#32;heldLFeetIKRot,&#32;heldRHandIKRot,&#32;heldRFeetIKRot;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01512"/>01512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IKState[]&#32;heldIK&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;IKState[4];
<anchor xml:id="__sync_animator_8cs_source_1l01513"/>01513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;startIKEnum,&#32;endIKEnum;
<anchor xml:id="__sync_animator_8cs_source_1l01514"/>01514 
<anchor xml:id="__sync_animator_8cs_source_1l01515"/>01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitIK()
<anchor xml:id="__sync_animator_8cs_source_1l01516"/>01516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01517"/>01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;startIKEnum&#32;=&#32;syncIKFeet&#32;?&#32;0&#32;:&#32;syncIKHands&#32;?&#32;2&#32;:&#32;0;
<anchor xml:id="__sync_animator_8cs_source_1l01518"/>01518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endIKEnum&#32;=&#32;syncIKHands&#32;?&#32;4&#32;:&#32;syncIKFeet&#32;?&#32;2&#32;:&#32;0;
<anchor xml:id="__sync_animator_8cs_source_1l01519"/>01519 
<anchor xml:id="__sync_animator_8cs_source_1l01520"/>01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(syncIKFeet&#32;||&#32;syncIKHands)
<anchor xml:id="__sync_animator_8cs_source_1l01521"/>01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;heldIK&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;IKState[4]
<anchor xml:id="__sync_animator_8cs_source_1l01522"/>01522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01523"/>01523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncIKFeet&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;IKState()&#32;:&#32;null,
<anchor xml:id="__sync_animator_8cs_source_1l01524"/>01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncIKFeet&#32;?&#32;new&#32;IKState()&#32;:&#32;null,
<anchor xml:id="__sync_animator_8cs_source_1l01525"/>01525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncIKHands&#32;?&#32;new&#32;IKState()&#32;:&#32;null,
<anchor xml:id="__sync_animator_8cs_source_1l01526"/>01526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syncIKHands&#32;?&#32;new&#32;IKState()&#32;:&#32;null,
<anchor xml:id="__sync_animator_8cs_source_1l01527"/>01527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__sync_animator_8cs_source_1l01528"/>01528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01529"/>01529 
<anchor xml:id="__sync_animator_8cs_source_1l01530"/>01530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>IKState
<anchor xml:id="__sync_animator_8cs_source_1l01531"/>01531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01532"/>01532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;pos;
<anchor xml:id="__sync_animator_8cs_source_1l01533"/>01533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;rot;
<anchor xml:id="__sync_animator_8cs_source_1l01534"/>01534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01535"/>01535 
<anchor xml:id="__sync_animator_8cs_source_1l01536"/>01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;WriteIK(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l01537"/>01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01538"/>01538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_animator_8cs_source_1l01539"/>01539 
<anchor xml:id="__sync_animator_8cs_source_1l01540"/>01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;end&#32;=&#32;endIKEnum;
<anchor xml:id="__sync_animator_8cs_source_1l01541"/>01541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startIKEnum;&#32;i&#32;&lt;&#32;end;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l01542"/>01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01543"/>01543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ikstate&#32;=&#32;frame.ikStates[i];
<anchor xml:id="__sync_animator_8cs_source_1l01544"/>01544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikFeetPosCrusher.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(ikstate.pos,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01545"/>01545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikFeetRotCrusher.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(ikstate.rot,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01546"/>01546 
<anchor xml:id="__sync_animator_8cs_source_1l01547"/>01547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasChanged;
<anchor xml:id="__sync_animator_8cs_source_1l01548"/>01548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01549"/>01549 
<anchor xml:id="__sync_animator_8cs_source_1l01550"/>01550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__sync_animator_8cs_source_1l01551"/>01551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01552"/>01552 
<anchor xml:id="__sync_animator_8cs_source_1l01553"/>01553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ReadIK(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l01554"/>01554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01555"/>01555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;end&#32;=&#32;endIKEnum;
<anchor xml:id="__sync_animator_8cs_source_1l01556"/>01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startIKEnum;&#32;i&#32;&lt;&#32;end;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l01557"/>01557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01558"/>01558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ikstate&#32;=&#32;frame.ikStates[i];
<anchor xml:id="__sync_animator_8cs_source_1l01559"/>01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikstate.pos&#32;&#32;=&#32;(Vector3)ikFeetPosCrusher.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a967255419d4ccd193621921d60937c70">ReadAndDecompress</link>(buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01560"/>01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikstate.rot&#32;&#32;=&#32;(Quaternion)ikFeetRotCrusher.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a967255419d4ccd193621921d60937c70">ReadAndDecompress</link>(buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01561"/>01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01562"/>01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01563"/>01563 
<anchor xml:id="__sync_animator_8cs_source_1l01564"/>01564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CaptureIK(Frame&#32;frame)
<anchor xml:id="__sync_animator_8cs_source_1l01565"/>01565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01566"/>01566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;end&#32;=&#32;endIKEnum;
<anchor xml:id="__sync_animator_8cs_source_1l01567"/>01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startIKEnum;&#32;i&#32;&lt;&#32;end;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ikstate&#32;=&#32;frame.ikStates[i];
<anchor xml:id="__sync_animator_8cs_source_1l01570"/>01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ikheld&#32;=&#32;heldIK[i];
<anchor xml:id="__sync_animator_8cs_source_1l01571"/>01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikstate.pos&#32;=&#32;ikheld.pos;
<anchor xml:id="__sync_animator_8cs_source_1l01572"/>01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikstate.rot&#32;=&#32;ikheld.rot;
<anchor xml:id="__sync_animator_8cs_source_1l01573"/>01573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01574"/>01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01575"/>01575 
<anchor xml:id="__sync_animator_8cs_source_1l01576"/>01576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyIK(Frame&#32;frame)
<anchor xml:id="__sync_animator_8cs_source_1l01577"/>01577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01578"/>01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentFrame&#32;=&#32;frame;
<anchor xml:id="__sync_animator_8cs_source_1l01579"/>01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01580"/>01580 
<anchor xml:id="__sync_animator_8cs_source_1l01581"/>01581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnAnimatorIK(<emphasis role="keywordtype">int</emphasis>&#32;layerIndex)
<anchor xml:id="__sync_animator_8cs_source_1l01582"/>01582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01583"/>01583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a07f3cb70e7a939e8069acee601ada57b">IsMine</link>)
<anchor xml:id="__sync_animator_8cs_source_1l01584"/>01584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01585"/>01585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;end&#32;=&#32;endIKEnum;
<anchor xml:id="__sync_animator_8cs_source_1l01586"/>01586 
<anchor xml:id="__sync_animator_8cs_source_1l01587"/>01587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startIKEnum;&#32;i&#32;&lt;&#32;end;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l01588"/>01588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01589"/>01589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ikstate&#32;=&#32;heldIK[i];
<anchor xml:id="__sync_animator_8cs_source_1l01590"/>01590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikstate.pos&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetIKPosition((AvatarIKGoal)i);
<anchor xml:id="__sync_animator_8cs_source_1l01591"/>01591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ikstate.rot&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetIKRotation((AvatarIKGoal)i);
<anchor xml:id="__sync_animator_8cs_source_1l01592"/>01592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01593"/>01593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01594"/>01594 
<anchor xml:id="__sync_animator_8cs_source_1l01595"/>01595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unowned&#32;objects&#32;apply&#32;the&#32;current&#32;frame&#32;values</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01596"/>01596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01597"/>01597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01598"/>01598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(endIKEnum&#32;&gt;&#32;0&#32;&amp;&amp;&#32;!ReferenceEquals(currentFrame,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__sync_animator_8cs_source_1l01599"/>01599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01600"/>01600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Frame&#32;currframe&#32;=&#32;this.currentFrame;
<anchor xml:id="__sync_animator_8cs_source_1l01601"/>01601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;end&#32;=&#32;endIKEnum;
<anchor xml:id="__sync_animator_8cs_source_1l01602"/>01602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;startIKEnum;&#32;i&#32;&lt;&#32;end;&#32;++i)
<anchor xml:id="__sync_animator_8cs_source_1l01603"/>01603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01604"/>01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ikstate&#32;=&#32;currframe.ikStates[i];
<anchor xml:id="__sync_animator_8cs_source_1l01605"/>01605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetIKPosition((AvatarIKGoal)i,&#32;ikstate.pos);
<anchor xml:id="__sync_animator_8cs_source_1l01606"/>01606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetIKRotation((AvatarIKGoal)i,&#32;ikstate.rot);
<anchor xml:id="__sync_animator_8cs_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01608"/>01608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01609"/>01609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01610"/>01610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01611"/>01611 
<anchor xml:id="__sync_animator_8cs_source_1l01612"/>01612 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01613"/>01613 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01614"/>01614 
<anchor xml:id="__sync_animator_8cs_source_1l01615"/>01615 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;State&#32;Handling</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01616"/>01616 
<anchor xml:id="__sync_animator_8cs_source_1l01617"/>01617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CaptureStates(Frame&#32;frame)
<anchor xml:id="__sync_animator_8cs_source_1l01618"/>01618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01619"/>01619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01620"/>01620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l01621"/>01621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01622"/>01622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.layerWeights[layer]&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetLayerWeight(layer);
<anchor xml:id="__sync_animator_8cs_source_1l01623"/>01623 
<anchor xml:id="__sync_animator_8cs_source_1l01624"/>01624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.IsInTransition(layer))
<anchor xml:id="__sync_animator_8cs_source_1l01625"/>01625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01626"/>01626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.layerIsInTransition[layer]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01627"/>01627 
<anchor xml:id="__sync_animator_8cs_source_1l01628"/>01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(syncTransitions)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01629"/>01629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01630"/>01630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;AnimatorTransitionInfo&#32;transInfo&#32;=&#32;animator.GetAnimatorTransitionInfo(layer);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01631"/>01631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;frame.stateHashes[layer]&#32;=&#32;transInfo.fullPathHash;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01632"/>01632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;frame.normalizedTime[layer]&#32;=&#32;transInfo.normalizedTime;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01633"/>01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01634"/>01634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01635"/>01635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01636"/>01636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01637"/>01637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimatorStateInfo&#32;stateInfo&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetCurrentAnimatorStateInfo(layer);
<anchor xml:id="__sync_animator_8cs_source_1l01638"/>01638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.layerIsInTransition[layer]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01639"/>01639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.stateHashes[layer]&#32;=&#32;stateInfo.fullPathHash;
<anchor xml:id="__sync_animator_8cs_source_1l01640"/>01640 
<anchor xml:id="__sync_animator_8cs_source_1l01641"/>01641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ntime&#32;=&#32;stateInfo.normalizedTime;
<anchor xml:id="__sync_animator_8cs_source_1l01642"/>01642 
<anchor xml:id="__sync_animator_8cs_source_1l01645"/>01645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa32bfcbb2dc8915d1af1734f56f95c8c">normalizedTimeCompress</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>.Full32&#32;||&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa32bfcbb2dc8915d1af1734f56f95c8c">normalizedTimeCompress</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>.Half16)
<anchor xml:id="__sync_animator_8cs_source_1l01646"/>01646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01648"/>01648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.normalizedTime[layer]&#32;=&#32;ntime;
<anchor xml:id="__sync_animator_8cs_source_1l01649"/>01649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01650"/>01650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01651"/>01651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01653"/>01653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stateInfo.loop)
<anchor xml:id="__sync_animator_8cs_source_1l01654"/>01654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01656"/>01656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.normalizedTime[layer]&#32;=&#32;(ntime&#32;&gt;&#32;1)&#32;?&#32;ntime&#32;%&#32;1&#32;:&#32;ntime;
<anchor xml:id="__sync_animator_8cs_source_1l01657"/>01657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01658"/>01658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01659"/>01659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01661"/>01661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.normalizedTime[layer]&#32;=&#32;ntime&#32;&gt;&#32;1&#32;?&#32;1&#32;:&#32;ntime&#32;&lt;&#32;0&#32;?&#32;0&#32;:&#32;ntime;
<anchor xml:id="__sync_animator_8cs_source_1l01662"/>01662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01663"/>01663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01664"/>01664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01665"/>01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01666"/>01666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01667"/>01667 
<anchor xml:id="__sync_animator_8cs_source_1l01668"/>01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;WriteStates(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l01669"/>01669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01670"/>01670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;statehashes&#32;=&#32;frame.stateHashes;
<anchor xml:id="__sync_animator_8cs_source_1l01671"/>01671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;normaltimes&#32;=&#32;frame.normalizedTime;
<anchor xml:id="__sync_animator_8cs_source_1l01672"/>01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lyerweights&#32;=&#32;frame.layerWeights;
<anchor xml:id="__sync_animator_8cs_source_1l01673"/>01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lyerInTrans&#32;=&#32;frame.layerIsInTransition;
<anchor xml:id="__sync_animator_8cs_source_1l01674"/>01674 
<anchor xml:id="__sync_animator_8cs_source_1l01675"/>01675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_animator_8cs_source_1l01676"/>01676 
<anchor xml:id="__sync_animator_8cs_source_1l01677"/>01677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01678"/>01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l01679"/>01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01680"/>01680 
<anchor xml:id="__sync_animator_8cs_source_1l01681"/>01681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>?&#32;layerStateHash&#32;=&#32;statehashes[layer];
<anchor xml:id="__sync_animator_8cs_source_1l01682"/>01682 
<anchor xml:id="__sync_animator_8cs_source_1l01684"/>01684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;stateHasChange&#32;=&#32;!layerStateHash.HasValue&#32;||&#32;lastAnimationHash[layer]&#32;!=&#32;layerStateHash.Value;
<anchor xml:id="__sync_animator_8cs_source_1l01685"/>01685 
<anchor xml:id="__sync_animator_8cs_source_1l01687"/>01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isKeyframe&#32;||&#32;stateHasChange)
<anchor xml:id="__sync_animator_8cs_source_1l01688"/>01688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01690"/>01690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01691"/>01691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isInTransition&#32;=&#32;lyerInTrans[layer];
<anchor xml:id="__sync_animator_8cs_source_1l01692"/>01692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(isInTransition,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01693"/>01693 
<anchor xml:id="__sync_animator_8cs_source_1l01694"/>01694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isInTransition)
<anchor xml:id="__sync_animator_8cs_source_1l01695"/>01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01696"/>01696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(syncTransitions)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01697"/>01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01698"/>01698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TransitionInfo&#32;ti;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01699"/>01699 
<anchor xml:id="__sync_animator_8cs_source_1l01700"/>01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool&#32;isIndexed&#32;=&#32;sharedTransHashes.TryGetValue(layerStateHash.Value,&#32;out&#32;ti);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01701"/>01701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;index&#32;=&#32;(isIndexed)&#32;?&#32;ti.index&#32;:&#32;-1;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01702"/>01702 
<anchor xml:id="__sync_animator_8cs_source_1l01703"/>01703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(isIndexed,&#32;ref&#32;bitposition);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01704"/>01704 
<anchor xml:id="__sync_animator_8cs_source_1l01705"/>01705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(isIndexed)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01706"/>01706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01707"/>01707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)index,&#32;ref&#32;bitposition,&#32;bitsForTransIndex);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01708"/>01708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01709"/>01709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01710"/>01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01711"/>01711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01712"/>01712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(GetType().Name&#32;+</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01713"/>01713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&#32;is&#32;networking&#32;a&#32;transition&#32;that&#32;has&#32;not&#32;been&#32;indexed,&#32;resulting&#32;in&#32;greatly&#32;increased&#32;size.&#32;Be&#32;sure&#32;to&#32;click&#32;&apos;Rebuild&#32;Indexes&apos;&#32;whenever&#32;transitions&#32;are&#32;added&#32;or&#32;removed.&quot;);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01714"/>01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01715"/>01715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(&quot;Unknwn&#32;Trans&#32;&quot;&#32;+&#32;layerStateHash.Value);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01716"/>01716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSigned(layerStateHash.Value,&#32;ref&#32;bitposition,&#32;32);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01717"/>01717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01718"/>01718 
<anchor xml:id="__sync_animator_8cs_source_1l01719"/>01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;///&#32;Write&#32;ntime&#32;for&#32;transition</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01720"/>01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;///&#32;We&#32;don&apos;t&#32;bother&#32;with&#32;time&#32;for&#32;index&#32;0&#32;-&#32;indicates&#32;an&#32;unusable&#32;transition</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01721"/>01721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(index&#32;!=&#32;0)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01722"/>01722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01723"/>01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WriteNorm(normaltimes[layer],&#32;buffer,&#32;ref&#32;bitposition,&#32;normalizedTimeCompress);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01724"/>01724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01725"/>01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01726"/>01726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01727"/>01727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01728"/>01728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01729"/>01729 
<anchor xml:id="__sync_animator_8cs_source_1l01730"/>01730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>.IndexOf(layerStateHash.Value);
<anchor xml:id="__sync_animator_8cs_source_1l01731"/>01731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useIndex&#32;=&#32;index&#32;!=&#32;-1;
<anchor xml:id="__sync_animator_8cs_source_1l01732"/>01732 
<anchor xml:id="__sync_animator_8cs_source_1l01733"/>01733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(useIndex,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01734"/>01734 
<anchor xml:id="__sync_animator_8cs_source_1l01735"/>01735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(useIndex)
<anchor xml:id="__sync_animator_8cs_source_1l01736"/>01736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>.IndexOf(layerStateHash.Value),&#32;ref&#32;bitposition,&#32;bitsForStateIndex);
<anchor xml:id="__sync_animator_8cs_source_1l01737"/>01737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01738"/>01738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01739"/>01739 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01740"/>01740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(GetType().Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;on&#32;GameObject&#32;&apos;&quot;</emphasis>&#32;+&#32;name&#32;+
<anchor xml:id="__sync_animator_8cs_source_1l01741"/>01741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&apos;&#32;is&#32;networking&#32;a&#32;state&#32;that&#32;has&#32;not&#32;been&#32;indexed,&#32;resulting&#32;in&#32;greatly&#32;increased&#32;size.&#32;Be&#32;sure&#32;to&#32;click&#32;&apos;Rebuild&#32;Indexes&apos;&#32;whenever&#32;states&#32;are&#32;added&#32;or&#32;removed.&quot;</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l01742"/>01742 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01743"/>01743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSigned(layerStateHash.Value,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_animator_8cs_source_1l01744"/>01744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01745"/>01745 
<anchor xml:id="__sync_animator_8cs_source_1l01747"/>01747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;posnorm&#32;=&#32;(normaltimes[layer]&#32;+&#32;1)&#32;*&#32;.5f;
<anchor xml:id="__sync_animator_8cs_source_1l01748"/>01748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteNorm(posnorm,&#32;ref&#32;bitposition,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa32bfcbb2dc8915d1af1734f56f95c8c">normalizedTimeCompress</link>);
<anchor xml:id="__sync_animator_8cs_source_1l01749"/>01749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01750"/>01750 
<anchor xml:id="__sync_animator_8cs_source_1l01751"/>01751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastAnimationHash[layer]&#32;=&#32;layerStateHash.HasValue&#32;?&#32;layerStateHash.Value&#32;:&#32;0;
<anchor xml:id="__sync_animator_8cs_source_1l01752"/>01752 
<anchor xml:id="__sync_animator_8cs_source_1l01753"/>01753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l01754"/>01754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01755"/>01755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01756"/>01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01757"/>01757 
<anchor xml:id="__sync_animator_8cs_source_1l01760"/>01760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>&#32;&amp;&amp;&#32;layer&#32;!=&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01761"/>01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01762"/>01762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>?&#32;weight&#32;=&#32;lyerweights[layer];
<anchor xml:id="__sync_animator_8cs_source_1l01763"/>01763 
<anchor xml:id="__sync_animator_8cs_source_1l01765"/>01765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(weight&#32;==&#32;1)
<anchor xml:id="__sync_animator_8cs_source_1l01766"/>01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01768"/>01768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01769"/>01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l01770"/>01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01771"/>01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01772"/>01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01774"/>01774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01775"/>01775 
<anchor xml:id="__sync_animator_8cs_source_1l01777"/>01777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(weight&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01778"/>01778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01780"/>01780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01781"/>01781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l01782"/>01782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01783"/>01783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01784"/>01784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01786"/>01786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01787"/>01787 
<anchor xml:id="__sync_animator_8cs_source_1l01789"/>01789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;layerWeightBits&#32;=&#32;(int)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a7d3e408c37a872e36d55ecd640a22909">layerWeightCompress</link>;
<anchor xml:id="__sync_animator_8cs_source_1l01790"/>01790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cLayerWeight&#32;=&#32;weight.Value.CompressNorm(layerWeightBits);
<anchor xml:id="__sync_animator_8cs_source_1l01791"/>01791 
<anchor xml:id="__sync_animator_8cs_source_1l01792"/>01792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isKeyframe&#32;||&#32;(lastLayerWeight[layer]&#32;!=&#32;cLayerWeight))
<anchor xml:id="__sync_animator_8cs_source_1l01793"/>01793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01795"/>01795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01796"/>01796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(cLayerWeight,&#32;ref&#32;bitposition,&#32;layerWeightBits);
<anchor xml:id="__sync_animator_8cs_source_1l01797"/>01797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastLayerWeight[layer]&#32;=&#32;cLayerWeight;
<anchor xml:id="__sync_animator_8cs_source_1l01798"/>01798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l01799"/>01799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01800"/>01800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01801"/>01801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01803"/>01803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01804"/>01804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01805"/>01805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01806"/>01806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01807"/>01807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01808"/>01808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01809"/>01809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__sync_animator_8cs_source_1l01810"/>01810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01811"/>01811 
<anchor xml:id="__sync_animator_8cs_source_1l01812"/>01812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ReadStates(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l01813"/>01813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01814"/>01814 
<anchor xml:id="__sync_animator_8cs_source_1l01815"/>01815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;statehashes&#32;=&#32;frame.stateHashes;
<anchor xml:id="__sync_animator_8cs_source_1l01816"/>01816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;normaltimes&#32;=&#32;frame.normalizedTime;
<anchor xml:id="__sync_animator_8cs_source_1l01817"/>01817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lyerweights&#32;=&#32;frame.layerWeights;
<anchor xml:id="__sync_animator_8cs_source_1l01818"/>01818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lyerInTrans&#32;=&#32;frame.layerIsInTransition;
<anchor xml:id="__sync_animator_8cs_source_1l01819"/>01819 
<anchor xml:id="__sync_animator_8cs_source_1l01820"/>01820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01821"/>01821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l01822"/>01822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01823"/>01823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;stateHasChange&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01824"/>01824 
<anchor xml:id="__sync_animator_8cs_source_1l01825"/>01825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stateHasChange)
<anchor xml:id="__sync_animator_8cs_source_1l01826"/>01826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01827"/>01827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;layerIsInTransition&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01828"/>01828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lyerInTrans[layer]&#32;=&#32;layerIsInTransition;
<anchor xml:id="__sync_animator_8cs_source_1l01829"/>01829 
<anchor xml:id="__sync_animator_8cs_source_1l01830"/>01830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(layerIsInTransition)
<anchor xml:id="__sync_animator_8cs_source_1l01831"/>01831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01832"/>01832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(syncTransitions)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01833"/>01833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01834"/>01834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;///&#32;Complex&#32;mess&#32;that&#32;determines&#32;if&#32;the&#32;hash&#32;was&#32;sent&#32;as&#32;an&#32;index&#32;or&#32;full&#32;hash</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01835"/>01835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;bool&#32;isIndexed&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01836"/>01836 
<anchor xml:id="__sync_animator_8cs_source_1l01837"/>01837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;int&#32;hash&#32;=&#32;(isIndexed)&#32;?&#32;(int)buffer.Read(ref&#32;bitposition,&#32;bitsForTransIndex)&#32;:&#32;buffer.ReadSigned(ref&#32;bitposition,&#32;32);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01838"/>01838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(isIndexed)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01839"/>01839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01840"/>01840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;sharedTransIndexes[hash].hash;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01841"/>01841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01842"/>01842 
<anchor xml:id="__sync_animator_8cs_source_1l01843"/>01843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;statehashes[layer]&#32;=&#32;hash;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01844"/>01844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;normaltimes[layer]&#32;=&#32;(hash&#32;!=&#32;0)&#32;?&#32;ReadNorm(buffer,&#32;ref&#32;bitposition,&#32;normalizedTimeCompress)&#32;:&#32;0;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01845"/>01845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01846"/>01846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01847"/>01847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01848"/>01848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01849"/>01849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isIndexed&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01850"/>01850 
<anchor xml:id="__sync_animator_8cs_source_1l01851"/>01851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;(isIndexed)&#32;?&#32;(<emphasis role="keywordtype">int</emphasis>)buffer.Read(ref&#32;bitposition,&#32;bitsForStateIndex)&#32;:&#32;buffer.ReadSigned(ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_animator_8cs_source_1l01852"/>01852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isIndexed)
<anchor xml:id="__sync_animator_8cs_source_1l01853"/>01853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01854"/>01854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>[hash];
<anchor xml:id="__sync_animator_8cs_source_1l01855"/>01855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01856"/>01856 
<anchor xml:id="__sync_animator_8cs_source_1l01857"/>01857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statehashes[layer]&#32;=&#32;hash;
<anchor xml:id="__sync_animator_8cs_source_1l01858"/>01858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;norm&#32;=&#32;buffer.ReadNorm(ref&#32;bitposition,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa32bfcbb2dc8915d1af1734f56f95c8c">normalizedTimeCompress</link>)&#32;*&#32;2&#32;-&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01859"/>01859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normaltimes[layer]&#32;=&#32;norm;
<anchor xml:id="__sync_animator_8cs_source_1l01860"/>01860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01861"/>01861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01862"/>01862 
<anchor xml:id="__sync_animator_8cs_source_1l01863"/>01863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>&#32;&amp;&amp;&#32;layer&#32;!=&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01864"/>01864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01865"/>01865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isOne&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01866"/>01866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isOne)
<anchor xml:id="__sync_animator_8cs_source_1l01867"/>01867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lyerweights[layer]&#32;=&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01868"/>01868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01869"/>01869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01870"/>01870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isZero&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01871"/>01871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isZero)
<anchor xml:id="__sync_animator_8cs_source_1l01872"/>01872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lyerweights[layer]&#32;=&#32;0;
<anchor xml:id="__sync_animator_8cs_source_1l01873"/>01873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01874"/>01874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01875"/>01875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;weightHasChange&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01876"/>01876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(weightHasChange)
<anchor xml:id="__sync_animator_8cs_source_1l01877"/>01877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01878"/>01878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lyerweights[layer]&#32;=&#32;buffer.ReadNorm(ref&#32;bitposition,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a7d3e408c37a872e36d55ecd640a22909">layerWeightCompress</link>);
<anchor xml:id="__sync_animator_8cs_source_1l01879"/>01879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01880"/>01880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01881"/>01881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01882"/>01882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lyerweights[layer]&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l01883"/>01883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01884"/>01884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01885"/>01885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01886"/>01886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01887"/>01887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01888"/>01888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01889"/>01889 
<anchor xml:id="__sync_animator_8cs_source_1l01890"/>01890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyState(Frame&#32;applyFrame<emphasis role="comment">/*,&#32;Frame&#32;invalidateFrame*/</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l01891"/>01891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01892"/>01892 
<anchor xml:id="__sync_animator_8cs_source_1l01893"/>01893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01894"/>01894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l01895"/>01895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01898"/>01898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//invalidateFrame.stateHashes[layer]&#32;=&#32;null;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01899"/>01899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//invalidateFrame.normalizedTime[layer]&#32;=&#32;0;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01900"/>01900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//invalidateFrame.layerWeights[layer]&#32;=&#32;null;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01901"/>01901 
<anchor xml:id="__sync_animator_8cs_source_1l01902"/>01902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>?&#32;statehash&#32;=&#32;applyFrame.stateHashes[layer];
<anchor xml:id="__sync_animator_8cs_source_1l01903"/>01903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isTransition&#32;=&#32;applyFrame.layerIsInTransition[layer];
<anchor xml:id="__sync_animator_8cs_source_1l01904"/>01904 
<anchor xml:id="__sync_animator_8cs_source_1l01905"/>01905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(statehash.HasValue)
<anchor xml:id="__sync_animator_8cs_source_1l01906"/>01906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01907"/>01907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isTransition)
<anchor xml:id="__sync_animator_8cs_source_1l01908"/>01908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01909"/>01909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(syncTransitions)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01910"/>01910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01911"/>01911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;TransitionInfo&#32;ti;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01912"/>01912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;bool&#32;foundhash&#32;=&#32;sharedTransHashes.TryGetValue(statehash.Value,&#32;out&#32;ti);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01913"/>01913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(!foundhash)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01914"/>01914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01915"/>01915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(&quot;Unknown&#32;Transition&#32;&quot;&#32;+&#32;statehash.Value&#32;+&#32;&quot;,&#32;please&#32;report&#32;this&#32;to&#32;Davin&#32;Carten&#32;(emotitron)&quot;);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01916"/>01916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;continue;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01917"/>01917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01918"/>01918 
<anchor xml:id="__sync_animator_8cs_source_1l01919"/>01919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(ti.durationIsFixed)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01920"/>01920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;animator.CrossFadeInFixedTime(ti.destination,&#32;ti.duration,&#32;layer,&#32;applyFrame.normalizedTime[layer]&#32;*&#32;ti.duration);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01921"/>01921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;//animator.Play(ti.destination,&#32;layer,&#32;applyFrame.normalizedTime[layer]&#32;*&#32;ti.duration);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01922"/>01922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01923"/>01923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;animator.CrossFade(ti.destination,&#32;ti.duration,&#32;layer,&#32;applyFrame.normalizedTime[layer]);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01924"/>01924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01925"/>01925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01926"/>01926 
<anchor xml:id="__sync_animator_8cs_source_1l01928"/>01928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(statehash.Value&#32;!=&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01929"/>01929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01930"/>01930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.Play(statehash.Value,&#32;layer,&#32;applyFrame.normalizedTime[layer]);
<anchor xml:id="__sync_animator_8cs_source_1l01931"/>01931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01932"/>01932 
<anchor xml:id="__sync_animator_8cs_source_1l01933"/>01933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>)
<anchor xml:id="__sync_animator_8cs_source_1l01934"/>01934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01935"/>01935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>?&#32;layerWeight&#32;=&#32;applyFrame.layerWeights[layer];
<anchor xml:id="__sync_animator_8cs_source_1l01936"/>01936 
<anchor xml:id="__sync_animator_8cs_source_1l01937"/>01937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(layerWeight.HasValue)
<anchor xml:id="__sync_animator_8cs_source_1l01938"/>01938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetLayerWeight(layer,&#32;layerWeight.Value);
<anchor xml:id="__sync_animator_8cs_source_1l01939"/>01939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01940"/>01940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01941"/>01941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01942"/>01942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01943"/>01943 
<anchor xml:id="__sync_animator_8cs_source_1l01944"/>01944 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion&#32;&#32;</emphasis><emphasis role="comment">//&#32;end&#32;state&#32;handling</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01945"/>01945 
<anchor xml:id="__sync_animator_8cs_source_1l01946"/>01946 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;LayerWeight&#32;Handling</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01947"/>01947 
<anchor xml:id="__sync_animator_8cs_source_1l01948"/>01948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CaptureLayerWeights(Frame&#32;frame)
<anchor xml:id="__sync_animator_8cs_source_1l01949"/>01949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01950"/>01950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01951"/>01951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l01952"/>01952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01953"/>01953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.layerWeights[layer]&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.GetLayerWeight(layer);
<anchor xml:id="__sync_animator_8cs_source_1l01954"/>01954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01955"/>01955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01956"/>01956 
<anchor xml:id="__sync_animator_8cs_source_1l01957"/>01957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;WriteLayerWeights(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l01958"/>01958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01959"/>01959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lyerweights&#32;=&#32;frame.layerWeights;
<anchor xml:id="__sync_animator_8cs_source_1l01960"/>01960 
<anchor xml:id="__sync_animator_8cs_source_1l01961"/>01961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_animator_8cs_source_1l01962"/>01962 
<anchor xml:id="__sync_animator_8cs_source_1l01963"/>01963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l01964"/>01964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l01965"/>01965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01966"/>01966 
<anchor xml:id="__sync_animator_8cs_source_1l01968"/>01968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>&#32;&amp;&amp;&#32;layer&#32;!=&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01969"/>01969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01970"/>01970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>?&#32;weight&#32;=&#32;lyerweights[layer];
<anchor xml:id="__sync_animator_8cs_source_1l01971"/>01971 
<anchor xml:id="__sync_animator_8cs_source_1l01973"/>01973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(weight&#32;==&#32;1)
<anchor xml:id="__sync_animator_8cs_source_1l01974"/>01974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01976"/>01976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01977"/>01977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l01978"/>01978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01979"/>01979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01980"/>01980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01982"/>01982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01983"/>01983 
<anchor xml:id="__sync_animator_8cs_source_1l01985"/>01985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(weight&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l01986"/>01986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01988"/>01988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01989"/>01989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l01990"/>01990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l01991"/>01991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l01992"/>01992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l01994"/>01994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l01995"/>01995 
<anchor xml:id="__sync_animator_8cs_source_1l01997"/>01997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;layerWeightBits&#32;=&#32;(int)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a7d3e408c37a872e36d55ecd640a22909">layerWeightCompress</link>;
<anchor xml:id="__sync_animator_8cs_source_1l01998"/>01998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cLayerWeight&#32;=&#32;weight.Value.CompressNorm(layerWeightBits);
<anchor xml:id="__sync_animator_8cs_source_1l01999"/>01999 
<anchor xml:id="__sync_animator_8cs_source_1l02000"/>02000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isKeyframe&#32;||&#32;(lastLayerWeight[layer]&#32;!=&#32;cLayerWeight))
<anchor xml:id="__sync_animator_8cs_source_1l02001"/>02001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02003"/>02003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l02004"/>02004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(cLayerWeight,&#32;ref&#32;bitposition,&#32;layerWeightBits);
<anchor xml:id="__sync_animator_8cs_source_1l02005"/>02005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastLayerWeight[layer]&#32;=&#32;cLayerWeight;
<anchor xml:id="__sync_animator_8cs_source_1l02006"/>02006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l02007"/>02007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02008"/>02008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02009"/>02009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02011"/>02011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l02012"/>02012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02013"/>02013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02014"/>02014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02015"/>02015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02016"/>02016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02017"/>02017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__sync_animator_8cs_source_1l02018"/>02018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02019"/>02019 
<anchor xml:id="__sync_animator_8cs_source_1l02020"/>02020 
<anchor xml:id="__sync_animator_8cs_source_1l02021"/>02021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;ReadLayerWeights(Frame&#32;frame,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe)
<anchor xml:id="__sync_animator_8cs_source_1l02022"/>02022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02023"/>02023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lyerweights&#32;=&#32;frame.layerWeights;
<anchor xml:id="__sync_animator_8cs_source_1l02024"/>02024 
<anchor xml:id="__sync_animator_8cs_source_1l02025"/>02025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_animator_8cs_source_1l02026"/>02026 
<anchor xml:id="__sync_animator_8cs_source_1l02027"/>02027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l02028"/>02028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l02029"/>02029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02030"/>02030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>&#32;&amp;&amp;&#32;layer&#32;!=&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l02031"/>02031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02032"/>02032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isOne&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l02033"/>02033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isOne)
<anchor xml:id="__sync_animator_8cs_source_1l02034"/>02034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02035"/>02035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lyerweights[layer]&#32;=&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l02036"/>02036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l02037"/>02037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02038"/>02038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02039"/>02039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02040"/>02040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isZero&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l02041"/>02041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isZero)
<anchor xml:id="__sync_animator_8cs_source_1l02042"/>02042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02043"/>02043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lyerweights[layer]&#32;=&#32;0;
<anchor xml:id="__sync_animator_8cs_source_1l02044"/>02044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l02045"/>02045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02046"/>02046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02047"/>02047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02048"/>02048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;weightHasChange&#32;=&#32;buffer.ReadBool(ref&#32;bitposition);
<anchor xml:id="__sync_animator_8cs_source_1l02049"/>02049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(weightHasChange)
<anchor xml:id="__sync_animator_8cs_source_1l02050"/>02050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02051"/>02051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lyerweights[layer]&#32;=&#32;buffer.ReadNorm(ref&#32;bitposition,&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a7d3e408c37a872e36d55ecd640a22909">layerWeightCompress</link>);
<anchor xml:id="__sync_animator_8cs_source_1l02052"/>02052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l02053"/>02053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02054"/>02054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02055"/>02055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02056"/>02056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lyerweights[layer]&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l02057"/>02057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02058"/>02058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02059"/>02059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02060"/>02060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02061"/>02061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02062"/>02062 
<anchor xml:id="__sync_animator_8cs_source_1l02063"/>02063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_animator_8cs_source_1l02064"/>02064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02065"/>02065 
<anchor xml:id="__sync_animator_8cs_source_1l02066"/>02066 
<anchor xml:id="__sync_animator_8cs_source_1l02067"/>02067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyLayerWeights(Frame&#32;applyFrame<emphasis role="comment">/*,&#32;Frame&#32;invalidateFrame*/</emphasis>)
<anchor xml:id="__sync_animator_8cs_source_1l02068"/>02068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02069"/>02069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l02070"/>02070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l02071"/>02071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02075"/>02075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//invalidateFrame.layerWeights[layer]&#32;=&#32;null;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02076"/>02076 
<anchor xml:id="__sync_animator_8cs_source_1l02077"/>02077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>)
<anchor xml:id="__sync_animator_8cs_source_1l02078"/>02078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02079"/>02079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>?&#32;layerWeight&#32;=&#32;applyFrame.layerWeights[layer];
<anchor xml:id="__sync_animator_8cs_source_1l02080"/>02080 
<anchor xml:id="__sync_animator_8cs_source_1l02081"/>02081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(layerWeight.HasValue)
<anchor xml:id="__sync_animator_8cs_source_1l02082"/>02082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a48b5cdf2fa54b20ff99081eee8ec3395">animator</link>.SetLayerWeight(layer,&#32;layerWeight.Value);
<anchor xml:id="__sync_animator_8cs_source_1l02083"/>02083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02084"/>02084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02085"/>02085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02086"/>02086 
<anchor xml:id="__sync_animator_8cs_source_1l02087"/>02087 
<anchor xml:id="__sync_animator_8cs_source_1l02088"/>02088 
<anchor xml:id="__sync_animator_8cs_source_1l02089"/>02089 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02090"/>02090 
<anchor xml:id="__sync_animator_8cs_source_1l02091"/>02091 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02092"/>02092 
<anchor xml:id="__sync_animator_8cs_source_1l02093"/>02093 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Snapshot&#32;/&#32;Interpolate&#32;/&#32;Extrapolate</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02094"/>02094 
<anchor xml:id="__sync_animator_8cs_source_1l02095"/>02095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//private&#32;bool&#32;hasInitialSnapshot;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02096"/>02096 
<anchor xml:id="__sync_animator_8cs_source_1l02100"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a20848c499ef62b79b3ecb323ac5464fe">02100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a20848c499ef62b79b3ecb323ac5464fe">OnSnapshot</link>(<emphasis role="keywordtype">int</emphasis>&#32;prevFrameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;snapFrameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;targFrameId,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;prevIsValid,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;snapIsValid,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;targIsValid)
<anchor xml:id="__sync_animator_8cs_source_1l02101"/>02101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02102"/>02102 
<anchor xml:id="__sync_animator_8cs_source_1l02105"/>02105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;wasValid&#32;=&#32;!ReferenceEquals(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a19daa1a2df5ff1a0028edece59912024">snapFrame</link>,&#32;<emphasis role="keyword">null</emphasis>)&#32;&amp;&amp;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a19daa1a2df5ff1a0028edece59912024">snapFrame</link>.content&#32;!=&#32;0;&#32;<emphasis role="comment">//&#32;netObj.validFrames.Get(targF.frameId);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02106"/>02106 
<anchor xml:id="__sync_animator_8cs_source_1l02107"/>02107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wasValid)
<anchor xml:id="__sync_animator_8cs_source_1l02108"/>02108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ApplyFrame(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1a19daa1a2df5ff1a0028edece59912024">snapFrame</link>);
<anchor xml:id="__sync_animator_8cs_source_1l02109"/>02109 
<anchor xml:id="__sync_animator_8cs_source_1l02110"/>02110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ready&#32;=&#32;base.OnSnapshot(prevFrameId,&#32;snapFrameId,&#32;targFrameId,&#32;prevIsValid,&#32;snapIsValid,&#32;targIsValid);
<anchor xml:id="__sync_animator_8cs_source_1l02111"/>02111 
<anchor xml:id="__sync_animator_8cs_source_1l02112"/>02112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ready)
<anchor xml:id="__sync_animator_8cs_source_1l02113"/>02113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l02114"/>02114 
<anchor xml:id="__sync_animator_8cs_source_1l02118"/>02118 
<anchor xml:id="__sync_animator_8cs_source_1l02120"/>02120 
<anchor xml:id="__sync_animator_8cs_source_1l02121"/>02121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CompleteTargetParameters();
<anchor xml:id="__sync_animator_8cs_source_1l02122"/>02122 
<anchor xml:id="__sync_animator_8cs_source_1l02123"/>02123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(snapFrame.content&#32;==&#32;FrameContents.Empty)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02124"/>02124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Debug.LogError(&quot;Empty&#32;Animation&#32;Frame&#32;trying&#32;to&#32;Apply&quot;);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02125"/>02125 
<anchor xml:id="__sync_animator_8cs_source_1l02127"/>02127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(snapFrame.content&#32;!=&#32;0)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02128"/>02128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;InterpolateParams(0);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02129"/>02129 
<anchor xml:id="__sync_animator_8cs_source_1l02130"/>02130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l02131"/>02131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02132"/>02132 
<anchor xml:id="__sync_animator_8cs_source_1l02133"/>02133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ApplyFrame(Frame&#32;frame)
<anchor xml:id="__sync_animator_8cs_source_1l02134"/>02134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02135"/>02135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>)
<anchor xml:id="__sync_animator_8cs_source_1l02136"/>02136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ApplyState(frame<emphasis role="comment">/*,&#32;pre2Frame*/</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l02137"/>02137 
<anchor xml:id="__sync_animator_8cs_source_1l02138"/>02138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>)
<anchor xml:id="__sync_animator_8cs_source_1l02139"/>02139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ApplyLayerWeights(frame<emphasis role="comment">/*,&#32;pre2Frame*/</emphasis>);
<anchor xml:id="__sync_animator_8cs_source_1l02140"/>02140 
<anchor xml:id="__sync_animator_8cs_source_1l02142"/>02142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExecutePassThruQueue(frame);
<anchor xml:id="__sync_animator_8cs_source_1l02143"/>02143 
<anchor xml:id="__sync_animator_8cs_source_1l02144"/>02144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InterpolateParams(0);
<anchor xml:id="__sync_animator_8cs_source_1l02145"/>02145 
<anchor xml:id="__sync_animator_8cs_source_1l02146"/>02146 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02148"/>02148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(endIKEnum&#32;&gt;&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l02149"/>02149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ApplyIK(frame);
<anchor xml:id="__sync_animator_8cs_source_1l02150"/>02150 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02151"/>02151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02152"/>02152 
<anchor xml:id="__sync_animator_8cs_source_1l02153"/>02153 
<anchor xml:id="__sync_animator_8cs_source_1l02154"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a715f606bc793e468844b538414f5972d">02154</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a715f606bc793e468844b538414f5972d">OnInterpolate</link>(<emphasis role="keywordtype">int</emphasis>&#32;snapFrameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;targFrameId,&#32;<emphasis role="keywordtype">float</emphasis>&#32;t)
<anchor xml:id="__sync_animator_8cs_source_1l02155"/>02155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02156"/>02156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ready&#32;=&#32;base.OnInterpolate(snapFrameId,&#32;targFrameId,&#32;t);
<anchor xml:id="__sync_animator_8cs_source_1l02157"/>02157 
<anchor xml:id="__sync_animator_8cs_source_1l02158"/>02158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ready)
<anchor xml:id="__sync_animator_8cs_source_1l02159"/>02159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l02160"/>02160 
<anchor xml:id="__sync_animator_8cs_source_1l02161"/>02161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(amActingAuthority)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02162"/>02162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02163"/>02163 
<anchor xml:id="__sync_animator_8cs_source_1l02164"/>02164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__sync_animator_8cs_source_1l02165"/>02165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l02166"/>02166 
<anchor xml:id="__sync_animator_8cs_source_1l02167"/>02167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>.content&#32;==&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l02168"/>02168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l02169"/>02169 
<anchor xml:id="__sync_animator_8cs_source_1l02170"/>02170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">syncParams</link>)
<anchor xml:id="__sync_animator_8cs_source_1l02171"/>02171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02172"/>02172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InterpolateParams(t);
<anchor xml:id="__sync_animator_8cs_source_1l02173"/>02173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02174"/>02174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l02175"/>02175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02176"/>02176 
<anchor xml:id="__sync_animator_8cs_source_1l02178"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a2bdc0b1adb1c343b5f7fd52f83ddf1f1">02178</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a2bdc0b1adb1c343b5f7fd52f83ddf1f1">InterpolateFrame</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;targframe,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;startframe,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;endframe,&#32;<emphasis role="keywordtype">float</emphasis>&#32;t)
<anchor xml:id="__sync_animator_8cs_source_1l02179"/>02179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02181"/>02181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targframe.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame_1ad5d09b7b22e66228d0788902fc1bdc60">CopyFrom</link>(endframe);
<anchor xml:id="__sync_animator_8cs_source_1l02182"/>02182 
<anchor xml:id="__sync_animator_8cs_source_1l02183"/>02183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InterpolateState(targframe,&#32;startframe,&#32;endframe,&#32;t);
<anchor xml:id="__sync_animator_8cs_source_1l02184"/>02184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//return&#32;FrameContents.Partial;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02185"/>02185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02186"/>02186 
<anchor xml:id="__sync_animator_8cs_source_1l02187"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1afa1870d241f147058570096fa3fd25ff">02187</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1afa1870d241f147058570096fa3fd25ff">ExtrapolateFrame</link>(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;prevframe,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;snapframe,&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1_1_frame">Frame</link>&#32;targframe)
<anchor xml:id="__sync_animator_8cs_source_1l02188"/>02188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02190"/>02190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targframe.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_frame_base_1a45da8bf6405dbfdc980de84c05bbb281">content</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae412f4c62f5640c95deca829169e33f2">FrameContents</link>.Partial;
<anchor xml:id="__sync_animator_8cs_source_1l02191"/>02191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExtrapolateParams(prevframe,&#32;snapframe,&#32;targframe);
<anchor xml:id="__sync_animator_8cs_source_1l02192"/>02192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Make&#32;this&#32;rewindable&#32;by&#32;passing&#32;the&#32;frames&#32;rather&#32;than&#32;assuming&#32;current</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02193"/>02193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExtrapolateState();
<anchor xml:id="__sync_animator_8cs_source_1l02194"/>02194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02195"/>02195 
<anchor xml:id="__sync_animator_8cs_source_1l02196"/>02196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ExtrapolateState()
<anchor xml:id="__sync_animator_8cs_source_1l02197"/>02197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02199"/>02199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l02200"/>02200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l02201"/>02201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02203"/>02203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>.stateHashes[layer]&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__sync_animator_8cs_source_1l02204"/>02204 
<anchor xml:id="__sync_animator_8cs_source_1l02206"/>02206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;pre1hash&#32;=&#32;pre1Frame.stateHashes[layer];</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02207"/>02207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;snaphash&#32;=&#32;snapFrame.stateHashes[layer];</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02208"/>02208 
<anchor xml:id="__sync_animator_8cs_source_1l02209"/>02209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//targFrame.stateHashes[layer]&#32;=&#32;snaphash;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02210"/>02210 
<anchor xml:id="__sync_animator_8cs_source_1l02211"/>02211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//float&#32;snapTime&#32;=&#32;snapFrame.normalizedTime[layer];</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02212"/>02212 
<anchor xml:id="__sync_animator_8cs_source_1l02213"/>02213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(pre1hash&#32;!=&#32;snaphash&#32;&amp;&amp;&#32;snapTime&#32;!=&#32;0)</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02214"/>02214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02215"/>02215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;float&#32;delta&#32;=&#32;snapTime&#32;-&#32;pre1Frame.normalizedTime[layer];</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02216"/>02216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;targFrame.normalizedTime[layer]&#32;=&#32;snapFrame.normalizedTime[layer]&#32;+&#32;delta;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02217"/>02217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;//Debug.LogError(&quot;&lt;color=green&gt;Good&#32;State&#32;Extrap&lt;/color&gt;&#32;&quot;&#32;+&#32;snapF.normalizedTime[layer]+&#32;&quot;&#32;&quot;&#32;+&#32;targF.normalizedTime[layer]);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02218"/>02218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02219"/>02219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02220"/>02220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02221"/>02221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;targFrame.normalizedTime[layer]&#32;=&#32;snapTime;</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02222"/>02222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;//Debug.LogError(&quot;&lt;color=red&gt;Bad&#32;State&#32;Extrap&lt;/color&gt;&#32;&quot;&#32;+&#32;snapTime);</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02223"/>02223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02224"/>02224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02225"/>02225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02226"/>02226 
<anchor xml:id="__sync_animator_8cs_source_1l02230"/>02230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InterpolateState(Frame&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>,&#32;Frame&#32;strFrame,&#32;Frame&#32;endFrame,&#32;<emphasis role="keywordtype">float</emphasis>&#32;t)
<anchor xml:id="__sync_animator_8cs_source_1l02231"/>02231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02232"/>02232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>)&#32;?&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9eb8ed52337153558ad2c138606c1f48">layerCount</link>&#32;:&#32;1;
<anchor xml:id="__sync_animator_8cs_source_1l02233"/>02233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;layer&#32;=&#32;0;&#32;layer&#32;&lt;&#32;count;&#32;++layer)
<anchor xml:id="__sync_animator_8cs_source_1l02234"/>02234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02235"/>02235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;strhash&#32;=&#32;strFrame.stateHashes[layer];
<anchor xml:id="__sync_animator_8cs_source_1l02236"/>02236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endhash&#32;=&#32;endFrame.stateHashes[layer];
<anchor xml:id="__sync_animator_8cs_source_1l02237"/>02237 
<anchor xml:id="__sync_animator_8cs_source_1l02238"/>02238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>.stateHashes[layer]&#32;=&#32;endhash;
<anchor xml:id="__sync_animator_8cs_source_1l02239"/>02239 
<anchor xml:id="__sync_animator_8cs_source_1l02240"/>02240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;strTime&#32;=&#32;strFrame.normalizedTime[layer];
<anchor xml:id="__sync_animator_8cs_source_1l02241"/>02241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;endTime&#32;=&#32;endFrame.normalizedTime[layer];
<anchor xml:id="__sync_animator_8cs_source_1l02242"/>02242 
<anchor xml:id="__sync_animator_8cs_source_1l02243"/>02243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strhash&#32;!=&#32;endhash&#32;&amp;&amp;&#32;strTime&#32;!=&#32;0)
<anchor xml:id="__sync_animator_8cs_source_1l02244"/>02244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02245"/>02245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>.normalizedTime[layer]&#32;=&#32;Mathf.LerpUnclamped(strTime,&#32;endTime,&#32;t);
<anchor xml:id="__sync_animator_8cs_source_1l02246"/>02246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02247"/>02247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02248"/>02248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_8cs_source_1l02249"/>02249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_object_1aa9db8b5d45c0ade2efdab88245824c7a">targFrame</link>.normalizedTime[layer]&#32;=&#32;strTime;
<anchor xml:id="__sync_animator_8cs_source_1l02250"/>02250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02251"/>02251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02252"/>02252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02253"/>02253 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_animator_8cs_source_1l02254"/>02254 
<anchor xml:id="__sync_animator_8cs_source_1l02255"/>02255 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_8cs_source_1l02256"/>02256 }
<anchor xml:id="__sync_animator_8cs_source_1l02257"/>02257 
<anchor xml:id="__sync_animator_8cs_source_1l02258"/>02258 
</programlisting></section>
