<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__sync_animator_editor_8cs_source" xml:lang="en-US">
<title>SyncAnimatorEditor.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/Editor/SyncAnimatorEditor.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__sync_animator_editor_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00005"/>00005 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00008"/>00008 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple">Simple</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal">Internal</link>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_utilities">Utilities</link>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00011"/>00011 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_compression">Compression</link>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00013"/>00013 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00014"/>00014 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00015"/>00015 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00016"/>00016 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_pun_1_1_simple">Photon.Pun.Simple</link>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00017"/>00017 {
<anchor xml:id="__sync_animator_editor_8cs_source_1l00018"/>00018 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;[CustomEditor(typeof(SyncAnimator))]
<anchor xml:id="__sync_animator_editor_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;[CanEditMultipleObjects]
<anchor xml:id="__sync_animator_editor_8cs_source_1l00021"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor">SyncAnimatorEditor</link>&#32;:&#32;SyncObjectEditor
<anchor xml:id="__sync_animator_editor_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00023"/>00023 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00024"/>00024 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00025"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1ad48555f453eb217b190ebe049c492e14">00025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1ad48555f453eb217b190ebe049c492e14">Instructions</link>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Attach&#32;this&#32;component&#32;to&#32;any&#32;root&#32;or&#32;child&#32;GameObject&#32;with&#32;an&#32;Animator&#32;to&#32;sync&#32;its&#32;AnimatorController&#32;over&#32;the&#32;network.&quot;</emphasis>&#32;+
<anchor xml:id="__sync_animator_editor_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\nThe&#32;GameObject&#32;must&#32;be&#32;networked&#32;(has&#32;a&#32;PhotonView).\n\n&quot;</emphasis>&#32;+
<anchor xml:id="__sync_animator_editor_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a85e3aeec00362f1568b0cd75db518915">passThruHelpText</link>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00034"/>00034 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00035"/>00035 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00036"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1aa056ab8012469ff4664db7ab031855e3">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1aa056ab8012469ff4664db7ab031855e3">HelpURL</link>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_simple_docs_u_r_l_s">SimpleDocsURLS</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_simple_docs_u_r_l_s_1a4ec2069ec9f5f249c97c1ea76c35a38e">SYNCCOMPS_PATH</link>&#32;+&#32;<emphasis role="stringliteral">&quot;#syncanimator_component&quot;</emphasis>;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00040"/>00040 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00041"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a3c70f74c284899b7ca0c1a73b40eb7a2">00041</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a3c70f74c284899b7ca0c1a73b40eb7a2">TextTexturePath</link>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Header/SyncAnimatorText&quot;</emphasis>;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00045"/>00045 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00046"/>00046 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator">SyncAnimator</link>&#32;t;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Animator&#32;a;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00049"/>00049 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;passthruLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Sync&#32;Pass&#32;Thru&#32;Methods&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&apos;this.SetTrigger()&apos;,&#32;&apos;this.Play()&apos;,&#32;&apos;this.CrossFadeInFixedTime()&apos;,&#32;etc&#32;methods&#32;are&#32;provided&#32;by&#32;this&#32;class,&#32;and&#32;will&#32;pass&#32;through&#32;the&#32;same&#32;named&#32;commands&#32;to&#32;the&#32;Animator.&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__sync_animator_editor_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;When&#32;enabled,&#32;these&#32;methods&#32;will&#32;be&#32;sent&#32;and&#32;triggered&#32;over&#32;the&#32;network.&#32;Disabling&#32;this&#32;allows&#32;these&#32;methods&#32;to&#32;act&#32;as&#32;if&#32;they&#32;were&#32;called&#32;directly&#32;on&#32;the&#32;Animator&#32;without&#32;any&#32;networking,&#32;which&#32;is&#32;convenient&#32;for&#32;testing.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00054"/>00054 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;statesLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Sync&#32;States&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;When&#32;enabled,&#32;changes&#32;in&#32;the&#32;animator&#32;current&#32;state&#32;are&#32;transmitted.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00058"/>00058 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;layerWeightsLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Sync&#32;Layer&#32;Weights&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;When&#32;enabled,&#32;changes&#32;to&#32;all&#32;layer&#32;weights&#32;will&#32;be&#32;synced.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00062"/>00062 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;paramsLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Sync&#32;Parameters&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;When&#32;enabled,&#32;animator&#32;parameters&#32;will&#32;be&#32;networked&#32;and&#32;synced.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00066"/>00066 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00067"/>00067 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;ikFeetLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Sync&#32;IK&#32;Feet&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;When&#32;enabled,&#32;Feet&#32;IK&#32;will&#32;be&#32;synced.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00071"/>00071 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;ikHandsLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Sync&#32;IK&#32;Hands&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;When&#32;enabled,&#32;Hands&#32;IK&#32;will&#32;be&#32;synced.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00075"/>00075 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00076"/>00076 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;label_syncLayers&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Sync&#32;Layers&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;State&#32;syncs&#32;for&#32;all&#32;layers,&#32;rather&#32;than&#32;just&#32;the&#32;root&#32;layer.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00080"/>00080 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;label_Interp&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Interp&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Interpolation&#32;enables&#32;lerping(tweening)&#32;of&#32;values&#32;on&#32;clients&#32;between&#32;network&#32;updates.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00085"/>00085 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;label_Extrap&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Extrap&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Extrapolation&#32;replicates&#32;previous&#32;values&#32;if&#32;new&#32;values&#32;from&#32;the&#32;network&#32;fail&#32;to&#32;arrive&#32;in&#32;time.&#32;When&#32;disabled,&#32;values&#32;default&#32;to&#32;default&#32;value&#32;for&#32;that&#32;parameter&#32;as&#32;defined&#32;in&#32;the&#32;Animator&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00089"/>00089 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;label_Default&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Defs&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Default&#32;value&#32;used&#32;for&#32;initial&#32;values&#32;and&#32;extrapolation.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00093"/>00093 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;GUIContent&#32;index_Default&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(
<anchor xml:id="__sync_animator_editor_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Index&#32;Animator&#32;Names&quot;</emphasis>,
<anchor xml:id="__sync_animator_editor_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Polls&#32;Animator&#32;Controller&#32;for&#32;all&#32;State,&#32;Trigger&#32;and&#32;Transition&#32;hashes.&#32;Indexed&#32;values&#32;require&#32;a&#32;tiny&#32;fraction&#32;of&#32;bandwidth&#32;to&#32;send&#32;compared&#32;to&#32;raw&#32;32&#32;hashes.&#32;This&#32;happens&#32;often&#32;automatically,&#32;but&#32;it&#32;never&#32;hurts&#32;to&#32;press&#32;this&#32;button&#32;after&#32;making&#32;changes&#32;to&#32;your&#32;Animator&#32;Controller.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00099"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a4e4719a01d6a5f5e14de54a423169930">00099</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a4e4719a01d6a5f5e14de54a423169930">passThruTypeNames</link>&#32;=&#32;System.Enum.GetNames(typeof(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1ac7f80ff5bbf65f003a9cf24821c27996">PassThruType</link>));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00100"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a85e3aeec00362f1568b0cd75db518915">00100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a85e3aeec00362f1568b0cd75db518915">passThruHelpText</link>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor">SyncAnimatorEditor</link>()
<anchor xml:id="__sync_animator_editor_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a85e3aeec00362f1568b0cd75db518915">passThruHelpText</link>&#32;=&#32;<emphasis role="stringliteral">&quot;&lt;b&gt;BE&#32;SURE&lt;/b&gt;&#32;to&#32;call&#32;&quot;</emphasis>&#32;+&#32;typeof(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator">SyncAnimator</link>).Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;commands&#32;using&#32;the&#32;Pass&#32;Thru&#32;methods:\n\n&quot;</emphasis>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a4e4719a01d6a5f5e14de54a423169930">passThruTypeNames</link>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a85e3aeec00362f1568b0cd75db518915">passThruHelpText</link>&#32;+=&#32;<emphasis role="stringliteral">&quot;syncAnimator.&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;()\n&quot;</emphasis>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00106"/>00106 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1a85e3aeec00362f1568b0cd75db518915">passThruHelpText</link>&#32;+=&#32;<emphasis role="stringliteral">&quot;\n...to&#32;network&#32;them&#32;as&#32;events.\nThis&#32;is&#32;especially&#32;useful&#32;for&#32;triggers,&#32;as&#32;SetTrigger()&#32;often&#32;happens&#32;too&#32;quickly&#32;to&#32;sync&#32;as&#32;a&#32;parameter.&quot;</emphasis>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00109"/>00109 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00110"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1af7240715e5c678a94afbbfacf0cb4130">00110</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1af7240715e5c678a94afbbfacf0cb4130">OnEnable</link>()
<anchor xml:id="__sync_animator_editor_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnEnable();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00113"/>00113 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;target&#32;as&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator">SyncAnimator</link>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00115"/>00115 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!t)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00118"/>00118 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;t.GetComponent&lt;Animator&gt;();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00121"/>00121 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.RebuildIndexedNames();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00124"/>00124 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00127"/>00127 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uid&#32;=&#32;t.GetInstanceID();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00129"/>00129 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!showSummary.ContainsKey(uid))
<anchor xml:id="__sync_animator_editor_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;showSummary[uid]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00132"/>00132 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!showAdvancedParams.ContainsKey(uid))
<anchor xml:id="__sync_animator_editor_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;showAdvancedParams[uid]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00136"/>00136 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;uid;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;bool&gt;&#32;showSummary&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;bool&gt;();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;bool&gt;&#32;showAdvancedParams&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;bool&gt;();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00142"/>00142 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00143"/><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1af5cdc8d0f6059db91ccd470ef33529a9">00143</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_editor_1af5cdc8d0f6059db91ccd470ef33529a9">OnInspectorGUI</link>()
<anchor xml:id="__sync_animator_editor_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnInspectorGUI();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00146"/>00146 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serializedObject.Update();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00149"/>00149 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00151"/>00151 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;r&#32;=&#32;EditorGUILayout.GetControlRect();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(r,&#32;index_Default))
<anchor xml:id="__sync_animator_editor_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.RebuildIndexedNames();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;showSummary[uid]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00158"/>00158 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;showSummary[uid]&#32;=&#32;IndentedFoldout(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Indexed&#32;Name&#32;Summary&quot;</emphasis>),&#32;showSummary[uid],&#32;1);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(showSummary[uid])
<anchor xml:id="__sync_animator_editor_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Length&#32;=&#32;0;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append((uint)t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>.Count).Append(<emphasis role="stringliteral">&quot;&#32;Triggers&#32;found.\n&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>.Count;&#32;++i)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(t.sharedTriggNames[i]).Append(<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>).Append(t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>[i]).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(((uint)t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a22c6f614576a456a1965c001e914adf6">sharedTriggIndexes</link>.Count&#32;-&#32;1).GetBitsForMaxValue()&#32;+&#32;1).Append(<emphasis role="stringliteral">&quot;&#32;bits&#32;per&#32;indexed&#32;Trigger.\n33&#32;bits&#32;per&#32;non-indexed&#32;Trigger.\n\n&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00168"/>00168 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append((uint)t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>.Count).Append(<emphasis role="stringliteral">&quot;&#32;States&#32;found.\n&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>.Count;&#32;++i)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(t.sharedStateNames[i]).Append(<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>).Append(t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>[i]).Append(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append(((uint)t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab4aa39546d0301815f2a4d230661a07e">sharedStateIndexes</link>.Count&#32;-&#32;1).GetBitsForMaxValue()&#32;+&#32;1).Append(<emphasis role="stringliteral">&quot;&#32;bits&#32;per&#32;indexed&#32;State.\n33&#32;bits&#32;per&#32;non-indexed&#32;State.\n\n&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00173"/>00173 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//sb.Append((uint)t.sharedTransIndexes.Count).Append(&quot;&#32;Transitions&#32;found.\n&quot;);</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;t.sharedTransIndexes.Count;&#32;++i)</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;sb.Append(t.sharedTransNames[i]).Append(&quot;&#32;:&#32;&quot;).Append(t.sharedTransIndexes[i].hash).Append(&quot;\n&quot;);</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//sb.Append(FloatCrusher.GetBitsForMaxValue((uint)t.sharedTransIndexes.Count&#32;-&#32;1)&#32;+&#32;1).Append(&quot;&#32;bits&#32;per&#32;indexed&#32;Transition.\n33&#32;bits&#32;per&#32;non-indexed&#32;Transitions.&quot;);</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00178"/>00178 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(sb.ToString(),&#32;MessageType.None);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00181"/>00181 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Divider();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00183"/>00183 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">syncPassThrus</link>&#32;=&#32;EditorGUILayout.BeginToggleGroup(passthruLabel,&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">syncPassThrus</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1adb1ef2ac18bc1b92c4bf75fe59245d0c">syncPassThrus</link>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NormTimeCompressEnum(EditorGUILayout.GetControlRect(),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Compress&#32;NormalizedTime&quot;</emphasis>),&#32;ref&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1af29fb093c6b42cd7bba2e3ffa61fe0cc">passthruNormTimeCompress</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//EditorGUILayout.HelpBox(passThruHelpText,&#32;MessageType.None);</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndToggleGroup();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00192"/>00192 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Divider();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00194"/>00194 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>&#32;=&#32;EditorGUILayout.BeginToggleGroup(statesLabel,&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a12645782619672422b0d9eefc13b40f3">syncStates</link>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StatesSection();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndToggleGroup();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00200"/>00200 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Divider();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00202"/>00202 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>&#32;=&#32;EditorGUILayout.BeginToggleGroup(layerWeightsLabel,&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LayerWeightsSection();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndToggleGroup();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00208"/>00208 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Divider();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">syncParams</link>&#32;=&#32;EditorGUILayout.BeginToggleGroup(paramsLabel,&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">syncParams</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aefcb546d3f5953eeebdcdbaf0d5c6930">syncParams</link>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ParamSection();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndToggleGroup();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00216"/>00216 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Divider();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00218"/>00218 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00219"/>00219 <emphasis role="preprocessor">#if&#32;SNS_SYNCIK</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00220"/>00220 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.syncIKFeet&#32;=&#32;EditorGUILayout.BeginToggleGroup(ikFeetLabel,&#32;t.syncIKFeet);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.syncIKFeet)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IKFeetSection();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndToggleGroup();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00226"/>00226 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Divider();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00228"/>00228 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.syncIKHands&#32;=&#32;EditorGUILayout.BeginToggleGroup(ikHandsLabel,&#32;t.syncIKHands);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.syncIKHands)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IKHandsSection();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndToggleGroup();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00233"/>00233 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00234"/>00234 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00235"/>00235 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00237"/>00237 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
<anchor xml:id="__sync_animator_editor_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serializedObject.ApplyModifiedProperties();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00241"/>00241 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;StatesSection()
<anchor xml:id="__sync_animator_editor_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NormTimeCompressEnum(EditorGUILayout.GetControlRect(),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Compress&#32;NormalizedTime&quot;</emphasis>),&#32;ref&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aa32bfcbb2dc8915d1af1734f56f95c8c">normalizedTimeCompress</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00245"/>00245 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InspectorWidgets.MiniToggle(t,&#32;EditorGUILayout.GetControlRect(),&#32;label_syncLayers,&#32;ref&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a38152314690b052368efb464f65f1fc1">syncLayers</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00248"/>00248 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;LayerWeightsSection()
<anchor xml:id="__sync_animator_editor_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1aede7bbad34007ecdc8ea65c59c80ba38">syncLayerWeights</link>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NormTimeCompressEnum(EditorGUILayout.GetControlRect(),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Compress&#32;LayerWeight&quot;</emphasis>),&#32;ref&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a7d3e408c37a872e36d55ecd640a22909">layerWeightCompress</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00257"/>00257 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;NormTimeCompressEnum(Rect&#32;r,&#32;GUIContent&#32;gc,&#32;ref&#32;<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>&#32;compression)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(<emphasis role="keyword">new</emphasis>&#32;Rect(r)&#32;{&#32;xMin&#32;=&#32;r.xMin&#32;+&#32;16&#32;},&#32;gc,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;MiniLabel&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;enumrect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(r)&#32;{&#32;xMin&#32;=&#32;r.xMin&#32;+&#32;170,&#32;y&#32;=&#32;r.y&#32;+&#32;1&#32;};
<anchor xml:id="__sync_animator_editor_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newweight&#32;=&#32;(<link linkend="_namespace_photon_1_1_compression_1aa9d270a48d2c7d9f992e66cc1a4d1370">NormalizedFloatCompression</link>)EditorGUI.EnumPopup(enumrect,&#32;GUIContent.none,&#32;compression<emphasis role="comment">/*,&#32;(GUIStyle)&quot;GV&#32;Gizmo&#32;DropDown&quot;*/</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newweight&#32;!=&#32;compression)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(t,&#32;<emphasis role="stringliteral">&quot;Change&#32;Normalized&#32;Float&#32;Compression&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;compression&#32;=&#32;newweight;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00269"/>00269 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00270"/>00270 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Parameters</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00271"/>00271 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent&#32;triggerLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Triggers&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;WARNING:&#32;Triggers&#32;tend&#32;to&#32;fire&#32;and&#32;clear&#32;instantly,&#32;resulting&#32;in&#32;a&#32;failure&#32;to&#32;sync.&#32;Use&#32;the&#32;this.Trigger()&#32;pass&#32;through&#32;call&#32;instead.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00273"/>00273 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;GUIStyle&#32;PaddedBoxGS;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;GUIStyle&#32;PaddedGS;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00276"/>00276 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;COL1&#32;=&#32;40;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;COL2&#32;=&#32;64;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;COL3&#32;=&#32;60;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;COL4&#32;=&#32;32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00281"/>00281 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ParamSection()
<anchor xml:id="__sync_animator_editor_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PaddedBoxGS&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PaddedBoxGS&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle((GUIStyle)<emphasis role="stringliteral">&quot;HelpBox&quot;</emphasis>)&#32;{&#32;normal&#32;=&#32;((GUIStyle)<emphasis role="stringliteral">&quot;GroupBox&quot;</emphasis>).normal,&#32;padding&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;RectOffset(4,&#32;4,&#32;4,&#32;4)&#32;};
<anchor xml:id="__sync_animator_editor_8cs_source_1l00286"/>00286 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PaddedGS&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PaddedGS&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle(PaddedBoxGS)&#32;{&#32;normal&#32;=&#32;((GUIStyle)<emphasis role="stringliteral">&quot;MiniLabel&quot;</emphasis>).normal&#32;};
<anchor xml:id="__sync_animator_editor_8cs_source_1l00289"/>00289 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>&#32;=&#32;EditorGUILayout.ToggleLeft(<emphasis role="stringliteral">&quot;Use&#32;Global&#32;Settings&quot;</emphasis>,&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00291"/>00291 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;showAdvancedParams[uid]&#32;=&#32;IndentedFoldout(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Adv.&#32;Parameter&#32;Settings&quot;</emphasis>),&#32;showAdvancedParams[uid],&#32;1);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00293"/>00293 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(showAdvancedParams[uid])
<anchor xml:id="__sync_animator_editor_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;indenthold&#32;=&#32;EditorGUI.indentLevel;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00297"/>00297 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;0;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(COL1));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(label_Interp,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;MiniLabel&quot;</emphasis>,&#32;GUILayout.MaxWidth(COL2));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(label_Extrap,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;MiniLabel&quot;</emphasis>,&#32;GUILayout.MaxWidth(COL3));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.LabelField(label_Default,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;MiniLabel&quot;</emphasis>,&#32;GUILayout.MaxWidth(COL4));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00305"/>00305 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults">ParameterDefaults</link>&#32;defs&#32;=&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00307"/>00307 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1ab9819a60cae3aae7b2956baf15f8f729">useGlobalParamSettings</link>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InspectorWidgets.MiniToggle(t,&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(COL1)),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Ints&quot;</emphasis>),&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a6055a02b73320ec888851987f32ef69f">includeInts</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawInterp(AnimatorControllerParameterType.Int,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a01f8d7627b277a1dad424c8ba9371e84">interpolateInts</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawExtrap(AnimatorControllerParameterType.Int,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a15d81f697f07d67e35057f62a2df179b">extrapolateInts</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawDefaults(AnimatorControllerParameterType.Int,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a02ac0345309a2d97eaa4ce214de8dd8e">defaultInt</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00316"/>00316 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InspectorWidgets.MiniToggle(t,&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(COL1)),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Floats&quot;</emphasis>),&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a9a55d95a7153db6343195aacf8b7bcb5">includeFloats</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawInterp(AnimatorControllerParameterType.Float,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1ad6ba5744c96039b3db7089de9e3b0ce4">interpolateFloats</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawExtrap(AnimatorControllerParameterType.Float,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1ac847f0ba38f660462b280161f9c8b839">extrapolateFloats</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawDefaults(AnimatorControllerParameterType.Float,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1ad0c12ba6d50c70b4d098084152353d79">defaultFloat</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00323"/>00323 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InspectorWidgets.MiniToggle(t,&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(COL1)),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Bools&quot;</emphasis>),&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a220e36c0b983be93980f96357dfeb362">includeBools</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.GetControlRect(GUILayout.MaxWidth(COL2));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawExtrap(AnimatorControllerParameterType.Bool,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a27fcc6c2dffb66ac256b67489ddd7f62">extrapolateBools</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawDefaults(AnimatorControllerParameterType.Bool,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a853020ded475c744387386aa40b25e2a">defaultBool</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00330"/>00330 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;tr&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(COL1));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InspectorWidgets.MiniToggle(t,&#32;tr,&#32;triggerLabel,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1abd9eaf031ae77e581983282e40022db2">includeTriggers</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1abd9eaf031ae77e581983282e40022db2">includeTriggers</link>)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.DrawTexture(<emphasis role="keyword">new</emphasis>&#32;Rect(tr)&#32;{&#32;x&#32;=&#32;2,&#32;width&#32;=&#32;16&#32;},&#32;EditorGUIUtility.FindTexture(<emphasis role="stringliteral">&quot;console.warnicon&quot;</emphasis>));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.GetControlRect(GUILayout.MaxWidth(COL2));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawExtrap(AnimatorControllerParameterType.Trigger,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a5169111cbf5e4390d4302c9088ab143b">extrapolateTriggers</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawDefaults(AnimatorControllerParameterType.Trigger,&#32;ref&#32;defs.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_defaults_1a712d11e5d18f1947805d8f92bf9236a0">defaultTrigger</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00342"/>00342 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00346"/>00346 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;names&#32;=&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings">ParameterSettings</link>.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_internal_1_1_parameter_settings_1a43420057e6248ad045cad79b4937c1fc">RebuildParamSettings</link>(a,&#32;ref&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>,&#32;ref&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>,&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a5c355f9a33a033f9e928f49d494118b1">sharedParamDefaults</link>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serializedObject.Update();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00349"/>00349 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;pms&#32;=&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a9b45b376b03e0050d0ec70bdc8ea5398">sharedParamSettings</link>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;t.<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_sync_animator_1a00f1f8b0dda55d64c83dd82bb2eab3fa">paramCount</link>;&#32;++i)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;pm&#32;=&#32;pms[i];
<anchor xml:id="__sync_animator_editor_8cs_source_1l00354"/>00354 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00356"/>00356 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Type&#32;Letter&#32;Box&#32;(left&#32;vertical)</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginVertical(PaddedBoxGS,&#32;GUILayout.MaxWidth(8));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TypeLabel(EditorGUILayout.GetControlRect(GUILayout.MaxWidth(12)),&#32;pm.paramType);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00360"/>00360 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndVertical();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00362"/>00362 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Main&#32;Vertical&#32;(Right)</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginVertical((pm.include)&#32;?&#32;PaddedBoxGS&#32;:&#32;PaddedGS);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00365"/>00365 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00367"/>00367 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InspectorWidgets.MiniToggle(t,&#32;EditorGUILayout.GetControlRect(GUILayout.MinWidth(COL1)),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(names[i]),&#32;ref&#32;pm.include);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00369"/>00369 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(!pm.include);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawInterp(pm.paramType,&#32;ref&#32;pm.interpolate);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawExtrap(pm.paramType,&#32;ref&#32;pm.extrapolate);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawDefaults(pm.paramType,&#32;ref&#32;pm.defaultValue);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndDisabledGroup();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00375"/>00375 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00377"/>00377 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compression&#32;Row</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pm.include)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pm.paramType&#32;==&#32;AnimatorControllerParameterType.Float&#32;||&#32;pm.paramType&#32;==&#32;AnimatorControllerParameterType.Int)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;sharedPSs&#32;=&#32;serializedObject.FindProperty(<emphasis role="stringliteral">&quot;sharedParamSettings&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ps&#32;=&#32;sharedPSs.GetArrayElementAtIndex(i);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00385"/>00385 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fcrusher&#32;=&#32;(pm.paramType&#32;==&#32;AnimatorControllerParameterType.Float)&#32;?&#32;ps.FindPropertyRelative(<emphasis role="stringliteral">&quot;fcrusher&quot;</emphasis>)&#32;:&#32;ps.FindPropertyRelative(<emphasis role="stringliteral">&quot;icrusher&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00387"/>00387 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;r&#32;=&#32;EditorGUILayout.GetControlRect(<emphasis role="keyword">false</emphasis>,&#32;EditorGUI.GetPropertyHeight(fcrusher));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00389"/>00389 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;rectCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(r)&#32;{&#32;height&#32;=&#32;16&#32;};
<anchor xml:id="__sync_animator_editor_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(rectCrusher,&#32;fcrusher);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00394"/>00394 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;End&#32;Right&#32;Vertical</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndVertical();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00397"/>00397 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;End&#32;Parameter</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00400"/>00400 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00403"/>00403 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;indenthold;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00407"/>00407 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;TypeLabel(Rect&#32;r,&#32;AnimatorControllerParameterType&#32;ptype)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;typeinit&#32;=
<anchor xml:id="__sync_animator_editor_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptype&#32;==&#32;AnimatorControllerParameterType.Bool&#32;?&#32;<emphasis role="stringliteral">&quot;B&quot;</emphasis>&#32;:
<anchor xml:id="__sync_animator_editor_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptype&#32;==&#32;AnimatorControllerParameterType.Int&#32;?&#32;<emphasis role="stringliteral">&quot;I&quot;</emphasis>&#32;:
<anchor xml:id="__sync_animator_editor_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptype&#32;==&#32;AnimatorControllerParameterType.Float&#32;?&#32;<emphasis role="stringliteral">&quot;F&quot;</emphasis>&#32;:
<anchor xml:id="__sync_animator_editor_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;T&quot;</emphasis>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00415"/>00415 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(r,&#32;typeinit,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;MiniLabel&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00418"/>00418 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Rect&#32;ColLabel(<emphasis role="keywordtype">string</emphasis>&#32;label,&#32;ref&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;r&#32;=&#32;ColLabel(<emphasis role="keyword">new</emphasis>&#32;GUIContent(label));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;toggleR&#32;=&#32;r;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toggleR.width&#32;=&#32;16;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InspectorWidgets.MiniToggle(t,&#32;r,&#32;GUIContent.none,&#32;ref&#32;use,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Rect&#32;ColLabel(GUIContent&#32;label,&#32;ref&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;r&#32;=&#32;ColLabel(label);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;toggleR&#32;=&#32;r;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toggleR.width&#32;=&#32;16;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InspectorWidgets.MiniToggle(t,&#32;r,&#32;GUIContent.none,&#32;ref&#32;use,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00434"/>00434 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Rect&#32;ColLabel(GUIContent&#32;label)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00439"/>00439 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;r&#32;=&#32;EditorGUILayout.GetControlRect();
<anchor xml:id="__sync_animator_editor_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.xMin&#32;-=&#32;2;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;labelrect&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(r.xMin&#32;+&#32;16,&#32;r.yMin,&#32;r.width,&#32;r.height);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.LabelField(labelrect,&#32;label,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;MiniLabel&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00444"/>00444 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00447"/>00447 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent&#32;intGC&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;How&#32;interpolaton&#32;is&#32;handed&#32;for&#32;this&#32;parameter.&#32;Interpolation&#32;occurs&#32;in&#32;Update()&#32;between&#32;application&#32;of&#32;net&#32;updates.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawInterp(AnimatorControllerParameterType&#32;type,&#32;ref&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>&#32;i)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;r&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MaxWidth(COL2));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00452"/>00452 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Bool&#32;||&#32;type&#32;==&#32;AnimatorControllerParameterType.Trigger)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00455"/>00455 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newi&#32;=&#32;(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1ace3732e804cffe8b6569e30580de412d">ParameterInterpolation</link>)EditorGUI.EnumPopup(r,&#32;intGC,&#32;i,&#32;(GUIStyle)<emphasis role="stringliteral">&quot;MiniPopup&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00457"/>00457 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newi&#32;!=&#32;i)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(target,&#32;<emphasis role="stringliteral">&quot;Modify&#32;Sync&#32;Animator&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;newi;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00464"/>00464 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent&#32;extGC&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;How&#32;extrapolation&#32;is&#32;handed&#32;for&#32;this&#32;parameter.&#32;Extrapolation&#32;occurs&#32;when&#32;an&#32;update&#32;fails&#32;to&#32;arrive&#32;and&#32;a&#32;guess&#32;needs&#32;to&#32;be&#32;made&#32;for&#32;this&#32;value.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawExtrap(AnimatorControllerParameterType&#32;type,&#32;ref&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>&#32;e)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;r&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MaxWidth(COL3));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00469"/>00469 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>&#32;newe;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00471"/>00471 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00473"/>00473 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Bool&#32;||&#32;type&#32;==&#32;AnimatorControllerParameterType.Trigger)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newe&#32;=&#32;(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>)EditorGUI.EnumPopup(r,&#32;extGC,&#32;(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1aaf7ae532073e9cc74bfbf721202d204e">ParameterMissingHold</link>)e,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle(<emphasis role="stringliteral">&quot;MiniPopup&quot;</emphasis>)&#32;{&#32;margin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;RectOffset(0,0,0,0)&#32;});
<anchor xml:id="__sync_animator_editor_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newe&#32;=&#32;(<link linkend="_namespace_photon_1_1_pun_1_1_simple_1_1_internal_1a920f02081108d16725ee0d9f1fc16d3c">ParameterExtrapolation</link>)EditorGUI.EnumPopup(r,&#32;extGC,&#32;e,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle(<emphasis role="stringliteral">&quot;MiniPopup&quot;</emphasis>)&#32;{&#32;margin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;RectOffset(0,&#32;0,&#32;0,&#32;0)&#32;});
<anchor xml:id="__sync_animator_editor_8cs_source_1l00478"/>00478 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newe&#32;!=&#32;e)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(target,&#32;<emphasis role="stringliteral">&quot;Modify&#32;Sync&#32;Animator&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e&#32;=&#32;newe;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent&#32;defGC&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;The&#32;default&#32;value&#32;for&#32;this&#32;parameter&#32;when&#32;extropation&#32;occurs.&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawDefaults(AnimatorControllerParameterType&#32;type,&#32;ref&#32;<link linkend="_struct_photon_1_1_utilities_1_1_smart_var">SmartVar</link>&#32;v)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;r&#32;=&#32;EditorGUILayout.GetControlRect(GUILayout.MaxWidth(COL4));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00491"/>00491 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//EditorGUI.LabelField(r,&#32;defGC,&#32;(GUIStyle)&quot;MiniLabel&quot;);</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00493"/>00493 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Float)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newv&#32;=&#32;EditorGUI.FloatField(r,&#32;defGC,&#32;v.Float,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle(<emphasis role="stringliteral">&quot;MiniTextField&quot;</emphasis>)&#32;{&#32;margin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;RectOffset(0,0,0,0)&#32;});
<anchor xml:id="__sync_animator_editor_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newv&#32;!=&#32;v)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(target,&#32;<emphasis role="stringliteral">&quot;Modify&#32;Sync&#32;Animator&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;=&#32;newv;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;==&#32;AnimatorControllerParameterType.Int)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newv&#32;=&#32;EditorGUI.IntField(r,&#32;defGC,&#32;v.Int,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle(<emphasis role="stringliteral">&quot;MiniTextField&quot;</emphasis>)&#32;{&#32;margin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;RectOffset(0,&#32;0,&#32;0,&#32;0)&#32;});
<anchor xml:id="__sync_animator_editor_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newv&#32;!=&#32;v)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(target,&#32;<emphasis role="stringliteral">&quot;Modify&#32;Sync&#32;Animator&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;=&#32;newv;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newv&#32;=&#32;EditorGUI.Toggle(r,&#32;defGC,&#32;v.Bool);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newv&#32;!=&#32;v)
<anchor xml:id="__sync_animator_editor_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(target,&#32;<emphasis role="stringliteral">&quot;Modify&#32;Sync&#32;Animator&quot;</emphasis>);
<anchor xml:id="__sync_animator_editor_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;=&#32;newv;
<anchor xml:id="__sync_animator_editor_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00521"/>00521 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00523"/>00523 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00524"/>00524 <emphasis role="preprocessor">#endregion</emphasis>
<anchor xml:id="__sync_animator_editor_8cs_source_1l00525"/>00525 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;IKFeetSection()
<anchor xml:id="__sync_animator_editor_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ikFeetPosCrusher&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;IK&#32;Hand&#32;Position&quot;</emphasis>));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ikFeetRotCrusher&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;IK&#32;Hand&#32;Rotation&quot;</emphasis>));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00531"/>00531 
<anchor xml:id="__sync_animator_editor_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;IKHandsSection()
<anchor xml:id="__sync_animator_editor_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_animator_editor_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ikHandPosCrusher&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;IK&#32;Foot&#32;Position&quot;</emphasis>));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(serializedObject.FindProperty(<emphasis role="stringliteral">&quot;ikHandRotCrusher&quot;</emphasis>),&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;IK&#32;Foot&#32;Rotation&quot;</emphasis>));
<anchor xml:id="__sync_animator_editor_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_animator_editor_8cs_source_1l00538"/>00538 }
<anchor xml:id="__sync_animator_editor_8cs_source_1l00539"/>00539 
</programlisting></section>
