<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__sync_list_attribute_8cs_source" xml:lang="en-US">
<title>SyncListAttribute.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/PackObject/Attributes/SyncListAttribute.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__sync_list_attribute_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00005"/>00005 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_compression">Compression</link>.<link linkend="_namespace_photon_1_1_compression_1_1_internal">Internal</link>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00011"/>00011 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00013"/>00013 {
<anchor xml:id="__sync_list_attribute_8cs_source_1l00014"/><link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute">SyncListAttribute</link>&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute">SyncVarBaseAttribute</link>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_list">IPackList</link>&lt;Int32&gt;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00017"/>00017 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;List&lt;Int32&gt;</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00018"/>00018 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00019"/><link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1a25fd616e24dddc5969d81ed2c103e234">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1a25fd616e24dddc5969d81ed2c103e234">Pack</link>(ref&#32;List&lt;Int32&gt;&#32;value,&#32;List&lt;Int32&gt;&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1affdf9d49800f2b5220604b25c9f4eab3">IsKeyframe</link>(frameId);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forced&#32;=&#32;(writeFlags&#32;&amp;&#32;(<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.Force&#32;|&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.ForceReliable&#32;|&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.NewConnection))&#32;!=&#32;0;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00023"/>00023 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//bool&#32;notforced&#32;=&#32;!IsForced(frameId,&#32;writeFlags);</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00025"/>00025 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;holdpos&#32;=&#32;bitposition;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00028"/>00028 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;value.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;val&#32;=&#32;value[i];
<anchor xml:id="__sync_list_attribute_8cs_source_1l00032"/>00032 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isKeyframe)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!forced&#32;&amp;&amp;&#32;val&#32;==&#32;prevValue[i])
<anchor xml:id="__sync_list_attribute_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00043"/>00043 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(val,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00047"/>00047 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flags&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;=&#32;holdpos;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00050"/>00050 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.LogError(cnt&#32;+&#32;&quot;&#32;SER&#32;&quot;&#32;+&#32;frameId&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;value[1]&#32;+&#32;&quot;&#32;flgs:&#32;&quot;&#32;+&#32;flags);</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00052"/>00052 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00055"/>00055 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00056"/><link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1ad533c11a427f5fd6dacc173709ba5f47">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1ad533c11a427f5fd6dacc173709ba5f47">Unpack</link>(ref&#32;List&lt;Int32&gt;&#32;value,&#32;BitArray&#32;isCompleteMask,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00058"/>00058 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//bool&#32;notforced&#32;=&#32;!IsForced(frameId,&#32;writeFlags);</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1affdf9d49800f2b5220604b25c9f4eab3">IsKeyframe</link>(frameId);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00061"/>00061 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00063"/>00063 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;isComplete&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00065"/>00065 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;value.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isKeyframe)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!buffer.ReadBool(ref&#32;bitposition))
<anchor xml:id="__sync_list_attribute_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isComplete&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCompleteMask[i]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//value[i]&#32;=&#32;prevValue[i];</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00078"/>00078 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCompleteMask[i]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00080"/>00080 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value[i]&#32;=&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00082"/>00082 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00085"/>00085 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.LogError(&quot;Unpack&#32;List&#32;DES&#32;&quot;&#32;+&#32;frameId&#32;+&#32;&quot;&#32;&lt;b&gt;&quot;&#32;+&#32;value[0]&#32;+&quot;:&quot;+&#32;value[1]&#32;+&#32;&quot;:&quot;&#32;+&#32;value[2]&#32;+&#32;&quot;&lt;/b&gt;&#32;&quot;&#32;+&#32;&quot;&#32;flgs:&#32;&quot;&#32;+&#32;(flags&#32;|&#32;isComplete));</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(isComplete&#32;==&#32;SerializationFlags.IsComplete)</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.LogError(&quot;Complete&#32;Synclist&quot;);</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00089"/>00089 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags&#32;|&#32;isComplete;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00092"/>00092 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00093"/>00093 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00094"/>00094 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00095"/>00095 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;List&lt;Int32&gt;</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00096"/>00096 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00097"/><link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1a2768cb2d2c3736d21a58ec9fd3185246">00097</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1a2768cb2d2c3736d21a58ec9fd3185246">Pack</link>(ref&#32;List&lt;UInt32&gt;&#32;value,&#32;List&lt;UInt32&gt;&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1affdf9d49800f2b5220604b25c9f4eab3">IsKeyframe</link>(frameId);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;forced&#32;=&#32;(writeFlags&#32;&amp;&#32;(<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.Force&#32;|&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.ForceReliable&#32;|&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.NewConnection))&#32;!=&#32;0;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00101"/>00101 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//bool&#32;notforced&#32;=&#32;!IsForced(frameId,&#32;writeFlags);</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00103"/>00103 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;holdpos&#32;=&#32;bitposition;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00106"/>00106 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;value.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;val&#32;=&#32;value[i];
<anchor xml:id="__sync_list_attribute_8cs_source_1l00110"/>00110 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isKeyframe)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!forced&#32;&amp;&amp;&#32;val&#32;==&#32;prevValue[i])
<anchor xml:id="__sync_list_attribute_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">false</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteBool(<emphasis role="keyword">true</emphasis>,&#32;ref&#32;bitposition);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00121"/>00121 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WritePackedBytes(val,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00125"/>00125 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(flags&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;=&#32;holdpos;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00128"/>00128 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.LogError(cnt&#32;+&#32;&quot;&#32;SER&#32;&quot;&#32;+&#32;frameId&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;value[1]&#32;+&#32;&quot;&#32;flgs:&#32;&quot;&#32;+&#32;flags);</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00130"/>00130 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00133"/>00133 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00134"/><link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1aeec263bbe9926ed9ec50dd0a63873f7d">00134</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1aeec263bbe9926ed9ec50dd0a63873f7d">Unpack</link>(ref&#32;List&lt;UInt32&gt;&#32;value,&#32;BitArray&#32;isCompleteMask,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00136"/>00136 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//bool&#32;notforced&#32;=&#32;!IsForced(frameId,&#32;writeFlags);</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isKeyframe&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1affdf9d49800f2b5220604b25c9f4eab3">IsKeyframe</link>(frameId);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00139"/>00139 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;flags&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00141"/>00141 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;isComplete&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00143"/>00143 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;value.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isKeyframe)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!buffer.ReadBool(ref&#32;bitposition))
<anchor xml:id="__sync_list_attribute_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isComplete&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCompleteMask[i]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//value[i]&#32;=&#32;prevValue[i];</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00156"/>00156 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCompleteMask[i]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00158"/>00158 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value[i]&#32;=&#32;(uint)buffer.ReadPackedBytes(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_list_attribute_8cs_source_1l00160"/>00160 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.HasContent;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00163"/>00163 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.LogError(&quot;Unpack&#32;List&#32;DES&#32;&quot;&#32;+&#32;frameId&#32;+&#32;&quot;&#32;&lt;b&gt;&quot;&#32;+&#32;value[0]&#32;+&quot;:&quot;+&#32;value[1]&#32;+&#32;&quot;:&quot;&#32;+&#32;value[2]&#32;+&#32;&quot;&lt;/b&gt;&#32;&quot;&#32;+&#32;&quot;&#32;flgs:&#32;&quot;&#32;+&#32;(flags&#32;|&#32;isComplete));</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(isComplete&#32;==&#32;SerializationFlags.IsComplete)</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Debug.LogError(&quot;Complete&#32;Synclist&quot;);</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00167"/>00167 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags&#32;|&#32;isComplete;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00170"/>00170 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00171"/>00171 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00172"/>00172 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00176"/><link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1a969398aaee97d58ce7abea2c97ce9340">00176</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1a969398aaee97d58ce7abea2c97ce9340">Copy&lt;T&gt;</link>(List&lt;T&gt;&#32;src,&#32;List&lt;T&gt;&#32;trg,&#32;BitArray&#32;mask)&#32;where&#32;T&#32;:&#32;<emphasis role="keyword">struct</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;src.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mask.Get(i))
<anchor xml:id="__sync_list_attribute_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trg[i]&#32;=&#32;src[i];
<anchor xml:id="__sync_list_attribute_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00184"/>00184 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00185"/><link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1a2586e8eb554d7ff26d09bf2023bf5f00">00185</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_list_attribute_1a2586e8eb554d7ff26d09bf2023bf5f00">Capture&lt;T&gt;</link>(List&lt;T&gt;&#32;src,&#32;List&lt;T&gt;&#32;trg)&#32;where&#32;T&#32;:&#32;<emphasis role="keyword">struct</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;src.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trg[i]&#32;=&#32;src[i];
<anchor xml:id="__sync_list_attribute_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00192"/>00192 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00193"/>00193 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetFieldDeclareCodeGen(Type&#32;fieldType,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fulltypename,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fname)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;base.GetFieldDeclareCodeGen(fieldType,&#32;fulltypename,&#32;fname)&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;public&#32;BitArray&#32;&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;_mask;&quot;</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00198"/>00198 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00200"/>00200 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetCaptureCodeGen(Type&#32;fieldType,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fieldName,&#32;<emphasis role="keywordtype">string</emphasis>&#32;s,&#32;<emphasis role="keywordtype">string</emphasis>&#32;t)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;{&#32;for&#32;(int&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)&#32;{&#32;&quot;</emphasis>&#32;+&#32;t&#32;+<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;[i]&#32;=&#32;&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;[i];&#32;}&#32;}&quot;</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00204"/>00204 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetCopyCodeGen(Type&#32;fieldType,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fieldName,&#32;<emphasis role="keywordtype">string</emphasis>&#32;s,&#32;<emphasis role="keywordtype">string</emphasis>&#32;t)
<anchor xml:id="__sync_list_attribute_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_list_attribute_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;{&#32;for&#32;(int&#32;i&#32;=&#32;0,&#32;cnt&#32;=&#32;&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;.Count;&#32;i&#32;&lt;&#32;cnt;&#32;++i)&#32;{&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__sync_list_attribute_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;if&#32;(&quot;</emphasis>+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;_mask.Get(i))&#32;&quot;</emphasis>&#32;+&#32;t&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;[i]&#32;=&#32;&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;[i];&#32;}&#32;}&#32;&quot;</emphasis>;
<anchor xml:id="__sync_list_attribute_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00212"/>00212 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_list_attribute_8cs_source_1l00213"/>00213 
<anchor xml:id="__sync_list_attribute_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_list_attribute_8cs_source_1l00215"/>00215 }
<anchor xml:id="__sync_list_attribute_8cs_source_1l00216"/>00216 
</programlisting></section>
