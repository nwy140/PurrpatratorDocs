<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__sync_var_attribute_8cs_source" xml:lang="en-US">
<title>SyncVarAttribute.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/PackObject/Attributes/SyncVarAttribute.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__sync_var_attribute_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00005"/>00005 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Text;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_compression">Compression</link>.<link linkend="_namespace_photon_1_1_compression_1_1_internal">Internal</link>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00011"/>00011 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00013"/>00013 {
<anchor xml:id="__sync_var_attribute_8cs_source_1l00014"/>00014 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00018"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute">SyncVarAttribute</link>&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute">SyncVarBaseAttribute</link>,
<anchor xml:id="__sync_var_attribute_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_byte">IPackByte</link>,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_s_byte">IPackSByte</link>,
<anchor xml:id="__sync_var_attribute_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int16">IPackUInt16</link>,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int16">IPackInt16</link>,
<anchor xml:id="__sync_var_attribute_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int32">IPackUInt32</link>,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int32">IPackInt32</link>,
<anchor xml:id="__sync_var_attribute_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_u_int64">IPackUInt64</link>,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_int64">IPackInt64</link>,
<anchor xml:id="__sync_var_attribute_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_single">IPackSingle</link>,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_double">IPackDouble</link>,
<anchor xml:id="__sync_var_attribute_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string">IPackString</link>,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_string_builder">IPackStringBuilder</link>,
<anchor xml:id="__sync_var_attribute_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2">IPackVector2</link>,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3">IPackVector3</link>,
<anchor xml:id="__sync_var_attribute_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector2_int">IPackVector2Int</link>,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_vector3_int">IPackVector3Int</link>,
<anchor xml:id="__sync_var_attribute_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_boolean">IPackBoolean</link>,&#32;<link linkend="_interface_photon_1_1_compression_1_1_internal_1_1_i_pack_char">IPackChar</link>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//IPackList&lt;Int32&gt;</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00030"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4d2ab819434d225b6e73fa327317cc2e">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4d2ab819434d225b6e73fa327317cc2e">MAX_STR_LEN</link>&#32;=&#32;63;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00031"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a00d16d5c9f2b29e3d9a884ee89bc6846">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a00d16d5c9f2b29e3d9a884ee89bc6846">STR_LEN_BITS</link>&#32;=&#32;6;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00032"/>00032 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00036"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">WholeNumbers</link>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00037"/>00037 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00038"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1af26b7cbff8a296aa0493e8763c9db6ac">00038</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1af26b7cbff8a296aa0493e8763c9db6ac">SyncVarAttribute</link>(<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>.UseDefault)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00043"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aab498dee3f9b30f84d8308b13dd893c2">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aab498dee3f9b30f84d8308b13dd893c2">GetMaxBits</link>(Type&#32;fieldType)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(String)&#32;||&#32;fieldType&#32;==&#32;typeof(StringBuilder))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4d2ab819434d225b6e73fa327317cc2e">MAX_STR_LEN</link>&#32;+&#32;1)&#32;*&#32;16&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a00d16d5c9f2b29e3d9a884ee89bc6846">STR_LEN_BITS</link>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00047"/>00047 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Vector2))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;64;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00050"/>00050 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Vector2))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;96;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00053"/>00053 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;base.GetMaxBits(fieldType);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00056"/>00056 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00057"/>00057 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Test&#32;List</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00058"/>00058 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00059"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a1a760092492f6ff9b34ebca2845a7e38">00059</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a1a760092492f6ff9b34ebca2845a7e38">Compare&lt;T&gt;</link>(List&lt;T&gt;&#32;a,&#32;List&lt;T&gt;&#32;b)&#32;where&#32;T&#32;:&#32;<emphasis role="keyword">struct</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;acnt&#32;=&#32;a.Count;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(acnt&#32;!=&#32;b.Count)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00064"/>00064 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;acnt;&#32;++i)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a[i].Equals(b[i])&#32;==&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00068"/>00068 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00071"/>00071 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00073"/>00073 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;void&#32;Copy(List&lt;Int32&gt;&#32;to,&#32;List&lt;Int32&gt;&#32;from)</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;to.Clear();</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;to.AddRange(from);</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00079"/>00079 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00080"/>00080 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00081"/>00081 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00082"/>00082 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00083"/>00083 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Bool</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00084"/>00084 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00085"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a2d34d531116fc3dd786f8790c0418ec7">00085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a2d34d531116fc3dd786f8790c0418ec7">Pack</link>(ref&#32;Boolean&#32;value,&#32;Boolean&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00089"/>00089 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((value&#32;?&#32;(ulong)1&#32;:&#32;0),&#32;ref&#32;bitposition,&#32;1);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00093"/>00093 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00094"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4ed71113f28ccc7b0e16c9e34901f047">00094</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4ed71113f28ccc7b0e16c9e34901f047">Unpack</link>(ref&#32;Boolean&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;buffer.Read(ref&#32;bitposition,&#32;1)&#32;==&#32;0&#32;?&#32;false&#32;:&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00099"/>00099 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00100"/>00100 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00101"/>00101 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00102"/>00102 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;8&#32;bits</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00103"/>00103 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00104"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a0fe12a73575206cb4fb0057677bb3146">00104</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a0fe12a73575206cb4fb0057677bb3146">Pack</link>(ref&#32;Byte&#32;value,&#32;Byte&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00108"/>00108 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(value,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00112"/>00112 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00113"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a9d9d360944bb5bb532a0bbb27b26de97">00113</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a9d9d360944bb5bb532a0bbb27b26de97">Unpack</link>(ref&#32;Byte&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(byte)buffer.Read(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00118"/>00118 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00119"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a139481741f0ae18d144e6933a7e2fbc5">00119</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a139481741f0ae18d144e6933a7e2fbc5">Pack</link>(ref&#32;SByte&#32;value,&#32;SByte&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00123"/>00123 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSigned(value,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00127"/>00127 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00128"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a8d84cae2a4b102570b7fe3efc930d60c">00128</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a8d84cae2a4b102570b7fe3efc930d60c">Unpack</link>(ref&#32;SByte&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(sbyte)buffer.ReadSigned(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00133"/>00133 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00134"/>00134 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00135"/>00135 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00136"/>00136 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;16&#32;bits</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00137"/>00137 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00138"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a5c7a8b0f040c8eeb594d3ca0d54a3ac3">00138</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a5c7a8b0f040c8eeb594d3ca0d54a3ac3">Pack</link>(ref&#32;UInt16&#32;value,&#32;UInt16&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00142"/>00142 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(value,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00146"/>00146 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00147"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aef980e2ecccd265bfc24fee009d5bb43">00147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aef980e2ecccd265bfc24fee009d5bb43">Unpack</link>(ref&#32;UInt16&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(ushort)buffer.Read(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00152"/>00152 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00153"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a590ad6707db9d05c9362a9fcab6ac62a">00153</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a590ad6707db9d05c9362a9fcab6ac62a">Pack</link>(ref&#32;Int16&#32;value,&#32;Int16&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;Pack&#32;&quot;</emphasis>+&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00158"/>00158 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSigned(value,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00162"/>00162 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00163"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a96c737fbcfa9da44361c965e4bea78c4">00163</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a96c737fbcfa9da44361c965e4bea78c4">Unpack</link>(ref&#32;Int16&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(short)buffer.ReadSigned(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00168"/>00168 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00169"/>00169 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00170"/>00170 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00171"/>00171 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;16&#32;Char</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00172"/>00172 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00173"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a850136a693372232e10051ce0e5a62e0">00173</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a850136a693372232e10051ce0e5a62e0">Pack</link>(ref&#32;Char&#32;value,&#32;Char&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00177"/>00177 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(value,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00181"/>00181 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00182"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1af9c108f0e5a0e93d1a83b2596415b829">00182</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1af9c108f0e5a0e93d1a83b2596415b829">Unpack</link>(ref&#32;Char&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(Char)buffer.Read(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00187"/>00187 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00188"/>00188 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00189"/>00189 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00190"/>00190 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00191"/>00191 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00192"/>00192 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;32&#32;bits</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00193"/>00193 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00194"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1af69678205cb896b9a7e26f96d46a3da1">00194</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1af69678205cb896b9a7e26f96d46a3da1">Pack</link>(ref&#32;UInt32&#32;value,&#32;UInt32&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00198"/>00198 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WritePackedBytes(value,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00202"/>00202 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00203"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a462d1acada7f343ddb0b212320d1b146">00203</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a462d1acada7f343ddb0b212320d1b146">Unpack</link>(ref&#32;UInt32&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548ae7956ed7be1c5025a27ed3cb42a396bd">UInt32</link>)buffer.ReadPackedBytes(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00208"/>00208 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00209"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ac4b812a61207d7ad6ae7603894023b90">00209</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ac4b812a61207d7ad6ae7603894023b90">Pack</link>(ref&#32;Int32&#32;value,&#32;Int32&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00213"/>00213 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(value,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00217"/>00217 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00218"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a2153a45779a11c820c1cc1588d73637f">00218</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a2153a45779a11c820c1cc1588d73637f">Unpack</link>(ref&#32;Int32&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(Int32)buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00223"/>00223 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00224"/>00224 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00225"/>00225 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00226"/>00226 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;64&#32;bits</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00227"/>00227 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00228"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aa09dad1969c6bfa0c787940bac2d8f87">00228</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aa09dad1969c6bfa0c787940bac2d8f87">Pack</link>(ref&#32;UInt64&#32;value,&#32;UInt64&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00232"/>00232 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WritePackedBytes(value,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00236"/>00236 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00237"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a46d0ed1a617f072d9b4187ce54195645">00237</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a46d0ed1a617f072d9b4187ce54195645">Unpack</link>(ref&#32;UInt64&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548aaf71234725f0470ccf993e263a8b820a">UInt64</link>)buffer.ReadPackedBytes(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00242"/>00242 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00243"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a9600fcfc695594edc7aab80ca87664a7">00243</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a9600fcfc695594edc7aab80ca87664a7">Pack</link>(ref&#32;Int64&#32;value,&#32;Int64&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00247"/>00247 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes64(value,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00251"/>00251 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00252"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ab59786db0d9c381fe1b1ca345fe447d4">00252</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ab59786db0d9c381fe1b1ca345fe447d4">Unpack</link>(ref&#32;Int64&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;buffer.ReadSignedPackedBytes64(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00257"/>00257 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00258"/>00258 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00259"/>00259 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00260"/>00260 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Floating&#32;Point&#32;Singe/Double</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00261"/>00261 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00262"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a3a282bc2ee5bbae56aa59f60f9344dc8">00262</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a3a282bc2ee5bbae56aa59f60f9344dc8">Pack</link>(ref&#32;Single&#32;value,&#32;Single&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">WholeNumbers</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nval&#32;=&#32;(int)Math.Round(value);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pval&#32;=&#32;(int)Math.Round(prevValue);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00268"/>00268 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;nval,&#32;pval,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00271"/>00271 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(nval,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00279"/>00279 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)value,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00285"/>00285 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00286"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aa10df7ad15e10271f88abbba3255f722">00286</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aa10df7ad15e10271f88abbba3255f722">Unpack</link>(ref&#32;Single&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">WholeNumbers</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)buffer.Read(ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00300"/>00300 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00301"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ad35cff7738d9a9c5db187b548a74cd28">00301</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ad35cff7738d9a9c5db187b548a74cd28">Pack</link>(ref&#32;Double&#32;value,&#32;Double&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">WholeNumbers</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;nval&#32;=&#32;(int)Math.Round(value);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;pval&#32;=&#32;(int)Math.Round(prevValue);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00307"/>00307 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;nval,&#32;pval,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00310"/>00310 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes64(nval,&#32;ref&#32;bitposition,&#32;64);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00318"/>00318 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)value,&#32;ref&#32;bitposition,&#32;64);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00324"/>00324 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00325"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a384505b9ccd59f3da5562e2ff98e4fae">00325</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a384505b9ccd59f3da5562e2ff98e4fae">Unpack</link>(ref&#32;Double&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">WholeNumbers</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;buffer.ReadSignedPackedBytes64(ref&#32;bitposition,&#32;64);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)buffer.Read(ref&#32;bitposition,&#32;64);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00339"/>00339 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00340"/>00340 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00341"/>00341 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00342"/>00342 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;String</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00343"/>00343 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00344"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ab0d2d25434b1fdd8232ac155af692321">00344</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ab0d2d25434b1fdd8232ac155af692321">Pack</link>(ref&#32;String&#32;value,&#32;String&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00346"/>00346 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!IsForcedClass(frameId,&#32;value,&#32;prevValue,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00349"/>00349 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(0,&#32;ref&#32;bitposition,&#32;6);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00355"/>00355 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;value.Length;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cnt&#32;&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4d2ab819434d225b6e73fa327317cc2e">MAX_STR_LEN</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4d2ab819434d225b6e73fa327317cc2e">MAX_STR_LEN</link>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00361"/>00361 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Default&#32;Pack&#32;attribute&#32;has&#32;a&#32;max&#32;string&#32;length&#32;of&#32;63&#32;characters.&#32;Use&#32;PackString&#32;for&#32;more&#32;options.&quot;</emphasis>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00363"/>00363 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00365"/>00365 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)cnt,&#32;ref&#32;bitposition,&#32;6);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00368"/>00368 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((ushort)value[i],&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00374"/>00374 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;sb&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder(0);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00376"/>00376 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00377"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aed2d21180858be38f686c959b95a45a6">00377</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1aed2d21180858be38f686c959b95a45a6">Unpack</link>(ref&#32;String&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Length&#32;=&#32;0;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;(int)buffer.Read(ref&#32;bitposition,&#32;6);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00381"/>00381 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Append((Char)buffer.Read(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>));
<anchor xml:id="__sync_var_attribute_8cs_source_1l00384"/>00384 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;sb.ToString();
<anchor xml:id="__sync_var_attribute_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00388"/>00388 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00389"/>00389 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00390"/>00390 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00391"/>00391 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;StringBuilder</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00392"/>00392 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00393"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4bb5914a48606fd3e11961279a7828fa">00393</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4bb5914a48606fd3e11961279a7828fa">Pack</link>(ref&#32;StringBuilder&#32;value,&#32;StringBuilder&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00395"/>00395 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!IsForcedClass(frameId,&#32;value,&#32;prevValue,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00398"/>00398 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write(0,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a00d16d5c9f2b29e3d9a884ee89bc6846">STR_LEN_BITS</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00404"/>00404 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;value.Length;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cnt&#32;&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4d2ab819434d225b6e73fa327317cc2e">MAX_STR_LEN</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cnt&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4d2ab819434d225b6e73fa327317cc2e">MAX_STR_LEN</link>;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00410"/>00410 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Default&#32;Pack&#32;attribute&#32;has&#32;a&#32;max&#32;string&#32;length&#32;of&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4d2ab819434d225b6e73fa327317cc2e">MAX_STR_LEN</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;characters.&#32;Use&#32;PackString&#32;for&#32;more&#32;options.&#32;Clamping&#32;string&#32;to&#32;\&quot;&quot;</emphasis>&#32;+
<anchor xml:id="__sync_var_attribute_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.ToString(0,&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4d2ab819434d225b6e73fa327317cc2e">MAX_STR_LEN</link>)&#32;+&#32;<emphasis role="stringliteral">&quot;\&quot;&quot;</emphasis>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00413"/>00413 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00415"/>00415 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)cnt,&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a00d16d5c9f2b29e3d9a884ee89bc6846">STR_LEN_BITS</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00418"/>00418 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((ushort)value[i],&#32;ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00422"/>00422 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00425"/>00425 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00426"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1acf91a9d6c4623d9dfa52577e44a96a65">00426</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1acf91a9d6c4623d9dfa52577e44a96a65">Unpack</link>(ref&#32;StringBuilder&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder(64);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.Length&#32;=&#32;0;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00432"/>00432 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cnt&#32;=&#32;(int)buffer.Read(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a00d16d5c9f2b29e3d9a884ee89bc6846">STR_LEN_BITS</link>);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00434"/>00434 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cnt;&#32;++i)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.Append((Char)buffer.Read(ref&#32;bitposition,&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>));
<anchor xml:id="__sync_var_attribute_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00439"/>00439 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00440"/>00440 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00441"/>00441 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00442"/>00442 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Vector2</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00443"/>00443 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00444"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ab1a0a029319d84d4c2ac8496e979a2d6">00444</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ab1a0a029319d84d4c2ac8496e979a2d6">Pack</link>(ref&#32;Vector2&#32;value,&#32;Vector2&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">WholeNumbers</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2Int&#32;newval&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2Int((<emphasis role="keywordtype">int</emphasis>)value.x,&#32;(<emphasis role="keywordtype">int</emphasis>)value.y);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2Int&#32;oldval&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2Int((<emphasis role="keywordtype">int</emphasis>)prevValue.x,&#32;(<emphasis role="keywordtype">int</emphasis>)prevValue.y);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00450"/>00450 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;newval,&#32;oldval,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00453"/>00453 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(newval.x,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(newval.y,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00462"/>00462 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)value.x,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)value.y,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00469"/>00469 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00470"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4387f67fe0b1d990bfffc346f5ff5849">00470</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a4387f67fe0b1d990bfffc346f5ff5849">Unpack</link>(ref&#32;Vector2&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">WholeNumbers</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(
<anchor xml:id="__sync_var_attribute_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32),
<anchor xml:id="__sync_var_attribute_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(
<anchor xml:id="__sync_var_attribute_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)buffer.Read(ref&#32;bitposition,&#32;32),
<anchor xml:id="__sync_var_attribute_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)buffer.Read(ref&#32;bitposition,&#32;32)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00490"/>00490 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00491"/>00491 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00492"/>00492 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00493"/>00493 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Vector3</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00494"/>00494 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00495"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a0c749636ccf22f26b4d3a852aa14d8a8">00495</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a0c749636ccf22f26b4d3a852aa14d8a8">Pack</link>(ref&#32;Vector3&#32;value,&#32;Vector3&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">WholeNumbers</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3Int&#32;newval&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3Int((<emphasis role="keywordtype">int</emphasis>)value.x,&#32;(<emphasis role="keywordtype">int</emphasis>)value.y,&#32;(<emphasis role="keywordtype">int</emphasis>)value.z);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3Int&#32;oldval&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3Int((<emphasis role="keywordtype">int</emphasis>)prevValue.x,&#32;(<emphasis role="keywordtype">int</emphasis>)prevValue.y,&#32;(<emphasis role="keywordtype">int</emphasis>)prevValue.z);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00501"/>00501 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;newval,&#32;oldval,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00504"/>00504 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(newval.x,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(newval.y,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(newval.z,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00514"/>00514 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)value.x,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)value.y,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.Write((uint)(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)value.z,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00522"/>00522 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00523"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a9651b4c5e195e3b58c24b42140372194">00523</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a9651b4c5e195e3b58c24b42140372194">Unpack</link>(ref&#32;Vector3&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a40fe5222372967be991c1507338821fa">WholeNumbers</link>)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__sync_var_attribute_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32),
<anchor xml:id="__sync_var_attribute_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32),
<anchor xml:id="__sync_var_attribute_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32));
<anchor xml:id="__sync_var_attribute_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(
<anchor xml:id="__sync_var_attribute_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)buffer.Read(ref&#32;bitposition,&#32;32),
<anchor xml:id="__sync_var_attribute_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)buffer.Read(ref&#32;bitposition,&#32;32),
<anchor xml:id="__sync_var_attribute_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_photon_1_1_compression_1_1_byte_converter">ByteConverter</link>)buffer.Read(ref&#32;bitposition,&#32;32));
<anchor xml:id="__sync_var_attribute_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00541"/>00541 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00544"/>00544 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00545"/>00545 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Vector2Int</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00546"/>00546 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00547"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a04dc10fa7f142e287cf3a0fc66b0666c">00547</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a04dc10fa7f142e287cf3a0fc66b0666c">Pack</link>(ref&#32;Vector2Int&#32;value,&#32;Vector2Int&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00549"/>00549 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00552"/>00552 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(value.x,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(value.y,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00557"/>00557 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00558"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a9798510153bd1964d3790cc445c690d9">00558</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1a9798510153bd1964d3790cc445c690d9">Unpack</link>(ref&#32;Vector2Int&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2Int(
<anchor xml:id="__sync_var_attribute_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32),
<anchor xml:id="__sync_var_attribute_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00566"/>00566 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00567"/>00567 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00568"/>00568 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00569"/>00569 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Vector3Int</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00570"/>00570 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00571"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1acc9ef710e589ed16911c909e84335b84">00571</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1acc9ef710e589ed16911c909e84335b84">Pack</link>(ref&#32;Vector3Int&#32;value,&#32;Vector3Int&#32;prevValue,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00573"/>00573 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(frameId,&#32;value,&#32;prevValue,&#32;writeFlags))
<anchor xml:id="__sync_var_attribute_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.None;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00576"/>00576 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(value.x,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(value.y,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.WriteSignedPackedBytes(value.z,&#32;ref&#32;bitposition,&#32;32);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00582"/>00582 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00583"/><link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ae3655b274f3fa4b5dba803304298b7b6">00583</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_sync_var_attribute_1ae3655b274f3fa4b5dba803304298b7b6">Unpack</link>(ref&#32;Vector3Int&#32;value,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_attribute_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3Int(
<anchor xml:id="__sync_var_attribute_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32),
<anchor xml:id="__sync_var_attribute_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32),
<anchor xml:id="__sync_var_attribute_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.ReadSignedPackedBytes(ref&#32;bitposition,&#32;32)
<anchor xml:id="__sync_var_attribute_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__sync_var_attribute_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.IsComplete;
<anchor xml:id="__sync_var_attribute_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00592"/>00592 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00593"/>00593 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00594"/>00594 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00595"/>00595 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00596"/>00596 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00597"/>00597 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Vitals</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00598"/>00598 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;SerializationFlags&#32;Pack(ref&#32;VitalsData&#32;value,&#32;VitalsData&#32;prevValue,&#32;byte[]&#32;buffer,&#32;ref&#32;int&#32;bitposition,&#32;int&#32;frameId,&#32;SerializationFlags&#32;writeFlags)</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00601"/>00601 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(!IsForcedClass(frameId,&#32;value,&#32;prevValue,&#32;&#32;writeFlags))</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;return&#32;SerializationFlags.None;</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00604"/>00604 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;bool&#32;isKeyFrame&#32;=&#32;IsKeyframe(frameId);</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00606"/>00606 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;value.vitals.Serialize(value,&#32;prevValue,&#32;buffer,&#32;ref&#32;bitposition,&#32;isKeyFrame);</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00609"/>00609 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;SerializationFlags&#32;Unpack(ref&#32;VitalsData&#32;value,&#32;byte[]&#32;buffer,&#32;ref&#32;int&#32;bitposition,&#32;int&#32;frameId,&#32;SerializationFlags&#32;writeFlags)</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;value.vitals.Deserialize(value,&#32;buffer,&#32;ref&#32;bitposition,&#32;IsKeyframe(frameId));</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00613"/>00613 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00615"/>00615 
<anchor xml:id="__sync_var_attribute_8cs_source_1l00616"/>00616 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__sync_var_attribute_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_attribute_8cs_source_1l00618"/>00618 }
</programlisting></section>
