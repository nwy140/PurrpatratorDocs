<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__sync_var_base_attribute_8cs_source" xml:lang="en-US">
<title>SyncVarBaseAttribute.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/PackObject/Attributes/SyncVarBaseAttribute.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__sync_var_base_attribute_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00005"/>00005 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;System.Text;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00010"/>00010 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00011"/>00011 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression_1_1_internal">Photon.Compression.Internal</link>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00012"/>00012 {
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00013"/>00013 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;[System.Serializable]
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;[AttributeUsage(AttributeTargets.Field)]
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00016"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute">SyncVarBaseAttribute</link>&#32;:&#32;Attribute
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00018"/>00018 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00022"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a66c49876c66146d10ac4f12e774d57db">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a316c25ff520f46923c1acc8c4ab4096b">SyncAs</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a66c49876c66146d10ac4f12e774d57db">syncAs</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a316c25ff520f46923c1acc8c4ab4096b">SyncAs</link>.Auto;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00023"/>00023 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00024"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00025"/>00025 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00029"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a4d5c4a256b8e73d073bec95e03d7c1e2">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a4d5c4a256b8e73d073bec95e03d7c1e2">applyCallback</link>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00034"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a81cf9eedcc3754481a1d3ac20d34c467">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a81cf9eedcc3754481a1d3ac20d34c467">snapshotCallback</link>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00038"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a9ce0538ea35d281e5847a43cc9635f29">00038</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_photon_1_1_compression_1a4a2216e94f11fe2b72f7c5e7698232cd">SetValueTiming</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a9ce0538ea35d281e5847a43cc9635f29">setValueTiming</link>&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a4a2216e94f11fe2b72f7c5e7698232cd">SetValueTiming</link>.AfterCallback;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00039"/>00039 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00043"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a97890cf76b90c6677c196432e5ec994b">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a97890cf76b90c6677c196432e5ec994b">interpolate</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00044"/>00044 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;float&#32;Extrapolation&#32;=&#32;.5f;</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00049"/>00049 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00050"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">00050</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>&#32;=&#32;-1;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00051"/>00051 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00052"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae621e6267c3d4159e2e08dcc42f8a92e">00052</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae621e6267c3d4159e2e08dcc42f8a92e">Initialize</link>(Type&#32;primitiveType)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>&#32;&gt;&#32;-1)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00056"/>00056 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1ae19a110d9ae6f4740e132fc62a0013ca">bitCount</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a061df689a649e18600e4f1ee02bb2e98">GetDefaultBitCount</link>(primitiveType);
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00059"/>00059 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00060"/>00060 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00061"/>00061 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;StringBuilder&#32;sb&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder();
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetFieldDeclareCodeGen(Type&#32;fieldType,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fulltypename,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fname)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Length&#32;=&#32;0;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(StringBuilder))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sb.Append(<emphasis role="stringliteral">&quot;public&#32;System.Text.StringBuilder&#32;&quot;</emphasis>).Append(fname).Append(<emphasis role="stringliteral">&quot;&#32;=&#32;new&#32;System.Text.StringBuilder();&quot;</emphasis>).ToString();
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00068"/>00068 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType.IsValueType)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sb.Append(<emphasis role="stringliteral">&quot;public&#32;&quot;</emphasis>).Append(fulltypename).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(fname).Append(<emphasis role="stringliteral">&quot;;&quot;</emphasis>).ToString();
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sb.Append(<emphasis role="stringliteral">&quot;public&#32;&quot;</emphasis>).Append(fulltypename).Append(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>).Append(fname).Append(<emphasis role="stringliteral">&quot;&#32;=&#32;new&#32;&quot;</emphasis>).Append(fulltypename).Append(<emphasis role="stringliteral">&quot;();&quot;</emphasis>).ToString();
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00077"/>00077 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetCaptureCodeGen(Type&#32;fieldType,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fieldName,&#32;<emphasis role="keywordtype">string</emphasis>&#32;s,&#32;<emphasis role="keywordtype">string</emphasis>&#32;t)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GetCopyCodeGen(fieldType,&#32;fieldName,&#32;s,&#32;t);
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00082"/>00082 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetCopyCodeGen(Type&#32;fieldType,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fieldName,&#32;<emphasis role="keywordtype">string</emphasis>&#32;s,&#32;<emphasis role="keywordtype">string</emphasis>&#32;t)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.Length&#32;=&#32;0;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00086"/>00086 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(StringBuilder))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sb.Append(t).Append(<emphasis role="stringliteral">&quot;.&quot;</emphasis>).Append(fieldName).Append(<emphasis role="stringliteral">&quot;.Length&#32;=&#32;0;&#32;&quot;</emphasis>).Append(t).Append(<emphasis role="stringliteral">&quot;.myString.Append(&quot;</emphasis>).Append(s).Append(<emphasis role="stringliteral">&quot;.&quot;</emphasis>).Append(fieldName).Append(<emphasis role="stringliteral">&quot;);&quot;</emphasis>).ToString();
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00089"/>00089 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isList&#32;=&#32;fieldType.IsGenericType&#32;&amp;&amp;&#32;fieldType.GetGenericTypeDefinition().IsAssignableFrom(typeof(List&lt;&gt;));
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;This&#32;should&#32;become&#32;unneeded...&#32;moved&#32;to&#32;PacklList</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isList)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;t&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;.Clear();&#32;&quot;</emphasis>&#32;+&#32;t&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;.AddRange(&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fieldName&#32;+&#32;<emphasis role="stringliteral">&quot;);&quot;</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Dictionary&#32;copy&#32;would&#32;go&#32;here</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00095"/>00095 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sb.Append(t).Append(<emphasis role="stringliteral">&quot;.&quot;</emphasis>).Append(fieldName).Append(<emphasis role="stringliteral">&quot;&#32;=&#32;&quot;</emphasis>).Append(s).Append(<emphasis role="stringliteral">&quot;.&quot;</emphasis>).Append(fieldName).Append(<emphasis role="stringliteral">&quot;;&quot;</emphasis>).ToString();
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00098"/>00098 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetInterpolateCode(Type&#32;fieldType,&#32;<emphasis role="keywordtype">string</emphasis>&#32;fname,&#32;<emphasis role="keywordtype">string</emphasis>&#32;s,&#32;<emphasis role="keywordtype">string</emphasis>&#32;e,&#32;<emphasis role="keywordtype">string</emphasis>&#32;t)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fieldType&#32;==&#32;typeof(Single)&#32;||&#32;fieldType&#32;==&#32;typeof(Double)&#32;||
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fieldType&#32;==&#32;typeof(SByte)&#32;||&#32;fieldType&#32;==&#32;typeof(Byte)&#32;||
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fieldType&#32;==&#32;typeof(Int16)&#32;||&#32;fieldType&#32;==&#32;typeof(UInt16)&#32;||
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fieldType&#32;==&#32;typeof(Int32)&#32;||&#32;fieldType&#32;==&#32;typeof(UInt32)&#32;||
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fieldType&#32;==&#32;typeof(Int64)&#32;||&#32;fieldType&#32;==&#32;typeof(UInt64)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;t&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;=&#32;(&quot;</emphasis>&#32;+&#32;fieldType.FullName&#32;+&#32;<emphasis role="stringliteral">&quot;)(((&quot;</emphasis>&#32;+&#32;e&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;-&#32;&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;)&#32;*&#32;time)&#32;+&#32;&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;);&quot;</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Vector3))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;t&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;=&#32;Vector3.LerpUnclamped(&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>&#32;+&#32;e&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;time);&quot;</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Vector2))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;t&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;=&#32;Vector2.LerpUnclamped(&quot;</emphasis>&#32;+&#32;s&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>&#32;+&#32;e&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>&#32;+&#32;fname&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;time);&quot;</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00116"/>00116 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00117"/>00117 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00118"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a061df689a649e18600e4f1ee02bb2e98">00118</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a061df689a649e18600e4f1ee02bb2e98">GetDefaultBitCount</link>(Type&#32;fieldType)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Byte)&#32;||&#32;fieldType&#32;==&#32;typeof(SByte))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;8;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00122"/>00122 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548a8bd950a9d7779b83f5c30046c9aaf1cf">UInt16</link>)&#32;||&#32;fieldType&#32;==&#32;typeof(Int16)&#32;||&#32;fieldType&#32;==&#32;typeof(Char))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;16;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00125"/>00125 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548ae7956ed7be1c5025a27ed3cb42a396bd">UInt32</link>)&#32;||&#32;fieldType&#32;==&#32;typeof(Int32)&#32;||&#32;fieldType&#32;==&#32;typeof(Single))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;32;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00128"/>00128 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548aaf71234725f0470ccf993e263a8b820a">UInt64</link>)&#32;||&#32;fieldType&#32;==&#32;typeof(Int64)&#32;||&#32;fieldType&#32;==&#32;typeof(Double))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;64;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00131"/>00131 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Boolean))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00134"/>00134 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Vector3))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;32;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00137"/>00137 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Vector2))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;32;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00140"/>00140 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00143"/>00143 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00150"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a8a02750e98fa164c6e74008cca488fb5">00150</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a8a02750e98fa164c6e74008cca488fb5">GetMaxBits</link>(Type&#32;fieldType)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00152"/>00152 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType.IsEnum)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fieldType&#32;=&#32;Enum.GetUnderlyingType(fieldType);
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00157"/>00157 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Byte)&#32;||&#32;fieldType&#32;==&#32;typeof(SByte))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;8;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00160"/>00160 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548a8bd950a9d7779b83f5c30046c9aaf1cf">UInt16</link>)&#32;||&#32;fieldType&#32;==&#32;typeof(Int16)&#32;||&#32;fieldType&#32;==&#32;typeof(Char))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;16;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00163"/>00163 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548ae7956ed7be1c5025a27ed3cb42a396bd">UInt32</link>)&#32;||&#32;fieldType&#32;==&#32;typeof(Int32)&#32;||&#32;fieldType&#32;==&#32;typeof(Single))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;32;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00166"/>00166 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(<link linkend="_namespace_photon_1_1_compression_1ab0293b7438e9a070843df7266c0c5548aaf71234725f0470ccf993e263a8b820a">UInt64</link>)&#32;||&#32;fieldType&#32;==&#32;typeof(Int64)&#32;||&#32;fieldType&#32;==&#32;typeof(Double))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;64;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00169"/>00169 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Boolean))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00172"/>00172 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Vector3))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;96;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00175"/>00175 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldType&#32;==&#32;typeof(Vector2))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;64;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00178"/>00178 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isList&#32;=&#32;fieldType.IsGenericType&#32;&amp;&amp;&#32;fieldType.GetGenericTypeDefinition().IsAssignableFrom(typeof(List&lt;&gt;));
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00180"/>00180 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isList)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Can&apos;t&#32;get&#32;max&#32;bits&#32;needed&#32;for&#32;List&lt;&gt;&#32;types,&#32;as&#32;they&#32;are&#32;variable.&#32;&quot;</emphasis>&#32;+&#32;fieldType.Name);
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;256&#32;*&#32;8;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00186"/>00186 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;Can&apos;t&#32;get&#32;bits&#32;needed&#32;for&#32;unsupported&#32;types.&#32;&quot;</emphasis>&#32;+&#32;fieldType.Name);
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;256&#32;*&#32;8;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00190"/>00190 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00191"/>00191 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00192"/>00192 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00193"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1affdf9d49800f2b5220604b25c9f4eab3">00193</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1affdf9d49800f2b5220604b25c9f4eab3">IsKeyframe</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;1)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00198"/>00198 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00202"/>00202 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameId&#32;%&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00205"/>00205 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00208"/>00208 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;bool&#32;IsForced(int&#32;frameId,&#32;SerializationFlags&#32;writeFlags)</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00213"/>00213 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00214"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">00214</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a3686b9cc8b5dec852afda7b425c998fd">IsForced</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a66c49876c66146d10ac4f12e774d57db">syncAs</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a316c25ff520f46923c1acc8c4ab4096b">SyncAs</link>.Trigger)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00221"/>00221 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>.Every)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00225"/>00225 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((writeFlags&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.Force)&#32;!=&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00229"/>00229 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00230"/>00230 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((writeFlags&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.NewConnection)&#32;!=&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00237"/>00237 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>.Never&#32;&amp;&amp;&#32;frameId&#32;%&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00240"/>00240 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00243"/>00243 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00244"/>00244 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00245"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a0943f3d7240d0ddc5d87e5d2d8a0fc43">00245</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a0943f3d7240d0ddc5d87e5d2d8a0fc43">IsForcedClass&lt;T&gt;</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;T&#32;value,&#32;T&#32;prevValue,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)&#32;where&#32;T&#32;:&#32;<emphasis role="keyword">class</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a66c49876c66146d10ac4f12e774d57db">syncAs</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a316c25ff520f46923c1acc8c4ab4096b">SyncAs</link>.Trigger)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogError(<emphasis role="stringliteral">&quot;Reference&#32;type&#32;&quot;</emphasis>&#32;+&#32;typeof(T).Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;cannot&#32;be&#32;set&#32;to&#32;SyncAs.Trigger.&#32;This&#32;PackAttribute&#32;setting&#32;only&#32;applies&#32;to&#32;structs.&quot;</emphasis>);
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00253"/>00253 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>.Every)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00257"/>00257 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((writeFlags&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.Force)&#32;!=&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00261"/>00261 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00262"/>00262 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((writeFlags&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.NewConnection)&#32;!=&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00269"/>00269 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>.Never&#32;&amp;&amp;&#32;frameId&#32;%&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00272"/>00272 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!value.Equals(prevValue))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00275"/>00275 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00278"/>00278 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00279"/><link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a032005d180982f9829fc40fd0d9077b7">00279</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a032005d180982f9829fc40fd0d9077b7">IsForced&lt;T&gt;</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;T&#32;value,&#32;T&#32;prevValue,&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>&#32;writeFlags)&#32;where&#32;T&#32;:&#32;<emphasis role="keyword">struct</emphasis>
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a66c49876c66146d10ac4f12e774d57db">syncAs</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a316c25ff520f46923c1acc8c4ab4096b">SyncAs</link>.Trigger)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!value.Equals(<emphasis role="keyword">new</emphasis>&#32;T());
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00286"/>00286 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>.Every)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00290"/>00290 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((writeFlags&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.Force)&#32;!=&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00294"/>00294 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00295"/>00295 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((writeFlags&#32;&amp;&#32;<link linkend="_namespace_photon_1_1_compression_1a7b198bd5a8ce576ca5350a00a8d60c9a">SerializationFlags</link>.NewConnection)&#32;!=&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00302"/>00302 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;!=&#32;<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>.Never&#32;&amp;&amp;&#32;frameId&#32;%&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_photon_1_1_compression_1_1_internal_1_1_sync_var_base_attribute_1a2030a3075b5fa018144ce63d9713f92e">keyRate</link>&#32;==&#32;0)
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00305"/>00305 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!value.Equals(prevValue))
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00308"/>00308 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;}
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00312"/>00312 
<anchor xml:id="__sync_var_base_attribute_8cs_source_1l00313"/>00313 }
</programlisting></section>
