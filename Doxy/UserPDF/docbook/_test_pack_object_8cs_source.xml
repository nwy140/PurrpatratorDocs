<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__test_pack_object_8cs_source" xml:lang="en-US">
<title>TestPackObject.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Example/Scripts/TestPackObject.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__test_pack_object_8cs_source_1l00001"/>00001 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__test_pack_object_8cs_source_1l00002"/>00002 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>.<link linkend="_namespace_photon_1_1_pun_1_1_simple">Simple</link>;
<anchor xml:id="__test_pack_object_8cs_source_1l00003"/>00003 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__test_pack_object_8cs_source_1l00004"/>00004 
<anchor xml:id="__test_pack_object_8cs_source_1l00005"/>00005 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>;
<anchor xml:id="__test_pack_object_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_compression">Compression</link>;
<anchor xml:id="__test_pack_object_8cs_source_1l00007"/>00007 
<anchor xml:id="__test_pack_object_8cs_source_1l00008"/>00008 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceemotitron">emotitron</link>
<anchor xml:id="__test_pack_object_8cs_source_1l00009"/>00009 {
<anchor xml:id="__test_pack_object_8cs_source_1l00010"/><link linkend="_namespaceemotitron_1a853ee1bf2c9fb48194c4c64fb58c136b">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespaceemotitron_1a853ee1bf2c9fb48194c4c64fb58c136b">TestEnum</link>&#32;{&#32;None,&#32;<link linkend="_namespaceemotitron_1a853ee1bf2c9fb48194c4c64fb58c136ba695c6ae413c00446733d926ccadefd8b">Some</link>,&#32;<link linkend="_namespaceemotitron_1a853ee1bf2c9fb48194c4c64fb58c136bab9471fb60fc78ee0cc9a1d66be7fd217">SomeMore</link>,&#32;<link linkend="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40ab1c94ca2fbc3e78fc30069c8d0f01680">All</link>&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00011"/>00011 
<anchor xml:id="__test_pack_object_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">//[PackObject]</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;struct&#32;TestStruct2</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00016"/>00016 
<anchor xml:id="__test_pack_object_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;[PackRangedInt(-20,&#32;100,&#32;applyCallback&#32;=&#32;&quot;HealthCallback&quot;,&#32;snapshotCallback&#32;=&#32;&quot;HealthSnapshot&quot;)]</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;public&#32;int&#32;myHealth;</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00019"/>00019 
<anchor xml:id="__test_pack_object_8cs_source_1l00020"/>00020 
<anchor xml:id="__test_pack_object_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;[PackRangedInt(0,&#32;3)]</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;public&#32;TestEnum&#32;myTestEnum;</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00023"/>00023 
<anchor xml:id="__test_pack_object_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;[Pack]</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;public&#32;float&#32;floaterBloater;</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00026"/>00026 
<anchor xml:id="__test_pack_object_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;[Pack]</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;public&#32;float&#32;floaterBloater2;</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00029"/>00029 
<anchor xml:id="__test_pack_object_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;public&#32;void&#32;HealthSnapshot(int&#32;snap,&#32;int&#32;targ)</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00032"/>00032 
<anchor xml:id="__test_pack_object_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00034"/>00034 
<anchor xml:id="__test_pack_object_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;public&#32;void&#32;HealthCallback(int&#32;newvalue,&#32;int&#32;oldvalue)</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Put&#32;callback&#32;stuff&#32;here</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00040"/>00040 
<anchor xml:id="__test_pack_object_8cs_source_1l00041"/>00041 
<anchor xml:id="__test_pack_object_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;[PackObject(defaultInclusion&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a535ded54d55f8097015f0b0417493c38">DefaultPackInclusion</link>.Explicit)]
<anchor xml:id="__test_pack_object_8cs_source_1l00043"/><link linkend="_classemotitron_1_1_test_pack_object">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classemotitron_1_1_test_pack_object">TestPackObject</link>&#32;:&#32;<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component">NetComponent</link>
<anchor xml:id="__test_pack_object_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_pre_simulate">IOnPreSimulate</link>
<anchor xml:id="__test_pack_object_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_on_interpolate">IOnInterpolate</link>
<anchor xml:id="__test_pack_object_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//,&#32;IOnPostSimulate</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00048"/>00048 
<anchor xml:id="__test_pack_object_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SyncHalfFloat(
<anchor xml:id="__test_pack_object_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;snapshotCallback&#32;=&#32;<emphasis role="stringliteral">&quot;SnapshotHook&quot;</emphasis>,
<anchor xml:id="__test_pack_object_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;applyCallback&#32;=&#32;<emphasis role="stringliteral">&quot;RotationHook&quot;</emphasis>,&#32;
<anchor xml:id="__test_pack_object_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setValueTiming&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a4a2216e94f11fe2b72f7c5e7698232cd">SetValueTiming</link>.BeforeCallback,&#32;
<anchor xml:id="__test_pack_object_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interpolate&#32;=&#32;<emphasis role="keyword">true</emphasis>,&#32;
<anchor xml:id="__test_pack_object_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keyRate&#32;=&#32;<link linkend="_namespace_photon_1_1_compression_1a1da0d42c82933128235596213119ee72">KeyRate</link>.Every
<anchor xml:id="__test_pack_object_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)]
<anchor xml:id="__test_pack_object_8cs_source_1l00056"/><link linkend="_classemotitron_1_1_test_pack_object_1a739ad3c5307e64752154a00a7d4716c3">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classemotitron_1_1_test_pack_object_1a739ad3c5307e64752154a00a7d4716c3">rotation</link>;
<anchor xml:id="__test_pack_object_8cs_source_1l00057"/>00057 
<anchor xml:id="__test_pack_object_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[Pack]</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;Vector3&#32;v5;</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00060"/>00060 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;public&#32;Vector2&#32;v2;</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00061"/>00061 
<anchor xml:id="__test_pack_object_8cs_source_1l00062"/>00062 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;[Pack]</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00063"/>00063 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;public&#32;PhotonView&#32;pv2;</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//private&#32;PhotonView&#32;pv3;</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[Pack]</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;List&lt;int&gt;&#32;bytelist&#32;=&#32;new&#32;List&lt;int&gt;(3)&#32;{&#32;11,&#32;22,&#32;33&#32;};</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00067"/>00067 
<anchor xml:id="__test_pack_object_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SyncRangedInt(-1,&#32;2)]
<anchor xml:id="__test_pack_object_8cs_source_1l00069"/><link linkend="_classemotitron_1_1_test_pack_object_1af5cab60150b1f97da4ff60e88d980311">00069</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classemotitron_1_1_test_pack_object_1af5cab60150b1f97da4ff60e88d980311">intoroboto</link>;
<anchor xml:id="__test_pack_object_8cs_source_1l00070"/>00070 
<anchor xml:id="__test_pack_object_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[Pack]</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;TestStruct2&#32;teststruct;</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00073"/>00073 
<anchor xml:id="__test_pack_object_8cs_source_1l00074"/>00074 
<anchor xml:id="__test_pack_object_8cs_source_1l00075"/><link linkend="_classemotitron_1_1_test_pack_object_1af827f9f314e67094ec8c45e2a6e6ad0d">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classemotitron_1_1_test_pack_object_1af827f9f314e67094ec8c45e2a6e6ad0d">RotationHook</link>(<emphasis role="keywordtype">float</emphasis>&#32;newrot,&#32;<emphasis role="keywordtype">float</emphasis>&#32;oldrot)
<anchor xml:id="__test_pack_object_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;Hook&#32;&#32;&quot;&#32;+&#32;NetMaster.PreviousFrameId&#32;+&#32;&quot;:&#32;&quot;&#32;+&#32;oldrot&#32;+&#32;&quot;&#32;---&#32;&#32;&quot;&#32;+&#32;NetMaster.CurrentFrameId&#32;+&#32;&quot;:&#32;&quot;&#32;+&#32;newrot);</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(!PhotonView.IsMine)</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.localEulerAngles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;<link linkend="_classemotitron_1_1_test_pack_object_1a739ad3c5307e64752154a00a7d4716c3">rotation</link>,&#32;0);
<anchor xml:id="__test_pack_object_8cs_source_1l00081"/>00081 
<anchor xml:id="__test_pack_object_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00084"/>00084 
<anchor xml:id="__test_pack_object_8cs_source_1l00085"/><link linkend="_classemotitron_1_1_test_pack_object_1ad21631fc07f689cd00e5a26e921c9313">00085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classemotitron_1_1_test_pack_object_1ad21631fc07f689cd00e5a26e921c9313">SnapshotHook</link>(<emphasis role="keywordtype">float</emphasis>&#32;snap,&#32;<emphasis role="keywordtype">float</emphasis>&#32;targ)
<anchor xml:id="__test_pack_object_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;Snap&#32;&quot;&#32;+&#32;&#32;NetMaster.PreviousFrameId+&#32;&quot;:&#32;&quot;+&#32;snap&#32;+&#32;&quot;&#32;---&#32;&#32;&quot;&#32;+&#32;&#32;NetMaster.CurrentFrameId&#32;+&#32;&quot;:&#32;&quot;&#32;+&#32;targ);</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00089"/>00089 
<anchor xml:id="__test_pack_object_8cs_source_1l00090"/><link linkend="_classemotitron_1_1_test_pack_object_1a4c7d9ab5de0ffecd4f7b2edd906ee527">00090</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classemotitron_1_1_test_pack_object_1a4c7d9ab5de0ffecd4f7b2edd906ee527">OnPreSimulate</link>(<emphasis role="keywordtype">int</emphasis>&#32;frameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;subFrameId)
<anchor xml:id="__test_pack_object_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Rotate&#32;when&#32;isMine</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a98a212bb0e2868d6954c873a928cd521">photonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>)
<anchor xml:id="__test_pack_object_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classemotitron_1_1_test_pack_object_1a739ad3c5307e64752154a00a7d4716c3">rotation</link>&#32;=&#32;(Mathf.Sin(Time.time)&#32;+&#32;.5f)&#32;*&#32;120f;&#32;<emphasis role="comment">//&#32;(rotation&#32;+&#32;5f);</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//int&#32;revs&#32;=&#32;(int)(rotation&#32;/&#32;360);</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//rotation&#32;-=&#32;(revs&#32;*&#32;360);</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.localEulerAngles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;<link linkend="_classemotitron_1_1_test_pack_object_1a739ad3c5307e64752154a00a7d4716c3">rotation</link>,&#32;0);
<anchor xml:id="__test_pack_object_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00101"/>00101 
<anchor xml:id="__test_pack_object_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;
<anchor xml:id="__test_pack_object_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;void&#32;OnPostSimulate(int&#32;frameId,&#32;int&#32;subFrameId,&#32;bool&#32;isNetTick)</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00105"/>00105 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(&quot;Post:&#32;&quot;&#32;+&#32;rotation&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;IsMine);</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00106"/>00106 
<anchor xml:id="__test_pack_object_8cs_source_1l00107"/>00107 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(!PhotonView.IsMine)</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00108"/>00108 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00109"/>00109 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.localEulerAngles&#32;=&#32;new&#32;Vector3(0,&#32;rotation,&#32;0);</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00110"/>00110 
<anchor xml:id="__test_pack_object_8cs_source_1l00111"/>00111 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00112"/>00112 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;is&#32;called&#32;once&#32;per&#32;frame</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00114"/><link linkend="_classemotitron_1_1_test_pack_object_1a48d82b4a4475fd726d5dff301da4c0da">00114</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classemotitron_1_1_test_pack_object_1a48d82b4a4475fd726d5dff301da4c0da">FixedUpdate</link>()
<anchor xml:id="__test_pack_object_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_pack_object_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00118"/>00118 
<anchor xml:id="__test_pack_object_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
<anchor xml:id="__test_pack_object_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_pack_object_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00123"/>00123 
<anchor xml:id="__test_pack_object_8cs_source_1l00124"/><link linkend="_classemotitron_1_1_test_pack_object_1a319222a7823d66e3dc8e0bc87e7066d6">00124</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classemotitron_1_1_test_pack_object_1a319222a7823d66e3dc8e0bc87e7066d6">OnInterpolate</link>(<emphasis role="keywordtype">int</emphasis>&#32;snapFrameId,&#32;<emphasis role="keywordtype">int</emphasis>&#32;targFrameId,&#32;<emphasis role="keywordtype">float</emphasis>&#32;t)
<anchor xml:id="__test_pack_object_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(photonView.ViewID&#32;+&#32;&quot;&#32;Update&#32;&quot;&#32;+&#32;IsMine&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;rotation);</emphasis>
<anchor xml:id="__test_pack_object_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>.<link linkend="_class_photon_1_1_pun_1_1_photon_view_1accb0edee64106db0cdf00c49bfe1fd03">IsMine</link>)
<anchor xml:id="__test_pack_object_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_pack_object_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.localEulerAngles&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;<link linkend="_classemotitron_1_1_test_pack_object_1a739ad3c5307e64752154a00a7d4716c3">rotation</link>,&#32;0);
<anchor xml:id="__test_pack_object_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__test_pack_object_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;}
<anchor xml:id="__test_pack_object_8cs_source_1l00134"/>00134 
<anchor xml:id="__test_pack_object_8cs_source_1l00135"/>00135 }
</programlisting></section>
