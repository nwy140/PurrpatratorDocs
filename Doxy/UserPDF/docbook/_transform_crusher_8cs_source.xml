<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__transform_crusher_8cs_source" xml:lang="en-US">
<title>TransformCrusher.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/TransformCrusher/TransformCrusher.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__transform_crusher_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00005"/>00005 
<anchor xml:id="__transform_crusher_8cs_source_1l00006"/>00006 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__transform_crusher_8cs_source_1l00007"/>00007 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__transform_crusher_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;System.Collections.ObjectModel;
<anchor xml:id="__transform_crusher_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__transform_crusher_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespaceemotitron">emotitron</link>.Compression;
<anchor xml:id="__transform_crusher_8cs_source_1l00011"/>00011 
<anchor xml:id="__transform_crusher_8cs_source_1l00012"/>00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression">Photon.Compression</link>
<anchor xml:id="__transform_crusher_8cs_source_1l00013"/>00013 {
<anchor xml:id="__transform_crusher_8cs_source_1l00017"/><link linkend="_interface_photon_1_1_compression_1_1_i_has_transform_crusher">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_photon_1_1_compression_1_1_i_has_transform_crusher">IHasTransformCrusher</link>
<anchor xml:id="__transform_crusher_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00019"/><link linkend="_interface_photon_1_1_compression_1_1_i_has_transform_crusher_1af674fd93994d3856b97a24593d8873f8">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;<link linkend="_interface_photon_1_1_compression_1_1_i_has_transform_crusher_1af674fd93994d3856b97a24593d8873f8">TC</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00021"/>00021 
<anchor xml:id="__transform_crusher_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;[System.Serializable]
<anchor xml:id="__transform_crusher_8cs_source_1l00023"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher">00023</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;:&#32;Crusher&lt;TransformCrusher&gt;,&#32;<emphasis role="comment">/*IOnElementCrusherChange,*/</emphasis>&#32;ICrusherCopy&lt;TransformCrusher&gt;
<anchor xml:id="__transform_crusher_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00025"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7e4bc498f8521760f86912c8c66d1ae5">00025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7e4bc498f8521760f86912c8c66d1ae5">VersionMajor</link>&#32;=&#32;3;
<anchor xml:id="__transform_crusher_8cs_source_1l00026"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab33f3e9eb1c3b456cc8925443a4cf104">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab33f3e9eb1c3b456cc8925443a4cf104">VersionMinor</link>&#32;=&#32;5;
<anchor xml:id="__transform_crusher_8cs_source_1l00027"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afee7e139b8fec7eddb5e65abbc796bb9">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afee7e139b8fec7eddb5e65abbc796bb9">VersionRevision</link>&#32;=&#32;3;
<anchor xml:id="__transform_crusher_8cs_source_1l00028"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4b6c91db088e5f165ef099831627091b">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4b6c91db088e5f165ef099831627091b">Build</link>&#32;=&#32;3503;
<anchor xml:id="__transform_crusher_8cs_source_1l00029"/>00029 
<anchor xml:id="__transform_crusher_8cs_source_1l00030"/>00030 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Static&#32;Crushers</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00031"/>00031 
<anchor xml:id="__transform_crusher_8cs_source_1l00032"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aec1edd4039f607ab5a91dbd9295f1852">00032</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;TransformCrusher&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aec1edd4039f607ab5a91dbd9295f1852">staticTransformCrushers</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;TransformCrusher&gt;();
<anchor xml:id="__transform_crusher_8cs_source_1l00033"/>00033 
<anchor xml:id="__transform_crusher_8cs_source_1l00041"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae616bf4e11f138f2e25bba40c84a7fd4">00041</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae616bf4e11f138f2e25bba40c84a7fd4">CheckAgainstStatics</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;tc,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CheckElementCrusherAsWell&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(tc,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__transform_crusher_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00045"/>00045 
<anchor xml:id="__transform_crusher_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CheckElementCrusherAsWell)
<anchor xml:id="__transform_crusher_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tc.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(tc.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tc.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(tc.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tc.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ac6afac8846356aae304e8650082c5a5f">CheckAgainstStatics</link>(tc.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00052"/>00052 
<anchor xml:id="__transform_crusher_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;tc.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5446c2284c8267c16562fb9895f5f7c5">GetHashCode</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aec1edd4039f607ab5a91dbd9295f1852">staticTransformCrushers</link>.ContainsKey(hash))
<anchor xml:id="__transform_crusher_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aec1edd4039f607ab5a91dbd9295f1852">staticTransformCrushers</link>[hash];
<anchor xml:id="__transform_crusher_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00058"/>00058 
<anchor xml:id="__transform_crusher_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aec1edd4039f607ab5a91dbd9295f1852">staticTransformCrushers</link>.Add(hash,&#32;tc);
<anchor xml:id="__transform_crusher_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tc;
<anchor xml:id="__transform_crusher_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00062"/>00062 
<anchor xml:id="__transform_crusher_8cs_source_1l00063"/>00063 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00064"/>00064 
<anchor xml:id="__transform_crusher_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[HideInInspector]
<anchor xml:id="__transform_crusher_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Default&#32;Transform&#32;breaks&#32;crusher&#32;sharing&#32;across&#32;multiple&#32;instances&#32;and&#32;is&#32;now&#32;deprecated.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;is&#32;the&#32;default&#32;assumed&#32;transform&#32;when&#32;no&#32;transform&#32;or&#32;gameobject&#32;is&#32;given&#32;to&#32;methods.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l00068"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">00068</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00069"/>00069 
<anchor xml:id="__transform_crusher_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;up&#32;the&#32;default&#32;Crushers&#32;so&#32;they&#32;add&#32;up&#32;to&#32;64&#32;bits</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00071"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">protected</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00072"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">00072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">protected</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00073"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">00073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]&#32;<emphasis role="keyword">protected</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00074"/>00074 
<anchor xml:id="__transform_crusher_8cs_source_1l00075"/>00075 
<anchor xml:id="__transform_crusher_8cs_source_1l00079"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a959e101ab740e913a49b70258491d9">00079</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a959e101ab740e913a49b70258491d9">PosCrusher</link>
<anchor xml:id="__transform_crusher_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>,&#32;value))
<anchor xml:id="__transform_crusher_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00086"/>00086 
<anchor xml:id="__transform_crusher_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.OnRecalculated&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a">OnCrusherChange</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00089"/>00089 
<anchor xml:id="__transform_crusher_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;=&#32;value;
<anchor xml:id="__transform_crusher_8cs_source_1l00091"/>00091 
<anchor xml:id="__transform_crusher_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.OnRecalculated&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a">OnCrusherChange</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00094"/>00094 
<anchor xml:id="__transform_crusher_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00101"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8db5e9edbb47a723dc7c3f8ddc293f56">00101</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8db5e9edbb47a723dc7c3f8ddc293f56">RotCrusher</link>
<anchor xml:id="__transform_crusher_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>,&#32;value))
<anchor xml:id="__transform_crusher_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00108"/>00108 
<anchor xml:id="__transform_crusher_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.OnRecalculated&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a">OnCrusherChange</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00111"/>00111 
<anchor xml:id="__transform_crusher_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>&#32;=&#32;value;
<anchor xml:id="__transform_crusher_8cs_source_1l00113"/>00113 
<anchor xml:id="__transform_crusher_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.OnRecalculated&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a">OnCrusherChange</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00116"/>00116 
<anchor xml:id="__transform_crusher_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00123"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a802be4505b8090a54b19476a46dd6d34">00123</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a802be4505b8090a54b19476a46dd6d34">SclCrusher</link>
<anchor xml:id="__transform_crusher_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>,&#32;value))
<anchor xml:id="__transform_crusher_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00130"/>00130 
<anchor xml:id="__transform_crusher_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.OnRecalculated&#32;-=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a">OnCrusherChange</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00133"/>00133 
<anchor xml:id="__transform_crusher_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>&#32;=&#32;value;
<anchor xml:id="__transform_crusher_8cs_source_1l00135"/>00135 
<anchor xml:id="__transform_crusher_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.OnRecalculated&#32;+=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a">OnCrusherChange</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00138"/>00138 
<anchor xml:id="__transform_crusher_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00142"/>00142 
<anchor xml:id="__transform_crusher_8cs_source_1l00147"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a">00147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a">OnCrusherChange</link>(<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>&#32;crusher)
<anchor xml:id="__transform_crusher_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00151"/>00151 
<anchor xml:id="__transform_crusher_8cs_source_1l00152"/>00152 
<anchor xml:id="__transform_crusher_8cs_source_1l00153"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a84b1f8b9863b028634f777dc8643132c">00153</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a84b1f8b9863b028634f777dc8643132c">TransformCrusher</link>()
<anchor xml:id="__transform_crusher_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3faed384614f5cf49bb8f8a4ede9e2f0">ConstructDefault</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__transform_crusher_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00163"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5996eb92ec5d203123e5e05b0101dc25">00163</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5996eb92ec5d203123e5e05b0101dc25">TransformCrusher</link>(<emphasis role="keywordtype">bool</emphasis>&#32;isStatic&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3faed384614f5cf49bb8f8a4ede9e2f0">ConstructDefault</link>(isStatic);
<anchor xml:id="__transform_crusher_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00167"/>00167 
<anchor xml:id="__transform_crusher_8cs_source_1l00168"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3faed384614f5cf49bb8f8a4ede9e2f0">00168</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3faed384614f5cf49bb8f8a4ede9e2f0">ConstructDefault</link>(<emphasis role="keywordtype">bool</emphasis>&#32;isStatic&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isStatic)
<anchor xml:id="__transform_crusher_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Statics&#32;initialize&#32;all&#32;crushers&#32;as&#32;null.</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a959e101ab740e913a49b70258491d9">PosCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>(TRSType.Position,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__transform_crusher_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8db5e9edbb47a723dc7c3f8ddc293f56">RotCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>(TRSType.Euler,&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits12,&#32;-90f,&#32;90f,&#32;Axis.X,&#32;TRSType.Euler,&#32;<emphasis role="keyword">true</emphasis>),
<anchor xml:id="__transform_crusher_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;YCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Bits12,&#32;-180f,&#32;180f,&#32;Axis.Y,&#32;TRSType.Euler,&#32;<emphasis role="keyword">true</emphasis>),
<anchor xml:id="__transform_crusher_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(BitPresets.Disabled,&#32;-180f,&#32;180f,&#32;Axis.Z,&#32;TRSType.Euler,&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__transform_crusher_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a802be4505b8090a54b19476a46dd6d34">SclCrusher</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>(TRSType.Scale,&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uniformAxes&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1eb65b993bdec53ed0cb3dd49cd961d9">UniformAxes</link>.XYZ,
<anchor xml:id="__transform_crusher_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UCrusher&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;FloatCrusher(8,&#32;0f,&#32;2f,&#32;Axis.Uniform,&#32;TRSType.Scale,&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__transform_crusher_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__transform_crusher_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00190"/>00190 
<anchor xml:id="__transform_crusher_8cs_source_1l00191"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7342dc62d788987c81ebb12415e3b86c">00191</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7342dc62d788987c81ebb12415e3b86c">OnBeforeSerialize</link>()&#32;{&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00192"/>00192 
<anchor xml:id="__transform_crusher_8cs_source_1l00193"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a41b6424783da71e88dd56900f6b56e45">00193</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a41b6424783da71e88dd56900f6b56e45">OnAfterDeserialize</link>()
<anchor xml:id="__transform_crusher_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00197"/>00197 
<anchor xml:id="__transform_crusher_8cs_source_1l00198"/>00198 
<anchor xml:id="__transform_crusher_8cs_source_1l00199"/>00199 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00200"/>00200 <emphasis role="preprocessor">#pragma&#32;warning&#32;disable&#32;0414</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__transform_crusher_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isExpanded&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00203"/>00203 <emphasis role="preprocessor">#pragma&#32;warning&#32;restore&#32;0414</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00204"/>00204 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00205"/>00205 
<anchor xml:id="__transform_crusher_8cs_source_1l00206"/>00206 
<anchor xml:id="__transform_crusher_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;readonly&#32;CompressedMatrix&#32;CompressedMatrix.reusable&#32;=&#32;new&#32;CompressedMatrix();</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;readonly&#32;Matrix&#32;Matrix.reusable&#32;=&#32;new&#32;Matrix();</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00210"/>00210 
<anchor xml:id="__transform_crusher_8cs_source_1l00211"/>00211 
<anchor xml:id="__transform_crusher_8cs_source_1l00212"/>00212 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Cached&#32;compression&#32;values</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00213"/>00213 
<anchor xml:id="__transform_crusher_8cs_source_1l00214"/>00214 
<anchor xml:id="__transform_crusher_8cs_source_1l00215"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">00215</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[NonSerialized]&#32;<emphasis role="keyword">protected</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[4];
<anchor xml:id="__transform_crusher_8cs_source_1l00216"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">00216</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[NonSerialized]&#32;<emphasis role="keyword">protected</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[4];
<anchor xml:id="__transform_crusher_8cs_source_1l00217"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">00217</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[NonSerialized]&#32;<emphasis role="keyword">protected</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[4];
<anchor xml:id="__transform_crusher_8cs_source_1l00218"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3393045bcc58771e5677ffaf2c70a902">00218</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[NonSerialized]&#32;<emphasis role="keyword">protected</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3393045bcc58771e5677ffaf2c70a902">_cached_total</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[4];
<anchor xml:id="__transform_crusher_8cs_source_1l00219"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae1390ce6ef9b11a8bdcd87ab96d48fd8">00219</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ReadOnlyCollection&lt;int&gt;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae1390ce6ef9b11a8bdcd87ab96d48fd8">cached_total</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00220"/>00220 
<anchor xml:id="__transform_crusher_8cs_source_1l00221"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">00221</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00222"/>00222 
<anchor xml:id="__transform_crusher_8cs_source_1l00223"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">00223</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>()
<anchor xml:id="__transform_crusher_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;++i)
<anchor xml:id="__transform_crusher_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[i]&#32;=&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">Cached_TotalBits</link>[i];
<anchor xml:id="__transform_crusher_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[i]&#32;=&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">Cached_TotalBits</link>[i];&#32;&#32;<emphasis role="comment">//TallyBits((BitCullingLevel)i);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[i]&#32;=&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a7799aadb4b4eb8c574221d8af56eb47f">Cached_TotalBits</link>[i];&#32;&#32;<emphasis role="comment">//TallyBits((BitCullingLevel)i);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3393045bcc58771e5677ffaf2c70a902">_cached_total</link>[i]&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[i]&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[i]&#32;+&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[i];
<anchor xml:id="__transform_crusher_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae1390ce6ef9b11a8bdcd87ab96d48fd8">cached_total</link>&#32;=&#32;Array.AsReadOnly(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3393045bcc58771e5677ffaf2c70a902">_cached_total</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00233"/>00233 
<anchor xml:id="__transform_crusher_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TODO:&#32;cached&#32;likely&#32;no&#32;longer&#32;needed&#32;with&#32;bootstrapping&#32;and&#32;callbacks</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00237"/>00237 
<anchor xml:id="__transform_crusher_8cs_source_1l00238"/>00238 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00239"/>00239 
<anchor xml:id="__transform_crusher_8cs_source_1l00240"/>00240 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Array&#32;Writers</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00241"/>00241 
<anchor xml:id="__transform_crusher_8cs_source_1l00242"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a22d477a5228d9d66bfde621548c94ba1">00242</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a22d477a5228d9d66bfde621548c94ba1">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cm,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00246"/>00246 
<anchor xml:id="__transform_crusher_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00254"/>00254 
<anchor xml:id="__transform_crusher_8cs_source_1l00255"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4cf83876b696789efab7e93fea11cf63">00255</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4cf83876b696789efab7e93fea11cf63">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cm,&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00259"/>00259 
<anchor xml:id="__transform_crusher_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00267"/>00267 
<anchor xml:id="__transform_crusher_8cs_source_1l00268"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5e92ba41740a1b4efea2439f4516295d">00268</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5e92ba41740a1b4efea2439f4516295d">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cm,&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00272"/>00272 
<anchor xml:id="__transform_crusher_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00280"/>00280 
<anchor xml:id="__transform_crusher_8cs_source_1l00281"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a6d0637303a1e5cefadea17f742b96527">00281</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a6d0637303a1e5cefadea17f742b96527">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;Transform&#32;transform,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00285"/>00285 
<anchor xml:id="__transform_crusher_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;transform,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;transform,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;transform,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00294"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3a95c3f3707d573cb8031884d11438ec">00294</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3a95c3f3707d573cb8031884d11438ec">Write</link>(Transform&#32;transform,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a22d477a5228d9d66bfde621548c94ba1">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;transform,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[System.Obsolete(&quot;Removing&#32;the&#32;return&#32;value.&quot;)]</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;Bitstream&#32;Write(Transform&#32;transform,&#32;byte[]&#32;buffer,&#32;ref&#32;int&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Write(CompressedMatrix.reusable,&#32;transform,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;CompressedMatrix.reusable.ExtractBitstream();</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00304"/>00304 
<anchor xml:id="__transform_crusher_8cs_source_1l00305"/>00305 
<anchor xml:id="__transform_crusher_8cs_source_1l00306"/>00306 
<anchor xml:id="__transform_crusher_8cs_source_1l00307"/>00307 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00308"/>00308 
<anchor xml:id="__transform_crusher_8cs_source_1l00309"/>00309 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Array&#32;Readers</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00310"/>00310 
<anchor xml:id="__transform_crusher_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[System.Obsolete()]</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00312"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">00312</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link>(ulong[]&#32;array,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link>(array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00317"/>00317 
<anchor xml:id="__transform_crusher_8cs_source_1l00318"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5c12f1c0653bd77e30a056c73fc834c8">00318</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5c12f1c0653bd77e30a056c73fc834c8">ReadAndDecompress</link>(uint[]&#32;array,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link>(array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00323"/>00323 
<anchor xml:id="__transform_crusher_8cs_source_1l00324"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9019b040f8cb265cc4d4d9c6814e3317">00324</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9019b040f8cb265cc4d4d9c6814e3317">ReadAndDecompress</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;array,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link>(array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00329"/>00329 
<anchor xml:id="__transform_crusher_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skips&#32;intermediate&#32;step&#32;of&#32;creating&#32;a&#32;compressedMatrx</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00331"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab331c29db288e15cf6f49b3fd32aa297">00331</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab331c29db288e15cf6f49b3fd32aa297">ReadAndDecompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;ulong[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00336"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7788958f4baede9ab3afe357e88d2c48">00336</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7788958f4baede9ab3afe357e88d2c48">ReadAndDecompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;uint[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00341"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9c585031144e41cba6cf2a13b8599e07">00341</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9c585031144e41cba6cf2a13b8599e07">ReadAndDecompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00346"/>00346 
<anchor xml:id="__transform_crusher_8cs_source_1l00347"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3fc2854e69a4826f692ef21d05e30718">00347</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3fc2854e69a4826f692ef21d05e30718">ReadAndDecompress</link>(ulong[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00352"/>00352 
<anchor xml:id="__transform_crusher_8cs_source_1l00353"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a07540524a08d8bff436df02095ca2e76">00353</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a07540524a08d8bff436df02095ca2e76">ReadAndDecompress</link>(uint[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00358"/>00358 
<anchor xml:id="__transform_crusher_8cs_source_1l00359"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af5afe0d802142b1ceecc564f5a95eaa3">00359</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af5afe0d802142b1ceecc564f5a95eaa3">ReadAndDecompress</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00364"/>00364 
<anchor xml:id="__transform_crusher_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;UNTESTED</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00366"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">00366</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00370"/>00370 
<anchor xml:id="__transform_crusher_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;array,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00374"/>00374 
<anchor xml:id="__transform_crusher_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;array,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__transform_crusher_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;array,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;UNTESTED</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[System.Obsolete(&quot;Bitstream&#32;is&#32;slated&#32;to&#32;be&#32;removed.&#32;Use&#32;the&#32;Array&#32;and&#32;Primitive&#32;serializers&#32;instead.&quot;)]</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00383"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1f42876b0ba7a2c72fa0d1b904981b32">00383</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1f42876b0ba7a2c72fa0d1b904981b32">Read</link>(ulong[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00388"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a57d11b67c6c5878cfe82f1b90edcd483">00388</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a57d11b67c6c5878cfe82f1b90edcd483">Read</link>(uint[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00393"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1adf354c39bb038f4c270e9a66c0ef4f43">00393</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1adf354c39bb038f4c270e9a66c0ef4f43">Read</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;array,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00398"/>00398 
<anchor xml:id="__transform_crusher_8cs_source_1l00399"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a6eb5fd8bfacc84f7ba0c29599acb3350">00399</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a6eb5fd8bfacc84f7ba0c29599acb3350">Read</link>(ulong[]&#32;array,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00405"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a32853beeaae389d770f5297e88b6b8fa">00405</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a32853beeaae389d770f5297e88b6b8fa">Read</link>(uint[]&#32;array,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00411"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a983269ed810891cea68e582726435152">00411</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a983269ed810891cea68e582726435152">Read</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;array,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;array,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00417"/>00417 
<anchor xml:id="__transform_crusher_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;UNTESTED</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00419"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1adedc981a077de4b9d2186299c47571e2">00419</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1adedc981a077de4b9d2186299c47571e2">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00423"/>00423 
<anchor xml:id="__transform_crusher_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00432"/>00432 
<anchor xml:id="__transform_crusher_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;UNTESTED</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00434"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acb8c8e8f48f8e1df1f6b97466f6da8e3">00434</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acb8c8e8f48f8e1df1f6b97466f6da8e3">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;uint[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00438"/>00438 
<anchor xml:id="__transform_crusher_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;<link linkend="_namespace_photon_1_1_compression_1a1a457d4f2f51a9c7e2e21605f0d4bbf7">IncludedAxes</link>.XYZ,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00447"/>00447 
<anchor xml:id="__transform_crusher_8cs_source_1l00448"/>00448 
<anchor xml:id="__transform_crusher_8cs_source_1l00449"/>00449 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00450"/>00450 
<anchor xml:id="__transform_crusher_8cs_source_1l00451"/>00451 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ULong&#32;Buffer&#32;Writers</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00452"/>00452 
<anchor xml:id="__transform_crusher_8cs_source_1l00461"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a42eef89c72382f5c1081e1a4306f0201">00461</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a42eef89c72382f5c1081e1a4306f0201">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;Transform&#32;transform,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00465"/>00465 
<anchor xml:id="__transform_crusher_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;transform,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;transform,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;transform,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00474"/>00474 
<anchor xml:id="__transform_crusher_8cs_source_1l00483"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac4de1c160c0c3adb79566f0aefcba1ed">00483</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac4de1c160c0c3adb79566f0aefcba1ed">Write</link>(Transform&#32;transform,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00487"/>00487 
<anchor xml:id="__transform_crusher_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(transform,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(transform,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(transform,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00495"/>00495 
<anchor xml:id="__transform_crusher_8cs_source_1l00502"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af428d82729549a13f9ce1cfbf380bb44">00502</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af428d82729549a13f9ce1cfbf380bb44">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cm,&#32;ref&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;ref&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00511"/>00511 
<anchor xml:id="__transform_crusher_8cs_source_1l00519"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a68ba03678ef3456ba00ac763b192b0a7">00519</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a68ba03678ef3456ba00ac763b192b0a7">Write</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;Transform&#32;transform,&#32;ref&#32;ulong&#32;bitstream,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00523"/>00523 
<anchor xml:id="__transform_crusher_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link>(nonalloc,&#32;transform);
<anchor xml:id="__transform_crusher_8cs_source_1l00525"/>00525 
<anchor xml:id="__transform_crusher_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;ref&#32;bitstream,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;ref&#32;bitstream,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a12785cbdfb8a910d5a8534856415a3ee">Write</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;ref&#32;bitstream,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00533"/>00533 
<anchor xml:id="__transform_crusher_8cs_source_1l00534"/>00534 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00535"/>00535 
<anchor xml:id="__transform_crusher_8cs_source_1l00536"/>00536 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Read&#32;and&#32;Decompress</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00537"/>00537 
<anchor xml:id="__transform_crusher_8cs_source_1l00538"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aaa54f57a0550395a946209ce762d1acd">00538</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aaa54f57a0550395a946209ce762d1acd">ReadAndDecompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;ulong&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link>(nonalloc,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;the&#32;nonalloc&#32;overload&#32;instead&#32;and&#32;supply&#32;a&#32;target&#32;Matrix.&#32;Matrix&#32;is&#32;now&#32;a&#32;class&#32;rather&#32;than&#32;a&#32;struct&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l00544"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3d87e1b1712e7825fd579a0f61549c45">00544</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3d87e1b1712e7825fd579a0f61549c45">ReadAndDecompress</link>(ulong&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link>(buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00549"/>00549 
<anchor xml:id="__transform_crusher_8cs_source_1l00550"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5130c54038be875ac4602bac4a15001a">00550</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5130c54038be875ac4602bac4a15001a">ReadAndDecompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;the&#32;nonalloc&#32;overload&#32;instead&#32;and&#32;supply&#32;a&#32;target&#32;Matrix.&#32;Matrix&#32;is&#32;now&#32;a&#32;class&#32;rather&#32;than&#32;a&#32;struct&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l00556"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1d27eaa9da0469479ded0f719b6a3a5f">00556</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1d27eaa9da0469479ded0f719b6a3a5f">ReadAndDecompress</link>(ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00561"/>00561 
<anchor xml:id="__transform_crusher_8cs_source_1l00562"/>00562 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00563"/>00563 
<anchor xml:id="__transform_crusher_8cs_source_1l00564"/>00564 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ReadAndApply</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00565"/>00565 
<anchor xml:id="__transform_crusher_8cs_source_1l00572"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a38c558489f52896a6d8d5e1e40e5d264">00572</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a38c558489f52896a6d8d5e1e40e5d264">ReadAndApply</link>(Transform&#32;target,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">Apply</link>(target,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00577"/>00577 
<anchor xml:id="__transform_crusher_8cs_source_1l00578"/>00578 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00579"/>00579 
<anchor xml:id="__transform_crusher_8cs_source_1l00580"/>00580 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Fragments&#32;Reader</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00581"/>00581 
<anchor xml:id="__transform_crusher_8cs_source_1l00582"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9">00582</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ulong[]&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9">reusableArray64</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ulong[5];
<anchor xml:id="__transform_crusher_8cs_source_1l00583"/>00583 
<anchor xml:id="__transform_crusher_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[System.Obsolete(&quot;Bitstream&#32;is&#32;slated&#32;to&#32;be&#32;removed.&#32;Use&#32;the&#32;Array&#32;and&#32;Primitive&#32;serializers&#32;instead.&quot;)]</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00588"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acfd38d2158c72e1d2ae51d30df5e31eb">00588</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acfd38d2158c72e1d2ae51d30df5e31eb">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;ulong&#32;frag0,&#32;ulong&#32;frag1&#32;=&#32;0,&#32;ulong&#32;frag2&#32;=&#32;0,&#32;ulong&#32;frag3&#32;=&#32;0,&#32;ulong&#32;frag4&#32;=&#32;0,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00592"/>00592 
<anchor xml:id="__transform_crusher_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9">reusableArray64</link>.Write(frag0,&#32;ref&#32;bitposition,&#32;64);
<anchor xml:id="__transform_crusher_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9">reusableArray64</link>.Write(frag1,&#32;ref&#32;bitposition,&#32;64);
<anchor xml:id="__transform_crusher_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9">reusableArray64</link>.Write(frag2,&#32;ref&#32;bitposition,&#32;64);
<anchor xml:id="__transform_crusher_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9">reusableArray64</link>.Write(frag3,&#32;ref&#32;bitposition,&#32;64);
<anchor xml:id="__transform_crusher_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9">reusableArray64</link>.Write(frag4,&#32;ref&#32;bitposition,&#32;64);
<anchor xml:id="__transform_crusher_8cs_source_1l00599"/>00599 
<anchor xml:id="__transform_crusher_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9">reusableArray64</link>,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00603"/>00603 
<anchor xml:id="__transform_crusher_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[System.Obsolete(&quot;Bitstream&#32;is&#32;slated&#32;to&#32;be&#32;removed.&#32;Use&#32;the&#32;Array&#32;and&#32;Primitive&#32;serializers&#32;instead.&quot;)]</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00605"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8483b39e711ba8f35595abdd5e4b329d">00605</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8483b39e711ba8f35595abdd5e4b329d">ReadAndDecompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;ulong&#32;frag0,&#32;ulong&#32;frag1&#32;=&#32;0,&#32;ulong&#32;frag2&#32;=&#32;0,&#32;ulong&#32;frag3&#32;=&#32;0,&#32;ulong&#32;frag4&#32;=&#32;0,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;frag0,&#32;frag1,&#32;frag2,&#32;frag3,&#32;frag4,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00610"/>00610 
<anchor xml:id="__transform_crusher_8cs_source_1l00611"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a03bbaeca49b32ccb205c5265bb561d5c">00611</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a03bbaeca49b32ccb205c5265bb561d5c">Read</link>(ulong&#32;frag0,&#32;ulong&#32;frag1&#32;=&#32;0,&#32;ulong&#32;frag2&#32;=&#32;0,&#32;ulong&#32;frag3&#32;=&#32;0,&#32;uint&#32;frag4&#32;=&#32;0,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;frag0,&#32;frag1,&#32;frag2,&#32;frag3,&#32;frag4,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00616"/>00616 
<anchor xml:id="__transform_crusher_8cs_source_1l00617"/>00617 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00618"/>00618 
<anchor xml:id="__transform_crusher_8cs_source_1l00619"/>00619 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;ULong&#32;Buffer&#32;Readers</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00620"/>00620 
<anchor xml:id="__transform_crusher_8cs_source_1l00627"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3b7214142bbed4164340bf73b897c707">00627</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3b7214142bbed4164340bf73b897c707">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;ulong&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(nonalloc,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00632"/>00632 
<anchor xml:id="__transform_crusher_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;CompressedMatrix&#32;Read(ulong&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;int&#32;bitposition&#32;=&#32;0;</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Read(CompressedMatrix.reusable,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;CompressedMatrix.reusable;</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00639"/>00639 
<anchor xml:id="__transform_crusher_8cs_source_1l00647"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aba0f4a8f80333baadb27fd72710b4d1b">00647</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aba0f4a8f80333baadb27fd72710b4d1b">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00651"/>00651 
<anchor xml:id="__transform_crusher_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00653"/>00653 
<anchor xml:id="__transform_crusher_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[(<emphasis role="keywordtype">int</emphasis>)bcl]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a1dba6467a40c2018086b4076e4ed2614">Read</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[System.Obsolete(&quot;Bitstream&#32;is&#32;slated&#32;to&#32;be&#32;removed.&#32;Use&#32;the&#32;Array&#32;and&#32;Primitive&#32;serializers&#32;instead.&quot;)]</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00662"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acf8c063a1701d8e5c38e8b686030e55c">00662</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acf8c063a1701d8e5c38e8b686030e55c">Read</link>(ulong&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00667"/>00667 
<anchor xml:id="__transform_crusher_8cs_source_1l00668"/>00668 
<anchor xml:id="__transform_crusher_8cs_source_1l00669"/>00669 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00670"/>00670 
<anchor xml:id="__transform_crusher_8cs_source_1l00671"/>00671 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Compress</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00672"/>00672 
<anchor xml:id="__transform_crusher_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Supply&#32;the&#32;transform&#32;to&#32;compress.&#32;Default&#32;Transform&#32;has&#32;be&#32;deprecated.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l00678"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afc8cc579c405acb2ae7dc42a5b3b15d7">00678</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afc8cc579c405acb2ae7dc42a5b3b15d7">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc)
<anchor xml:id="__transform_crusher_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Assert(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;transformMissingError);
<anchor xml:id="__transform_crusher_8cs_source_1l00681"/>00681 
<anchor xml:id="__transform_crusher_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Supply&#32;the&#32;transform&#32;to&#32;compress.&#32;Default&#32;Transform&#32;has&#32;be&#32;deprecated.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l00685"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">00685</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link>()
<anchor xml:id="__transform_crusher_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Assert(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;transformMissingError);
<anchor xml:id="__transform_crusher_8cs_source_1l00688"/>00688 
<anchor xml:id="__transform_crusher_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00691"/>00691 
<anchor xml:id="__transform_crusher_8cs_source_1l00692"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0bf59d02b55153a258e22dd387f4ff3f">00692</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0bf59d02b55153a258e22dd387f4ff3f">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;matrix)
<anchor xml:id="__transform_crusher_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00696"/>00696 
<anchor xml:id="__transform_crusher_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1acadc45435325aa84fcbc5143dc00cd9e">position</link>);&#32;<emphasis role="keywordflow">else</emphasis>&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a30ee71728d9a37e2d3c03709c8c1e208">Clear</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1a61e05863c3c2d4d3923c5d05fb1fc371">rotation</link>);&#32;<emphasis role="keywordflow">else</emphasis>&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a30ee71728d9a37e2d3c03709c8c1e208">Clear</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1ad1aaf2d12bf71df965ef32994e58485a">scale</link>);&#32;<emphasis role="keywordflow">else</emphasis>&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a30ee71728d9a37e2d3c03709c8c1e208">Clear</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00701"/>00701 
<anchor xml:id="__transform_crusher_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00703"/>00703 
<anchor xml:id="__transform_crusher_8cs_source_1l00704"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8f04380f44e119a56725bd7c0b13fdee">00704</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8f04380f44e119a56725bd7c0b13fdee">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;Transform&#32;transform)
<anchor xml:id="__transform_crusher_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00708"/>00708 
<anchor xml:id="__transform_crusher_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;transform);&#32;<emphasis role="keywordflow">else</emphasis>&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a30ee71728d9a37e2d3c03709c8c1e208">Clear</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;transform);&#32;<emphasis role="keywordflow">else</emphasis>&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a30ee71728d9a37e2d3c03709c8c1e208">Clear</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;transform);&#32;<emphasis role="keywordflow">else</emphasis>&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_element_1a30ee71728d9a37e2d3c03709c8c1e208">Clear</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00713"/>00713 
<anchor xml:id="__transform_crusher_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[System.Obsolete(&quot;Use&#32;the&#32;nonalloc&#32;overload&#32;instead&#32;and&#32;supply&#32;a&#32;target&#32;CompressedMatrix.&#32;CompressedMatrix&#32;is&#32;now&#32;a&#32;class&#32;rather&#32;than&#32;a&#32;struct&quot;)]</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//[System.Obsolete(&quot;Bitstream&#32;is&#32;slated&#32;to&#32;be&#32;removed.&#32;Use&#32;the&#32;Array&#32;and&#32;Primitive&#32;serializers&#32;instead.&quot;)]</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00717"/>00717 
<anchor xml:id="__transform_crusher_8cs_source_1l00722"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19bc53fb9a5f7a3f4755c9943225a537">00722</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19bc53fb9a5f7a3f4755c9943225a537">Compress</link>(Transform&#32;transform)
<anchor xml:id="__transform_crusher_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;transform);
<anchor xml:id="__transform_crusher_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00727"/>00727 
<anchor xml:id="__transform_crusher_8cs_source_1l00728"/>00728 <emphasis role="preprocessor">#if&#32;!DISABLE_PHYSICS</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00729"/>00729 
<anchor xml:id="__transform_crusher_8cs_source_1l00734"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2d330417c1693dedb3da7b0d45bae010">00734</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2d330417c1693dedb3da7b0d45bae010">Compress</link>(Rigidbody&#32;rb)
<anchor xml:id="__transform_crusher_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;rb);
<anchor xml:id="__transform_crusher_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00739"/>00739 
<anchor xml:id="__transform_crusher_8cs_source_1l00743"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3a1aa71482fa2122be1f4ba992e8efda">00743</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3a1aa71482fa2122be1f4ba992e8efda">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;Rigidbody&#32;rb)
<anchor xml:id="__transform_crusher_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00747"/>00747 
<anchor xml:id="__transform_crusher_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;rb);
<anchor xml:id="__transform_crusher_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;rb);
<anchor xml:id="__transform_crusher_8cs_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;rb);
<anchor xml:id="__transform_crusher_8cs_source_1l00752"/>00752 
<anchor xml:id="__transform_crusher_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00754"/>00754 
<anchor xml:id="__transform_crusher_8cs_source_1l00759"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4fe43ddcbbc24ebd10645957e033b194">00759</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4fe43ddcbbc24ebd10645957e033b194">Compress</link>(Rigidbody2D&#32;rb2d)
<anchor xml:id="__transform_crusher_8cs_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;rb2d);
<anchor xml:id="__transform_crusher_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00764"/>00764 
<anchor xml:id="__transform_crusher_8cs_source_1l00765"/>00765 
<anchor xml:id="__transform_crusher_8cs_source_1l00769"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a747498497e0052c0106d125497f79c42">00769</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a747498497e0052c0106d125497f79c42">Compress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;nonalloc,&#32;Rigidbody2D&#32;rb2d)
<anchor xml:id="__transform_crusher_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00773"/>00773 
<anchor xml:id="__transform_crusher_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a77ac5dd250a40305c07964bd7ae5e315">crusher</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;rb2d.transform);
<anchor xml:id="__transform_crusher_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;rb2d.transform);
<anchor xml:id="__transform_crusher_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(nonalloc.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;rb2d.transform);
<anchor xml:id="__transform_crusher_8cs_source_1l00779"/>00779 
<anchor xml:id="__transform_crusher_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//nonalloc.crusher&#32;=&#32;this;</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(cached_pBits[0]&#32;&gt;&#32;0)</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Vector2&#32;localized&#32;=&#32;(posCrusher.local&#32;&amp;&amp;&#32;rb2d.transform.parent)&#32;?&#32;(Vector2)rb2d.transform.InverseTransformPoint(rb2d.position)&#32;:&#32;rb2d.position;</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;posCrusher.Compress(nonalloc.cPos,&#32;localized);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;nonalloc.cPos.Clear();</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00788"/>00788 
<anchor xml:id="__transform_crusher_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(rotCrusher.TRSType&#32;==&#32;TRSType.Quaternion)</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Quaternion&#32;localized&#32;=&#32;(rotCrusher.local&#32;&amp;&amp;&#32;rb2d.transform.parent)&#32;?&#32;rb2d.transform.localRotation&#32;:&#32;Quaternion.Euler(0,&#32;0,&#32;rb2d.rotation);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(cached_rBits[0]&#32;&gt;&#32;0)&#32;rotCrusher.Compress(nonalloc.cRot,&#32;localized);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;else&#32;nonalloc.cRot.Clear();</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Vector3&#32;localized&#32;=&#32;(rotCrusher.local&#32;&amp;&amp;&#32;rb2d.transform.parent)&#32;?&#32;rb2d.transform.localEulerAngles&#32;:&#32;new&#32;Vector3(0,&#32;0,&#32;rb2d.rotation);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(cached_rBits[0]&#32;&gt;&#32;0)&#32;rotCrusher.Compress(nonalloc.cRot,&#32;localized);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;else&#32;nonalloc.cRot.Clear();</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00801"/>00801 
<anchor xml:id="__transform_crusher_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(cached_sBits[0]&#32;&gt;&#32;0)&#32;sclCrusher.Compress(nonalloc.cScl,&#32;rb2d.transform);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//else&#32;nonalloc.cScl.Clear();</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00804"/>00804 
<anchor xml:id="__transform_crusher_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00806"/>00806 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00807"/>00807 
<anchor xml:id="__transform_crusher_8cs_source_1l00814"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aef2ca842733706bfae4f3c95ff1321f5">00814</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aef2ca842733706bfae4f3c95ff1321f5">CompressAndWrite</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;matrix,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__transform_crusher_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00818"/>00818 
<anchor xml:id="__transform_crusher_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1acadc45435325aa84fcbc5143dc00cd9e">position</link>,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1a61e05863c3c2d4d3923c5d05fb1fc371">rotation</link>,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1ad1aaf2d12bf71df965ef32994e58485a">scale</link>,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00826"/>00826 
<anchor xml:id="__transform_crusher_8cs_source_1l00831"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a48880ac9c9e33b13a145d1216c1dc962">00831</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a48880ac9c9e33b13a145d1216c1dc962">CompressAndWrite</link>(Transform&#32;transform,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__transform_crusher_8cs_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00835"/>00835 
<anchor xml:id="__transform_crusher_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(transform,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(transform,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(transform,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00843"/>00843 
<anchor xml:id="__transform_crusher_8cs_source_1l00844"/>00844 <emphasis role="preprocessor">#if&#32;!DISABLE_PHYSICS</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00845"/>00845 
<anchor xml:id="__transform_crusher_8cs_source_1l00850"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0c10eb1d348fa9b7e7fdf1721ee92baf">00850</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0c10eb1d348fa9b7e7fdf1721ee92baf">CompressAndWrite</link>(Rigidbody&#32;rb,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition)
<anchor xml:id="__transform_crusher_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00854"/>00854 
<anchor xml:id="__transform_crusher_8cs_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localized&#32;=&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1adcda1e30cc16acbb1053cd22118b4154">local</link>&#32;&amp;&amp;&#32;rb.transform.parent)&#32;?&#32;rb.transform.InverseTransformPoint(rb.position)&#32;:&#32;rb.position;
<anchor xml:id="__transform_crusher_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(localized,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;TRSType.Quaternion)
<anchor xml:id="__transform_crusher_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(rb.rotation,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(rb.rotation.eulerAngles,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ab068e124da265b900aadb838ef96884d">CompressAndWrite</link>(rb.transform,&#32;buffer,&#32;ref&#32;bitposition);
<anchor xml:id="__transform_crusher_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00870"/>00870 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00871"/>00871 
<anchor xml:id="__transform_crusher_8cs_source_1l00872"/>00872 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00873"/>00873 
<anchor xml:id="__transform_crusher_8cs_source_1l00874"/>00874 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Decompress</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00875"/>00875 
<anchor xml:id="__transform_crusher_8cs_source_1l00876"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">00876</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;ulong[]&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00882"/>00882 
<anchor xml:id="__transform_crusher_8cs_source_1l00883"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aa15d64937bfd0fcb3e46c8064efc707f">00883</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aa15d64937bfd0fcb3e46c8064efc707f">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;uint[]&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00889"/>00889 
<anchor xml:id="__transform_crusher_8cs_source_1l00890"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9715042485fd5aec546132c2c99d8448">00890</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9715042485fd5aec546132c2c99d8448">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;ulong&#32;compressed,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;compressed,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00895"/>00895 
<anchor xml:id="__transform_crusher_8cs_source_1l00896"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae825ec23ef92a72200927450a413d7df">00896</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae825ec23ef92a72200927450a413d7df">Decompress</link>(ulong[]&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00903"/>00903 
<anchor xml:id="__transform_crusher_8cs_source_1l00904"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acf425e3d04cc0a437f6e57bf332e063b">00904</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acf425e3d04cc0a437f6e57bf332e063b">Decompress</link>(uint[]&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00911"/>00911 
<anchor xml:id="__transform_crusher_8cs_source_1l00912"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab04b7220513c60a6fce5f53698c2b865">00912</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab04b7220513c60a6fce5f53698c2b865">Decompress</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition&#32;=&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00919"/>00919 
<anchor xml:id="__transform_crusher_8cs_source_1l00920"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a993ec3f72dcd74dbdfd24901ef39dd82">00920</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a993ec3f72dcd74dbdfd24901ef39dd82">Decompress</link>(ulong&#32;compressed,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;compressed,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>;
<anchor xml:id="__transform_crusher_8cs_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00926"/>00926 
<anchor xml:id="__transform_crusher_8cs_source_1l00927"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a84215015317adbaaf1bb251e688373f9">00927</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a84215015317adbaaf1bb251e688373f9">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;nonalloc,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;compMatrix)
<anchor xml:id="__transform_crusher_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00931"/>00931 
<anchor xml:id="__transform_crusher_8cs_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nonalloc.<link linkend="_class_photon_1_1_compression_1_1_matrix_1a9dd9327bf1dd2719dfcec3760d4b81f7">Set</link>(
<anchor xml:id="__transform_crusher_8cs_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>,
<anchor xml:id="__transform_crusher_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)&#32;?&#32;(Vector3)<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(compMatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(),
<anchor xml:id="__transform_crusher_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)&#32;?&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(compMatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>)&#32;:&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;TRSType.Quaternion)&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>(<emphasis role="keyword">new</emphasis>&#32;Quaternion(0,0,0,1))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>(<emphasis role="keyword">new</emphasis>&#32;Vector3(0,0,0)),
<anchor xml:id="__transform_crusher_8cs_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)&#32;?&#32;(Vector3)<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(compMatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3()
<anchor xml:id="__transform_crusher_8cs_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__transform_crusher_8cs_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Use&#32;the&#32;nonalloc&#32;overload&#32;instead&#32;and&#32;supply&#32;a&#32;target&#32;Matrix.&#32;Matrix&#32;is&#32;now&#32;a&#32;class&#32;rather&#32;than&#32;a&#32;struct&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l00940"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acd6200503fda266a343fd49db36e1912">00940</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acd6200503fda266a343fd49db36e1912">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;compMatrix)
<anchor xml:id="__transform_crusher_8cs_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00942"/>00942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link>)
<anchor xml:id="__transform_crusher_8cs_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l00944"/>00944 
<anchor xml:id="__transform_crusher_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>(
<anchor xml:id="__transform_crusher_8cs_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>,
<anchor xml:id="__transform_crusher_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)&#32;?&#32;(Vector3)<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(compMatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(),
<anchor xml:id="__transform_crusher_8cs_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)&#32;?&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(compMatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>)&#32;:&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a3b69b8635e3c39b871a6a2af577c9ce5">TRSType</link>&#32;==&#32;TRSType.Quaternion)&#32;?&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>(<emphasis role="keyword">new</emphasis>&#32;Quaternion(0,&#32;0,&#32;0,&#32;1))&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_photon_1_1_compression_1_1_element">Element</link>(<emphasis role="keyword">new</emphasis>&#32;Vector3(0,&#32;0,&#32;0)),
<anchor xml:id="__transform_crusher_8cs_source_1l00949"/>00949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)&#32;?&#32;(Vector3)<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(compMatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>)&#32;:&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3()
<anchor xml:id="__transform_crusher_8cs_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__transform_crusher_8cs_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00952"/>00952 
<anchor xml:id="__transform_crusher_8cs_source_1l00953"/>00953 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00954"/>00954 
<anchor xml:id="__transform_crusher_8cs_source_1l00955"/>00955 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Rigidbody&#32;Set/Move</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00956"/>00956 <emphasis role="preprocessor">#if&#32;!DISABLE_PHYSICS</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l00957"/>00957 
<anchor xml:id="__transform_crusher_8cs_source_1l00962"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9f2dc78a136df7463b612f7084b2d277">00962</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9f2dc78a136df7463b612f7084b2d277">Set</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cmatrix)
<anchor xml:id="__transform_crusher_8cs_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb.transform,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00975"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acecfdb3738a4c27c0fad0f3f4ccaad03">00975</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acecfdb3738a4c27c0fad0f3f4ccaad03">Set</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;matrix)
<anchor xml:id="__transform_crusher_8cs_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1acadc45435325aa84fcbc5143dc00cd9e">position</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1a61e05863c3c2d4d3923c5d05fb1fc371">rotation</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb.transform,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1ad1aaf2d12bf71df965ef32994e58485a">scale</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00988"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afbf5cc01c80a47641b56c124c3c9a7d3">00988</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afbf5cc01c80a47641b56c124c3c9a7d3">Set</link>(Rigidbody&#32;rb,&#32;ulong&#32;frag0,&#32;ulong&#32;frag1&#32;=&#32;0,&#32;ulong&#32;frag2&#32;=&#32;0,&#32;ulong&#32;frag3&#32;=&#32;0,&#32;ulong&#32;frag4&#32;=&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;frag0,&#32;frag1,&#32;frag2,&#32;frag3,&#32;frag4);
<anchor xml:id="__transform_crusher_8cs_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9f2dc78a136df7463b612f7084b2d277">Set</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l00997"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aa8931eafe6db6bccde82d8742711faaa">00997</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aa8931eafe6db6bccde82d8742711faaa">Set</link>(Rigidbody&#32;rb,&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9f2dc78a136df7463b612f7084b2d277">Set</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01006"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a402b17ad7257c5bed4ee7d827d8bda65">01006</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a402b17ad7257c5bed4ee7d827d8bda65">Set</link>(Rigidbody&#32;rb,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l01009"/>01009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9f2dc78a136df7463b612f7084b2d277">Set</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01011"/>01011 
<anchor xml:id="__transform_crusher_8cs_source_1l01012"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab34d1f48ab6b5ae55f4b0bdda352641c">01012</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab34d1f48ab6b5ae55f4b0bdda352641c">Set</link>(Rigidbody2D&#32;rb2d,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;matrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01015"/>01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb2d,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1acadc45435325aa84fcbc5143dc00cd9e">position</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb2d,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1a61e05863c3c2d4d3923c5d05fb1fc371">rotation</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01018"/>01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb2d.transform,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1ad1aaf2d12bf71df965ef32994e58485a">scale</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01025"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3b4ed3635169273159aa58a370beca81">01025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3b4ed3635169273159aa58a370beca81">Set</link>(Rigidbody2D&#32;rb2d,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cmatrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01028"/>01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb2d,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a33b145cf55139256237f906973bbf20a">Set</link>(rb2d,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb2d.transform,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01034"/>01034 
<anchor xml:id="__transform_crusher_8cs_source_1l01039"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af715a1fd5db84d12746260129ed59f02">01039</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af715a1fd5db84d12746260129ed59f02">Move</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cmatrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af715a1fd5db84d12746260129ed59f02">Move</link>(rb,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a3871006f28cd8860c7364e7ab9d5d371">Decompress</link>());
<anchor xml:id="__transform_crusher_8cs_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acd3f42c0a25e5cda64f019ce015595f4">Move</link>(rb,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acd3f42c0a25e5cda64f019ce015595f4">Move</link>(rb,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb.transform,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01053"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a6b299828205cea24dab5cd2bfa8c3e9a">01053</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a6b299828205cea24dab5cd2bfa8c3e9a">Move</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;matrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acd3f42c0a25e5cda64f019ce015595f4">Move</link>(rb,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1acadc45435325aa84fcbc5143dc00cd9e">position</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1acd3f42c0a25e5cda64f019ce015595f4">Move</link>(rb,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1a61e05863c3c2d4d3923c5d05fb1fc371">rotation</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01059"/>01059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb.transform,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1ad1aaf2d12bf71df965ef32994e58485a">scale</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01066"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0facf7886c4b655f638606d5a48ce252">01066</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0facf7886c4b655f638606d5a48ce252">Move</link>(Rigidbody&#32;rb,&#32;ulong&#32;frag0,&#32;ulong&#32;frag1&#32;=&#32;0,&#32;ulong&#32;frag2&#32;=&#32;0,&#32;ulong&#32;frag3&#32;=&#32;0,&#32;ulong&#32;frag4&#32;=&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01067"/>01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;frag0,&#32;frag1,&#32;frag2,&#32;frag3,&#32;frag4);
<anchor xml:id="__transform_crusher_8cs_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af715a1fd5db84d12746260129ed59f02">Move</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01075"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1adcdfcc7c25782503e8eecb2693c89df5">01075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1adcdfcc7c25782503e8eecb2693c89df5">Move</link>(Rigidbody&#32;rb,&#32;ulong[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l01076"/>01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01077"/>01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l01078"/>01078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af715a1fd5db84d12746260129ed59f02">Move</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01079"/>01079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01084"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8cfc23834add089917dffc1ed672600a">01084</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8cfc23834add089917dffc1ed672600a">Move</link>(Rigidbody&#32;rb,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;bitposition,&#32;BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l01085"/>01085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;buffer,&#32;ref&#32;bitposition,&#32;bcl);
<anchor xml:id="__transform_crusher_8cs_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af715a1fd5db84d12746260129ed59f02">Move</link>(rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01088"/>01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01089"/>01089 
<anchor xml:id="__transform_crusher_8cs_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Apply&#32;for&#32;Rigidbody&#32;has&#32;been&#32;replaced&#32;with&#32;Move&#32;and&#32;Set,&#32;to&#32;indicate&#32;usage&#32;of&#32;MovePosition/Rotation&#32;vs&#32;rb.position/rotation.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l01094"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">01094</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">Apply</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cmatrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01095"/>01095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01097"/>01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01099"/>01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01100"/>01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01101"/>01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb.transform,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01102"/>01102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01103"/>01103 
<anchor xml:id="__transform_crusher_8cs_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Apply&#32;for&#32;Rigidbody&#32;has&#32;been&#32;replaced&#32;with&#32;Move&#32;and&#32;Set,&#32;to&#32;indicate&#32;usage&#32;of&#32;MovePosition/Rotation&#32;vs&#32;rb.position/rotation.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l01108"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ade51dc3438ac85d5cab34bd8d3100971">01108</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ade51dc3438ac85d5cab34bd8d3100971">Apply</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;matrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01111"/>01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1acadc45435325aa84fcbc5143dc00cd9e">position</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01112"/>01112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01113"/>01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1a61e05863c3c2d4d3923c5d05fb1fc371">rotation</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01114"/>01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01115"/>01115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(rb.transform,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1ad1aaf2d12bf71df965ef32994e58485a">scale</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01116"/>01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01117"/>01117 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l01118"/>01118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l01119"/>01119 
<anchor xml:id="__transform_crusher_8cs_source_1l01120"/>01120 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Apply</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l01121"/>01121 
<anchor xml:id="__transform_crusher_8cs_source_1l01122"/>01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;transformMissingError&#32;=&#32;<emphasis role="stringliteral">&quot;The&#32;&apos;defaultTransform&apos;&#32;is&#32;null&#32;and&#32;has&#32;not&#32;be&#32;set&#32;in&#32;the&#32;inspector.&#32;&quot;</emphasis>&#32;+
<anchor xml:id="__transform_crusher_8cs_source_1l01123"/>01123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;For&#32;non-editor&#32;usages&#32;of&#32;TransformCrusher&#32;you&#32;need&#32;to&#32;pass&#32;the&#32;target&#32;transform&#32;to&#32;this&#32;method.&quot;</emphasis>;
<anchor xml:id="__transform_crusher_8cs_source_1l01124"/>01124 
<anchor xml:id="__transform_crusher_8cs_source_1l01125"/>01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Supply&#32;the&#32;transform&#32;to&#32;compress.&#32;Default&#32;Transform&#32;has&#32;be&#32;deprecated.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l01126"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0fbeabd595125a179bdfcd02fed519e0">01126</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0fbeabd595125a179bdfcd02fed519e0">Apply</link>(ulong&#32;cvalue)
<anchor xml:id="__transform_crusher_8cs_source_1l01127"/>01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Assert(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;transformMissingError);
<anchor xml:id="__transform_crusher_8cs_source_1l01129"/>01129 
<anchor xml:id="__transform_crusher_8cs_source_1l01130"/>01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">Apply</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;cvalue);
<anchor xml:id="__transform_crusher_8cs_source_1l01131"/>01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01132"/>01132 
<anchor xml:id="__transform_crusher_8cs_source_1l01133"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a65f86a49ba6f80905d40b3c81695b8ab">01133</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a65f86a49ba6f80905d40b3c81695b8ab">Apply</link>(Transform&#32;t,&#32;ulong&#32;cvalue)
<anchor xml:id="__transform_crusher_8cs_source_1l01134"/>01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>,&#32;cvalue);
<anchor xml:id="__transform_crusher_8cs_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">Apply</link>(t,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.<link linkend="_class_photon_1_1_compression_1_1_matrix_1aa1317884a4a7ceddc286b1d2b031d2e6">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01138"/>01138 
<anchor xml:id="__transform_crusher_8cs_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Supply&#32;the&#32;transform&#32;to&#32;compress.&#32;Default&#32;Transform&#32;has&#32;be&#32;deprecated.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l01140"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a26ea17d966c9b762411781310cfcdbb7">01140</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a26ea17d966c9b762411781310cfcdbb7">Apply</link>(ulong&#32;u0,&#32;ulong&#32;u1,&#32;ulong&#32;u2,&#32;ulong&#32;u3,&#32;uint&#32;u4)
<anchor xml:id="__transform_crusher_8cs_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Assert(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;transformMissingError);
<anchor xml:id="__transform_crusher_8cs_source_1l01143"/>01143 
<anchor xml:id="__transform_crusher_8cs_source_1l01144"/>01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">Apply</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;u0,&#32;u1,&#32;u2,&#32;u3,&#32;u4);
<anchor xml:id="__transform_crusher_8cs_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01146"/>01146 
<anchor xml:id="__transform_crusher_8cs_source_1l01147"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a496ef06dcf2c75e209fb482b1404b48a">01147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a496ef06dcf2c75e209fb482b1404b48a">Apply</link>(Transform&#32;t,&#32;ulong&#32;frag0,&#32;ulong&#32;frag1&#32;=&#32;0,&#32;ulong&#32;frag2&#32;=&#32;0,&#32;ulong&#32;frag3&#32;=&#32;0,&#32;ulong&#32;frag4&#32;=&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>,&#32;frag0,&#32;frag1,&#32;frag2,&#32;frag3,&#32;frag4);
<anchor xml:id="__transform_crusher_8cs_source_1l01150"/>01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">Apply</link>(t,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1aa4240c62aadc1c74a080ad0efdc57d31">reusable</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01152"/>01152 
<anchor xml:id="__transform_crusher_8cs_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Supply&#32;the&#32;transform&#32;to&#32;Apply&#32;to.&#32;Default&#32;Transform&#32;has&#32;be&#32;deprecated.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l01157"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a127b81fd1a78225a299f47fca0fe3cfe">01157</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a127b81fd1a78225a299f47fca0fe3cfe">Apply</link>(<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cmatrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01158"/>01158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01159"/>01159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Assert(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;transformMissingError);
<anchor xml:id="__transform_crusher_8cs_source_1l01160"/>01160 
<anchor xml:id="__transform_crusher_8cs_source_1l01161"/>01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">Apply</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;cmatrix);
<anchor xml:id="__transform_crusher_8cs_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01163"/>01163 
<anchor xml:id="__transform_crusher_8cs_source_1l01167"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a72ed65fe0d9f0a30d34efecb544603e0">01167</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a72ed65fe0d9f0a30d34efecb544603e0">Apply</link>(Transform&#32;t,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cmatrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(t,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01172"/>01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(t,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(t,&#32;cmatrix.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01176"/>01176 
<anchor xml:id="__transform_crusher_8cs_source_1l01177"/>01177 
<anchor xml:id="__transform_crusher_8cs_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.Obsolete(<emphasis role="stringliteral">&quot;Supply&#32;the&#32;transform&#32;to&#32;Apply&#32;to.&#32;Default&#32;Transform&#32;has&#32;be&#32;deprecated.&quot;</emphasis>)]
<anchor xml:id="__transform_crusher_8cs_source_1l01182"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a15c384448829e036f3902398a4a28154">01182</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a15c384448829e036f3902398a4a28154">Apply</link>(<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;matrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01184"/>01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Assert(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;transformMissingError);
<anchor xml:id="__transform_crusher_8cs_source_1l01185"/>01185 
<anchor xml:id="__transform_crusher_8cs_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">Apply</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link>,&#32;matrix);
<anchor xml:id="__transform_crusher_8cs_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01188"/>01188 
<anchor xml:id="__transform_crusher_8cs_source_1l01192"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a15218bb7590615e050f759d4e5665b79">01192</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a15218bb7590615e050f759d4e5665b79">Apply</link>(Transform&#32;transform,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;matrix)
<anchor xml:id="__transform_crusher_8cs_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(transform,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1acadc45435325aa84fcbc5143dc00cd9e">position</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01196"/>01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(transform,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1a61e05863c3c2d4d3923c5d05fb1fc371">rotation</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link>[0]&#32;&gt;&#32;0)
<anchor xml:id="__transform_crusher_8cs_source_1l01199"/>01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a5de96c00dcb499ec9645300e609d61a2">Apply</link>(transform,&#32;matrix.<link linkend="_class_photon_1_1_compression_1_1_matrix_1ad1aaf2d12bf71df965ef32994e58485a">scale</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01201"/>01201 
<anchor xml:id="__transform_crusher_8cs_source_1l01202"/>01202 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l01203"/>01203 
<anchor xml:id="__transform_crusher_8cs_source_1l01208"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac39fc7817ca651f7d735d0cbf6eeebec">01208</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac39fc7817ca651f7d735d0cbf6eeebec">Capture</link>(Rigidbody&#32;rb,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cm,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;m)
<anchor xml:id="__transform_crusher_8cs_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link>(cm,&#32;rb);
<anchor xml:id="__transform_crusher_8cs_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(m,&#32;cm);
<anchor xml:id="__transform_crusher_8cs_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01213"/>01213 
<anchor xml:id="__transform_crusher_8cs_source_1l01218"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a91490747c6e6acd2daeeb41612266aad">01218</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a91490747c6e6acd2daeeb41612266aad">Capture</link>(Rigidbody2D&#32;rb2d,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cm,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;m)
<anchor xml:id="__transform_crusher_8cs_source_1l01219"/>01219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01220"/>01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link>(cm,&#32;rb2d);
<anchor xml:id="__transform_crusher_8cs_source_1l01221"/>01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link>(m,&#32;cm);
<anchor xml:id="__transform_crusher_8cs_source_1l01222"/>01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01223"/>01223 
<anchor xml:id="__transform_crusher_8cs_source_1l01228"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae20b9f1d9c23adca3983be17682bb3c8">01228</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae20b9f1d9c23adca3983be17682bb3c8">Capture</link>(Transform&#32;tr,&#32;<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>&#32;cm,&#32;<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>&#32;m)
<anchor xml:id="__transform_crusher_8cs_source_1l01229"/>01229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01230"/>01230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pos</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>,&#32;tr);
<anchor xml:id="__transform_crusher_8cs_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m.<link linkend="_class_photon_1_1_compression_1_1_matrix_1acadc45435325aa84fcbc5143dc00cd9e">position</link>&#32;=&#32;(Vector3)<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a8e805c012fc5ae31738e2a3b57d91eb1">cPos</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01233"/>01233 
<anchor xml:id="__transform_crusher_8cs_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rot</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>,&#32;tr);
<anchor xml:id="__transform_crusher_8cs_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m.<link linkend="_class_photon_1_1_compression_1_1_matrix_1a61e05863c3c2d4d3923c5d05fb1fc371">rotation</link>&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1a816128c0d87708af2da3c1dc347d618d">cRot</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01237"/>01237 
<anchor xml:id="__transform_crusher_8cs_source_1l01238"/>01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;scl</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ace46027fba7ad823420b2dcf9c05a806">Compress</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>,&#32;tr);
<anchor xml:id="__transform_crusher_8cs_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m.<link linkend="_class_photon_1_1_compression_1_1_matrix_1ad1aaf2d12bf71df965ef32994e58485a">scale</link>&#32;=&#32;(Vector3)<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2c3e64eba35aef4a698a062a1648fa3a">Decompress</link>(cm.<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix_1af0b2d4f416aa8f26e96c2602cd8955dd">cScl</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01241"/>01241 
<anchor xml:id="__transform_crusher_8cs_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01243"/>01243 
<anchor xml:id="__transform_crusher_8cs_source_1l01247"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a63a17e950e0db3409e844cae8964896e">01247</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a63a17e950e0db3409e844cae8964896e">TallyBits</link>(BitCullingLevel&#32;bcl&#32;=&#32;BitCullingLevel.NoCulling)
<anchor xml:id="__transform_crusher_8cs_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01249"/>01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad40f5bffbc1283fdc608da977d0443b2">TallyBits</link>(bcl)&#32;:&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l01250"/>01250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;r&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad40f5bffbc1283fdc608da977d0443b2">TallyBits</link>(bcl)&#32;:&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l01251"/>01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;s&#32;=&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1ad40f5bffbc1283fdc608da977d0443b2">TallyBits</link>(bcl)&#32;:&#32;0;
<anchor xml:id="__transform_crusher_8cs_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p&#32;+&#32;r&#32;+&#32;s;
<anchor xml:id="__transform_crusher_8cs_source_1l01253"/>01253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01254"/>01254 
<anchor xml:id="__transform_crusher_8cs_source_1l01255"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1affd5d4cd0f1fcda649ea08936aa9a16f">01255</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1affd5d4cd0f1fcda649ea08936aa9a16f">CopyFrom</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;source)
<anchor xml:id="__transform_crusher_8cs_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01257"/>01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa6987e49732105536d9511e141865b2a">CopyFrom</link>(source.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01258"/>01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa6987e49732105536d9511e141865b2a">CopyFrom</link>(source.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1aa6987e49732105536d9511e141865b2a">CopyFrom</link>(source.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01260"/>01260 
<anchor xml:id="__transform_crusher_8cs_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link>();
<anchor xml:id="__transform_crusher_8cs_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01263"/>01263 
<anchor xml:id="__transform_crusher_8cs_source_1l01264"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1abfee6f64cf0fba52afe308f3e6386e90">01264</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1abfee6f64cf0fba52afe308f3e6386e90">Equals</link>(<emphasis role="keywordtype">object</emphasis>&#32;obj)
<anchor xml:id="__transform_crusher_8cs_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01266"/>01266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1abfee6f64cf0fba52afe308f3e6386e90">Equals</link>(obj&#32;as&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>);
<anchor xml:id="__transform_crusher_8cs_source_1l01267"/>01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01268"/>01268 
<anchor xml:id="__transform_crusher_8cs_source_1l01269"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a547f326ec9d7219b96f70b5e6217eecb">01269</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a547f326ec9d7219b96f70b5e6217eecb">Equals</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;other)
<anchor xml:id="__transform_crusher_8cs_source_1l01270"/>01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01271"/>01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;other&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;
<anchor xml:id="__transform_crusher_8cs_source_1l01272"/>01272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//EqualityComparer&lt;Transform&gt;.Default.Equals(defaultTransform,&#32;other.defaultTransform)&#32;&amp;&amp;</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l01273"/>01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;other.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;==&#32;null&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6bee2dad4e4d7afe7361fdba20469a5e">Equals</link>(other.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>))&#32;&amp;&amp;
<anchor xml:id="__transform_crusher_8cs_source_1l01274"/>01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;other.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6bee2dad4e4d7afe7361fdba20469a5e">Equals</link>(other.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>))&#32;&amp;&amp;
<anchor xml:id="__transform_crusher_8cs_source_1l01275"/>01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;other.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a6bee2dad4e4d7afe7361fdba20469a5e">Equals</link>(other.<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>));
<anchor xml:id="__transform_crusher_8cs_source_1l01276"/>01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01277"/>01277 
<anchor xml:id="__transform_crusher_8cs_source_1l01278"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5446c2284c8267c16562fb9895f5f7c5">01278</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5446c2284c8267c16562fb9895f5f7c5">GetHashCode</link>()
<anchor xml:id="__transform_crusher_8cs_source_1l01279"/>01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;hashCode&#32;=&#32;-453726296;
<anchor xml:id="__transform_crusher_8cs_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;EqualityComparer&lt;Transform&gt;.Default.GetHashCode(defaultTransform);</emphasis>
<anchor xml:id="__transform_crusher_8cs_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;((<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2cb19c0da00422001c8a00b40b7309ee">GetHashCode</link>());
<anchor xml:id="__transform_crusher_8cs_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;((<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2cb19c0da00422001c8a00b40b7309ee">GetHashCode</link>());
<anchor xml:id="__transform_crusher_8cs_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashCode&#32;=&#32;hashCode&#32;*&#32;-1521134295&#32;+&#32;((<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;0&#32;:&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link>.<link linkend="_class_photon_1_1_compression_1_1_element_crusher_1a2cb19c0da00422001c8a00b40b7309ee">GetHashCode</link>());
<anchor xml:id="__transform_crusher_8cs_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hashCode;
<anchor xml:id="__transform_crusher_8cs_source_1l01286"/>01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01287"/>01287 
<anchor xml:id="__transform_crusher_8cs_source_1l01288"/>01288 
<anchor xml:id="__transform_crusher_8cs_source_1l01289"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac74e62a6423016ddd56e1bd7d8a0b48b">01289</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac74e62a6423016ddd56e1bd7d8a0b48b">operator ==</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;crusher1,&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;crusher2)
<anchor xml:id="__transform_crusher_8cs_source_1l01290"/>01290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01291"/>01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EqualityComparer&lt;TransformCrusher&gt;.Default.Equals(crusher1,&#32;crusher2);
<anchor xml:id="__transform_crusher_8cs_source_1l01292"/>01292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01293"/>01293 
<anchor xml:id="__transform_crusher_8cs_source_1l01294"/><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afdd5de79e0ff79fa71ff51a80c5e157d">01294</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afdd5de79e0ff79fa71ff51a80c5e157d">operator !=</link>(<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;crusher1,&#32;<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&#32;crusher2)
<anchor xml:id="__transform_crusher_8cs_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__transform_crusher_8cs_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(crusher1&#32;==&#32;crusher2);
<anchor xml:id="__transform_crusher_8cs_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01298"/>01298 &#32;&#32;&#32;&#32;}
<anchor xml:id="__transform_crusher_8cs_source_1l01299"/>01299 
<anchor xml:id="__transform_crusher_8cs_source_1l01300"/>01300 }
</programlisting></section>
