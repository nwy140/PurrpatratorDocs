<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__trigger_assists_8cs_source" xml:lang="en-US">
<title>TriggerAssists.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/Assistants/TriggerAssists.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__trigger_assists_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__trigger_assists_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__trigger_assists_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__trigger_assists_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__trigger_assists_8cs_source_1l00005"/>00005 
<anchor xml:id="__trigger_assists_8cs_source_1l00006"/>00006 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__trigger_assists_8cs_source_1l00007"/>00007 <emphasis role="preprocessor">#if&#32;PUN_2_OR_NEWER</emphasis>
<anchor xml:id="__trigger_assists_8cs_source_1l00008"/>00008 
<anchor xml:id="__trigger_assists_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__trigger_assists_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;UnityEditor;
<anchor xml:id="__trigger_assists_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__trigger_assists_8cs_source_1l00012"/>00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_photon">Photon</link>.<link linkend="_namespace_photon_1_1_pun">Pun</link>;
<anchor xml:id="__trigger_assists_8cs_source_1l00013"/>00013 
<anchor xml:id="__trigger_assists_8cs_source_1l00014"/>00014 <emphasis role="keyword">namespace&#32;</emphasis>Photon.Pun.Simple.Assists
<anchor xml:id="__trigger_assists_8cs_source_1l00015"/>00015 {
<anchor xml:id="__trigger_assists_8cs_source_1l00016"/>00016 
<anchor xml:id="__trigger_assists_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TriggerAssists
<anchor xml:id="__trigger_assists_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;{
<anchor xml:id="__trigger_assists_8cs_source_1l00019"/>00019 
<anchor xml:id="__trigger_assists_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[MenuItem(AssistHelpers.CONVERT_TO_FOLDER&#32;+&#32;<emphasis role="stringliteral">&quot;Zone:&#32;Vital&#32;Recharge&quot;</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;AssistHelpers.CONVERTTO_PRIORITY)]
<anchor xml:id="__trigger_assists_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConvertToVitalRechargeZone()
<anchor xml:id="__trigger_assists_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__trigger_assists_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConvertToZone(Preset.RechargeZone);
<anchor xml:id="__trigger_assists_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__trigger_assists_8cs_source_1l00025"/>00025 
<anchor xml:id="__trigger_assists_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[MenuItem(AssistHelpers.CONVERT_TO_FOLDER&#32;+&#32;<emphasis role="stringliteral">&quot;Zone:&#32;Vital&#32;Damage&quot;</emphasis>,&#32;<emphasis role="keyword">false</emphasis>,&#32;AssistHelpers.CONVERTTO_PRIORITY)]
<anchor xml:id="__trigger_assists_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConvertToDamageZone()
<anchor xml:id="__trigger_assists_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__trigger_assists_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConvertToZone(Preset.DamageZone);
<anchor xml:id="__trigger_assists_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__trigger_assists_8cs_source_1l00031"/>00031 
<anchor xml:id="__trigger_assists_8cs_source_1l00032"/>00032 
<anchor xml:id="__trigger_assists_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConvertToZone(Preset&#32;preset)
<anchor xml:id="__trigger_assists_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__trigger_assists_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selection&#32;=&#32;NetObjectAssists.GetSelectedGameObject();
<anchor xml:id="__trigger_assists_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(selection&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__trigger_assists_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!selection.CheckReparentable())
<anchor xml:id="__trigger_assists_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__trigger_assists_8cs_source_1l00039"/>00039 
<anchor xml:id="__trigger_assists_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection.EnsureComponentExists&lt;ContactTrigger&gt;().UsePreset(preset);
<anchor xml:id="__trigger_assists_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection.EnsureComponentExists&lt;VitalsContactReactor&gt;().UsePreset(preset);
<anchor xml:id="__trigger_assists_8cs_source_1l00042"/>00042 
<anchor xml:id="__trigger_assists_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection.SetAllCollidersAsTriggger(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__trigger_assists_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__trigger_assists_8cs_source_1l00045"/>00045 
<anchor xml:id="__trigger_assists_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;Collider&gt;&#32;colliders&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Collider&gt;();
<anchor xml:id="__trigger_assists_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;Collider2D&gt;&#32;colliders2D&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Collider2D&gt;();
<anchor xml:id="__trigger_assists_8cs_source_1l00048"/>00048 
<anchor xml:id="__trigger_assists_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetAllCollidersAsTriggger(<emphasis role="keyword">this</emphasis>&#32;GameObject&#32;selection,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isTrigger&#32;=&#32;<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__trigger_assists_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__trigger_assists_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReferenceEquals(selection,&#32;<emphasis role="keyword">null</emphasis>))
<anchor xml:id="__trigger_assists_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__trigger_assists_8cs_source_1l00053"/>00053 
<anchor xml:id="__trigger_assists_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection.transform.GetNestedComponentsInChildren&lt;Collider,&#32;NetObject&gt;(colliders);
<anchor xml:id="__trigger_assists_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;colliders.Count;&#32;++i)
<anchor xml:id="__trigger_assists_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colliders[i].isTrigger&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__trigger_assists_8cs_source_1l00057"/>00057 
<anchor xml:id="__trigger_assists_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection.transform.GetNestedComponentsInChildren&lt;Collider2D,&#32;NetObject&gt;(colliders2D);
<anchor xml:id="__trigger_assists_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;colliders2D.Count;&#32;++i)
<anchor xml:id="__trigger_assists_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colliders2D[i].isTrigger&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__trigger_assists_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__trigger_assists_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;}
<anchor xml:id="__trigger_assists_8cs_source_1l00063"/>00063 }
<anchor xml:id="__trigger_assists_8cs_source_1l00064"/>00064 
<anchor xml:id="__trigger_assists_8cs_source_1l00065"/>00065 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__trigger_assists_8cs_source_1l00066"/>00066 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
