<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__type_helpers_8cs_source" xml:lang="en-US">
<title>TypeHelpers.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/PackObject/CodeGen/Helpers/TypeHelpers.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__type_helpers_8cs_source_1l00001"/>00001 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00002"/>00002 <emphasis role="comment">//&#32;&lt;copyright&gt;PhotonNetwork&#32;Framework&#32;for&#32;Unity&#32;-&#32;Copyright&#32;(C)&#32;2020&#32;Exit&#32;Games&#32;GmbH&lt;/copyright&gt;</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;---------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00005"/>00005 
<anchor xml:id="__type_helpers_8cs_source_1l00006"/>00006 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00007"/>00007 
<anchor xml:id="__type_helpers_8cs_source_1l00008"/>00008 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__type_helpers_8cs_source_1l00009"/>00009 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__type_helpers_8cs_source_1l00010"/>00010 <emphasis role="keyword">using</emphasis>&#32;System.Reflection;
<anchor xml:id="__type_helpers_8cs_source_1l00011"/>00011 <emphasis role="keyword">using</emphasis>&#32;UnityEngine;
<anchor xml:id="__type_helpers_8cs_source_1l00012"/>00012 
<anchor xml:id="__type_helpers_8cs_source_1l00013"/>00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_photon_1_1_compression_1_1_internal">Photon.Compression.Internal</link>
<anchor xml:id="__type_helpers_8cs_source_1l00014"/>00014 {
<anchor xml:id="__type_helpers_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TypeHelpers
<anchor xml:id="__type_helpers_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00017"/>00017 
<anchor xml:id="__type_helpers_8cs_source_1l00018"/>00018 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Nested&#32;Loop&#32;Check</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00019"/>00019 
<anchor xml:id="__type_helpers_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;HashSet&lt;Type&gt;&#32;nestCheck&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;Type&gt;();
<anchor xml:id="__type_helpers_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;safetycounter;
<anchor xml:id="__type_helpers_8cs_source_1l00022"/>00022 
<anchor xml:id="__type_helpers_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CheckForNestedLoop(<emphasis role="keyword">this</emphasis>&#32;Type&#32;type,&#32;HashSet&lt;Type&gt;&#32;hashset&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__type_helpers_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hashset&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__type_helpers_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashset&#32;=&#32;nestCheck;
<anchor xml:id="__type_helpers_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;safetycounter&#32;=&#32;0;
<anchor xml:id="__type_helpers_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashset.Clear();
<anchor xml:id="__type_helpers_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00031"/>00031 
<anchor xml:id="__type_helpers_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attrs&#32;=&#32;type.GetCustomAttributes(typeof(PackObjectAttribute),&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__type_helpers_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attrs.Length&#32;==&#32;0)
<anchor xml:id="__type_helpers_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00036"/>00036 
<anchor xml:id="__type_helpers_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hashset.Contains(type))
<anchor xml:id="__type_helpers_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00039"/>00039 
<anchor xml:id="__type_helpers_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;safetycounter++;
<anchor xml:id="__type_helpers_8cs_source_1l00041"/>00041 
<anchor xml:id="__type_helpers_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(safetycounter&#32;&gt;&#32;20)
<anchor xml:id="__type_helpers_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;Ouch.&#32;Stuck&#32;trying&#32;to&#32;test&#32;for&#32;loops.&#32;&quot;</emphasis>&#32;+&#32;type.Name);
<anchor xml:id="__type_helpers_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00047"/>00047 
<anchor xml:id="__type_helpers_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fields&#32;=&#32;type.GetFields();
<anchor xml:id="__type_helpers_8cs_source_1l00049"/>00049 
<anchor xml:id="__type_helpers_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;field&#32;<emphasis role="keywordflow">in</emphasis>&#32;fields)
<anchor xml:id="__type_helpers_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(field.FieldType&#32;==&#32;type)</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;true;</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00054"/>00054 
<anchor xml:id="__type_helpers_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(field.GetCustomAttributes(typeof(PackObjectAttribute),&#32;<emphasis role="keyword">false</emphasis>).Length&#32;!=&#32;0)
<anchor xml:id="__type_helpers_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashset.Add(type);
<anchor xml:id="__type_helpers_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.Log(<emphasis role="stringliteral">&quot;Loop&#32;found&#32;&quot;</emphasis>&#32;+&#32;type.Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;field.FieldType&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;field.GetCustomAttributes(typeof(PackObjectAttribute),&#32;<emphasis role="keyword">false</emphasis>).Length);
<anchor xml:id="__type_helpers_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(CheckForNestedLoop(field.FieldType,&#32;hashset))
<anchor xml:id="__type_helpers_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashset.Remove(type);
<anchor xml:id="__type_helpers_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00067"/>00067 
<anchor xml:id="__type_helpers_8cs_source_1l00068"/>00068 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00069"/>00069 
<anchor xml:id="__type_helpers_8cs_source_1l00070"/>00070 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;IsManaged</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00071"/>00071 
<anchor xml:id="__type_helpers_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsUnManaged(<emphasis role="keyword">this</emphasis>&#32;Type&#32;t)
<anchor xml:id="__type_helpers_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.IsPrimitive&#32;||&#32;t.IsPointer&#32;||&#32;t.IsEnum)
<anchor xml:id="__type_helpers_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00076"/>00076 
<anchor xml:id="__type_helpers_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;&lt;b&gt;Testing&#32;For&#32;UnManaged&lt;/b&gt;&#32;&quot;&#32;+&#32;t.Name&#32;+&#32;&quot;&#32;&quot;&#32;+&#32;t.IsValueType);</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!t.IsValueType)
<anchor xml:id="__type_helpers_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00080"/>00080 
<anchor xml:id="__type_helpers_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.IsGenericType)
<anchor xml:id="__type_helpers_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00083"/>00083 
<anchor xml:id="__type_helpers_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(t.IsValueType)
<anchor xml:id="__type_helpers_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fields&#32;=&#32;t.GetFields(BindingFlags.Public&#32;|&#32;BindingFlags.NonPublic&#32;|&#32;BindingFlags.Instance);
<anchor xml:id="__type_helpers_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;f&#32;<emphasis role="keywordflow">in</emphasis>&#32;fields)
<anchor xml:id="__type_helpers_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!IsUnManaged(f.FieldType))
<anchor xml:id="__type_helpers_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00094"/>00094 
<anchor xml:id="__type_helpers_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00097"/>00097 
<anchor xml:id="__type_helpers_8cs_source_1l00098"/>00098 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00099"/>00099 
<anchor xml:id="__type_helpers_8cs_source_1l00100"/>00100 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#region&#32;Type&#32;To&#32;Hash</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00101"/>00101 
<anchor xml:id="__type_helpers_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;HashSet&lt;Type&gt;&#32;endlessLoopCheck&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;Type&gt;();
<anchor xml:id="__type_helpers_8cs_source_1l00103"/>00103 
<anchor xml:id="__type_helpers_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;TypeToHash64(<emphasis role="keyword">this</emphasis>&#32;Type&#32;type,&#32;HashSet&lt;Type&gt;&#32;endlessCheck&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__type_helpers_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00106"/>00106 
<anchor xml:id="__type_helpers_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attrs&#32;=&#32;type.GetCustomAttributes(typeof(PackObjectAttribute),&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__type_helpers_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attrs.Length&#32;==&#32;0)
<anchor xml:id="__type_helpers_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__type_helpers_8cs_source_1l00111"/>00111 
<anchor xml:id="__type_helpers_8cs_source_1l00112"/>00112 
<anchor xml:id="__type_helpers_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attr&#32;=&#32;attrs[0]&#32;as&#32;PackObjectAttribute;
<anchor xml:id="__type_helpers_8cs_source_1l00114"/>00114 
<anchor xml:id="__type_helpers_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(endlessCheck&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__type_helpers_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endlessCheck&#32;=&#32;endlessLoopCheck;
<anchor xml:id="__type_helpers_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endlessCheck.Clear();
<anchor xml:id="__type_helpers_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(endlessCheck.Contains(type))
<anchor xml:id="__type_helpers_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(type.Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;has&#32;an&#32;endless&#32;recursive&#32;field&#32;loop.&quot;</emphasis>);
<anchor xml:id="__type_helpers_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__type_helpers_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00125"/>00125 
<anchor xml:id="__type_helpers_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endlessCheck.Add(type);
<anchor xml:id="__type_helpers_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;hashes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;long&gt;();
<anchor xml:id="__type_helpers_8cs_source_1l00128"/>00128 
<anchor xml:id="__type_helpers_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Add(type.FullName.GetHashCode());
<anchor xml:id="__type_helpers_8cs_source_1l00130"/>00130 
<anchor xml:id="__type_helpers_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fields&#32;=&#32;type.GetFields(BindingFlags.Public&#32;|&#32;BindingFlags.Instance);
<anchor xml:id="__type_helpers_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;includeAllPublic&#32;=&#32;attr.defaultInclusion&#32;==&#32;<link linkend="_namespace_photon_1_1_compression_1a535ded54d55f8097015f0b0417493c38">DefaultPackInclusion</link>.AllPublic;
<anchor xml:id="__type_helpers_8cs_source_1l00133"/>00133 
<anchor xml:id="__type_helpers_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;f&#32;<emphasis role="keywordflow">in</emphasis>&#32;fields)
<anchor xml:id="__type_helpers_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Add(HashField(f,&#32;includeAllPublic));
<anchor xml:id="__type_helpers_8cs_source_1l00136"/>00136 
<anchor xml:id="__type_helpers_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HashAttribute(attr,&#32;hashes);
<anchor xml:id="__type_helpers_8cs_source_1l00138"/>00138 
<anchor xml:id="__type_helpers_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Sort();
<anchor xml:id="__type_helpers_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;hash&#32;=&#32;504981047;
<anchor xml:id="__type_helpers_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;h&#32;<emphasis role="keywordflow">in</emphasis>&#32;hashes)&#32;hash&#32;=&#32;hash&#32;*&#32;-1521134295&#32;+&#32;h;
<anchor xml:id="__type_helpers_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hash;
<anchor xml:id="__type_helpers_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00145"/>00145 
<anchor xml:id="__type_helpers_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;HashField(FieldInfo&#32;field,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;includeAllPublic)
<anchor xml:id="__type_helpers_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;hashes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;long&gt;();
<anchor xml:id="__type_helpers_8cs_source_1l00149"/>00149 
<anchor xml:id="__type_helpers_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;objhash&#32;=&#32;TypeToHash64(field.FieldType,&#32;endlessLoopCheck);
<anchor xml:id="__type_helpers_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(objhash&#32;!=&#32;0)
<anchor xml:id="__type_helpers_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Add(objhash);
<anchor xml:id="__type_helpers_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;objhash;
<anchor xml:id="__type_helpers_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00157"/>00157 
<anchor xml:id="__type_helpers_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attrs&#32;=&#32;field.GetCustomAttributes(typeof(SyncVarBaseAttribute),&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__type_helpers_8cs_source_1l00160"/>00160 
<anchor xml:id="__type_helpers_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attrs.Length&#32;==&#32;0&#32;&amp;&amp;&#32;!includeAllPublic)
<anchor xml:id="__type_helpers_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__type_helpers_8cs_source_1l00164"/>00164 
<anchor xml:id="__type_helpers_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Add(field.FieldType.FullName.GetHashCode());
<anchor xml:id="__type_helpers_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Add(field.Name.GetHashCode());
<anchor xml:id="__type_helpers_8cs_source_1l00167"/>00167 
<anchor xml:id="__type_helpers_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attrs.Length&#32;!=&#32;0)
<anchor xml:id="__type_helpers_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attr&#32;=&#32;attrs[0]&#32;as&#32;SyncVarBaseAttribute;
<anchor xml:id="__type_helpers_8cs_source_1l00172"/>00172 
<anchor xml:id="__type_helpers_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HashAttribute(attr,&#32;hashes);
<anchor xml:id="__type_helpers_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HashCallback(field,&#32;attr.applyCallback,&#32;hashes);
<anchor xml:id="__type_helpers_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HashCallback(field,&#32;attr.snapshotCallback,&#32;hashes);
<anchor xml:id="__type_helpers_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00177"/>00177 
<anchor xml:id="__type_helpers_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fields&#32;=&#32;field.FieldType.GetFields(BindingFlags.Public&#32;|&#32;BindingFlags.Instance);
<anchor xml:id="__type_helpers_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;f&#32;<emphasis role="keywordflow">in</emphasis>&#32;fields)
<anchor xml:id="__type_helpers_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__type_helpers_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Add(HashField(f,&#32;includeAllPublic));
<anchor xml:id="__type_helpers_8cs_source_1l00184"/>00184 
<anchor xml:id="__type_helpers_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00186"/>00186 
<anchor xml:id="__type_helpers_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;hash&#32;=&#32;504981047;
<anchor xml:id="__type_helpers_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Sort();
<anchor xml:id="__type_helpers_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;h&#32;<emphasis role="keywordflow">in</emphasis>&#32;hashes)
<anchor xml:id="__type_helpers_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;hash&#32;*&#32;-1521134295&#32;+&#32;h;
<anchor xml:id="__type_helpers_8cs_source_1l00191"/>00191 
<anchor xml:id="__type_helpers_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hash;
<anchor xml:id="__type_helpers_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00194"/>00194 
<anchor xml:id="__type_helpers_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HashAttribute(Attribute&#32;attr,&#32;List&lt;long&gt;&#32;hashes)
<anchor xml:id="__type_helpers_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Add(attr.GetType().FullName.GetHashCode());
<anchor xml:id="__type_helpers_8cs_source_1l00198"/>00198 
<anchor xml:id="__type_helpers_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;a&#32;<emphasis role="keywordflow">in</emphasis>&#32;attr.GetType().GetFields())
<anchor xml:id="__type_helpers_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;Hashing&#32;attr&#32;&quot;&#32;+&#32;a.Name&#32;+&#32;&quot;&#32;&quot;&#32;/*+&#32;a.GetValue(attr)*/);</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;obj&#32;=&#32;(a.GetValue(attr));
<anchor xml:id="__type_helpers_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__type_helpers_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Add(obj.GetHashCode());
<anchor xml:id="__type_helpers_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00207"/>00207 
<anchor xml:id="__type_helpers_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;MethodInfo&#32;HashCallback(<emphasis role="keyword">this</emphasis>&#32;FieldInfo&#32;field,&#32;<emphasis role="keywordtype">string</emphasis>&#32;methodname,&#32;List&lt;long&gt;&#32;hashes)
<anchor xml:id="__type_helpers_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Type&#32;objType&#32;=&#32;field.ReflectedType;
<anchor xml:id="__type_helpers_8cs_source_1l00211"/>00211 
<anchor xml:id="__type_helpers_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(methodname&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__type_helpers_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00214"/>00214 
<anchor xml:id="__type_helpers_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;methinfo&#32;=&#32;field.ReflectedType.GetMethod(methodname);
<anchor xml:id="__type_helpers_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;parms&#32;=&#32;(methinfo&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;?&#32;<emphasis role="keyword">null</emphasis>&#32;:&#32;methinfo.GetParameters();
<anchor xml:id="__type_helpers_8cs_source_1l00218"/>00218 
<anchor xml:id="__type_helpers_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;ftype&#32;=&#32;field.FieldType;
<anchor xml:id="__type_helpers_8cs_source_1l00220"/>00220 
<anchor xml:id="__type_helpers_8cs_source_1l00221"/>00221 
<anchor xml:id="__type_helpers_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(methinfo&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__type_helpers_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;BadCallback;
<anchor xml:id="__type_helpers_8cs_source_1l00224"/>00224 
<anchor xml:id="__type_helpers_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!methinfo.IsPublic)
<anchor xml:id="__type_helpers_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;BadCallback;
<anchor xml:id="__type_helpers_8cs_source_1l00227"/>00227 
<anchor xml:id="__type_helpers_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(methinfo.IsStatic)
<anchor xml:id="__type_helpers_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;BadCallback;
<anchor xml:id="__type_helpers_8cs_source_1l00230"/>00230 
<anchor xml:id="__type_helpers_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parms.Length&#32;!=&#32;2)
<anchor xml:id="__type_helpers_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;BadCallback;
<anchor xml:id="__type_helpers_8cs_source_1l00233"/>00233 
<anchor xml:id="__type_helpers_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parms[0].ParameterType&#32;==&#32;ftype&#32;&amp;&amp;&#32;parms[1].ParameterType&#32;==&#32;ftype)
<anchor xml:id="__type_helpers_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__type_helpers_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hashes&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__type_helpers_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;prm&#32;<emphasis role="keywordflow">in</emphasis>&#32;methinfo.GetParameters())
<anchor xml:id="__type_helpers_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hashes.Add(prm.ParameterType.FullName.GetHashCode());
<anchor xml:id="__type_helpers_8cs_source_1l00239"/>00239 
<anchor xml:id="__type_helpers_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;methinfo;
<anchor xml:id="__type_helpers_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00242"/>00242 
<anchor xml:id="__type_helpers_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00244"/>00244 
<anchor xml:id="__type_helpers_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BadCallback:
<anchor xml:id="__type_helpers_8cs_source_1l00246"/>00246 
<anchor xml:id="__type_helpers_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;doesntExist&#32;=&#32;methinfo&#32;==&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isStatic&#32;=&#32;doesntExist&#32;?&#32;false&#32;:&#32;methinfo.IsStatic;
<anchor xml:id="__type_helpers_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isPrivate&#32;=&#32;doesntExist&#32;?&#32;false&#32;:&#32;methinfo.IsPrivate;
<anchor xml:id="__type_helpers_8cs_source_1l00250"/>00250 
<anchor xml:id="__type_helpers_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;staticString&#32;=&#32;isStatic&#32;?&#32;<emphasis role="stringliteral">&quot;&lt;color=red&gt;static&lt;/color&gt;&#32;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;accessString&#32;=&#32;isPrivate&#32;?&#32;<emphasis role="stringliteral">&quot;&lt;color=red&gt;private&#32;&lt;/color&gt;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;public&#32;&quot;</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;<emphasis role="keyword">typename</emphasis>&#32;=&#32;ftype.Name;
<anchor xml:id="__type_helpers_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;parmstring&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00255"/>00255 
<anchor xml:id="__type_helpers_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parms&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__type_helpers_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;parms.Length;&#32;++i)
<anchor xml:id="__type_helpers_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parmstring&#32;+=&#32;(i&#32;==&#32;0&#32;?&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>)&#32;+&#32;parms[i].ParameterType.Name;
<anchor xml:id="__type_helpers_8cs_source_1l00259"/>00259 
<anchor xml:id="__type_helpers_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__clones_manager_8cs_1a0100be52d45f14348918ea69ec09f959">Debug</link>.LogWarning(<emphasis role="stringliteral">&quot;&lt;b&gt;Invalid&#32;Callback&lt;/b&gt;&#32;&lt;i&gt;&apos;&quot;</emphasis>&#32;+&#32;accessString&#32;+&#32;staticString&#32;+&#32;methodname&#32;+&#32;<emphasis role="stringliteral">&quot;(&quot;</emphasis>&#32;+&#32;parmstring&#32;+&#32;<emphasis role="stringliteral">&quot;)&apos;&lt;/i&gt;&#32;on&#32;&lt;b&gt;&quot;</emphasis>&#32;+&#32;objType.Name&#32;+&#32;<emphasis role="stringliteral">&quot;&lt;/b&gt;&quot;</emphasis>&#32;+
<anchor xml:id="__type_helpers_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;.&#32;Check&#32;that&#32;method&#32;with&#32;this&#32;name&#32;exists&#32;(spelling?)&#32;and&#32;method&#32;has&#32;format:&#32;&lt;i&gt;&apos;public&#32;&quot;</emphasis>&#32;+&#32;methodname&#32;+&#32;<emphasis role="stringliteral">&quot;(&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">typename</emphasis>&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>&#32;+&#32;<emphasis role="keyword">typename</emphasis>&#32;+&#32;<emphasis role="stringliteral">&quot;)&apos;&lt;/i&gt;&quot;</emphasis>);
<anchor xml:id="__type_helpers_8cs_source_1l00262"/>00262 
<anchor xml:id="__type_helpers_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__type_helpers_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00265"/>00265 
<anchor xml:id="__type_helpers_8cs_source_1l00266"/>00266 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endregion</emphasis>
<anchor xml:id="__type_helpers_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;}
<anchor xml:id="__type_helpers_8cs_source_1l00268"/>00268 }
<anchor xml:id="__type_helpers_8cs_source_1l00269"/>00269 
<anchor xml:id="__type_helpers_8cs_source_1l00270"/>00270 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
