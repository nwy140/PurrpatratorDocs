<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__web_socket_8cs_source" xml:lang="en-US">
<title>WebSocket.cs</title>
<indexterm><primary>C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonLibs/WebSocket/WebSocket.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__web_socket_8cs_source_1l00001"/>00001 <emphasis role="preprocessor">#if&#32;UNITY_WEBGL&#32;||&#32;WEBSOCKET&#32;||&#32;((UNITY_XBOXONE&#32;||&#32;UNITY_GAMECORE)&#32;&amp;&amp;&#32;UNITY_EDITOR)</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00002"/>00002 
<anchor xml:id="__web_socket_8cs_source_1l00003"/>00003 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00004"/>00004 <emphasis role="comment">//&#32;&lt;summary&gt;</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00005"/>00005 <emphasis role="comment">//&#32;&#32;&#32;Provided&#32;originally&#32;by&#32;Unity&#32;to&#32;cover&#32;WebSocket&#32;support&#32;in&#32;WebGL&#32;and&#32;the&#32;Editor.&#32;Modified&#32;by&#32;Exit&#32;Games&#32;GmbH.</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00006"/>00006 <emphasis role="comment">//&#32;&lt;/summary&gt;</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00007"/>00007 <emphasis role="comment">//&#32;&lt;author&gt;developer@exitgames.com&lt;/author&gt;</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00008"/>00008 <emphasis role="comment">//&#32;--------------------------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00009"/>00009 
<anchor xml:id="__web_socket_8cs_source_1l00010"/>00010 
<anchor xml:id="__web_socket_8cs_source_1l00011"/>00011 <emphasis role="keyword">namespace&#32;</emphasis>ExitGames.Client.Photon
<anchor xml:id="__web_socket_8cs_source_1l00012"/>00012 {
<anchor xml:id="__web_socket_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__web_socket_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Text;
<anchor xml:id="__web_socket_8cs_source_1l00015"/>00015 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;UNITY_WEBGL&#32;&amp;&amp;&#32;!UNITY_EDITOR</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Runtime.InteropServices;
<anchor xml:id="__web_socket_8cs_source_1l00017"/>00017 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;WebSocketSharp;
<anchor xml:id="__web_socket_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
<anchor xml:id="__web_socket_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System.Security.Authentication;
<anchor xml:id="__web_socket_8cs_source_1l00021"/>00021 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00022"/>00022 
<anchor xml:id="__web_socket_8cs_source_1l00023"/>00023 
<anchor xml:id="__web_socket_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>WebSocket
<anchor xml:id="__web_socket_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Uri&#32;mUrl;
<anchor xml:id="__web_socket_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;protocols&#32;=&#32;<emphasis role="stringliteral">&quot;GpBinaryV16&quot;</emphasis>;
<anchor xml:id="__web_socket_8cs_source_1l00029"/>00029 
<anchor xml:id="__web_socket_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;WebSocket(Uri&#32;url,&#32;<emphasis role="keywordtype">string</emphasis>&#32;serialization&#32;=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__web_socket_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.mUrl&#32;=&#32;url;
<anchor xml:id="__web_socket_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(serialization&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__web_socket_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.protocols&#32;=&#32;serialization;
<anchor xml:id="__web_socket_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00037"/>00037 
<anchor xml:id="__web_socket_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;protocol&#32;=&#32;mUrl.Scheme;
<anchor xml:id="__web_socket_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!protocol.Equals(<emphasis role="stringliteral">&quot;ws&quot;</emphasis>)&#32;&amp;&amp;&#32;!protocol.Equals(<emphasis role="stringliteral">&quot;wss&quot;</emphasis>))
<anchor xml:id="__web_socket_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentException(<emphasis role="stringliteral">&quot;Unsupported&#32;protocol:&#32;&quot;</emphasis>&#32;+&#32;protocol);
<anchor xml:id="__web_socket_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00042"/>00042 
<anchor xml:id="__web_socket_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SendString(<emphasis role="keywordtype">string</emphasis>&#32;str)
<anchor xml:id="__web_socket_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Send(Encoding.UTF8.GetBytes&#32;(str));
<anchor xml:id="__web_socket_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00047"/>00047 
<anchor xml:id="__web_socket_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;RecvString()
<anchor xml:id="__web_socket_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;retval&#32;=&#32;Recv();
<anchor xml:id="__web_socket_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(retval&#32;==&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__web_socket_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__web_socket_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Encoding.UTF8.GetString&#32;(retval);
<anchor xml:id="__web_socket_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00055"/>00055 
<anchor xml:id="__web_socket_8cs_source_1l00056"/>00056 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;UNITY_WEBGL&#32;&amp;&amp;&#32;!UNITY_EDITOR</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[DllImport(<emphasis role="stringliteral">&quot;__Internal&quot;</emphasis>)]
<anchor xml:id="__web_socket_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;SocketCreate&#32;(<emphasis role="keywordtype">string</emphasis>&#32;url,&#32;<emphasis role="keywordtype">string</emphasis>&#32;protocols);
<anchor xml:id="__web_socket_8cs_source_1l00059"/>00059 
<anchor xml:id="__web_socket_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[DllImport(<emphasis role="stringliteral">&quot;__Internal&quot;</emphasis>)]
<anchor xml:id="__web_socket_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;SocketState&#32;(<emphasis role="keywordtype">int</emphasis>&#32;socketInstance);
<anchor xml:id="__web_socket_8cs_source_1l00062"/>00062 
<anchor xml:id="__web_socket_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[DllImport(<emphasis role="stringliteral">&quot;__Internal&quot;</emphasis>)]
<anchor xml:id="__web_socket_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SocketSend&#32;(<emphasis role="keywordtype">int</emphasis>&#32;socketInstance,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;ptr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;length);
<anchor xml:id="__web_socket_8cs_source_1l00065"/>00065 
<anchor xml:id="__web_socket_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[DllImport(<emphasis role="stringliteral">&quot;__Internal&quot;</emphasis>)]
<anchor xml:id="__web_socket_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SocketRecv&#32;(<emphasis role="keywordtype">int</emphasis>&#32;socketInstance,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;ptr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;length);
<anchor xml:id="__web_socket_8cs_source_1l00068"/>00068 
<anchor xml:id="__web_socket_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[DllImport(<emphasis role="stringliteral">&quot;__Internal&quot;</emphasis>)]
<anchor xml:id="__web_socket_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;SocketRecvLength&#32;(<emphasis role="keywordtype">int</emphasis>&#32;socketInstance);
<anchor xml:id="__web_socket_8cs_source_1l00071"/>00071 
<anchor xml:id="__web_socket_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[DllImport(<emphasis role="stringliteral">&quot;__Internal&quot;</emphasis>)]
<anchor xml:id="__web_socket_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SocketClose&#32;(<emphasis role="keywordtype">int</emphasis>&#32;socketInstance);
<anchor xml:id="__web_socket_8cs_source_1l00074"/>00074 
<anchor xml:id="__web_socket_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[DllImport(<emphasis role="stringliteral">&quot;__Internal&quot;</emphasis>)]
<anchor xml:id="__web_socket_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;SocketError&#32;(<emphasis role="keywordtype">int</emphasis>&#32;socketInstance,&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;ptr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;length);
<anchor xml:id="__web_socket_8cs_source_1l00077"/>00077 
<anchor xml:id="__web_socket_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_NativeRef&#32;=&#32;0;
<anchor xml:id="__web_socket_8cs_source_1l00079"/>00079 
<anchor xml:id="__web_socket_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Send(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer)
<anchor xml:id="__web_socket_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SocketSend&#32;(m_NativeRef,&#32;buffer,&#32;buffer.Length);
<anchor xml:id="__web_socket_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00084"/>00084 
<anchor xml:id="__web_socket_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;Recv()
<anchor xml:id="__web_socket_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;length&#32;=&#32;SocketRecvLength&#32;(m_NativeRef);
<anchor xml:id="__web_socket_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(length&#32;==&#32;0)
<anchor xml:id="__web_socket_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__web_socket_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[length];
<anchor xml:id="__web_socket_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SocketRecv&#32;(m_NativeRef,&#32;buffer,&#32;length);
<anchor xml:id="__web_socket_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buffer;
<anchor xml:id="__web_socket_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00094"/>00094 
<anchor xml:id="__web_socket_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Connect()
<anchor xml:id="__web_socket_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_NativeRef&#32;=&#32;SocketCreate&#32;(mUrl.ToString(),&#32;<emphasis role="keyword">this</emphasis>.protocols);
<anchor xml:id="__web_socket_8cs_source_1l00098"/>00098 
<anchor xml:id="__web_socket_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//while&#32;(SocketState(m_NativeRef)&#32;==&#32;0)</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;yield&#32;return&#32;0;</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00102"/>00102 
<anchor xml:id="__web_socket_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Close()
<anchor xml:id="__web_socket_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SocketClose(m_NativeRef);
<anchor xml:id="__web_socket_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00107"/>00107 
<anchor xml:id="__web_socket_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Connected
<anchor xml:id="__web_socket_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;SocketState(m_NativeRef)&#32;!=&#32;0;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00112"/>00112 
<anchor xml:id="__web_socket_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Error
<anchor xml:id="__web_socket_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bufsize&#32;=&#32;1024;
<anchor xml:id="__web_socket_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[bufsize];
<anchor xml:id="__web_socket_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;result&#32;=&#32;SocketError&#32;(m_NativeRef,&#32;buffer,&#32;bufsize);
<anchor xml:id="__web_socket_8cs_source_1l00119"/>00119 
<anchor xml:id="__web_socket_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(result&#32;==&#32;0)
<anchor xml:id="__web_socket_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__web_socket_8cs_source_1l00122"/>00122 
<anchor xml:id="__web_socket_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Encoding.UTF8.GetString&#32;(buffer);
<anchor xml:id="__web_socket_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00126"/>00126 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WebSocketSharp.WebSocket&#32;m_Socket;
<anchor xml:id="__web_socket_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Queue&lt;byte[]&gt;&#32;m_Messages&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Queue&lt;byte[]&gt;();
<anchor xml:id="__web_socket_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_IsConnected&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__web_socket_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;m_Error&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__web_socket_8cs_source_1l00131"/>00131 
<anchor xml:id="__web_socket_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Connect()
<anchor xml:id="__web_socket_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Socket&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WebSocketSharp.WebSocket(mUrl.ToString(),&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;{&#32;this.protocols&#32;});
<anchor xml:id="__web_socket_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Socket.SslConfiguration.EnabledSslProtocols&#32;=&#32;m_Socket.SslConfiguration.EnabledSslProtocols&#32;|&#32;(SslProtocols)(3072|&#32;768);
<anchor xml:id="__web_socket_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Socket.OnMessage&#32;+=&#32;(sender,&#32;e)&#32;=&gt;&#32;m_Messages.Enqueue(e.RawData);
<anchor xml:id="__web_socket_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Socket.OnOpen&#32;+=&#32;(sender,&#32;e)&#32;=&gt;&#32;m_IsConnected&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__web_socket_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//this.m_Socket.Log.Level&#32;=&#32;LogLevel.Debug;</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//this.m_Socket.Log.Output&#32;+=&#32;Output;</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Socket.OnClose&#32;+=&#32;SocketOnClose;
<anchor xml:id="__web_socket_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Socket.OnError&#32;+=&#32;(sender,&#32;e)&#32;=&gt;&#32;m_Error&#32;=&#32;e.Message&#32;+&#32;(e.Exception&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&#32;/&#32;&quot;</emphasis>&#32;+&#32;e.Exception);
<anchor xml:id="__web_socket_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Socket.ConnectAsync();
<anchor xml:id="__web_socket_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00144"/>00144 
<anchor xml:id="__web_socket_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SocketOnClose(<emphasis role="keywordtype">object</emphasis>&#32;sender,&#32;CloseEventArgs&#32;e)
<anchor xml:id="__web_socket_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//UnityEngine.Debug.Log(e.Code.ToString());</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00148"/>00148 
<anchor xml:id="__web_socket_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;code&#32;is&#32;used&#32;for&#32;cases&#32;when&#32;the&#32;socket&#32;failed&#32;to&#32;get&#32;created&#32;(specifically&#32;used&#32;to&#32;detect&#32;&quot;blocked&#32;by&#32;Windows&#32;firewall&quot;)</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;some&#32;reason&#32;this&#32;situation&#32;is&#32;not&#32;calling&#32;OnError</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e.Code&#32;==&#32;1006)
<anchor xml:id="__web_socket_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Error&#32;=&#32;e.Reason;
<anchor xml:id="__web_socket_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_IsConnected&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__web_socket_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00157"/>00157 
<anchor xml:id="__web_socket_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Connected&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_IsConnected;&#32;}&#32;}<emphasis role="comment">//&#32;added&#32;by&#32;TS</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00159"/>00159 
<anchor xml:id="__web_socket_8cs_source_1l00160"/>00160 
<anchor xml:id="__web_socket_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Send(<emphasis role="keywordtype">byte</emphasis>[]&#32;buffer)
<anchor xml:id="__web_socket_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Socket.Send(buffer);
<anchor xml:id="__web_socket_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00165"/>00165 
<anchor xml:id="__web_socket_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;Recv()
<anchor xml:id="__web_socket_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_Messages.Count&#32;==&#32;0)
<anchor xml:id="__web_socket_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__web_socket_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_Messages.Dequeue();
<anchor xml:id="__web_socket_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00172"/>00172 
<anchor xml:id="__web_socket_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Close()
<anchor xml:id="__web_socket_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Socket.Close();
<anchor xml:id="__web_socket_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00177"/>00177 
<anchor xml:id="__web_socket_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;Error
<anchor xml:id="__web_socket_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__web_socket_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_Error;
<anchor xml:id="__web_socket_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00185"/>00185 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__web_socket_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;}
<anchor xml:id="__web_socket_8cs_source_1l00187"/>00187 }
<anchor xml:id="__web_socket_8cs_source_1l00188"/>00188 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
