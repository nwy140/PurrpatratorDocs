<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_chat_1_1_authentication_values" xml:lang="en-US">
<title>Photon.Chat.AuthenticationValues Class Reference</title>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary></indexterm>
<para>

<para>Container for user authentication in <link linkend="_namespace_photon">Photon</link>. </para>
 
</para>
Collaboration diagram for Photon.Chat.AuthenticationValues:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_chat_1_1_authentication_values__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_chat_1_1_authentication_values_1af847f39157aae05c888c425f6eaa98e0">AuthenticationValues</link> ()</para>

<para>Creates empty auth values without any info.</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_chat_1_1_authentication_values_1a9ac133cc01fef4d0eaf1d4e0fbfb2219">AuthenticationValues</link> (string userId)</para>

<para>Creates minimal info about the user. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1ad38672a95f07e7161826d03baa8b4128">SetAuthPostData</link> (string stringData)</para>

<para>Sets the data to be passed-on to the auth service via POST. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1afe5da3fee6f1e38175f5b83a43949a04">SetAuthPostData</link> (byte[] byteData)</para>

<para>Sets the data to be passed-on to the auth service via POST. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1afe49907f55eae523c12986b8ba41b6b1">SetAuthPostData</link> (Dictionary&lt; string, object &gt; dictData)</para>

<para>Sets data to be passed-on to the auth service as Json (Content-Type: &quot;application/json&quot;) via Post. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1ab0361d5acb71f3962672af67de0f7cb6">AddAuthParameter</link> (string key, string value)</para>

<para>Adds a key-value pair to the get-parameters used for Custom Auth (AuthGetParameters). </para>
</listitem>
            <listitem><para>override string <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1a01bd54dc63aae5fc714668e10a8d8e98">ToString</link> ()</para>

<para>Transform this object into string. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_chat_1_1_authentication_values">AuthenticationValues</link> <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1aa991294eef8e548a3a2027a43b9a3dfc">CopyTo</link> (<link linkend="_class_photon_1_1_chat_1_1_authentication_values">AuthenticationValues</link> copy)</para>

<para>Make a copy of the current object. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespace_photon_1_1_chat_1a7c13dc83e6b84e241e105501af35ffd6">CustomAuthenticationType</link> <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1a43a30fbeb8f956c913c27635e6bb1483">AuthType</link><computeroutput> [getset]</computeroutput>
</para>

<para>The type of authentication provider that should be used. </para>
</listitem>
            <listitem><para>string <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1a42390bf372675de344fbe0f7f8890a40">AuthGetParameters</link><computeroutput> [getset]</computeroutput>
</para>

<para>This string must contain any (http get) parameters expected by the used authentication service. </para>
</listitem>
            <listitem><para>object <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1a7ad83467201261f0e645e808373d73ac">AuthPostData</link><computeroutput> [get]</computeroutput>
</para>

<para>Data to be passed-on to the auth service via POST. </para>
</listitem>
            <listitem><para>object <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1aa6fa7c406c123b02bff4568a13a8063c">Token</link><computeroutput> [getset]</computeroutput>
</para>

<para>Internal <emphasis role="bold"><link linkend="_namespace_photon">Photon</link> token</emphasis>. </para>
</listitem>
            <listitem><para>string <link linkend="_class_photon_1_1_chat_1_1_authentication_values_1ac91cec9e6295f82a23df0e592fa23953">UserId</link><computeroutput> [getset]</computeroutput>
</para>

<para>The UserId should be a unique identifier per user. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Container for user authentication in <link linkend="_namespace_photon">Photon</link>. </para>



<para>Set AuthValues before you connect - all else is handled. </para>

<para>On <link linkend="_namespace_photon">Photon</link>, user authentication is optional but can be useful in many cases. If you want to FindFriends, a unique ID per user is very practical.</para>

<para>There are basically three options for user authentication: None at all, the client sets some UserId or you can use some account web-service to authenticate a user (and set the UserId server-side).</para>

<para>Custom Authentication lets you verify end-users by some kind of login or token. It sends those values to <link linkend="_namespace_photon">Photon</link> which will verify them before granting access or disconnecting the client.</para>

<para>The AuthValues are sent in OpAuthenticate when you connect, so they must be set before you connect. If the AuthValues.UserId is null or empty when it&apos;s sent to the server, then the <link linkend="_namespace_photon">Photon</link> Server assigns a UserId!</para>

<para>The <link linkend="_namespace_photon">Photon</link> Cloud Dashboard will let you enable this feature and set important server values for it. <link xlink:href="https://dashboard.photonengine.com">https://dashboard.photonengine.com</link> </para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00253">253</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1af847f39157aae05c888c425f6eaa98e0"/><section>
    <title>AuthenticationValues()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>AuthenticationValues</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>AuthenticationValues</secondary></indexterm>
<para><computeroutput>Photon.Chat.AuthenticationValues.AuthenticationValues ( )</computeroutput></para><para>

<para>Creates empty auth values without any info.</para>
</para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00287">287</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1a9ac133cc01fef4d0eaf1d4e0fbfb2219"/><section>
    <title>AuthenticationValues()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>AuthenticationValues</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>AuthenticationValues</secondary></indexterm>
<para><computeroutput>Photon.Chat.AuthenticationValues.AuthenticationValues (string userId)</computeroutput></para><para>

<para>Creates minimal info about the user. </para>
</para>

<para>If this is authenticated or not, depends on the set AuthType.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>userId</entry><entry>
<para>Some UserId to set in <link linkend="_namespace_photon">Photon</link>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00293">293</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1ab0361d5acb71f3962672af67de0f7cb6"/><section>
    <title>AddAuthParameter()</title>
<indexterm><primary>AddAuthParameter</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>AddAuthParameter</secondary></indexterm>
<para><computeroutput>virtual void Photon.Chat.AuthenticationValues.AddAuthParameter (string key, string value)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Adds a key-value pair to the get-parameters used for Custom Auth (AuthGetParameters). </para>
</para>

<para>This method does uri-encoding for you.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>key</entry><entry>
<para>Key for the value to set.</para>
</entry>
                            </row>
                            <row>
<entry>value</entry><entry>
<para>Some value relevant for Custom Authentication.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00326">326</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1aa991294eef8e548a3a2027a43b9a3dfc"/><section>
    <title>CopyTo()</title>
<indexterm><primary>CopyTo</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>CopyTo</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_chat_1_1_authentication_values">AuthenticationValues</link> Photon.Chat.AuthenticationValues.CopyTo (<link linkend="_class_photon_1_1_chat_1_1_authentication_values">AuthenticationValues</link> copy)</computeroutput></para><para>

<para>Make a copy of the current object. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>copy</entry><entry>
<para>The object to be copied into.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The copied object.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00346">346</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1afe5da3fee6f1e38175f5b83a43949a04"/><section>
    <title>SetAuthPostData()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>SetAuthPostData</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>SetAuthPostData</secondary></indexterm>
<para><computeroutput>virtual void Photon.Chat.AuthenticationValues.SetAuthPostData (byte[] byteData)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Sets the data to be passed-on to the auth service via POST. </para>
</para>

<para>AuthPostData is just one value. Each SetAuthPostData replaces any previous value. It can be either a string, a byte[] or a dictionary.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>byteData</entry><entry>
<para>Binary token / auth-data to pass on.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00309">309</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1afe49907f55eae523c12986b8ba41b6b1"/><section>
    <title>SetAuthPostData()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>SetAuthPostData</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>SetAuthPostData</secondary></indexterm>
<para><computeroutput>virtual void Photon.Chat.AuthenticationValues.SetAuthPostData (Dictionary&lt; string, object &gt; dictData)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Sets data to be passed-on to the auth service as Json (Content-Type: &quot;application/json&quot;) via Post. </para>
</para>

<para>AuthPostData is just one value. Each SetAuthPostData replaces any previous value. It can be either a string, a byte[] or a dictionary.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>dictData</entry><entry>
<para>A authentication-data dictionary will be converted to Json and passed to the Auth webservice via HTTP Post.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00317">317</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1ad38672a95f07e7161826d03baa8b4128"/><section>
    <title>SetAuthPostData()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>SetAuthPostData</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>SetAuthPostData</secondary></indexterm>
<para><computeroutput>virtual void Photon.Chat.AuthenticationValues.SetAuthPostData (string stringData)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Sets the data to be passed-on to the auth service via POST. </para>
</para>

<para>AuthPostData is just one value. Each SetAuthPostData replaces any previous value. It can be either a string, a byte[] or a dictionary.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>stringData</entry><entry>
<para>String data to be used in the body of the POST request. Null or empty string will set AuthPostData to null.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00301">301</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1a01bd54dc63aae5fc714668e10a8d8e98"/><section>
    <title>ToString()</title>
<indexterm><primary>ToString</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>ToString</secondary></indexterm>
<para><computeroutput>override string Photon.Chat.AuthenticationValues.ToString ( )</computeroutput></para><para>

<para>Transform this object into string. </para>
</para>

<para><formalpara><title>Returns</title>

<para>string representation of this object.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00336">336</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1a42390bf372675de344fbe0f7f8890a40"/><section>
    <title>AuthGetParameters</title>
<indexterm><primary>AuthGetParameters</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>AuthGetParameters</secondary></indexterm>
<para><computeroutput>string Photon.Chat.AuthenticationValues.AuthGetParameters<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>This string must contain any (http get) parameters expected by the used authentication service. </para>
</para>

<para>By default, username and token.</para>

<para>Maps to operation parameter 216. Standard http get parameters are used here and passed on to the service that&apos;s defined in the server (<link linkend="_namespace_photon">Photon</link> Cloud Dashboard). </para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00271">271</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1a7ad83467201261f0e645e808373d73ac"/><section>
    <title>AuthPostData</title>
<indexterm><primary>AuthPostData</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>AuthPostData</secondary></indexterm>
<para><computeroutput>object Photon.Chat.AuthenticationValues.AuthPostData<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Data to be passed-on to the auth service via POST. </para>
</para>

<para>Default: null (not sent). Either string or byte[] (see setters).</para>

<para>Maps to operation parameter 214.</para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00275">275</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1a43a30fbeb8f956c913c27635e6bb1483"/><section>
    <title>AuthType</title>
<indexterm><primary>AuthType</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>AuthType</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_photon_1_1_chat_1a7c13dc83e6b84e241e105501af35ffd6">CustomAuthenticationType</link> Photon.Chat.AuthenticationValues.AuthType<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The type of authentication provider that should be used. </para>
</para>

<para>Defaults to None (no auth whatsoever).</para>

<para>Several auth providers are available and <link linkend="_namespace_photon_1_1_chat_1a7c13dc83e6b84e241e105501af35ffd6a90589c47f06eb971d548591f23c285af">CustomAuthenticationType.Custom</link> can be used if you build your own service.</para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00260">260</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1aa6fa7c406c123b02bff4568a13a8063c"/><section>
    <title>Token</title>
<indexterm><primary>Token</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>Token</secondary></indexterm>
<para><computeroutput>object Photon.Chat.AuthenticationValues.Token<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Internal <emphasis role="bold"><link linkend="_namespace_photon">Photon</link> token</emphasis>. </para>
</para>

<para>After initial authentication, <link linkend="_namespace_photon">Photon</link> provides a token for this client, subsequently used as (cached) validation.</para>

<para>Any token for custom authentication should be set via SetAuthPostData or AddAuthParameter.</para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00279">279</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_chat_1_1_authentication_values_1ac91cec9e6295f82a23df0e592fa23953"/><section>
    <title>UserId</title>
<indexterm><primary>UserId</primary><secondary>Photon.Chat.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Chat.AuthenticationValues</primary><secondary>UserId</secondary></indexterm>
<para><computeroutput>string Photon.Chat.AuthenticationValues.UserId<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The UserId should be a unique identifier per user. </para>
</para>

<para>This is for finding friends, etc..</para>

<para>See remarks of AuthValues for info about how this is set and used.</para>
<para>
Definition at line <link linkend="__chat_peer_8cs_source_1l00283">283</link> of file <link linkend="__chat_peer_8cs_source">ChatPeer.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/<link linkend="__chat_peer_8cs">ChatPeer.cs</link></section>
</section>
