<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_compression_1_1_transform_crusher" xml:lang="en-US">
<title>Photon.Compression.TransformCrusher Class Reference</title>
<indexterm><primary>Photon.Compression.TransformCrusher</primary></indexterm>
Inheritance diagram for Photon.Compression.TransformCrusher:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Photon.Compression.TransformCrusher:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a">OnCrusherChange</link> (<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> crusher)</para>

<para>Callback fired whenever a component <link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> is changed. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a84b1f8b9863b028634f777dc8643132c">TransformCrusher</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5996eb92ec5d203123e5e05b0101dc25">TransformCrusher</link> (bool isStatic=false)</para>

<para>Default constructor for <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>. </para>
</listitem>
            <listitem><para>override void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7342dc62d788987c81ebb12415e3b86c">OnBeforeSerialize</link> ()</para>
</listitem>
            <listitem><para>override void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a41b6424783da71e88dd56900f6b56e45">OnAfterDeserialize</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a22d477a5228d9d66bfde621548c94ba1">Write</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, byte[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4cf83876b696789efab7e93fea11cf63">Write</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, uint[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5e92ba41740a1b4efea2439f4516295d">Write</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, ulong[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a6d0637303a1e5cefadea17f742b96527">Write</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Transform transform, byte[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3a95c3f3707d573cb8031884d11438ec">Write</link> (Transform transform, byte[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c">ReadAndDecompress</link> (ulong[] array, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5c12f1c0653bd77e30a056c73fc834c8">ReadAndDecompress</link> (uint[] array, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9019b040f8cb265cc4d4d9c6814e3317">ReadAndDecompress</link> (byte[] array, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab331c29db288e15cf6f49b3fd32aa297">ReadAndDecompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7788958f4baede9ab3afe357e88d2c48">ReadAndDecompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, uint[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9c585031144e41cba6cf2a13b8599e07">ReadAndDecompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, byte[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3fc2854e69a4826f692ef21d05e30718">ReadAndDecompress</link> (ulong[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a07540524a08d8bff436df02095ca2e76">ReadAndDecompress</link> (uint[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af5afe0d802142b1ceecc564f5a95eaa3">ReadAndDecompress</link> (byte[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c">Read</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, byte[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1f42876b0ba7a2c72fa0d1b904981b32">Read</link> (ulong[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a57d11b67c6c5878cfe82f1b90edcd483">Read</link> (uint[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1adf354c39bb038f4c270e9a66c0ef4f43">Read</link> (byte[] array, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a6eb5fd8bfacc84f7ba0c29599acb3350">Read</link> (ulong[] array, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a32853beeaae389d770f5297e88b6b8fa">Read</link> (uint[] array, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a983269ed810891cea68e582726435152">Read</link> (byte[] array, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1adedc981a077de4b9d2186299c47571e2">Read</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, ulong[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acb8c8e8f48f8e1df1f6b97466f6da8e3">Read</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, uint[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a42eef89c72382f5c1081e1a4306f0201">Write</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Transform transform, ref ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Compress a transform using this crusher, store the compressed results in a supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>, and serialize the compressed values to the buffer. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac4de1c160c0c3adb79566f0aefcba1ed">Write</link> (Transform transform, ref ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Compress and write all of the components of transform, without creating any intermediary <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> or Bitstream. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af428d82729549a13f9ce1cfbf380bb44">Write</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, ref ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Serialize a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> to a bitstream. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a68ba03678ef3456ba00ac763b192b0a7">Write</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Transform transform, ref ulong bitstream, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Compress a transform using this crusher, store the compressed results in a supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>, and serialize the compressed values to the bitstream. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aaa54f57a0550395a946209ce762d1acd">ReadAndDecompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong buffer, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3d87e1b1712e7825fd579a0f61549c45">ReadAndDecompress</link> (ulong buffer, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5130c54038be875ac4602bac4a15001a">ReadAndDecompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1d27eaa9da0469479ded0f719b6a3a5f">ReadAndDecompress</link> (ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a38c558489f52896a6d8d5e1e40e5d264">ReadAndApply</link> (Transform target, byte[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Read the compressed value from a buffer, decompress it, and apply it to the target transform. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acfd38d2158c72e1d2ae51d30df5e31eb">Read</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, ulong frag0, ulong frag1=0, ulong frag2=0, ulong frag3=0, ulong frag4=0, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Reconstruct a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> from fragments. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8483b39e711ba8f35595abdd5e4b329d">ReadAndDecompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong frag0, ulong frag1=0, ulong frag2=0, ulong frag3=0, ulong frag4=0, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a03bbaeca49b32ccb205c5265bb561d5c">Read</link> (ulong frag0, ulong frag1=0, ulong frag2=0, ulong frag3=0, uint frag4=0, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3b7214142bbed4164340bf73b897c707">Read</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, ulong buffer, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Extract a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> from a primitive buffer. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aba0f4a8f80333baadb27fd72710b4d1b">Read</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Extract a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> from a primitive buffer. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acf8c063a1701d8e5c38e8b686030e55c">Read</link> (ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afc8cc579c405acb2ae7dc42a5b3b15d7">Compress</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc)</para>

<para>Compress the transform of the default gameobject. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0bf59d02b55153a258e22dd387f4ff3f">Compress</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8f04380f44e119a56725bd7c0b13fdee">Compress</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Transform transform)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19bc53fb9a5f7a3f4755c9943225a537">Compress</link> (Transform transform)</para>

<para>Compressed to an internally reused <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2d330417c1693dedb3da7b0d45bae010">Compress</link> (Rigidbody rb)</para>

<para>Compress Rigodbody to an internally reused <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3a1aa71482fa2122be1f4ba992e8efda">Compress</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Rigidbody rb)</para>

<para>Compress to Rigidbody to supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4fe43ddcbbc24ebd10645957e033b194">Compress</link> (Rigidbody2D rb2d)</para>

<para>Compressed Rigidbody2D to an internally reused <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a747498497e0052c0106d125497f79c42">Compress</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Rigidbody2D rb2d)</para>

<para>Compress to Rigidbody2D to supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aef2ca842733706bfae4f3c95ff1321f5">CompressAndWrite</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix, byte[] buffer, ref int bitposition)</para>

<para>CompressAndWrite doesn&apos;t produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a48880ac9c9e33b13a145d1216c1dc962">CompressAndWrite</link> (Transform transform, byte[] buffer, ref int bitposition)</para>

<para>CompressAndWrite doesn&apos;t produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0c10eb1d348fa9b7e7fdf1721ee92baf">CompressAndWrite</link> (Rigidbody rb, byte[] buffer, ref int bitposition)</para>

<para>CompressAndWrite doesn&apos;t produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c">Decompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong[] buffer, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aa15d64937bfd0fcb3e46c8064efc707f">Decompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, uint[] buffer, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9715042485fd5aec546132c2c99d8448">Decompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong compressed, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae825ec23ef92a72200927450a413d7df">Decompress</link> (ulong[] buffer, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acf425e3d04cc0a437f6e57bf332e063b">Decompress</link> (uint[] buffer, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab04b7220513c60a6fce5f53698c2b865">Decompress</link> (byte[] buffer, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a993ec3f72dcd74dbdfd24901ef39dd82">Decompress</link> (ulong compressed, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a84215015317adbaaf1bb251e688373f9">Decompress</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> compMatrix)</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acd6200503fda266a343fd49db36e1912">Decompress</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> compMatrix)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a9f2dc78a136df7463b612f7084b2d277">Set</link> (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1acecfdb3738a4c27c0fad0f3f4ccaad03">Set</link> (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afbf5cc01c80a47641b56c124c3c9a7d3">Set</link> (Rigidbody rb, ulong frag0, ulong frag1=0, ulong frag2=0, ulong frag3=0, ulong frag4=0)</para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aa8931eafe6db6bccde82d8742711faaa">Set</link> (Rigidbody rb, ulong[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a402b17ad7257c5bed4ee7d827d8bda65">Set</link> (Rigidbody rb, byte[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab34d1f48ab6b5ae55f4b0bdda352641c">Set</link> (Rigidbody2D rb2d, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3b4ed3635169273159aa58a370beca81">Set</link> (Rigidbody2D rb2d, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1af715a1fd5db84d12746260129ed59f02">Move</link> (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a6b299828205cea24dab5cd2bfa8c3e9a">Move</link> (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0facf7886c4b655f638606d5a48ce252">Move</link> (Rigidbody rb, ulong frag0, ulong frag1=0, ulong frag2=0, ulong frag3=0, ulong frag4=0)</para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1adcdfcc7c25782503e8eecb2693c89df5">Move</link> (Rigidbody rb, ulong[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8cfc23834add089917dffc1ed672600a">Move</link> (Rigidbody rb, byte[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a">Apply</link> (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</para>

<para>Apply the <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> to a Rigidbody. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ade51dc3438ac85d5cab34bd8d3100971">Apply</link> (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</para>

<para>Apply the TRS matrix to a transform. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a0fbeabd595125a179bdfcd02fed519e0">Apply</link> (ulong cvalue)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a65f86a49ba6f80905d40b3c81695b8ab">Apply</link> (Transform t, ulong cvalue)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a26ea17d966c9b762411781310cfcdbb7">Apply</link> (ulong u0, ulong u1, ulong u2, ulong u3, uint u4)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a496ef06dcf2c75e209fb482b1404b48a">Apply</link> (Transform t, ulong frag0, ulong frag1=0, ulong frag2=0, ulong frag3=0, ulong frag4=0)</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a127b81fd1a78225a299f47fca0fe3cfe">Apply</link> (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</para>

<para>Apply the <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> to a transform. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a72ed65fe0d9f0a30d34efecb544603e0">Apply</link> (Transform t, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</para>

<para>Apply the <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> to a transform. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a15c384448829e036f3902398a4a28154">Apply</link> (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</para>

<para>Apply the TRS matrix to a transform. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a15218bb7590615e050f759d4e5665b79">Apply</link> (Transform transform, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</para>

<para>Apply the TRS matrix to a transform. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac39fc7817ca651f7d735d0cbf6eeebec">Capture</link> (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> m)</para>

<para>Capture the values of a Rigidbody. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a91490747c6e6acd2daeeb41612266aad">Capture</link> (Rigidbody2D rb2d, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> m)</para>

<para>Capture the values of a Rigidbody2d. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae20b9f1d9c23adca3983be17682bb3c8">Capture</link> (Transform tr, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> m)</para>

<para>Capture the values of a Transform. </para>
</listitem>
            <listitem><para>int <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a63a17e950e0db3409e844cae8964896e">TallyBits</link> (BitCullingLevel bcl=BitCullingLevel.NoCulling)</para>

<para>Get the total number of bits this Transform is set to write. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1affd5d4cd0f1fcda649ea08936aa9a16f">CopyFrom</link> (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> source)</para>
</listitem>
            <listitem><para>override bool <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1abfee6f64cf0fba52afe308f3e6386e90">Equals</link> (object obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a547f326ec9d7219b96f70b5e6217eecb">Equals</link> (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> other)</para>
</listitem>
            <listitem><para>override int <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a5446c2284c8267c16562fb9895f5f7c5">GetHashCode</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae616bf4e11f138f2e25bba40c84a7fd4">CheckAgainstStatics</link> (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> tc, bool CheckElementCrusherAsWell=true)</para>

<para>See if a crusher with these exact settings exists in the static crushers list. </para>
</listitem>
            <listitem><para>static bool <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac74e62a6423016ddd56e1bd7d8a0b48b">operator==</link> (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> crusher1, <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> crusher2)</para>
</listitem>
            <listitem><para>static bool <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afdd5de79e0ff79fa71ff51a80c5e157d">operator!=</link> (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> crusher1, <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> crusher2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>Transform <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f">defaultTransform</link></para>
</listitem>
            <listitem><para>ReadOnlyCollection&lt; int &gt; <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae1390ce6ef9b11a8bdcd87ab96d48fd8">cached_total</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>const int <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7e4bc498f8521760f86912c8c66d1ae5">VersionMajor</link> = 3</para>
</listitem>
            <listitem><para>const int <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab33f3e9eb1c3b456cc8925443a4cf104">VersionMinor</link> = 5</para>
</listitem>
            <listitem><para>const int <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1afee7e139b8fec7eddb5e65abbc796bb9">VersionRevision</link> = 3</para>
</listitem>
            <listitem><para>const int <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a4b6c91db088e5f165ef099831627091b">Build</link> = 3503</para>
</listitem>
            <listitem><para>static Dictionary&lt; int, <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> &gt; <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1aec1edd4039f607ab5a91dbd9295f1852">staticTransformCrushers</link> = new Dictionary&lt;int, <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&gt;()</para>
</listitem>
            <listitem><para>static ulong[] <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9">reusableArray64</link> = new ulong[5]</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3faed384614f5cf49bb8f8a4ede9e2f0">ConstructDefault</link> (bool isStatic=false)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01">posCrusher</link></para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd">rotCrusher</link></para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8">sclCrusher</link></para>
</listitem>
            <listitem><para>readonly int[] <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5">cached_pBits</link> = new int[4]</para>

<para>Temporary <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> used internally when a non-alloc is not provided and no return CM or M is required. </para>
</listitem>
            <listitem><para>readonly int[] <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429">cached_rBits</link> = new int[4]</para>
</listitem>
            <listitem><para>readonly int[] <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d">cached_sBits</link> = new int[4]</para>
</listitem>
            <listitem><para>readonly int[] <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a3393045bcc58771e5677ffaf2c70a902">_cached_total</link> = new int[4]</para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de">cached</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a959e101ab740e913a49b70258491d9">PosCrusher</link><computeroutput> [getset]</computeroutput>
</para>

<para>Sets the position crusher to the assigned reference, and reruns <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues()</link>. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a8db5e9edbb47a723dc7c3f8ddc293f56">RotCrusher</link><computeroutput> [getset]</computeroutput>
</para>

<para>Sets the scale crusher to the assigned reference, and reruns <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues()</link>. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a802be4505b8090a54b19476a46dd6d34">SclCrusher</link><computeroutput> [getset]</computeroutput>
</para>

<para>Sets the scale crusher to the assigned reference, and reruns <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues()</link>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00023">23</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a84b1f8b9863b028634f777dc8643132c"/><section>
    <title>TransformCrusher()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>TransformCrusher</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>TransformCrusher</secondary></indexterm>
<para><computeroutput>Photon.Compression.TransformCrusher.TransformCrusher ( )</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00153">153</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a84b1f8b9863b028634f777dc8643132c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a5996eb92ec5d203123e5e05b0101dc25"/><section>
    <title>TransformCrusher()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>TransformCrusher</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>TransformCrusher</secondary></indexterm>
<para><computeroutput>Photon.Compression.TransformCrusher.TransformCrusher (bool isStatic = <computeroutput>false</computeroutput>
)</computeroutput></para><para>

<para>Default constructor for <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>isStatic</entry><entry>
<para>Set this as true if this crusher is not meant to be serialized. Static crushers are created in code, and are not meant to be modified after creation. This allows them to be indexed by their hashcodes and reused. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00163">163</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a5996eb92ec5d203123e5e05b0101dc25_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a127b81fd1a78225a299f47fca0fe3cfe"/><section>
    <title>Apply()<computeroutput>[1/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</computeroutput></para><para>

<para>Apply the <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> to a transform. </para>
</para>

<para>Any axes not included in the Crusher are left as is. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01157">1157</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a127b81fd1a78225a299f47fca0fe3cfe_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a15c384448829e036f3902398a4a28154"/><section>
    <title>Apply()<computeroutput>[2/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</computeroutput></para><para>

<para>Apply the TRS matrix to a transform. </para>
</para>

<para>Any axes not included in the Crusher are left as is. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01182">1182</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a15c384448829e036f3902398a4a28154_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ae4897d3eb5db6164eda88401bad8e37a"/><section>
    <title>Apply()<computeroutput>[3/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</computeroutput></para><para>

<para>Apply the <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> to a Rigidbody. </para>
</para>

<para>Any axes not included in the Crusher are left as is. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01094">1094</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ae4897d3eb5db6164eda88401bad8e37a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ae4897d3eb5db6164eda88401bad8e37a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ade51dc3438ac85d5cab34bd8d3100971"/><section>
    <title>Apply()<computeroutput>[4/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</computeroutput></para><para>

<para>Apply the TRS matrix to a transform. </para>
</para>

<para>Any axes not included in the Crusher are left as is. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01108">1108</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ade51dc3438ac85d5cab34bd8d3100971_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a72ed65fe0d9f0a30d34efecb544603e0"/><section>
    <title>Apply()<computeroutput>[5/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (Transform t, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</computeroutput></para><para>

<para>Apply the <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> to a transform. </para>
</para>

<para>Any axes not included in the Crusher are left as is. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01167">1167</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a72ed65fe0d9f0a30d34efecb544603e0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a65f86a49ba6f80905d40b3c81695b8ab"/><section>
    <title>Apply()<computeroutput>[6/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (Transform t, ulong cvalue)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01133">1133</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a65f86a49ba6f80905d40b3c81695b8ab_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a496ef06dcf2c75e209fb482b1404b48a"/><section>
    <title>Apply()<computeroutput>[7/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (Transform t, ulong frag0, ulong frag1 = <computeroutput>0</computeroutput>
, ulong frag2 = <computeroutput>0</computeroutput>
, ulong frag3 = <computeroutput>0</computeroutput>
, ulong frag4 = <computeroutput>0</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01147">1147</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a496ef06dcf2c75e209fb482b1404b48a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a15218bb7590615e050f759d4e5665b79"/><section>
    <title>Apply()<computeroutput>[8/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (Transform transform, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</computeroutput></para><para>

<para>Apply the TRS matrix to a transform. </para>
</para>

<para>Any axes not included in the Crusher are left as is. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01192">1192</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a15218bb7590615e050f759d4e5665b79_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a0fbeabd595125a179bdfcd02fed519e0"/><section>
    <title>Apply()<computeroutput>[9/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (ulong cvalue)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01126">1126</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a0fbeabd595125a179bdfcd02fed519e0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a26ea17d966c9b762411781310cfcdbb7"/><section>
    <title>Apply()<computeroutput>[10/10]</computeroutput></title>
<indexterm><primary>Apply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Apply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Apply (ulong u0, ulong u1, ulong u2, ulong u3, uint u4)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01140">1140</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a26ea17d966c9b762411781310cfcdbb7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188"/><section>
    <title>CacheValues()</title>
<indexterm><primary>CacheValues</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>CacheValues</secondary></indexterm>
<para><computeroutput>virtual void Photon.Compression.TransformCrusher.CacheValues ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00223">223</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a45f44abf6ec35a984fd7a3e2dda33188_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ac39fc7817ca651f7d735d0cbf6eeebec"/><section>
    <title>Capture()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Capture</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Capture</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Capture (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> m)</computeroutput></para><para>

<para>Capture the values of a Rigidbody. </para>
</para>

<para>Applies the lossy decompressed value to the <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>m</entry><entry>
<para>Lossy decompressed value is stored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01208">1208</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ac39fc7817ca651f7d735d0cbf6eeebec_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ac39fc7817ca651f7d735d0cbf6eeebec_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a91490747c6e6acd2daeeb41612266aad"/><section>
    <title>Capture()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Capture</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Capture</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Capture (Rigidbody2D rb2d, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> m)</computeroutput></para><para>

<para>Capture the values of a Rigidbody2d. </para>
</para>

<para>Applies the lossy decompressed value to the <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>m</entry><entry>
<para>Lossy decompressed value is stored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01218">1218</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a91490747c6e6acd2daeeb41612266aad_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ae20b9f1d9c23adca3983be17682bb3c8"/><section>
    <title>Capture()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Capture</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Capture</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Capture (Transform tr, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> m)</computeroutput></para><para>

<para>Capture the values of a Transform. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>m</entry><entry>
<para>Lossy decompressed value is stored.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01228">1228</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ae20b9f1d9c23adca3983be17682bb3c8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ae616bf4e11f138f2e25bba40c84a7fd4"/><section>
    <title>CheckAgainstStatics()</title>
<indexterm><primary>CheckAgainstStatics</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>CheckAgainstStatics</secondary></indexterm>
<para><computeroutput>static <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> Photon.Compression.TransformCrusher.CheckAgainstStatics (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> tc, bool CheckElementCrusherAsWell = <computeroutput>true</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>See if a crusher with these exact settings exists in the static crushers list. </para>
</para>

<para>If so, return that already cataloged crusher. You may allow the crusher given as an argument be garbage collected. NOTE: Any changes to static crushers will break things. Currently there are no safeguards against this. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>tc</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00041">41</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ae616bf4e11f138f2e25bba40c84a7fd4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4"/><section>
    <title>Compress()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>Compress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Compress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Compress ( )</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00685">685</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a7a78f7346dba49c432087a45b6d245f4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a7a78f7346dba49c432087a45b6d245f4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1afc8cc579c405acb2ae7dc42a5b3b15d7"/><section>
    <title>Compress()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>Compress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Compress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Compress (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc)</computeroutput></para><para>

<para>Compress the transform of the default gameobject. </para>
</para>

<para>(Only avavilable if this crusher is serialized in the editor). </para>

<para><formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00678">678</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_afc8cc579c405acb2ae7dc42a5b3b15d7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_afc8cc579c405acb2ae7dc42a5b3b15d7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a0bf59d02b55153a258e22dd387f4ff3f"/><section>
    <title>Compress()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>Compress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Compress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Compress (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00692">692</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a0bf59d02b55153a258e22dd387f4ff3f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a3a1aa71482fa2122be1f4ba992e8efda"/><section>
    <title>Compress()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>Compress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Compress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Compress (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Rigidbody rb)</computeroutput></para><para>

<para>Compress to Rigidbody to supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00743">743</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a3a1aa71482fa2122be1f4ba992e8efda_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a747498497e0052c0106d125497f79c42"/><section>
    <title>Compress()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>Compress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Compress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Compress (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Rigidbody2D rb2d)</computeroutput></para><para>

<para>Compress to Rigidbody2D to supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</para>

<para>NOT FULLY TEST (OR TESTED AT ALL EVEN) </para>

<para>TODO: this currently is not using the RB like the 3d version does.</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00769">769</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a747498497e0052c0106d125497f79c42_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a8f04380f44e119a56725bd7c0b13fdee"/><section>
    <title>Compress()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>Compress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Compress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Compress (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Transform transform)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00704">704</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a8f04380f44e119a56725bd7c0b13fdee_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a2d330417c1693dedb3da7b0d45bae010"/><section>
    <title>Compress()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>Compress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Compress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Compress (Rigidbody rb)</computeroutput></para><para>

<para>Compress Rigodbody to an internally reused <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</para>

<para>WARNING: Be sure to use the contents of this <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> immediately, as its values will be overwritten often. If you need to hold these values, use the nonalloc overload and supply a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00734">734</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a2d330417c1693dedb3da7b0d45bae010_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a4fe43ddcbbc24ebd10645957e033b194"/><section>
    <title>Compress()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>Compress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Compress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Compress (Rigidbody2D rb2d)</computeroutput></para><para>

<para>Compressed Rigidbody2D to an internally reused <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</para>

<para>WARNING: Be sure to use the contents of this <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> immediately, as its values will be overwritten often. If you need to hold these values, use the nonalloc overload and supply a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00759">759</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a4fe43ddcbbc24ebd10645957e033b194_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a19bc53fb9a5f7a3f4755c9943225a537"/><section>
    <title>Compress()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>Compress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Compress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Compress (Transform transform)</computeroutput></para><para>

<para>Compressed to an internally reused <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
</para>

<para>WARNING: Be sure to use the contents of this <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> immediately, as its values will be overwritten often. If you need to hold these values, use the nonalloc overload and supply a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00722">722</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a19bc53fb9a5f7a3f4755c9943225a537_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1aef2ca842733706bfae4f3c95ff1321f5"/><section>
    <title>CompressAndWrite()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>CompressAndWrite</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>CompressAndWrite</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.CompressAndWrite (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix, byte[] buffer, ref int bitposition)</computeroutput></para><para>

<para>CompressAndWrite doesn&apos;t produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream. </para>
</para>

<para>Use this rather than <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a22d477a5228d9d66bfde621548c94ba1">Write()</link> and <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress()</link> when you don&apos;t need the lossy or compressed value returned. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>matrix</entry><entry></entry>
                            </row>
                            <row>
<entry>bitstream</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00814">814</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_aef2ca842733706bfae4f3c95ff1321f5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a0c10eb1d348fa9b7e7fdf1721ee92baf"/><section>
    <title>CompressAndWrite()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>CompressAndWrite</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>CompressAndWrite</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.CompressAndWrite (Rigidbody rb, byte[] buffer, ref int bitposition)</computeroutput></para><para>

<para>CompressAndWrite doesn&apos;t produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream. </para>
</para>

<para>Use this rather than <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a22d477a5228d9d66bfde621548c94ba1">Write()</link> and <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress()</link> when you don&apos;t need the lossy or compressed value returned. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00850">850</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a0c10eb1d348fa9b7e7fdf1721ee92baf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a48880ac9c9e33b13a145d1216c1dc962"/><section>
    <title>CompressAndWrite()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>CompressAndWrite</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>CompressAndWrite</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.CompressAndWrite (Transform transform, byte[] buffer, ref int bitposition)</computeroutput></para><para>

<para>CompressAndWrite doesn&apos;t produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream. </para>
</para>

<para>Use this rather than <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a22d477a5228d9d66bfde621548c94ba1">Write()</link> and <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a7a78f7346dba49c432087a45b6d245f4">Compress()</link> when you don&apos;t need the lossy or compressed value returned. </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00831">831</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a48880ac9c9e33b13a145d1216c1dc962_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a3faed384614f5cf49bb8f8a4ede9e2f0"/><section>
    <title>ConstructDefault()</title>
<indexterm><primary>ConstructDefault</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ConstructDefault</secondary></indexterm>
<para><computeroutput>virtual void Photon.Compression.TransformCrusher.ConstructDefault (bool isStatic = <computeroutput>false</computeroutput>
)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00168">168</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a3faed384614f5cf49bb8f8a4ede9e2f0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1affd5d4cd0f1fcda649ea08936aa9a16f"/><section>
    <title>CopyFrom()</title>
<indexterm><primary>CopyFrom</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>CopyFrom</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.CopyFrom (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> source)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01255">1255</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_affd5d4cd0f1fcda649ea08936aa9a16f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ab04b7220513c60a6fce5f53698c2b865"/><section>
    <title>Decompress()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>Decompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Decompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.Decompress (byte[] buffer, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00912">912</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ab04b7220513c60a6fce5f53698c2b865_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1acd6200503fda266a343fd49db36e1912"/><section>
    <title>Decompress()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>Decompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Decompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.Decompress (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> compMatrix)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00940">940</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_acd6200503fda266a343fd49db36e1912_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a84215015317adbaaf1bb251e688373f9"/><section>
    <title>Decompress()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>Decompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Decompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Decompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> compMatrix)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00927">927</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a84215015317adbaaf1bb251e688373f9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1aa15d64937bfd0fcb3e46c8064efc707f"/><section>
    <title>Decompress()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>Decompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Decompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Decompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, uint[] buffer, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00883">883</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_aa15d64937bfd0fcb3e46c8064efc707f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a9715042485fd5aec546132c2c99d8448"/><section>
    <title>Decompress()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>Decompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Decompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Decompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong compressed, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00890">890</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a9715042485fd5aec546132c2c99d8448_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a4f319ae2cfdf8004ac9a5f79eaf5cf2c"/><section>
    <title>Decompress()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>Decompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Decompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Decompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong[] buffer, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00876">876</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a4f319ae2cfdf8004ac9a5f79eaf5cf2c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a4f319ae2cfdf8004ac9a5f79eaf5cf2c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1acf425e3d04cc0a437f6e57bf332e063b"/><section>
    <title>Decompress()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>Decompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Decompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.Decompress (uint[] buffer, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00904">904</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_acf425e3d04cc0a437f6e57bf332e063b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a993ec3f72dcd74dbdfd24901ef39dd82"/><section>
    <title>Decompress()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>Decompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Decompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.Decompress (ulong compressed, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00920">920</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a993ec3f72dcd74dbdfd24901ef39dd82_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ae825ec23ef92a72200927450a413d7df"/><section>
    <title>Decompress()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>Decompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Decompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.Decompress (ulong[] buffer, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00896">896</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ae825ec23ef92a72200927450a413d7df_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1abfee6f64cf0fba52afe308f3e6386e90"/><section>
    <title>Equals()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Equals</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Equals</secondary></indexterm>
<para><computeroutput>override bool Photon.Compression.TransformCrusher.Equals (object obj)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01264">1264</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_abfee6f64cf0fba52afe308f3e6386e90_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_abfee6f64cf0fba52afe308f3e6386e90_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a547f326ec9d7219b96f70b5e6217eecb"/><section>
    <title>Equals()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Equals</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Equals</secondary></indexterm>
<para><computeroutput>bool Photon.Compression.TransformCrusher.Equals (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> other)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01269">1269</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a547f326ec9d7219b96f70b5e6217eecb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a5446c2284c8267c16562fb9895f5f7c5"/><section>
    <title>GetHashCode()</title>
<indexterm><primary>GetHashCode</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>GetHashCode</secondary></indexterm>
<para><computeroutput>override int Photon.Compression.TransformCrusher.GetHashCode ( )</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01278">1278</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a5446c2284c8267c16562fb9895f5f7c5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a5446c2284c8267c16562fb9895f5f7c5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a8cfc23834add089917dffc1ed672600a"/><section>
    <title>Move()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>Move</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Move</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Move (Rigidbody rb, byte[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01084">1084</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a8cfc23834add089917dffc1ed672600a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1af715a1fd5db84d12746260129ed59f02"/><section>
    <title>Move()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>Move</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Move</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Move (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</computeroutput></para><para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01039">1039</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_af715a1fd5db84d12746260129ed59f02_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_af715a1fd5db84d12746260129ed59f02_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a6b299828205cea24dab5cd2bfa8c3e9a"/><section>
    <title>Move()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>Move</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Move</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Move (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</computeroutput></para><para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01053">1053</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a6b299828205cea24dab5cd2bfa8c3e9a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a0facf7886c4b655f638606d5a48ce252"/><section>
    <title>Move()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>Move</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Move</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Move (Rigidbody rb, ulong frag0, ulong frag1 = <computeroutput>0</computeroutput>
, ulong frag2 = <computeroutput>0</computeroutput>
, ulong frag3 = <computeroutput>0</computeroutput>
, ulong frag4 = <computeroutput>0</computeroutput>
)</computeroutput></para><para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01066">1066</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a0facf7886c4b655f638606d5a48ce252_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1adcdfcc7c25782503e8eecb2693c89df5"/><section>
    <title>Move()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>Move</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Move</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Move (Rigidbody rb, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Move Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.MovePosition and rb.MoveRotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01075">1075</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_adcdfcc7c25782503e8eecb2693c89df5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a41b6424783da71e88dd56900f6b56e45"/><section>
    <title>OnAfterDeserialize()</title>
<indexterm><primary>OnAfterDeserialize</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>OnAfterDeserialize</secondary></indexterm>
<para><computeroutput>override void Photon.Compression.TransformCrusher.OnAfterDeserialize ( )</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00193">193</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a41b6424783da71e88dd56900f6b56e45_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a7342dc62d788987c81ebb12415e3b86c"/><section>
    <title>OnBeforeSerialize()</title>
<indexterm><primary>OnBeforeSerialize</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>OnBeforeSerialize</secondary></indexterm>
<para><computeroutput>override void Photon.Compression.TransformCrusher.OnBeforeSerialize ( )</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00191">191</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ab3de701bb95bb0e1869cde653f51d69a"/><section>
    <title>OnCrusherChange()</title>
<indexterm><primary>OnCrusherChange</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>OnCrusherChange</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.OnCrusherChange (<link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> crusher)</computeroutput></para><para>

<para>Callback fired whenever a component <link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> is changed. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>crusher</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00147">147</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ab3de701bb95bb0e1869cde653f51d69a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1afdd5de79e0ff79fa71ff51a80c5e157d"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.TransformCrusher.operator!= (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> crusher1, <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> crusher2)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01294">1294</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ac74e62a6423016ddd56e1bd7d8a0b48b"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.TransformCrusher.operator== (<link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> crusher1, <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link> crusher2)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01289">1289</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a983269ed810891cea68e582726435152"/><section>
    <title>Read()<computeroutput>[1/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Read (byte[] array, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00411">411</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a983269ed810891cea68e582726435152_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1adf354c39bb038f4c270e9a66c0ef4f43"/><section>
    <title>Read()<computeroutput>[2/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Read (byte[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00393">393</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_adf354c39bb038f4c270e9a66c0ef4f43_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a212c4d8c4891bd1714bc166d30c7a20c"/><section>
    <title>Read()<computeroutput>[3/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Read (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, byte[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00366">366</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a212c4d8c4891bd1714bc166d30c7a20c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a212c4d8c4891bd1714bc166d30c7a20c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1acb8c8e8f48f8e1df1f6b97466f6da8e3"/><section>
    <title>Read()<computeroutput>[4/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Read (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, uint[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00434">434</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_acb8c8e8f48f8e1df1f6b97466f6da8e3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a3b7214142bbed4164340bf73b897c707"/><section>
    <title>Read()<computeroutput>[5/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Read (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, ulong buffer, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Extract a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> from a primitive buffer. </para>
</para>

<para>Results will overwrite the supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> non-alloc. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>nonalloc</entry><entry>
<para>Target of the Read.</para>
</entry>
                            </row>
                            <row>
<entry>buffer</entry><entry>
<para>Serialized source.</para>
</entry>
                            </row>
                            <row>
<entry>bcl</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00627">627</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a3b7214142bbed4164340bf73b897c707_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1aba0f4a8f80333baadb27fd72710b4d1b"/><section>
    <title>Read()<computeroutput>[6/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Read (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, ulong buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Extract a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> from a primitive buffer. </para>
</para>

<para>Results will overwrite the supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> non-alloc. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>nonalloc</entry><entry>
<para>Target of the Read.</para>
</entry>
                            </row>
                            <row>
<entry>buffer</entry><entry>
<para>Serialized source.</para>
</entry>
                            </row>
                            <row>
<entry>bitposition</entry><entry>
<para>The read start position of the buffer. This value will be incremented by the number of bits read.</para>
</entry>
                            </row>
                            <row>
<entry>bcl</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00647">647</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_aba0f4a8f80333baadb27fd72710b4d1b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1acfd38d2158c72e1d2ae51d30df5e31eb"/><section>
    <title>Read()<computeroutput>[7/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Read (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, ulong frag0, ulong frag1 = <computeroutput>0</computeroutput>
, ulong frag2 = <computeroutput>0</computeroutput>
, ulong frag3 = <computeroutput>0</computeroutput>
, ulong frag4 = <computeroutput>0</computeroutput>
, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Reconstruct a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> from fragments. </para>
</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00588">588</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_acfd38d2158c72e1d2ae51d30df5e31eb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1adedc981a077de4b9d2186299c47571e2"/><section>
    <title>Read()<computeroutput>[8/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Read (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00419">419</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_adedc981a077de4b9d2186299c47571e2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a32853beeaae389d770f5297e88b6b8fa"/><section>
    <title>Read()<computeroutput>[9/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Read (uint[] array, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00405">405</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a32853beeaae389d770f5297e88b6b8fa_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a57d11b67c6c5878cfe82f1b90edcd483"/><section>
    <title>Read()<computeroutput>[10/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Read (uint[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00388">388</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a57d11b67c6c5878cfe82f1b90edcd483_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1acf8c063a1701d8e5c38e8b686030e55c"/><section>
    <title>Read()<computeroutput>[11/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Read (ulong buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00662">662</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_acf8c063a1701d8e5c38e8b686030e55c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a03bbaeca49b32ccb205c5265bb561d5c"/><section>
    <title>Read()<computeroutput>[12/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Read (ulong frag0, ulong frag1 = <computeroutput>0</computeroutput>
, ulong frag2 = <computeroutput>0</computeroutput>
, ulong frag3 = <computeroutput>0</computeroutput>
, uint frag4 = <computeroutput>0</computeroutput>
, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00611">611</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a03bbaeca49b32ccb205c5265bb561d5c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a6eb5fd8bfacc84f7ba0c29599acb3350"/><section>
    <title>Read()<computeroutput>[13/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Read (ulong[] array, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00399">399</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a6eb5fd8bfacc84f7ba0c29599acb3350_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a1f42876b0ba7a2c72fa0d1b904981b32"/><section>
    <title>Read()<computeroutput>[14/14]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Read</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> Photon.Compression.TransformCrusher.Read (ulong[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00383">383</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a1f42876b0ba7a2c72fa0d1b904981b32_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a38c558489f52896a6d8d5e1e40e5d264"/><section>
    <title>ReadAndApply()</title>
<indexterm><primary>ReadAndApply</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndApply</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.ReadAndApply (Transform target, byte[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Read the compressed value from a buffer, decompress it, and apply it to the target transform. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>target</entry><entry></entry>
                            </row>
                            <row>
<entry>bitstream</entry><entry></entry>
                            </row>
                            <row>
<entry>bcl</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00572">572</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a38c558489f52896a6d8d5e1e40e5d264_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a9019b040f8cb265cc4d4d9c6814e3317"/><section>
    <title>ReadAndDecompress()<computeroutput>[1/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.ReadAndDecompress (byte[] array, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00324">324</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a9019b040f8cb265cc4d4d9c6814e3317_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1af5afe0d802142b1ceecc564f5a95eaa3"/><section>
    <title>ReadAndDecompress()<computeroutput>[2/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.ReadAndDecompress (byte[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00359">359</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_af5afe0d802142b1ceecc564f5a95eaa3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a9c585031144e41cba6cf2a13b8599e07"/><section>
    <title>ReadAndDecompress()<computeroutput>[3/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.ReadAndDecompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, byte[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00341">341</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a9c585031144e41cba6cf2a13b8599e07_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a7788958f4baede9ab3afe357e88d2c48"/><section>
    <title>ReadAndDecompress()<computeroutput>[4/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.ReadAndDecompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, uint[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00336">336</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a7788958f4baede9ab3afe357e88d2c48_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1aaa54f57a0550395a946209ce762d1acd"/><section>
    <title>ReadAndDecompress()<computeroutput>[5/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.ReadAndDecompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong buffer, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00538">538</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_aaa54f57a0550395a946209ce762d1acd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a5130c54038be875ac4602bac4a15001a"/><section>
    <title>ReadAndDecompress()<computeroutput>[6/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.ReadAndDecompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00550">550</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a5130c54038be875ac4602bac4a15001a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a8483b39e711ba8f35595abdd5e4b329d"/><section>
    <title>ReadAndDecompress()<computeroutput>[7/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.ReadAndDecompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong frag0, ulong frag1 = <computeroutput>0</computeroutput>
, ulong frag2 = <computeroutput>0</computeroutput>
, ulong frag3 = <computeroutput>0</computeroutput>
, ulong frag4 = <computeroutput>0</computeroutput>
, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00605">605</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a8483b39e711ba8f35595abdd5e4b329d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ab331c29db288e15cf6f49b3fd32aa297"/><section>
    <title>ReadAndDecompress()<computeroutput>[8/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.ReadAndDecompress (<link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> nonalloc, ulong[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00331">331</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ab331c29db288e15cf6f49b3fd32aa297_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a5c12f1c0653bd77e30a056c73fc834c8"/><section>
    <title>ReadAndDecompress()<computeroutput>[9/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.ReadAndDecompress (uint[] array, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00318">318</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a5c12f1c0653bd77e30a056c73fc834c8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a07540524a08d8bff436df02095ca2e76"/><section>
    <title>ReadAndDecompress()<computeroutput>[10/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.ReadAndDecompress (uint[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00353">353</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a07540524a08d8bff436df02095ca2e76_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a3d87e1b1712e7825fd579a0f61549c45"/><section>
    <title>ReadAndDecompress()<computeroutput>[11/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.ReadAndDecompress (ulong buffer, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00544">544</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a3d87e1b1712e7825fd579a0f61549c45_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a1d27eaa9da0469479ded0f719b6a3a5f"/><section>
    <title>ReadAndDecompress()<computeroutput>[12/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.ReadAndDecompress (ulong buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00556">556</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a1d27eaa9da0469479ded0f719b6a3a5f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ab9a1ae5fe5507533fa6a4712cac4278c"/><section>
    <title>ReadAndDecompress()<computeroutput>[13/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.ReadAndDecompress (ulong[] array, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00312">312</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ab9a1ae5fe5507533fa6a4712cac4278c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ab9a1ae5fe5507533fa6a4712cac4278c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a3fc2854e69a4826f692ef21d05e30718"/><section>
    <title>ReadAndDecompress()<computeroutput>[14/14]</computeroutput></title>
<indexterm><primary>ReadAndDecompress</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>ReadAndDecompress</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> Photon.Compression.TransformCrusher.ReadAndDecompress (ulong[] array, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00347">347</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a3fc2854e69a4826f692ef21d05e30718_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a402b17ad7257c5bed4ee7d827d8bda65"/><section>
    <title>Set()<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>Set</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Set</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Set (Rigidbody rb, byte[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01006">1006</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a402b17ad7257c5bed4ee7d827d8bda65_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a9f2dc78a136df7463b612f7084b2d277"/><section>
    <title>Set()<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>Set</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Set</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Set (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</computeroutput></para><para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00962">962</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a9f2dc78a136df7463b612f7084b2d277_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a9f2dc78a136df7463b612f7084b2d277_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1acecfdb3738a4c27c0fad0f3f4ccaad03"/><section>
    <title>Set()<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>Set</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Set</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Set (Rigidbody rb, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</computeroutput></para><para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00975">975</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_acecfdb3738a4c27c0fad0f3f4ccaad03_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1afbf5cc01c80a47641b56c124c3c9a7d3"/><section>
    <title>Set()<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>Set</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Set</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Set (Rigidbody rb, ulong frag0, ulong frag1 = <computeroutput>0</computeroutput>
, ulong frag2 = <computeroutput>0</computeroutput>
, ulong frag3 = <computeroutput>0</computeroutput>
, ulong frag4 = <computeroutput>0</computeroutput>
)</computeroutput></para><para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00988">988</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_afbf5cc01c80a47641b56c124c3c9a7d3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1aa8931eafe6db6bccde82d8742711faaa"/><section>
    <title>Set()<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>Set</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Set</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Set (Rigidbody rb, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00997">997</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_aa8931eafe6db6bccde82d8742711faaa_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a3b4ed3635169273159aa58a370beca81"/><section>
    <title>Set()<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>Set</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Set</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Set (Rigidbody2D rb2d, <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cmatrix)</computeroutput></para><para>

<para>Set Rigidbody to values of <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> using rb.position and rb.rotation. </para>
</para>

<para>Any axes not included in the Crusher are left as is. Scale uses rb.transform (rb doesn&apos;t handle scaling).</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01025">1025</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a3b4ed3635169273159aa58a370beca81_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ab34d1f48ab6b5ae55f4b0bdda352641c"/><section>
    <title>Set()<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>Set</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Set</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Set (Rigidbody2D rb2d, <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link> matrix)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01012">1012</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ab34d1f48ab6b5ae55f4b0bdda352641c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a63a17e950e0db3409e844cae8964896e"/><section>
    <title>TallyBits()</title>
<indexterm><primary>TallyBits</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>TallyBits</secondary></indexterm>
<para><computeroutput>int Photon.Compression.TransformCrusher.TallyBits (BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Get the total number of bits this Transform is set to write. </para>
</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l01247">1247</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a63a17e950e0db3409e844cae8964896e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a63a17e950e0db3409e844cae8964896e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a22d477a5228d9d66bfde621548c94ba1"/><section>
    <title>Write()<computeroutput>[1/9]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Write (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, byte[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00242">242</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a22d477a5228d9d66bfde621548c94ba1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a22d477a5228d9d66bfde621548c94ba1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1af428d82729549a13f9ce1cfbf380bb44"/><section>
    <title>Write()<computeroutput>[2/9]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Write (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Serialize a <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> to a bitstream. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>cm</entry><entry>
<para>Results of a previously compressed Transform <link linkend="_class_photon_1_1_compression_1_1_matrix">Matrix</link>.</para>
</entry>
                            </row>
                            <row>
<entry>buffer</entry><entry>
<para>The write target.</para>
</entry>
                            </row>
                            <row>
<entry>bcl</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00502">502</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_af428d82729549a13f9ce1cfbf380bb44_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a4cf83876b696789efab7e93fea11cf63"/><section>
    <title>Write()<computeroutput>[3/9]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Write (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, uint[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00255">255</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a4cf83876b696789efab7e93fea11cf63_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a5e92ba41740a1b4efea2439f4516295d"/><section>
    <title>Write()<computeroutput>[4/9]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Write (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> cm, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00268">268</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a5e92ba41740a1b4efea2439f4516295d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a6d0637303a1e5cefadea17f742b96527"/><section>
    <title>Write()<computeroutput>[5/9]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Write (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Transform transform, byte[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00281">281</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a6d0637303a1e5cefadea17f742b96527_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a68ba03678ef3456ba00ac763b192b0a7"/><section>
    <title>Write()<computeroutput>[6/9]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Write (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Transform transform, ref ulong bitstream, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Compress a transform using this crusher, store the compressed results in a supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>, and serialize the compressed values to the bitstream. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>nonalloc</entry><entry>
<para>Populate this <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> with the results of the cmopression operation.</para>
</entry>
                            </row>
                            <row>
<entry>transform</entry><entry>
<para>The transform to compress.</para>
</entry>
                            </row>
                            <row>
<entry>bitstream</entry><entry>
<para>The write target.</para>
</entry>
                            </row>
                            <row>
<entry>bcl</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00519">519</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a68ba03678ef3456ba00ac763b192b0a7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a42eef89c72382f5c1081e1a4306f0201"/><section>
    <title>Write()<computeroutput>[7/9]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Write (<link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> nonalloc, Transform transform, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Compress a transform using this crusher, store the compressed results in a supplied <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link>, and serialize the compressed values to the buffer. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>nonalloc</entry><entry>
<para>Populate this <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> with the results of the cmopression operation.</para>
</entry>
                            </row>
                            <row>
<entry>transform</entry><entry>
<para>The transform to compress.</para>
</entry>
                            </row>
                            <row>
<entry>buffer</entry><entry>
<para>The write target.</para>
</entry>
                            </row>
                            <row>
<entry>bitposition</entry><entry>
<para>The write position for the buffer.</para>
</entry>
                            </row>
                            <row>
<entry>bcl</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00461">461</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a42eef89c72382f5c1081e1a4306f0201_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a3a95c3f3707d573cb8031884d11438ec"/><section>
    <title>Write()<computeroutput>[8/9]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Write (Transform transform, byte[] buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00294">294</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_a3a95c3f3707d573cb8031884d11438ec_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ac4de1c160c0c3adb79566f0aefcba1ed"/><section>
    <title>Write()<computeroutput>[9/9]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void Photon.Compression.TransformCrusher.Write (Transform transform, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = <computeroutput>BitCullingLevel.NoCulling</computeroutput>
)</computeroutput></para><para>

<para>Compress and write all of the components of transform, without creating any intermediary <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> or Bitstream. </para>
</para>

<para>This is the most efficient way to compress and write a transform, but it will not return any compresed values for you to store or compare. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>transform</entry><entry>
<para>The transform to compress.</para>
</entry>
                            </row>
                            <row>
<entry>buffer</entry><entry>
<para>The write target.</para>
</entry>
                            </row>
                            <row>
<entry>bitposition</entry><entry>
<para>The write position for the buffer.</para>
</entry>
                            </row>
                            <row>
<entry>bcl</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00483">483</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_compression_1_1_transform_crusher_ac4de1c160c0c3adb79566f0aefcba1ed_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a3393045bcc58771e5677ffaf2c70a902"/><section>
    <title>_cached_total</title>
<indexterm><primary>_cached_total</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>_cached_total</secondary></indexterm>
<para><computeroutput>readonly int [] Photon.Compression.TransformCrusher._cached_total = new int[4]<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00218">218</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a4b6c91db088e5f165ef099831627091b"/><section>
    <title>Build</title>
<indexterm><primary>Build</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>Build</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.TransformCrusher.Build = 3503<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00028">28</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ae9573ef980913c1881e60fd0c93f02de"/><section>
    <title>cached</title>
<indexterm><primary>cached</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>cached</secondary></indexterm>
<para><computeroutput>bool Photon.Compression.TransformCrusher.cached<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00221">221</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a2891bc3aa71bab4c5f8971d4fd2c3ad5"/><section>
    <title>cached_pBits</title>
<indexterm><primary>cached_pBits</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>cached_pBits</secondary></indexterm>
<para><computeroutput>readonly int [] Photon.Compression.TransformCrusher.cached_pBits = new int[4]<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Temporary <link linkend="_class_photon_1_1_compression_1_1_compressed_matrix">CompressedMatrix</link> used internally when a non-alloc is not provided and no return CM or M is required. </para>
</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00215">215</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ab749a079ff1a55e89062e7c558083429"/><section>
    <title>cached_rBits</title>
<indexterm><primary>cached_rBits</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>cached_rBits</secondary></indexterm>
<para><computeroutput>readonly int [] Photon.Compression.TransformCrusher.cached_rBits = new int[4]<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00216">216</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a1e23b7fa9ce2961e19c474a1bf12686d"/><section>
    <title>cached_sBits</title>
<indexterm><primary>cached_sBits</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>cached_sBits</secondary></indexterm>
<para><computeroutput>readonly int [] Photon.Compression.TransformCrusher.cached_sBits = new int[4]<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00217">217</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ae1390ce6ef9b11a8bdcd87ab96d48fd8"/><section>
    <title>cached_total</title>
<indexterm><primary>cached_total</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>cached_total</secondary></indexterm>
<para><computeroutput>ReadOnlyCollection&lt;int&gt; Photon.Compression.TransformCrusher.cached_total</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00219">219</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a60ab1ff82c7e5c9f21478a89ecaf307f"/><section>
    <title>defaultTransform</title>
<indexterm><primary>defaultTransform</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>defaultTransform</secondary></indexterm>
<para><computeroutput>Transform Photon.Compression.TransformCrusher.defaultTransform</computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00068">68</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a662fd56d9f9a76e4ad0d7c6d136f2f01"/><section>
    <title>posCrusher</title>
<indexterm><primary>posCrusher</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>posCrusher</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> Photon.Compression.TransformCrusher.posCrusher<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00071">71</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a19387d6b4a0d5c49c9033ada0bcff6d9"/><section>
    <title>reusableArray64</title>
<indexterm><primary>reusableArray64</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>reusableArray64</secondary></indexterm>
<para><computeroutput>ulong [] Photon.Compression.TransformCrusher.reusableArray64 = new ulong[5]<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00582">582</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a29408c7f1bbfd37a1493abdd736285cd"/><section>
    <title>rotCrusher</title>
<indexterm><primary>rotCrusher</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>rotCrusher</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> Photon.Compression.TransformCrusher.rotCrusher<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00072">72</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ac1c74be117267d72d010bfffc2b71ce8"/><section>
    <title>sclCrusher</title>
<indexterm><primary>sclCrusher</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>sclCrusher</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> Photon.Compression.TransformCrusher.sclCrusher<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00073">73</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1aec1edd4039f607ab5a91dbd9295f1852"/><section>
    <title>staticTransformCrushers</title>
<indexterm><primary>staticTransformCrushers</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>staticTransformCrushers</secondary></indexterm>
<para><computeroutput>Dictionary&lt;int, <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&gt; Photon.Compression.TransformCrusher.staticTransformCrushers = new Dictionary&lt;int, <link linkend="_class_photon_1_1_compression_1_1_transform_crusher">TransformCrusher</link>&gt;()<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00032">32</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a7e4bc498f8521760f86912c8c66d1ae5"/><section>
    <title>VersionMajor</title>
<indexterm><primary>VersionMajor</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>VersionMajor</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.TransformCrusher.VersionMajor = 3<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00025">25</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1ab33f3e9eb1c3b456cc8925443a4cf104"/><section>
    <title>VersionMinor</title>
<indexterm><primary>VersionMinor</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>VersionMinor</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.TransformCrusher.VersionMinor = 5<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00026">26</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1afee7e139b8fec7eddb5e65abbc796bb9"/><section>
    <title>VersionRevision</title>
<indexterm><primary>VersionRevision</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>VersionRevision</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.TransformCrusher.VersionRevision = 3<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00027">27</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a7a959e101ab740e913a49b70258491d9"/><section>
    <title>PosCrusher</title>
<indexterm><primary>PosCrusher</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>PosCrusher</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> Photon.Compression.TransformCrusher.PosCrusher<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Sets the position crusher to the assigned reference, and reruns <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues()</link>. </para>
</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00079">79</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a8db5e9edbb47a723dc7c3f8ddc293f56"/><section>
    <title>RotCrusher</title>
<indexterm><primary>RotCrusher</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>RotCrusher</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> Photon.Compression.TransformCrusher.RotCrusher<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Sets the scale crusher to the assigned reference, and reruns <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues()</link>. </para>
</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00101">101</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_compression_1_1_transform_crusher_1a802be4505b8090a54b19476a46dd6d34"/><section>
    <title>SclCrusher</title>
<indexterm><primary>SclCrusher</primary><secondary>Photon.Compression.TransformCrusher</secondary></indexterm>
<indexterm><primary>Photon.Compression.TransformCrusher</primary><secondary>SclCrusher</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_compression_1_1_element_crusher">ElementCrusher</link> Photon.Compression.TransformCrusher.SclCrusher<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Sets the scale crusher to the assigned reference, and reruns <link linkend="_class_photon_1_1_compression_1_1_transform_crusher_1a45f44abf6ec35a984fd7a3e2dda33188">CacheValues()</link>. </para>
</para>
<para>
Definition at line <link linkend="__transform_crusher_8cs_source_1l00123">123</link> of file <link linkend="__transform_crusher_8cs_source">TransformCrusher.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/TransformCrusher/<link linkend="__transform_crusher_8cs">TransformCrusher.cs</link></section>
</section>
