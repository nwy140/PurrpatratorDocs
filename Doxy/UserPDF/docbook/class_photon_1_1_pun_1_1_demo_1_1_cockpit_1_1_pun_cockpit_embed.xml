<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed" xml:lang="en-US">
<title>Photon.Pun.Demo.Cockpit.PunCockpitEmbed Class Reference</title>
<indexterm><primary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</primary></indexterm>
<para>

<para>Use this in scenes you want to leave Control for connection and pun related commands to <link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_cockpit">Cockpit</link>. </para>
 
</para>
Inheritance diagram for Photon.Pun.Demo.Cockpit.PunCockpitEmbed:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Photon.Pun.Demo.Cockpit.PunCockpitEmbed:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>override void <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1a8cf5e78545f28950ac88f560e9c9d077">OnJoinedRoom</link> ()</para>

<para>Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1a9d0f43cb41b1c9dc4582d140fec63c0e">EmbeddCockpit</link> = true</para>
</listitem>
            <listitem><para>string <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1aab2cba338448cf2a2e85631138b0d95c">CockpitGameTitle</link> = &quot;&quot;</para>
</listitem>
            <listitem><para>GameObject <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1a461798bd45c94b92c2c482952d2192d0">LoadingIndicator</link></para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_connect_and_join_random">ConnectAndJoinRandom</link> <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1a09a50090c0000b874979e6ce06663709">AutoConnect</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Use this in scenes you want to leave Control for connection and pun related commands to <link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_cockpit">Cockpit</link>. </para>



<para>It requires ConnectAndJoinRandom, which it will control for connecting should the <link linkend="_namespace_photon_1_1_pun_1_1_demo_1_1_cockpit">Cockpit</link> scene not be present or succesfully loaded. </para>
<para>
Definition at line <link linkend="__pun_cockpit_embed_8cs_source_1l00024">24</link> of file <link linkend="__pun_cockpit_embed_8cs_source">PunCockpitEmbed.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1a8cf5e78545f28950ac88f560e9c9d077"/><section>
    <title>OnJoinedRoom()</title>
<indexterm><primary>OnJoinedRoom</primary><secondary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</secondary></indexterm>
<indexterm><primary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</primary><secondary>OnJoinedRoom</secondary></indexterm>
<para><computeroutput>override void Photon.Pun.Demo.Cockpit.PunCockpitEmbed.OnJoinedRoom ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined. </para>
</para>

<para>When this is called, you can access the existing players in <link linkend="_class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa">Room.Players</link>, their custom properties and <link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">Room.CustomProperties</link>.</para>

<para>In this callback, you could create player objects. For example in Unity, instantiate a prefab for the player.</para>

<para>If you want a match to be started &quot;actively&quot;, enable the user to signal &quot;ready&quot; (using OpRaiseEvent or a Custom Property). </para>
<para>
Reimplemented from <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1ad802c169b199dc3c2cab31f71f17c01c">Photon.Pun.MonoBehaviourPunCallbacks</link>.</para>
<para>
Definition at line <link linkend="__pun_cockpit_embed_8cs_source_1l00077">77</link> of file <link linkend="__pun_cockpit_embed_8cs_source">PunCockpitEmbed.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_a8cf5e78545f28950ac88f560e9c9d077_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1a09a50090c0000b874979e6ce06663709"/><section>
    <title>AutoConnect</title>
<indexterm><primary>AutoConnect</primary><secondary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</secondary></indexterm>
<indexterm><primary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</primary><secondary>AutoConnect</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_connect_and_join_random">ConnectAndJoinRandom</link> Photon.Pun.Demo.Cockpit.PunCockpitEmbed.AutoConnect</computeroutput></para><para>
Definition at line <link linkend="__pun_cockpit_embed_8cs_source_1l00033">33</link> of file <link linkend="__pun_cockpit_embed_8cs_source">PunCockpitEmbed.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1aab2cba338448cf2a2e85631138b0d95c"/><section>
    <title>CockpitGameTitle</title>
<indexterm><primary>CockpitGameTitle</primary><secondary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</secondary></indexterm>
<indexterm><primary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</primary><secondary>CockpitGameTitle</secondary></indexterm>
<para><computeroutput>string Photon.Pun.Demo.Cockpit.PunCockpitEmbed.CockpitGameTitle = &quot;&quot;</computeroutput></para><para>
Definition at line <link linkend="__pun_cockpit_embed_8cs_source_1l00030">30</link> of file <link linkend="__pun_cockpit_embed_8cs_source">PunCockpitEmbed.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1a9d0f43cb41b1c9dc4582d140fec63c0e"/><section>
    <title>EmbeddCockpit</title>
<indexterm><primary>EmbeddCockpit</primary><secondary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</secondary></indexterm>
<indexterm><primary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</primary><secondary>EmbeddCockpit</secondary></indexterm>
<para><computeroutput>bool Photon.Pun.Demo.Cockpit.PunCockpitEmbed.EmbeddCockpit = true</computeroutput></para><para>
Definition at line <link linkend="__pun_cockpit_embed_8cs_source_1l00029">29</link> of file <link linkend="__pun_cockpit_embed_8cs_source">PunCockpitEmbed.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1a461798bd45c94b92c2c482952d2192d0"/><section>
    <title>LoadingIndicator</title>
<indexterm><primary>LoadingIndicator</primary><secondary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</secondary></indexterm>
<indexterm><primary>Photon.Pun.Demo.Cockpit.PunCockpitEmbed</primary><secondary>LoadingIndicator</secondary></indexterm>
<para><computeroutput>GameObject Photon.Pun.Demo.Cockpit.PunCockpitEmbed.LoadingIndicator</computeroutput></para><para>
Definition at line <link linkend="__pun_cockpit_embed_8cs_source_1l00032">32</link> of file <link linkend="__pun_cockpit_embed_8cs_source">PunCockpitEmbed.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Demos/PunCockpit/Scripts/ThirdParty/<link linkend="__pun_cockpit_embed_8cs">PunCockpitEmbed.cs</link></section>
</section>
