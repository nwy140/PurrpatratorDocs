<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks" xml:lang="en-US">
<title>Photon.Pun.MonoBehaviourPunCallbacks Class Reference</title>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary></indexterm>
<para>

<para>This class provides a .photonView and all callbacks/events that PUN can call. </para>
 
</para>
Inheritance diagram for Photon.Pun.MonoBehaviourPunCallbacks:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Photon.Pun.MonoBehaviourPunCallbacks:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a6391723a301547ab13db94c69e0cd3a0">OnEnable</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a289eb37839d81395d4f69bdfb7e36b70">OnDisable</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a71bafa3f1244a2cc5cab88cb85184c18">OnConnected</link> ()</para>

<para>Called to signal that the raw connection got established but before the client can call operation on the server. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1abc95ff5fb76dbbbe7efa875cea69a650">OnLeftRoom</link> ()</para>

<para>Called when the local user/client left a room, so the game&apos;s logic can clean up it&apos;s internal state. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1ad01addcf0288d4493f68021d677a8b62">OnMasterClientSwitched</link> (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> newMasterClient)</para>

<para>Called after switching to a new MasterClient when the current one leaves. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a81cd43f3daa79d73918ea6038f705c8e">OnCreateRoomFailed</link> (short returnCode, string message)</para>

<para>Called when the server couldn&apos;t create a room (OpCreateRoom failed). </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a7c634071d04fe5682cbb6ff27de26c61">OnJoinRoomFailed</link> (short returnCode, string message)</para>

<para>Called when a previous OpJoinRoom call failed on the server. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a9d75d18fee4ad78a769a013f22aa8216">OnCreatedRoom</link> ()</para>

<para>Called when this client created a room and entered it. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a4f2f2ef7163b2bd5602ba82e6e483f3b">OnJoinedLobby</link> ()</para>

<para>Called on entering a lobby on the Master Server. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a7f49bbe1b19d6bf5b99eb4d32c4f9ef3">OnLeftLobby</link> ()</para>

<para>Called after leaving a lobby. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a723f1ce08b12e6c0979d311eb4c334fe">OnDisconnected</link> (<link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6">DisconnectCause</link> cause)</para>

<para>Called after disconnecting from the <link linkend="_namespace_photon">Photon</link> server. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1aec077322b544575ce47f7cb186dac140">OnRegionListReceived</link> (<link linkend="_class_photon_1_1_realtime_1_1_region_handler">RegionHandler</link> regionHandler)</para>

<para>Called when the Name Server provided a list of regions for your title. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a7b1035d368e74f9b2348ef4f24b23fc3">OnRoomListUpdate</link> (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> &gt; roomList)</para>

<para>Called for any update of the room-listing while in a lobby (InLobby) on the Master Server. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1ad802c169b199dc3c2cab31f71f17c01c">OnJoinedRoom</link> ()</para>

<para>Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a09e3f71b344a6e922169c6e7b2434e90">OnPlayerEnteredRoom</link> (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> newPlayer)</para>

<para>Called when a remote player entered the room. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a0c633b69e27c8f7d8840ac2279d8e1e9">OnPlayerLeftRoom</link> (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> otherPlayer)</para>

<para>Called when a remote player left the room or became inactive. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1afc0d1bf03df89869c04186aec6764cd9">OnJoinRandomFailed</link> (short returnCode, string message)</para>

<para>Called when a previous OpJoinRandom call failed on the server. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a6b81e1209b613ec41d140058ce8237ae">OnConnectedToMaster</link> ()</para>

<para>Called when the client is connected to the Master Server and ready for matchmaking and other tasks. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1af0782de2bdcf66dfe7c09c932bdc6328">OnRoomPropertiesUpdate</link> (<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link> propertiesThatChanged)</para>

<para>Called when a room&apos;s custom properties changed. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1aa718e4217d34a0df754dec27d8094b4a">OnPlayerPropertiesUpdate</link> (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> targetPlayer, <link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link> changedProps)</para>

<para>Called when custom player-properties are changed. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a3ea7ae828d4387449e3601fdb7fd491a">OnFriendListUpdate</link> (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_friend_info">FriendInfo</link> &gt; friendList)</para>

<para>Called when the server sent the response to a FindFriends request. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1ade7a262d4acfbc0da193fe5beaf147d2">OnCustomAuthenticationResponse</link> (Dictionary&lt; string, object &gt; data)</para>

<para>Called when your Custom Authentication service responds with additional data. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a03777e3b61675c845c0fc430aef58e03">OnCustomAuthenticationFailed</link> (string debugMessage)</para>

<para>Called when the custom authentication failed. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a00981d740846c3d509570b13503df373">OnWebRpcResponse</link> (OperationResponse response)</para>

<para>Called when the response to a WebRPC is available. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a8d0c6db5d34c29b32000491121bb5a4c">OnLobbyStatisticsUpdate</link> (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_typed_lobby_info">TypedLobbyInfo</link> &gt; lobbyStatistics)</para>

<para>Called when the Master Server sent an update for the Lobby Statistics. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a35b316e91a52da1c7e41e323bf86c539">OnErrorInfo</link> (<link linkend="_class_photon_1_1_realtime_1_1_error_info">ErrorInfo</link> errorInfo)</para>

<para>Called when the client receives an event from the server indicating that an error happened there. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This class provides a .photonView and all callbacks/events that PUN can call. </para>



<para>Override the events/methods you want to use. </para>

<para>By extending this class, you can implement individual methods as override.</para>

<para>Do not add <emphasis role="bold">new</emphasis> <literallayout><computeroutput>MonoBehaviour.OnEnable
</computeroutput></literallayout> or <literallayout><computeroutput>MonoBehaviour.OnDisable
</computeroutput></literallayout> Instead, you should override those and call <literallayout><computeroutput>base.OnEnable
</computeroutput></literallayout> and <literallayout><computeroutput>base.OnDisable
</computeroutput></literallayout>.</para>

<para>Visual Studio and MonoDevelop should provide the list of methods when you begin typing &quot;override&quot;. <emphasis role="bold">Your implementation does not have to call &quot;base.method()&quot;.</emphasis></para>

<para>This class implements all callback interfaces and extends <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun">Photon.Pun.MonoBehaviourPun</link>. </para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00107">107</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a71bafa3f1244a2cc5cab88cb85184c18"/><section>
    <title>OnConnected()</title>
<indexterm><primary>OnConnected</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnConnected</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnConnected ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called to signal that the raw connection got established but before the client can call operation on the server. </para>
</para>

<para>After the (low level transport) connection is established, the client will automatically send the Authentication operation, which needs to get a response before the client can call other operations.</para>

<para>Your logic should wait for either: OnRegionListReceived or OnConnectedToMaster.</para>

<para>This callback is useful to detect if the server can be reached at all (technically). Most often, it&apos;s enough to implement <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a723f1ce08b12e6c0979d311eb4c334fe">OnDisconnected()</link>.</para>

<para>This is not called for transitions from the masterserver to game servers. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a2e3c773af453748eaaf877585d3d8e1d">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1a6f207c2591e495d3b30732e95a43ffe1">Photon.Pun.Demo.Cockpit.PunCockpit</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00133">133</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a6b81e1209b613ec41d140058ce8237ae"/><section>
    <title>OnConnectedToMaster()</title>
<indexterm><primary>OnConnectedToMaster</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnConnectedToMaster</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnConnectedToMaster ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the client is connected to the Master Server and ready for matchmaking and other tasks. </para>
</para>

<para>The list of available rooms won&apos;t become available unless you join a lobby via <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a4dd9222198402145e2e4e6c4f3462f9d">LoadBalancingClient.OpJoinLobby</link>. You can join rooms and create them even without being in a lobby. The default lobby is used in that case. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a52dfd77079d550168c7ff7aa0ce01a6c">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_launcher_1a1bee433a6f0d2b65ae5382f8d18a8360">Launcher</link>, <link linkend="_class_launcher__old_1ab9aaa3a02d04c5a27b06273a2f58f690">Launcher_old</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1a0852b7d5add2425af3810b1ea48c53af">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_launcher_1ad9b0efed47682256e661353d17bcd468">Photon.Pun.Demo.PunBasics.Launcher</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1a322ad513352aed28e2d4b66e5b7605b2">Photon.Pun.Demo.Cockpit.PunCockpit</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_connect_and_join_random_1a4ecdbe6b00abb9ee4b150b5d45e331e6">Photon.Pun.UtilityScripts.ConnectAndJoinRandom</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00316">316</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a9d75d18fee4ad78a769a013f22aa8216"/><section>
    <title>OnCreatedRoom()</title>
<indexterm><primary>OnCreatedRoom</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnCreatedRoom</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnCreatedRoom ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when this client created a room and entered it. </para>
</para>

<para><link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1ad802c169b199dc3c2cab31f71f17c01c">OnJoinedRoom()</link> will be called as well. </para>

<para>This callback is only called on the client which created a room (see OpCreateRoom).</para>

<para>As any client might close (or drop connection) anytime, there is a chance that the creator of a room does not execute OnCreatedRoom.</para>

<para>If you need specific room properties or a &quot;start signal&quot;, implement <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1ad01addcf0288d4493f68021d677a8b62">OnMasterClientSwitched()</link> and make each new MasterClient check the room&apos;s state. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a3d084f0aa95b2e8f48514695af73b31d">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00197">197</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a81cd43f3daa79d73918ea6038f705c8e"/><section>
    <title>OnCreateRoomFailed()</title>
<indexterm><primary>OnCreateRoomFailed</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnCreateRoomFailed</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnCreateRoomFailed (short returnCode, string message)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the server couldn&apos;t create a room (OpCreateRoom failed). </para>
</para>

<para>The most common cause to fail creating a room, is when a title relies on fixed room-names and the room already exists. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>returnCode</entry><entry>
<para>Operation ReturnCode from the server.</para>
</entry>
                            </row>
                            <row>
<entry>message</entry><entry>
<para>Debug message for the error.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a099d97fa4d65074adb0db876f47bacd7">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_launcher_1ad86ae0d38bd631c639c414e25d470d32">Launcher</link>, <link linkend="_class_launcher__old_1a0e7729e49fe7362b178fcbe86c4abdaf">Launcher_old</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1a635795b36f2f0317c53365e19d4babdd">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, and <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1ae7159fc4130e0bcc792c2aa9c3380ba7">Photon.Pun.Demo.Cockpit.PunCockpit</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00169">169</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a03777e3b61675c845c0fc430aef58e03"/><section>
    <title>OnCustomAuthenticationFailed()</title>
<indexterm><primary>OnCustomAuthenticationFailed</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnCustomAuthenticationFailed</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnCustomAuthenticationFailed (string debugMessage)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the custom authentication failed. </para>
</para>

<para>Followed by disconnect! </para>

<para>Custom Authentication can fail due to user-input, bad tokens/secrets. If authentication is successful, this method is not called. Implement <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a4f2f2ef7163b2bd5602ba82e6e483f3b">OnJoinedLobby()</link> or <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a6b81e1209b613ec41d140058ce8237ae">OnConnectedToMaster()</link> (as usual).</para>

<para>During development of a game, it might also fail due to wrong configuration on the server side. In those cases, logging the debugMessage is very important.</para>

<para>Unless you setup a custom authentication service for your app (in the <link xlink:href="https://dashboard.photonengine.com">Dashboard</link>), this won&apos;t be called! </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>debugMessage</entry><entry>
<para>Contains a debug message why authentication failed. This has to be fixed during development.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a669ed841654618813e551e11d7686225">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00388">388</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1ade7a262d4acfbc0da193fe5beaf147d2"/><section>
    <title>OnCustomAuthenticationResponse()</title>
<indexterm><primary>OnCustomAuthenticationResponse</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnCustomAuthenticationResponse</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnCustomAuthenticationResponse (Dictionary&lt; string, object &gt; data)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when your Custom Authentication service responds with additional data. </para>
</para>

<para>Custom Authentication services can include some custom data in their response. When present, that data is made available in this callback as Dictionary. While the keys of your data have to be strings, the values can be either string or a number (in Json). You need to make extra sure, that the value type is the one you expect. Numbers become (currently) int64.</para>

<para><link linkend="_namespace_photon_1_1_pun_1_1_example">Example</link>: void OnCustomAuthenticationResponse(Dictionary&lt;string, object&gt; data) { ... } </para>

<para>https://doc.photonengine.com/en-us/realtime/current/reference/custom-authentication </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a2a7051e8442a636549eb73705168250c">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00370">370</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a289eb37839d81395d4f69bdfb7e36b70"/><section>
    <title>OnDisable()</title>
<indexterm><primary>OnDisable</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnDisable</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnDisable ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_room_manager_1ae98940059ad5d4600983f6c59792c567">SInt.Netcode.PhotonPUN.RoomManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_asteroids_game_manager_1aaabb84195392790ecfa4c21c5028aaf0">Photon.Pun.Demo.Asteroids.AsteroidsGameManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_player_manager_1a404c0f87b95de3b4beb3ecf679ed8815">Photon.Pun.Demo.PunBasics.PlayerManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_player_details_controller_1ab7f967561d6a319a8437bfd89352f365">Photon.Pun.Demo.Cockpit.PlayerDetailsController</link>, <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_teams_1a8a283ea90723c97e26f8b5edc44b522d">Photon.Pun.UtilityScripts.PunTeams</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a86684c4f51de7d687017b8f6c2c823a1">Photon.Pun.UtilityScripts.CountdownTimer</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00114">114</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_a289eb37839d81395d4f69bdfb7e36b70_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a723f1ce08b12e6c0979d311eb4c334fe"/><section>
    <title>OnDisconnected()</title>
<indexterm><primary>OnDisconnected</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnDisconnected</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnDisconnected (<link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6">DisconnectCause</link> cause)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called after disconnecting from the <link linkend="_namespace_photon">Photon</link> server. </para>
</para>

<para>It could be a failure or intentional </para>

<para>The reason for this disconnect is provided as DisconnectCause. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a5e133a672790851ab0554fdc821c7727">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_asteroids_game_manager_1aad57d3b7f3ed47cc27999706169edc0c">Photon.Pun.Demo.Asteroids.AsteroidsGameManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_launcher_1a906f4daa6bfaac94666a809a7a2adb65">Photon.Pun.Demo.PunBasics.Launcher</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1a40dda3ea3f615b4505d199ff6d44ad8b">Photon.Pun.Demo.Cockpit.PunCockpit</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_connect_and_join_random_1a5cb37be681e111a627ed0948813f6d2f">Photon.Pun.UtilityScripts.ConnectAndJoinRandom</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00229">229</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a6391723a301547ab13db94c69e0cd3a0"/><section>
    <title>OnEnable()</title>
<indexterm><primary>OnEnable</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnEnable</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnEnable ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_room_manager_1afbe99ac412ad2429d242e2c91e06ded6">SInt.Netcode.PhotonPUN.RoomManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_asteroids_game_manager_1ab79592fe0c9dd5e839c1dab28ab68a9a">Photon.Pun.Demo.Asteroids.AsteroidsGameManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_player_details_controller_1a8da5e90b043aa4c52f480682a8f5bfa4">Photon.Pun.Demo.Cockpit.PlayerDetailsController</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_friend_list_view_1a3dd498614881bc2d539091ecfcfa8c47">Photon.Pun.Demo.Cockpit.FriendListView</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_player_list_view_1ac3a5f821bb2a13d2120208503c98d083">Photon.Pun.Demo.Cockpit.PlayerListView</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_room_list_view_1a0db08e8bff82030bbb52824415905b71">Photon.Pun.Demo.Cockpit.RoomListView</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a17a7b394eb415ff8bc64a90bf0259044">Photon.Pun.UtilityScripts.CountdownTimer</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00109">109</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_a6391723a301547ab13db94c69e0cd3a0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a35b316e91a52da1c7e41e323bf86c539"/><section>
    <title>OnErrorInfo()</title>
<indexterm><primary>OnErrorInfo</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnErrorInfo</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnErrorInfo (<link linkend="_class_photon_1_1_realtime_1_1_error_info">ErrorInfo</link> errorInfo)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the client receives an event from the server indicating that an error happened there. </para>
</para>

<para>In most cases this could be either:<orderedlist>
<listitem>
<para>an error from webhooks plugin (if HasErrorInfo is enabled), read more here: <link xlink:href="https://doc.photonengine.com/en-us/realtime/current/gameplay/web-extensions/webhooks#options">https://doc.photonengine.com/en-us/realtime/current/gameplay/web-extensions/webhooks#options</link></para>
</listitem><listitem>
<para>an error sent from a custom server plugin via PluginHost.BroadcastErrorInfoEvent, see example here: <link xlink:href="https://doc.photonengine.com/en-us/server/current/plugins/manual#handling_http_response">https://doc.photonengine.com/en-us/server/current/plugins/manual#handling_http_response</link></para>
</listitem><listitem>
<para>an error sent from the server, for example, when the limit of cached events has been exceeded in the room (all clients will be disconnected and the room will be closed in this case) read more here: <link xlink:href="https://doc.photonengine.com/en-us/realtime/current/gameplay/cached-events#special_considerations">https://doc.photonengine.com/en-us/realtime/current/gameplay/cached-events#special_considerations</link> </para>
</listitem></orderedlist>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>errorInfo</entry><entry>
<para>object containing information about the error</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_error_info_callback_1a383d0328f4cc063c87d89213a985845a">Photon.Realtime.IErrorInfoCallback</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00418">418</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a3ea7ae828d4387449e3601fdb7fd491a"/><section>
    <title>OnFriendListUpdate()</title>
<indexterm><primary>OnFriendListUpdate</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnFriendListUpdate</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnFriendListUpdate (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_friend_info">FriendInfo</link> &gt; friendList)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the server sent the response to a FindFriends request. </para>
</para>

<para>After calling OpFindFriends, the Master Server will cache the friend list and send updates to the friend list. The friends includes the name, userId, online state and the room (if any) for each requested user/friend.</para>

<para>Use the friendList to update your UI and store it, if the UI should highlight changes. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a8f08da473647d070c554b5b4daba60af">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_friend_list_view_1a0e26d8fa92c7ac05ab768589abb07c80">Photon.Pun.Demo.Cockpit.FriendListView</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00354">354</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a4f2f2ef7163b2bd5602ba82e6e483f3b"/><section>
    <title>OnJoinedLobby()</title>
<indexterm><primary>OnJoinedLobby</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnJoinedLobby</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnJoinedLobby ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called on entering a lobby on the Master Server. </para>
</para>

<para>The actual room-list updates will call OnRoomListUpdate. </para>

<para>While in the lobby, the roomlist is automatically updated in fixed intervals (which you can&apos;t modify in the public cloud). The room list gets available via OnRoomListUpdate. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ac3d6267cf8d9b108ed0b621a9e6eab46">Photon.Realtime.ILobbyCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_launcher_1ab0ca359211de6e9e76571edb45790f1d">Launcher</link>, <link linkend="_class_launcher__old_1a979bdf0ebba5bb0af60828be07430dae">Launcher_old</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1a18305866ca5b525a8a1ccbab3190fdbe">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1a8a84aefe02e52f4abfacc83f0b7e21bc">Photon.Pun.Demo.Cockpit.PunCockpit</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_connect_and_join_random_1a13029ba443b911cc8849b560b3659ea3">Photon.Pun.UtilityScripts.ConnectAndJoinRandom</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00208">208</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1ad802c169b199dc3c2cab31f71f17c01c"/><section>
    <title>OnJoinedRoom()</title>
<indexterm><primary>OnJoinedRoom</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnJoinedRoom</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnJoinedRoom ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined. </para>
</para>

<para>When this is called, you can access the existing players in <link linkend="_class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa">Room.Players</link>, their custom properties and <link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">Room.CustomProperties</link>.</para>

<para>In this callback, you could create player objects. For example in Unity, instantiate a prefab for the player.</para>

<para>If you want a match to be started &quot;actively&quot;, enable the user to signal &quot;ready&quot; (using OpRaiseEvent or a Custom Property). </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a8add9e72c38d241a448f4b539acd684b">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_launcher_1a2f3a8572c78a5dee86a6f2fc91c72127">Launcher</link>, <link linkend="_class_launcher__old_1a951c8e1d94411c7ef9012ceccbca9b49">Launcher_old</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1a7868b90be5cff299b2c03476c896cdbb">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_procedural_1_1_ingame_control_panel_1ac814e68d55f12cd336f9b9998e4e6d88">Photon.Pun.Demo.Procedural.IngameControlPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_launcher_1a965c45b6db5489160bac4fe898fff214">Photon.Pun.Demo.PunBasics.Launcher</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1a9dd2f362c48c02ed49c82785d5cc35ad">Photon.Pun.Demo.Cockpit.PunCockpit</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_embed_1a8cf5e78545f28950ac88f560e9c9d077">Photon.Pun.Demo.Cockpit.PunCockpitEmbed</link>, <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_player_numbering_1ac84048f9fb79beff91691b508d710e08">Photon.Pun.UtilityScripts.PlayerNumbering</link>, <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_teams_1aa021f81f76f33bd08952591bdb4e97df">Photon.Pun.UtilityScripts.PunTeams</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_connect_and_join_random_1a4f0d10d658770aa16e145748b693eab3">Photon.Pun.UtilityScripts.ConnectAndJoinRandom</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00263">263</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1afc0d1bf03df89869c04186aec6764cd9"/><section>
    <title>OnJoinRandomFailed()</title>
<indexterm><primary>OnJoinRandomFailed</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnJoinRandomFailed</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnJoinRandomFailed (short returnCode, string message)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when a previous OpJoinRandom call failed on the server. </para>
</para>

<para>The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room).</para>

<para>When using multiple lobbies (via OpJoinLobby or a TypedLobby parameter), another lobby might have more/fitting rooms.
<literallayout>&#160;&#xa;</literallayout>
 </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>returnCode</entry><entry>
<para>Operation ReturnCode from the server.</para>
</entry>
                            </row>
                            <row>
<entry>message</entry><entry>
<para>Debug message for the error.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a837e8522439b89e68805a2b2c25fa824">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1a7a3bee5bbe6b6089b3356fddcc01843b">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_launcher_1a89c3b0ab473f7be7c1240230a8a70ec7">Photon.Pun.Demo.PunBasics.Launcher</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1a5d012f5fa8a96e32200c46c794145627">Photon.Pun.Demo.Cockpit.PunCockpit</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_connect_and_join_random_1ad46a9fab53a0b38efbb4f5963bc902fe">Photon.Pun.UtilityScripts.ConnectAndJoinRandom</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00305">305</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a7c634071d04fe5682cbb6ff27de26c61"/><section>
    <title>OnJoinRoomFailed()</title>
<indexterm><primary>OnJoinRoomFailed</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnJoinRoomFailed</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnJoinRoomFailed (short returnCode, string message)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when a previous OpJoinRoom call failed on the server. </para>
</para>

<para>The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room). </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>returnCode</entry><entry>
<para>Operation ReturnCode from the server.</para>
</entry>
                            </row>
                            <row>
<entry>message</entry><entry>
<para>Debug message for the error.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a55bcc9aca42ebe749a8dcb210ed145e9">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_launcher_1a6b7e2f46020bfb5d48c31a622b6ff251">Launcher</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1a744e5d5b934f818e33191964a666bcfc">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, and <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1a4310525cd7bd0629f55c86abac93ab45">Photon.Pun.Demo.Cockpit.PunCockpit</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00181">181</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a7f49bbe1b19d6bf5b99eb4d32c4f9ef3"/><section>
    <title>OnLeftLobby()</title>
<indexterm><primary>OnLeftLobby</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnLeftLobby</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnLeftLobby ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called after leaving a lobby. </para>
</para>

<para>When you leave a lobby, OpCreateRoom and OpJoinRandomRoom automatically refer to the default lobby. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ae31b4cb08b81157a52a3550be24ceae3">Photon.Realtime.ILobbyCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1a5bce147aa9f83705d360b218fce0e576">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, and <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1a245a728ee90daab566c2e04a36f84034">Photon.Pun.Demo.Cockpit.PunCockpit</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00219">219</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1abc95ff5fb76dbbbe7efa875cea69a650"/><section>
    <title>OnLeftRoom()</title>
<indexterm><primary>OnLeftRoom</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnLeftRoom</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnLeftRoom ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the local user/client left a room, so the game&apos;s logic can clean up it&apos;s internal state. </para>
</para>

<para>When leaving a room, the LoadBalancingClient will disconnect the Game Server and connect to the Master Server. This wraps up multiple internal actions.</para>

<para>Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1acedd813313ad6724f3935801481d8e8f">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_launcher_1a4c07472401cf29864c0e6eb64a630e98">Launcher</link>, <link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_player_list_item_1a327ab4d5274ca5cbf269c49110dcc6c9">SInt.Netcode.PhotonPUN.PlayerListItem</link>, <link linkend="_class_launcher__old_1a21ab52266179410769c0c7f85ca65d09">Launcher_old</link>, <link linkend="_class_player_list_item___old_1ac26068a0ec197118d2a280bc82c3f17c">PlayerListItem_Old</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_asteroids_game_manager_1aab2bcc420ff0aadcf299d2704bccd5dd">Photon.Pun.Demo.Asteroids.AsteroidsGameManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1a688b225bcf8c6127ff4b4b602d2e7513">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_game_manager_1aeb6c99e90fabf6f18cd82088d2ff9bcc">Photon.Pun.Demo.PunBasics.GameManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1ae91dd0fa361822d5a57052de04694130">Photon.Pun.Demo.Cockpit.PunCockpit</link>, <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_player_numbering_1a0d64f2e4f384bb72fac0274ff5f9303f">Photon.Pun.UtilityScripts.PlayerNumbering</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_teams_1aef9233bbd297cbcbc7b897cb10f7eb26">Photon.Pun.UtilityScripts.PunTeams</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00146">146</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a8d0c6db5d34c29b32000491121bb5a4c"/><section>
    <title>OnLobbyStatisticsUpdate()</title>
<indexterm><primary>OnLobbyStatisticsUpdate</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnLobbyStatisticsUpdate</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnLobbyStatisticsUpdate (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_typed_lobby_info">TypedLobbyInfo</link> &gt; lobbyStatistics)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the Master Server sent an update for the Lobby Statistics. </para>
</para>

<para>This callback has two preconditions: EnableLobbyStatistics must be set to true, before this client connects. And the client has to be connected to the Master Server, which is providing the info about lobbies. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ab2cc546cf0e5189d90360217ebdabd40">Photon.Realtime.ILobbyCallbacks</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00400">400</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1ad01addcf0288d4493f68021d677a8b62"/><section>
    <title>OnMasterClientSwitched()</title>
<indexterm><primary>OnMasterClientSwitched</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnMasterClientSwitched</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnMasterClientSwitched (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> newMasterClient)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called after switching to a new MasterClient when the current one leaves. </para>
</para>

<para>This is not called when this client enters a room. The former MasterClient is still in the player list when this method get called. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_in_room_callbacks_1afc7c0b914b9d0ee3f82e8b8556380876">Photon.Realtime.IInRoomCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_launcher_1a828f5b8f3c5388613d45c1a7f2276836">Launcher</link>, <link linkend="_class_launcher__old_1ae984b42de1511d3219b77748ba05efa1">Launcher_old</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_asteroids_game_manager_1ae658877b4b1404ae65490bd2fea91759">Photon.Pun.Demo.Asteroids.AsteroidsGameManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1ab5567b22d1b41fc35c6c821085102934">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_procedural_1_1_ingame_control_panel_1ac2fe1c39d7c22a9cb696b18171639f4b">Photon.Pun.Demo.Procedural.IngameControlPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_player_details_controller_1ab592ed59eac1dc092ed521742f8a4cda">Photon.Pun.Demo.Cockpit.PlayerDetailsController</link>, and <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_player_list_view_1ab43f05d1df06f300a7208c883b7a431d">Photon.Pun.Demo.Cockpit.PlayerListView</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00157">157</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a09e3f71b344a6e922169c6e7b2434e90"/><section>
    <title>OnPlayerEnteredRoom()</title>
<indexterm><primary>OnPlayerEnteredRoom</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnPlayerEnteredRoom</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnPlayerEnteredRoom (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> newPlayer)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when a remote player entered the room. </para>
</para>

<para>This Player is already added to the playerlist. </para>

<para>If your game starts with a certain number of players, this callback can be useful to check the Room.playerCount and find out if you can start. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_in_room_callbacks_1a0bc282922b4ae18648e68c56085b4f97">Photon.Realtime.IInRoomCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_launcher_1af6782b79b911f15965be18231080735c">Launcher</link>, <link linkend="_class_launcher__old_1a0e70a827c7fc8cd64dc3a3c93c77c661">Launcher_old</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1ab17d09a4e7c7cee8f2c18a83bff20a03">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_player_list_view_1a0f2b4a91c86d07ca058fe1c3c10adf35">Photon.Pun.Demo.Cockpit.PlayerListView</link>, <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_player_numbering_1a9b468a341a818b2ca1569736f9bb4d2b">Photon.Pun.UtilityScripts.PlayerNumbering</link>, <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_teams_1a8aad1481cdd77a7e77d57df860b8a871">Photon.Pun.UtilityScripts.PunTeams</link>, and <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_game_manager_1a58f4541ff0c375456befed0bcc22c077">Photon.Pun.Demo.PunBasics.GameManager</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00274">274</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a0c633b69e27c8f7d8840ac2279d8e1e9"/><section>
    <title>OnPlayerLeftRoom()</title>
<indexterm><primary>OnPlayerLeftRoom</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnPlayerLeftRoom</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnPlayerLeftRoom (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> otherPlayer)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when a remote player left the room or became inactive. </para>
</para>

<para>Check otherPlayer.IsInactive. </para>

<para>If another player leaves the room or if the server detects a lost connection, this callback will be used to notify your game logic.</para>

<para>Depending on the room&apos;s setup, players may become inactive, which means they may return and retake their spot in the room. In such cases, the Player stays in the <link linkend="_class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa">Room.Players</link> dictionary.</para>

<para>If the player is not just inactive, it gets removed from the <link linkend="_class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa">Room.Players</link> dictionary, before the callback is called. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_in_room_callbacks_1a778a90ca623c41ffae0f62cc1732a29e">Photon.Realtime.IInRoomCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_pun_basics_1_1_game_manager_1ae91743eaa60cf4d562e292aea3350192">Photon.Pun.Demo.PunBasics.GameManager</link>, <link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_player_list_item_1ab46f8edf26837d3137262d3501e1c81e">SInt.Netcode.PhotonPUN.PlayerListItem</link>, <link linkend="_class_player_list_item___old_1a0cb45c2fb745f40d42cafc2cb82f52b2">PlayerListItem_Old</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_asteroids_game_manager_1a51c6422b2fd3516fe972799fc6809238">Photon.Pun.Demo.Asteroids.AsteroidsGameManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_player_overview_panel_1aa048d0b72720496104a75c6d089110c9">Photon.Pun.Demo.Asteroids.PlayerOverviewPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1a451633702327b9226dc7fbf01b5e4e4c">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_player_details_controller_1a9f987357c4aa8653c81fcd2387f909e9">Photon.Pun.Demo.Cockpit.PlayerDetailsController</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_player_list_view_1aa303e070f496ee55fe256f6e44e74086">Photon.Pun.Demo.Cockpit.PlayerListView</link>, <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_player_numbering_1a45a86a80db4baa6b28aad22f5ac84331">Photon.Pun.UtilityScripts.PlayerNumbering</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_teams_1a74fb1716898a7ad507a52261d221c4b4">Photon.Pun.UtilityScripts.PunTeams</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00291">291</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1aa718e4217d34a0df754dec27d8094b4a"/><section>
    <title>OnPlayerPropertiesUpdate()</title>
<indexterm><primary>OnPlayerPropertiesUpdate</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnPlayerPropertiesUpdate</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnPlayerPropertiesUpdate (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> targetPlayer, <link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link> changedProps)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when custom player-properties are changed. </para>
</para>

<para>Player and the changed properties are passed as object[]. </para>

<para>Changing properties must be done by <link linkend="_class_photon_1_1_realtime_1_1_player_1a73de822cb4ab788e9dce94795566a656">Player.SetCustomProperties</link>, which causes this callback locally, too. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>targetPlayer</entry><entry>
<para>Contains Player that changed.</para>
</entry>
                            </row>
                            <row>
<entry>changedProps</entry><entry>
<para>Contains the properties that changed.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_in_room_callbacks_1a02ac010a10c47dbdd59ae9a63b970583">Photon.Realtime.IInRoomCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_s_int_1_1_netcode_1_1_photon_p_u_n_1_1_samples_1_1_simple_f_p_s_online_1_1_player_controller_1a8e6110e30759a01477dfa08ec9610894">SInt.Netcode.PhotonPUN.Samples.SimpleFPSOnline.PlayerController</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_asteroids_game_manager_1a5b76c7dc1dc5a3aac652a3c887810ccb">Photon.Pun.Demo.Asteroids.AsteroidsGameManager</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_player_overview_panel_1a23c2b651a15e13917601a1f49df341c9">Photon.Pun.Demo.Asteroids.PlayerOverviewPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1ae0a20628fce898b7ffb7af13c9a51189">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_player_numbering_1a8c3bde3cd802be96ebc4e98d56e23807">Photon.Pun.UtilityScripts.PlayerNumbering</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_teams_1a6e6860435e540546b797ab7be76c5cec">Photon.Pun.UtilityScripts.PunTeams</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00341">341</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1aec077322b544575ce47f7cb186dac140"/><section>
    <title>OnRegionListReceived()</title>
<indexterm><primary>OnRegionListReceived</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnRegionListReceived</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnRegionListReceived (<link linkend="_class_photon_1_1_realtime_1_1_region_handler">RegionHandler</link> regionHandler)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the Name Server provided a list of regions for your title. </para>
</para>

<para>Check the RegionHandler class description, to make use of the provided values.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>regionHandler</entry><entry>
<para>The currently used RegionHandler.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a69f1c715fb64aff2dda2d18832ff45d2">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1a46626762434dcbdaaad8658d520e6e1f">Photon.Pun.Demo.Cockpit.PunCockpit</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00238">238</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a7b1035d368e74f9b2348ef4f24b23fc3"/><section>
    <title>OnRoomListUpdate()</title>
<indexterm><primary>OnRoomListUpdate</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnRoomListUpdate</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnRoomListUpdate (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> &gt; roomList)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called for any update of the room-listing while in a lobby (InLobby) on the Master Server. </para>
</para>

<para>Each item is a RoomInfo which might include custom properties (provided you defined those as lobby-listed when creating a room). Not all types of lobbies provide a listing of rooms to the client. Some are silent and specialized for server-side matchmaking. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ae07fb2877a6af51b34db77422187dcf6">Photon.Realtime.ILobbyCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_launcher_1ad73765430c00e5c93c7993199caf6092">Launcher</link>, <link linkend="_class_launcher__old_1ab7045006460c96240eba61115136a023">Launcher_old</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_asteroids_1_1_lobby_main_panel_1aeb47fc169bcd9096b776cf09d8c7c313">Photon.Pun.Demo.Asteroids.LobbyMainPanel</link>, and <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_room_list_view_1a61fbe6ed2b89048533fa3264abf08512">Photon.Pun.Demo.Cockpit.RoomListView</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00249">249</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1af0782de2bdcf66dfe7c09c932bdc6328"/><section>
    <title>OnRoomPropertiesUpdate()</title>
<indexterm><primary>OnRoomPropertiesUpdate</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnRoomPropertiesUpdate</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnRoomPropertiesUpdate (<link linkend="_namespace_photon_1_1_pun_1ac76b06ac6ca332ba5e95f9521501ed77">Hashtable</link> propertiesThatChanged)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when a room&apos;s custom properties changed. </para>
</para>

<para>The propertiesThatChanged contains all that was set via <link linkend="_class_photon_1_1_realtime_1_1_room_1aff6e067d041db92e4fbde6a3277926ad">Room.SetCustomProperties</link>. </para>

<para>Since v1.25 this method has one parameter: Hashtable propertiesThatChanged.
<literallayout>&#160;&#xa;</literallayout>
 Changing properties must be done by <link linkend="_class_photon_1_1_realtime_1_1_room_1aff6e067d041db92e4fbde6a3277926ad">Room.SetCustomProperties</link>, which causes this callback locally, too. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>propertiesThatChanged</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_in_room_callbacks_1aaa3dfde1d96b6b3cba50db6e706af378">Photon.Realtime.IInRoomCallbacks</link>.</para>
<para>
Reimplemented in <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_procedural_1_1_cluster_1afe6f559c16cde694dcf173ff951a0871">Photon.Pun.Demo.Procedural.Cluster</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_procedural_1_1_ingame_control_panel_1a890762417042c4f6a8d93f483fdccff6">Photon.Pun.Demo.Procedural.IngameControlPanel</link>, <link linkend="_class_photon_1_1_pun_1_1_demo_1_1_cockpit_1_1_pun_cockpit_1aea5e2d8df057180de7557fcace3ae33f">Photon.Pun.Demo.Cockpit.PunCockpit</link>, <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_countdown_timer_1a8385606100f683b1b27f24e2cc6caedd">Photon.Pun.UtilityScripts.CountdownTimer</link>, and <link linkend="_class_photon_1_1_pun_1_1_utility_scripts_1_1_pun_turn_manager_1a47537e5b4e90f3e259a728412b80977c">Photon.Pun.UtilityScripts.PunTurnManager</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00328">328</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a00981d740846c3d509570b13503df373"/><section>
    <title>OnWebRpcResponse()</title>
<indexterm><primary>OnWebRpcResponse</primary><secondary>Photon.Pun.MonoBehaviourPunCallbacks</secondary></indexterm>
<indexterm><primary>Photon.Pun.MonoBehaviourPunCallbacks</primary><secondary>OnWebRpcResponse</secondary></indexterm>
<para><computeroutput>virtual void Photon.Pun.MonoBehaviourPunCallbacks.OnWebRpcResponse (OperationResponse response)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the response to a WebRPC is available. </para>
</para>

<para>See <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a60e3a0a39e040f625af0efc66a5022fa">LoadBalancingClient.OpWebRpc</link>. </para>

<para>Important: The response.ReturnCode is 0 if <link linkend="_namespace_photon">Photon</link> was able to reach your web-service.
<literallayout>&#160;&#xa;</literallayout>
 The content of the response is what your web-service sent. You can create a WebRpcResponse from it.
<literallayout>&#160;&#xa;</literallayout>
 <link linkend="_namespace_photon_1_1_pun_1_1_example">Example</link>: WebRpcResponse webResponse = new WebRpcResponse(operationResponse);
<literallayout>&#160;&#xa;</literallayout>
</para>

<para>Please note: Class OperationResponse is in a namespace which needs to be &quot;used&quot;:
<literallayout>&#160;&#xa;</literallayout>
 using ExitGames.Client.Photon; // includes OperationResponse (and other classes) </para>

<para>public void <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a00981d740846c3d509570b13503df373">OnWebRpcResponse(OperationResponse response)</link> { Debug.LogFormat(&quot;WebRPC operation response {0}&quot;, response.ToStringFull()); switch (response.ReturnCode) { case <link linkend="_class_photon_1_1_realtime_1_1_error_code_1a87b36f402b82f151d6ebaf55ddb3c2d8">ErrorCode.Ok</link>: WebRpcResponse webRpcResponse = new WebRpcResponse(response); Debug.LogFormat(&quot;Parsed WebRPC response {0}&quot;, response.ToStringFull()); if (string.IsNullOrEmpty(webRpcResponse.Name)) { Debug.LogError(&quot;Unexpected: WebRPC response did not contain WebRPC method name&quot;); } if (webRpcResponse.ResultCode == 0) // success { switch (webRpcResponse.Name) { // todo: add your code here case GetGameListWebRpcMethodName: // example // ... break; } } else if (webRpcResponse.ResultCode == -1) { Debug.LogErrorFormat(&quot;Web server did not return ResultCode for WebRPC method=\&quot;{0}&quot;, Message={1}&quot;, webRpcResponse.Name, webRpcResponse.Message);
           }
           else
           {
               Debug.LogErrorFormat(&quot;Web server returned ResultCode={0} for WebRPC method=&quot;{1}&quot;, Message={2}&quot;, webRpcResponse.ResultCode, webRpcResponse.Name, webRpcResponse.Message);
           }
           break;
       case ErrorCode.ExternalHttpCallFailed: // web service unreachable
           Debug.LogErrorFormat(&quot;WebRPC call failed as request could not be sent to the server. {0}&quot;, response.DebugMessage);
           break;
       case ErrorCode.HttpLimitReached: // too many WebRPCs in a short period of time
                                        // the debug message should contain the limit exceeded
          Debug.LogErrorFormat(&quot;WebRPCs rate limit exceeded: {0}&quot;, response.DebugMessage);
           break;
      case ErrorCode.InvalidOperation: // WebRPC not configured at all OR not configured properly OR trying to send on name server
         if (PhotonNetwork.Server == ServerConnection.NameServer)
        {
            Debug.LogErrorFormat(&quot;WebRPC not supported on NameServer. {0}&quot;, response.DebugMessage);
        }
        else
        {
            Debug.LogErrorFormat(&quot;WebRPC not properly configured or not configured at all. {0}&quot;, response.DebugMessage);
        }
        break;
    default:
        // other unknown error, unexpected
        Debug.LogErrorFormat(&quot;Unexpected error, {0} {1}&quot;, response.ReturnCode, response.DebugMessage); break; } }</para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_web_rpc_callback_1a75f0eb120e297c22bac5511fbdbec541">Photon.Realtime.IWebRpcCallback</link>.</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00394">394</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/<link linkend="__pun_classes_8cs">PunClasses.cs</link></section>
</section>
