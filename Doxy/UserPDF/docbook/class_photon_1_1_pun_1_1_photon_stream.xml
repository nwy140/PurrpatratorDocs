<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_pun_1_1_photon_stream" xml:lang="en-US">
<title>Photon.Pun.PhotonStream Class Reference</title>
<indexterm><primary>Photon.Pun.PhotonStream</primary></indexterm>
<para>

<para>This container is used in OnPhotonSerializeView() to either provide incoming data of a <link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link> or for you to provide it. </para>
 
</para>
Collaboration diagram for Photon.Pun.PhotonStream:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a5b6b2d2233cec30d2330e3de4708c35d">PhotonStream</link> (bool write, object[] incomingData)</para>

<para>Creates a stream and initializes it. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a7e7a18a9875e484473c73e9ee0c5f195">SetReadStream</link> (object[] incomingData, int pos=0)</para>
</listitem>
            <listitem><para>object <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">ReceiveNext</link> ()</para>

<para>Read next piece of data from the stream when IsReading is true.</para>
</listitem>
            <listitem><para>object <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a7e69f29f517f8ed3148d8dccef982ea6">PeekNext</link> ()</para>

<para>Read next piece of data from the stream without advancing the &quot;current&quot; item.</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">SendNext</link> (object obj)</para>

<para>Add another piece of data to send it when IsWriting is true.</para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1acc7f4d6178aa058a99ad6d4f7d7d20c5">CopyToListAndClear</link> (List&lt; object &gt; target)</para>
</listitem>
            <listitem><para>object[] <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a882e4987ccbf3d788962e662a22ea39d">ToArray</link> ()</para>

<para>Turns the stream into a new object[].</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a5bd4085dcff91fd8f08ce7298adc4aca">Serialize</link> (ref bool myBool)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a2e850168f28876b87c62834904566d1a">Serialize</link> (ref int myInt)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a03d096a0d5806dfc6241a2bb46ba6880">Serialize</link> (ref string value)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1ae9ce44f0653061fb20b6d1fc7c3ee98c">Serialize</link> (ref char value)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1ad3f13d21dc919cae99c6826851a8aa2f">Serialize</link> (ref short value)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1af4fe67b40f268468a12b7c9327f6836f">Serialize</link> (ref float obj)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1abc4cd1b5c9f77860877e9637522e0e2e">Serialize</link> (ref <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> obj)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1ab189914f296c8ace37cdeb997264190a">Serialize</link> (ref Vector3 obj)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1ab89efa02a700e58d355a2f117bd78522">Serialize</link> (ref Vector2 obj)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1acbd8a407834db781c496f0f4573aaa62">Serialize</link> (ref Quaternion obj)</para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1afb5b9a03ecf814332d7ea282987e3fdc">IsWriting</link><computeroutput> [get]</computeroutput>
</para>

<para>If true, this client should add data to the stream to send it.</para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a4190af4c0315906785d7795873bd8803">IsReading</link><computeroutput> [get]</computeroutput>
</para>

<para>If true, this client should read data send by another client.</para>
</listitem>
            <listitem><para>int? <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1af3a0f4aae7ad624a0c860005ececd784">Count</link><computeroutput> [get]</computeroutput>
</para>

<para>Count of items in the stream.</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This container is used in OnPhotonSerializeView() to either provide incoming data of a <link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link> or for you to provide it. </para>



<para>The IsWriting property will be true if this client is the &quot;owner&quot; of the <link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link> (and thus the GameObject). Add data to the stream and it&apos;s sent via the server to the other players in a room. On the receiving side, IsWriting is false and the data should be read.</para>

<para>Send as few data as possible to keep connection quality up. An empty <link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link> will not be sent.</para>

<para>Use either <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a5bd4085dcff91fd8f08ce7298adc4aca">Serialize()</link> for reading and writing or <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">SendNext()</link> and <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">ReceiveNext()</link>. The latter two are just explicit read and write methods but do about the same work as <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a5bd4085dcff91fd8f08ce7298adc4aca">Serialize()</link>. It&apos;s a matter of preference which methods you use. </para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00508">508</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1a5b6b2d2233cec30d2330e3de4708c35d"/><section>
    <title>PhotonStream()</title>
<indexterm><primary>PhotonStream</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>PhotonStream</secondary></indexterm>
<para><computeroutput>Photon.Pun.PhotonStream.PhotonStream (bool write, object[] incomingData)</computeroutput></para><para>

<para>Creates a stream and initializes it. </para>
</para>

<para>Used by PUN internally. </para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00532">532</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1acc7f4d6178aa058a99ad6d4f7d7d20c5"/><section>
    <title>CopyToListAndClear()</title>
<indexterm><primary>CopyToListAndClear</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>CopyToListAndClear</secondary></indexterm>
<para><computeroutput>bool Photon.Pun.PhotonStream.CopyToListAndClear (List&lt; object &gt; target)</computeroutput></para><para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00613">613</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1a7e69f29f517f8ed3148d8dccef982ea6"/><section>
    <title>PeekNext()</title>
<indexterm><primary>PeekNext</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>PeekNext</secondary></indexterm>
<para><computeroutput>object Photon.Pun.PhotonStream.PeekNext ( )</computeroutput></para><para>

<para>Read next piece of data from the stream without advancing the &quot;current&quot; item.</para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00587">587</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream_a7e69f29f517f8ed3148d8dccef982ea6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc"/><section>
    <title>ReceiveNext()</title>
<indexterm><primary>ReceiveNext</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>ReceiveNext</secondary></indexterm>
<para><computeroutput>object Photon.Pun.PhotonStream.ReceiveNext ( )</computeroutput></para><para>

<para>Read next piece of data from the stream when IsReading is true.</para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00573">573</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream_a50038b09fdec1b4d1072c9f8b5a231dc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a"/><section>
    <title>SendNext()</title>
<indexterm><primary>SendNext</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>SendNext</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.SendNext (object obj)</computeroutput></para><para>

<para>Add another piece of data to send it when IsWriting is true.</para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00601">601</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream_adf067be77d2034b07fd696d97110a57a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1a5bd4085dcff91fd8f08ce7298adc4aca"/><section>
    <title>Serialize()<computeroutput>[1/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref bool myBool)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00632">632</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1ae9ce44f0653061fb20b6d1fc7c3ee98c"/><section>
    <title>Serialize()<computeroutput>[2/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref char value)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00689">689</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1af4fe67b40f268468a12b7c9327f6836f"/><section>
    <title>Serialize()<computeroutput>[3/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref float obj)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00727">727</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1a2e850168f28876b87c62834904566d1a"/><section>
    <title>Serialize()<computeroutput>[4/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref int myInt)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00651">651</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1abc4cd1b5c9f77860877e9637522e0e2e"/><section>
    <title>Serialize()<computeroutput>[5/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> obj)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00746">746</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1acbd8a407834db781c496f0f4573aaa62"/><section>
    <title>Serialize()<computeroutput>[6/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref Quaternion obj)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00803">803</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1ad3f13d21dc919cae99c6826851a8aa2f"/><section>
    <title>Serialize()<computeroutput>[7/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref short value)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00708">708</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1a03d096a0d5806dfc6241a2bb46ba6880"/><section>
    <title>Serialize()<computeroutput>[8/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref string value)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00670">670</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1ab89efa02a700e58d355a2f117bd78522"/><section>
    <title>Serialize()<computeroutput>[9/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref Vector2 obj)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00784">784</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1ab189914f296c8ace37cdeb997264190a"/><section>
    <title>Serialize()<computeroutput>[10/10]</computeroutput></title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.Serialize (ref Vector3 obj)</computeroutput></para><para>

<para>Will read or write the value, depending on the stream&apos;s IsWriting value. </para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00765">765</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1a7e7a18a9875e484473c73e9ee0c5f195"/><section>
    <title>SetReadStream()</title>
<indexterm><primary>SetReadStream</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>SetReadStream</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStream.SetReadStream (object[] incomingData, int pos = <computeroutput>0</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00542">542</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1a882e4987ccbf3d788962e662a22ea39d"/><section>
    <title>ToArray()</title>
<indexterm><primary>ToArray</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>ToArray</secondary></indexterm>
<para><computeroutput>object[] Photon.Pun.PhotonStream.ToArray ( )</computeroutput></para><para>

<para>Turns the stream into a new object[].</para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00624">624</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1af3a0f4aae7ad624a0c860005ececd784"/><section>
    <title>Count</title>
<indexterm><primary>Count</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>Count</secondary></indexterm>
<para><computeroutput>int? Photon.Pun.PhotonStream.Count<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Count of items in the stream.</para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00524">524</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1a4190af4c0315906785d7795873bd8803"/><section>
    <title>IsReading</title>
<indexterm><primary>IsReading</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>IsReading</secondary></indexterm>
<para><computeroutput>bool Photon.Pun.PhotonStream.IsReading<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>If true, this client should read data send by another client.</para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00518">518</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_1afb5b9a03ecf814332d7ea282987e3fdc"/><section>
    <title>IsWriting</title>
<indexterm><primary>IsWriting</primary><secondary>Photon.Pun.PhotonStream</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStream</primary><secondary>IsWriting</secondary></indexterm>
<para><computeroutput>bool Photon.Pun.PhotonStream.IsWriting<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>If true, this client should add data to the stream to send it.</para>
</para>
<para>
Definition at line <link linkend="__pun_classes_8cs_source_1l00515">515</link> of file <link linkend="__pun_classes_8cs_source">PunClasses.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/<link linkend="__pun_classes_8cs">PunClasses.cs</link></section>
</section>
