<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_pun_1_1_photon_stream_queue" xml:lang="en-US">
<title>Photon.Pun.PhotonStreamQueue Class Reference</title>
<indexterm><primary>Photon.Pun.PhotonStreamQueue</primary></indexterm>
<para>

<para>The <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue">PhotonStreamQueue</link> helps you poll object states at higher frequencies than what <link linkend="_class_photon_1_1_pun_1_1_photon_network_1a84b1a2edd7844e3f42b1e58e6b4fc9c8">PhotonNetwork.SendRate</link> dictates and then sends all those states at once when <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1aa894acf4883faf5806f75f4d757022a4">Serialize()</link> is called. </para>
 
</para>
Collaboration diagram for Photon.Pun.PhotonStreamQueue:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream_queue__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a66c62b641df4f504070caa7c4ed87d64">PhotonStreamQueue</link> (int sampleRate)</para>

<para>Initializes a new instance of the <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue">PhotonStreamQueue</link> class. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a065ec40dbb214e468ede584377910e66">Reset</link> ()</para>

<para>Resets the <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue">PhotonStreamQueue</link>. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a42779b39aad4f458528b728a6ae9ca46">SendNext</link> (object obj)</para>

<para>Adds the next object to the queue. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a5ce6660209d3c8b2988d2e4444dfe36b">HasQueuedObjects</link> ()</para>

<para>Determines whether the queue has stored any objects </para>
</listitem>
            <listitem><para>object <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a8ce49494951095aabcdc4d22d4420ea2">ReceiveNext</link> ()</para>

<para>Receives the next object from the queue. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1aa894acf4883faf5806f75f4d757022a4">Serialize</link> (<link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link> stream)</para>

<para>Serializes the specified stream. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a576b08634a4833827b019071ddfefe09">Deserialize</link> (<link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link> stream)</para>

<para>Deserializes the specified stream. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue">PhotonStreamQueue</link> helps you poll object states at higher frequencies than what <link linkend="_class_photon_1_1_pun_1_1_photon_network_1a84b1a2edd7844e3f42b1e58e6b4fc9c8">PhotonNetwork.SendRate</link> dictates and then sends all those states at once when <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1aa894acf4883faf5806f75f4d757022a4">Serialize()</link> is called. </para>



<para>On the receiving end you can call <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue_1a576b08634a4833827b019071ddfefe09">Deserialize()</link> and then the stream will roll out the received object states in the same order and timeStep they were recorded in. </para>
<para>
Definition at line <link linkend="__photon_stream_queue_8cs_source_1l00024">24</link> of file <link linkend="__photon_stream_queue_8cs_source">PhotonStreamQueue.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_queue_1a66c62b641df4f504070caa7c4ed87d64"/><section>
    <title>PhotonStreamQueue()</title>
<indexterm><primary>PhotonStreamQueue</primary><secondary>Photon.Pun.PhotonStreamQueue</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStreamQueue</primary><secondary>PhotonStreamQueue</secondary></indexterm>
<para><computeroutput>Photon.Pun.PhotonStreamQueue.PhotonStreamQueue (int sampleRate)</computeroutput></para><para>

<para>Initializes a new instance of the <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue">PhotonStreamQueue</link> class. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>sampleRate</entry><entry>
<para>How many times per second should the object states be sampled</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__photon_stream_queue_8cs_source_1l00042">42</link> of file <link linkend="__photon_stream_queue_8cs_source">PhotonStreamQueue.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_queue_1a576b08634a4833827b019071ddfefe09"/><section>
    <title>Deserialize()</title>
<indexterm><primary>Deserialize</primary><secondary>Photon.Pun.PhotonStreamQueue</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStreamQueue</primary><secondary>Deserialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStreamQueue.Deserialize (<link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link> stream)</computeroutput></para><para>

<para>Deserializes the specified stream. </para>
</para>

<para>Call this in your OnPhotonSerializeView method to receive the whole recorded stream. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>stream</entry><entry>
<para>The <link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link> you receive as a parameter in OnPhotonSerializeView</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__photon_stream_queue_8cs_source_1l00173">173</link> of file <link linkend="__photon_stream_queue_8cs_source">PhotonStreamQueue.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream_queue_a576b08634a4833827b019071ddfefe09_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream_queue_a576b08634a4833827b019071ddfefe09_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_queue_1a5ce6660209d3c8b2988d2e4444dfe36b"/><section>
    <title>HasQueuedObjects()</title>
<indexterm><primary>HasQueuedObjects</primary><secondary>Photon.Pun.PhotonStreamQueue</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStreamQueue</primary><secondary>HasQueuedObjects</secondary></indexterm>
<para><computeroutput>bool Photon.Pun.PhotonStreamQueue.HasQueuedObjects ( )</computeroutput></para><para>

<para>Determines whether the queue has stored any objects </para>
</para>
<para>
Definition at line <link linkend="__photon_stream_queue_8cs_source_1l00118">118</link> of file <link linkend="__photon_stream_queue_8cs_source">PhotonStreamQueue.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_queue_1a8ce49494951095aabcdc4d22d4420ea2"/><section>
    <title>ReceiveNext()</title>
<indexterm><primary>ReceiveNext</primary><secondary>Photon.Pun.PhotonStreamQueue</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStreamQueue</primary><secondary>ReceiveNext</secondary></indexterm>
<para><computeroutput>object Photon.Pun.PhotonStreamQueue.ReceiveNext ( )</computeroutput></para><para>

<para>Receives the next object from the queue. </para>
</para>

<para>This works just like <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1a50038b09fdec1b4d1072c9f8b5a231dc">PhotonStream.ReceiveNext</link> </para>

<para><formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__photon_stream_queue_8cs_source_1l00127">127</link> of file <link linkend="__photon_stream_queue_8cs_source">PhotonStreamQueue.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_queue_1a065ec40dbb214e468ede584377910e66"/><section>
    <title>Reset()</title>
<indexterm><primary>Reset</primary><secondary>Photon.Pun.PhotonStreamQueue</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStreamQueue</primary><secondary>Reset</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStreamQueue.Reset ( )</computeroutput></para><para>

<para>Resets the <link linkend="_class_photon_1_1_pun_1_1_photon_stream_queue">PhotonStreamQueue</link>. </para>
</para>

<para>You need to do this whenever the amount of objects you are observing changes </para>
<para>
Definition at line <link linkend="__photon_stream_queue_8cs_source_1l00083">83</link> of file <link linkend="__photon_stream_queue_8cs_source">PhotonStreamQueue.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream_queue_a065ec40dbb214e468ede584377910e66_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_queue_1a42779b39aad4f458528b728a6ae9ca46"/><section>
    <title>SendNext()</title>
<indexterm><primary>SendNext</primary><secondary>Photon.Pun.PhotonStreamQueue</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStreamQueue</primary><secondary>SendNext</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStreamQueue.SendNext (object obj)</computeroutput></para><para>

<para>Adds the next object to the queue. </para>
</para>

<para>This works just like <link linkend="_class_photon_1_1_pun_1_1_photon_stream_1adf067be77d2034b07fd696d97110a57a">PhotonStream.SendNext</link> </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>obj</entry><entry>
<para>The object you want to add to the queue</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__photon_stream_queue_8cs_source_1l00098">98</link> of file <link linkend="__photon_stream_queue_8cs_source">PhotonStreamQueue.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_photon_stream_queue_1aa894acf4883faf5806f75f4d757022a4"/><section>
    <title>Serialize()</title>
<indexterm><primary>Serialize</primary><secondary>Photon.Pun.PhotonStreamQueue</secondary></indexterm>
<indexterm><primary>Photon.Pun.PhotonStreamQueue</primary><secondary>Serialize</secondary></indexterm>
<para><computeroutput>void Photon.Pun.PhotonStreamQueue.Serialize (<link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link> stream)</computeroutput></para><para>

<para>Serializes the specified stream. </para>
</para>

<para>Call this in your OnPhotonSerializeView method to send the whole recorded stream. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>stream</entry><entry>
<para>The <link linkend="_class_photon_1_1_pun_1_1_photon_stream">PhotonStream</link> you receive as a parameter in OnPhotonSerializeView</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__photon_stream_queue_8cs_source_1l00146">146</link> of file <link linkend="__photon_stream_queue_8cs_source">PhotonStreamQueue.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream_queue_aa894acf4883faf5806f75f4d757022a4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_photon_stream_queue_aa894acf4883faf5806f75f4d757022a4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/<link linkend="__photon_stream_queue_8cs">PhotonStreamQueue.cs</link></section>
</section>
