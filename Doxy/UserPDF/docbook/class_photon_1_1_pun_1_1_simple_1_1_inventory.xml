<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory" xml:lang="en-US">
<title>Photon.Pun.Simple.Inventory&lt; T &gt; Class Template Reference</title>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary></indexterm>
<para>

<para>Base class for the inventory system. </para>
 
</para>
Inheritance diagram for Photon.Pun.Simple.Inventory&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_simple_1_1_inventory__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Photon.Pun.Simple.Inventory&lt; T &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_simple_1_1_inventory__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>override void <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a6da62c819fafe0a99c3b40e29e9125a0">OnAwakeInitialize</link> (bool isNetObject)</para>

<para>Awake code that will run whether or not a <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link> Exists </para>
</listitem>
            <listitem><para>override void <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1ae7d7a8f49eef4077c3c55085867ad7f3">OnStart</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae1d0087a4fdd601594efa044b445e9e7">Consumption</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a581dc5a3cdca735a4277c70dd1d1ca2f">TryTrigger</link> (<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_contact_reactor">IContactReactor</link> reactor, <link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_contact_event">ContactEvent</link> contactEvent, int compatibleMounts)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mount">Mount</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1aa6e2600aa1acd00c2eed5da02d1bb351">TryPickup</link> (<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_contact_reactor">IContactReactor</link> reactor, <link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_contact_event">ContactEvent</link> contactEvent)</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a5e138e7bf6e649c2d20078e15b4e14b9">TestCapacity</link> (<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_inventoryable">IInventoryable</link>&lt; T &gt; inventoryable)</para>

<para>Return if the object being picked up exceeds remaining inventory. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_mount_selector">MountSelector</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a5296030d77f50694573d2bedc3376f09">defaultMounting</link> = new <link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_mount_selector">MountSelector</link>(0)</para>
</listitem>
            <listitem><para><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_contact_groups_1_1_contact_group_mask_selector">ContactGroupMaskSelector</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a0c35b14e2ce717d320d6bcfb35813222">contactGroups</link> = new <link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_contact_groups_1_1_contact_group_mask_selector">ContactGroupMaskSelector</link>()</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mounts_manager">MountsManager</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a92dbd8a5f54a5fb7ec300b14976488eb">mountsLookup</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a1e8da19980fda4fb1a998aedba630855">defaultMountingMask</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mount">Mount</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1af232808a40268da3485ad6be783f0730">DefaultMount</link><computeroutput> [getset]</computeroutput>
</para>
</listitem>
            <listitem><para><link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_contact_groups_1_1_i_contact_group_mask">IContactGroupMask</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a81d0e81fe0ab6b1e9c1bf33c422beb86">ValidContactGroups</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>byte <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a51aebe1f0160aeba9c980bab71e98754">SystemIndex</link><computeroutput> [getset]</computeroutput>
</para>
</listitem>
            <listitem><para>int <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a70f4e8e3b9e36d3dc012bb21f75decb7">ValidMountsMask</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Base class for the inventory system. </para>



<para>You can extend this class using your own T to define how capacity is defined, and override any of the virtual methods to customize checks for triggering, pickup and having capacity. If you are feeling pro level, you can define your own class using the IInventory&lt;&gt; interface yourself. </para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00023">23</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a6da62c819fafe0a99c3b40e29e9125a0"/><section>
    <title>OnAwakeInitialize()</title>
<indexterm><primary>OnAwakeInitialize</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>OnAwakeInitialize</secondary></indexterm>
<para><computeroutput>override void <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.OnAwakeInitialize (bool isNetObject)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Awake code that will run whether or not a <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link> Exists </para>
</para>

<para><formalpara><title>Returns</title>

<para>Returns true if this is a <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_object">NetObject</link></para>
</formalpara>
</para>
<para>
Reimplemented from <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1aedf88917597325b903dd1bf4f1f2929a">Photon.Pun.Simple.NetComponent</link>.</para>
<para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00047">47</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1ae7d7a8f49eef4077c3c55085867ad7f3"/><section>
    <title>OnStart()</title>
<indexterm><primary>OnStart</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>OnStart</secondary></indexterm>
<para><computeroutput>override void <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.OnStart ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_net_component_1a4c284c86b23501fa1d1393f5cf94929e">Photon.Pun.Simple.NetComponent</link>.</para>
<para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00057">57</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_simple_1_1_inventory_ae7d7a8f49eef4077c3c55085867ad7f3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a5e138e7bf6e649c2d20078e15b4e14b9"/><section>
    <title>TestCapacity()</title>
<indexterm><primary>TestCapacity</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>TestCapacity</secondary></indexterm>
<para><computeroutput>virtual bool <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.TestCapacity (<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_inventoryable">IInventoryable</link>&lt; T &gt; inventoryable)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Return if the object being picked up exceeds remaining inventory. </para>
</para>

<para>Default implementation always just returns true. Override to create real tests. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>inventoryable</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00120">120</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_simple_1_1_inventory_a5e138e7bf6e649c2d20078e15b4e14b9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1aa6e2600aa1acd00c2eed5da02d1bb351"/><section>
    <title>TryPickup()</title>
<indexterm><primary>TryPickup</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>TryPickup</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mount">Mount</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.TryPickup (<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_contact_reactor">IContactReactor</link> reactor, <link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_contact_event">ContactEvent</link> contactEvent)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_contact_system_1a1ed07e0eab895c9da55888728df07da5">Photon.Pun.Simple.IContactSystem</link>.</para>
<para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00110">110</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a581dc5a3cdca735a4277c70dd1d1ca2f"/><section>
    <title>TryTrigger()</title>
<indexterm><primary>TryTrigger</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>TryTrigger</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_namespace_photon_1_1_pun_1_1_simple_1ae1d0087a4fdd601594efa044b445e9e7">Consumption</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.TryTrigger (<link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_contact_reactor">IContactReactor</link> reactor, <link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_contact_event">ContactEvent</link> contactEvent, int compatibleMounts)<computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Return if the object being picked up exceeds remaining inventory.</para>

<para>If both are set to 0 (Root) then consider that a match, otherwise zero for one but not the other is a mismatch (for now)</para>
<para>
Implements <link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_i_contact_system_1aade1df05b6c747af396ca9ea44fb3849">Photon.Pun.Simple.IContactSystem</link>.</para>
<para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00067">67</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_pun_1_1_simple_1_1_inventory_a581dc5a3cdca735a4277c70dd1d1ca2f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a0c35b14e2ce717d320d6bcfb35813222"/><section>
    <title>contactGroups</title>
<indexterm><primary>contactGroups</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>contactGroups</secondary></indexterm>
<para><computeroutput><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_contact_groups_1_1_contact_group_mask_selector">ContactGroupMaskSelector</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.contactGroups = new <link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_contact_groups_1_1_contact_group_mask_selector">ContactGroupMaskSelector</link>()<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00034">34</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a5296030d77f50694573d2bedc3376f09"/><section>
    <title>defaultMounting</title>
<indexterm><primary>defaultMounting</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>defaultMounting</secondary></indexterm>
<para><computeroutput><link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_mount_selector">MountSelector</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.defaultMounting = new <link linkend="_struct_photon_1_1_pun_1_1_simple_1_1_mount_selector">MountSelector</link>(0)<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00030">30</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a1e8da19980fda4fb1a998aedba630855"/><section>
    <title>defaultMountingMask</title>
<indexterm><primary>defaultMountingMask</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>defaultMountingMask</secondary></indexterm>
<para><computeroutput>int <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.defaultMountingMask<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00044">44</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a92dbd8a5f54a5fb7ec300b14976488eb"/><section>
    <title>mountsLookup</title>
<indexterm><primary>mountsLookup</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>mountsLookup</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mounts_manager">MountsManager</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.mountsLookup<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00043">43</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1af232808a40268da3485ad6be783f0730"/><section>
    <title>DefaultMount</title>
<indexterm><primary>DefaultMount</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>DefaultMount</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_pun_1_1_simple_1_1_mount">Mount</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.DefaultMount<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00031">31</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a51aebe1f0160aeba9c980bab71e98754"/><section>
    <title>SystemIndex</title>
<indexterm><primary>SystemIndex</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>SystemIndex</secondary></indexterm>
<para><computeroutput>byte <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.SystemIndex<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00040">40</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a81d0e81fe0ab6b1e9c1bf33c422beb86"/><section>
    <title>ValidContactGroups</title>
<indexterm><primary>ValidContactGroups</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>ValidContactGroups</secondary></indexterm>
<para><computeroutput><link linkend="_interface_photon_1_1_pun_1_1_simple_1_1_contact_groups_1_1_i_contact_group_mask">IContactGroupMask</link> <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.ValidContactGroups<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00035">35</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_pun_1_1_simple_1_1_inventory_1a70f4e8e3b9e36d3dc012bb21f75decb7"/><section>
    <title>ValidMountsMask</title>
<indexterm><primary>ValidMountsMask</primary><secondary>Photon.Pun.Simple.Inventory&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Photon.Pun.Simple.Inventory&lt; T &gt;</primary><secondary>ValidMountsMask</secondary></indexterm>
<para><computeroutput>int <link linkend="_class_photon_1_1_pun_1_1_simple_1_1_inventory">Photon.Pun.Simple.Inventory</link>&lt; T &gt;.ValidMountsMask<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__inventory_t_8cs_source_1l00045">45</link> of file <link linkend="__inventory_t_8cs_source">InventoryT.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Components/ContactSystems/SyncInventory/<link linkend="__inventory_t_8cs">InventoryT.cs</link></section>
</section>
