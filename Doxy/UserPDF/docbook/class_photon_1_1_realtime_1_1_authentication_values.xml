<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_realtime_1_1_authentication_values" xml:lang="en-US">
<title>Photon.Realtime.AuthenticationValues Class Reference</title>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary></indexterm>
<para>

<para>Container for user authentication in <link linkend="_namespace_photon">Photon</link>. </para>
 
</para>
Collaboration diagram for Photon.Realtime.AuthenticationValues:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_authentication_values__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1abadc63e1c3d13b70e132d50daa3bcc2a">AuthenticationValues</link> ()</para>

<para>Creates empty auth values without any info.</para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a5228881cdb119fcd3e9dd5eb3c6c358a">AuthenticationValues</link> (string userId)</para>

<para>Creates minimal info about the user. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a8e135a752be81731ec4a431b89409dd4">SetAuthPostData</link> (string stringData)</para>

<para>Sets the data to be passed-on to the auth service via POST. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a406f59ceec2e1e048a4b265268f12963">SetAuthPostData</link> (byte[] byteData)</para>

<para>Sets the data to be passed-on to the auth service via POST. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a8276b970298b48c171ab7b4a158bd6a3">SetAuthPostData</link> (Dictionary&lt; string, object &gt; dictData)</para>

<para>Sets data to be passed-on to the auth service as Json (Content-Type: &quot;application/json&quot;) via Post. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a000ff57b27ca5226cd6563aa1de03bf2">AddAuthParameter</link> (string key, string value)</para>

<para>Adds a key-value pair to the get-parameters used for Custom Auth (AuthGetParameters). </para>
</listitem>
            <listitem><para>override string <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a2a85ecff907b24c7561fa2f14a97d431">ToString</link> ()</para>

<para>Transform this object into string. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link> <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a555004f134e959d7b7374c141a590ae3">CopyTo</link> (<link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link> copy)</para>

<para>Make a copy of the current object. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82a">CustomAuthenticationType</link> <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1ac551e4613be1c4420e222f99f92875da">AuthType</link><computeroutput> [getset]</computeroutput>
</para>

<para>The type of authentication provider that should be used. </para>
</listitem>
            <listitem><para>string <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a48a1eab8fff8e9b6782f50b6059bc5e4">AuthGetParameters</link><computeroutput> [getset]</computeroutput>
</para>

<para>This string must contain any (http get) parameters expected by the used authentication service. </para>
</listitem>
            <listitem><para>object <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a204877bf768b08912513549d09139016">AuthPostData</link><computeroutput> [get]</computeroutput>
</para>

<para>Data to be passed-on to the auth service via POST. </para>
</listitem>
            <listitem><para>object <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a07093831732e656542d11fa08f7528b3">Token</link><computeroutput> [getset]</computeroutput>
</para>

<para>Internal <emphasis role="bold"><link linkend="_namespace_photon">Photon</link> token</emphasis>. </para>
</listitem>
            <listitem><para>string <link linkend="_class_photon_1_1_realtime_1_1_authentication_values_1a46b9aa634618f6634c8a567cb6dd987c">UserId</link><computeroutput> [getset]</computeroutput>
</para>

<para>The UserId should be a unique identifier per user. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Container for user authentication in <link linkend="_namespace_photon">Photon</link>. </para>



<para>Set AuthValues before you connect - all else is handled. </para>

<para>On <link linkend="_namespace_photon">Photon</link>, user authentication is optional but can be useful in many cases. If you want to FindFriends, a unique ID per user is very practical.</para>

<para>There are basically three options for user authentication: None at all, the client sets some UserId or you can use some account web-service to authenticate a user (and set the UserId server-side).</para>

<para>Custom Authentication lets you verify end-users by some kind of login or token. It sends those values to <link linkend="_namespace_photon">Photon</link> which will verify them before granting access or disconnecting the client.</para>

<para>The AuthValues are sent in OpAuthenticate when you connect, so they must be set before you connect. If the AuthValues.UserId is null or empty when it&apos;s sent to the server, then the <link linkend="_namespace_photon">Photon</link> Server assigns a UserId!</para>

<para>The <link linkend="_namespace_photon">Photon</link> Cloud Dashboard will let you enable this feature and set important server values for it. <link xlink:href="https://dashboard.photonengine.com">https://dashboard.photonengine.com</link> </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02129">2129</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1abadc63e1c3d13b70e132d50daa3bcc2a"/><section>
    <title>AuthenticationValues()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>AuthenticationValues</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>AuthenticationValues</secondary></indexterm>
<para><computeroutput>Photon.Realtime.AuthenticationValues.AuthenticationValues ( )</computeroutput></para><para>

<para>Creates empty auth values without any info.</para>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02163">2163</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a5228881cdb119fcd3e9dd5eb3c6c358a"/><section>
    <title>AuthenticationValues()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>AuthenticationValues</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>AuthenticationValues</secondary></indexterm>
<para><computeroutput>Photon.Realtime.AuthenticationValues.AuthenticationValues (string userId)</computeroutput></para><para>

<para>Creates minimal info about the user. </para>
</para>

<para>If this is authenticated or not, depends on the set AuthType.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>userId</entry><entry>
<para>Some UserId to set in <link linkend="_namespace_photon">Photon</link>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02169">2169</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a000ff57b27ca5226cd6563aa1de03bf2"/><section>
    <title>AddAuthParameter()</title>
<indexterm><primary>AddAuthParameter</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>AddAuthParameter</secondary></indexterm>
<para><computeroutput>virtual void Photon.Realtime.AuthenticationValues.AddAuthParameter (string key, string value)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Adds a key-value pair to the get-parameters used for Custom Auth (AuthGetParameters). </para>
</para>

<para>This method does uri-encoding for you.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>key</entry><entry>
<para>Key for the value to set.</para>
</entry>
                            </row>
                            <row>
<entry>value</entry><entry>
<para>Some value relevant for Custom Authentication.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02202">2202</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a555004f134e959d7b7374c141a590ae3"/><section>
    <title>CopyTo()</title>
<indexterm><primary>CopyTo</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>CopyTo</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link> Photon.Realtime.AuthenticationValues.CopyTo (<link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link> copy)</computeroutput></para><para>

<para>Make a copy of the current object. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>copy</entry><entry>
<para>The object to be copied into.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The copied object.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02227">2227</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a406f59ceec2e1e048a4b265268f12963"/><section>
    <title>SetAuthPostData()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>SetAuthPostData</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>SetAuthPostData</secondary></indexterm>
<para><computeroutput>virtual void Photon.Realtime.AuthenticationValues.SetAuthPostData (byte[] byteData)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Sets the data to be passed-on to the auth service via POST. </para>
</para>

<para>AuthPostData is just one value. Each SetAuthPostData replaces any previous value. It can be either a string, a byte[] or a dictionary.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>byteData</entry><entry>
<para>Binary token / auth-data to pass on.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02185">2185</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a8276b970298b48c171ab7b4a158bd6a3"/><section>
    <title>SetAuthPostData()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>SetAuthPostData</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>SetAuthPostData</secondary></indexterm>
<para><computeroutput>virtual void Photon.Realtime.AuthenticationValues.SetAuthPostData (Dictionary&lt; string, object &gt; dictData)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Sets data to be passed-on to the auth service as Json (Content-Type: &quot;application/json&quot;) via Post. </para>
</para>

<para>AuthPostData is just one value. Each SetAuthPostData replaces any previous value. It can be either a string, a byte[] or a dictionary.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>dictData</entry><entry>
<para>A authentication-data dictionary will be converted to Json and passed to the Auth webservice via HTTP Post.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02193">2193</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a8e135a752be81731ec4a431b89409dd4"/><section>
    <title>SetAuthPostData()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>SetAuthPostData</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>SetAuthPostData</secondary></indexterm>
<para><computeroutput>virtual void Photon.Realtime.AuthenticationValues.SetAuthPostData (string stringData)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Sets the data to be passed-on to the auth service via POST. </para>
</para>

<para>AuthPostData is just one value. Each SetAuthPostData replaces any previous value. It can be either a string, a byte[] or a dictionary.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>stringData</entry><entry>
<para>String data to be used in the body of the POST request. Null or empty string will set AuthPostData to null.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02177">2177</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a2a85ecff907b24c7561fa2f14a97d431"/><section>
    <title>ToString()</title>
<indexterm><primary>ToString</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>ToString</secondary></indexterm>
<para><computeroutput>override string Photon.Realtime.AuthenticationValues.ToString ( )</computeroutput></para><para>

<para>Transform this object into string. </para>
</para>

<para><formalpara><title>Returns</title>

<para>String info about this object&apos;s values.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02212">2212</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a48a1eab8fff8e9b6782f50b6059bc5e4"/><section>
    <title>AuthGetParameters</title>
<indexterm><primary>AuthGetParameters</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>AuthGetParameters</secondary></indexterm>
<para><computeroutput>string Photon.Realtime.AuthenticationValues.AuthGetParameters<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>This string must contain any (http get) parameters expected by the used authentication service. </para>
</para>

<para>By default, username and token.</para>

<para>Maps to operation parameter 216. Standard http get parameters are used here and passed on to the service that&apos;s defined in the server (<link linkend="_namespace_photon">Photon</link> Cloud Dashboard). </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02147">2147</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a204877bf768b08912513549d09139016"/><section>
    <title>AuthPostData</title>
<indexterm><primary>AuthPostData</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>AuthPostData</secondary></indexterm>
<para><computeroutput>object Photon.Realtime.AuthenticationValues.AuthPostData<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Data to be passed-on to the auth service via POST. </para>
</para>

<para>Default: null (not sent). Either string or byte[] (see setters).</para>

<para>Maps to operation parameter 214.</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02151">2151</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1ac551e4613be1c4420e222f99f92875da"/><section>
    <title>AuthType</title>
<indexterm><primary>AuthType</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>AuthType</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82a">CustomAuthenticationType</link> Photon.Realtime.AuthenticationValues.AuthType<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The type of authentication provider that should be used. </para>
</para>

<para>Defaults to None (no auth whatsoever).</para>

<para>Several auth providers are available and <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa90589c47f06eb971d548591f23c285af">CustomAuthenticationType.Custom</link> can be used if you build your own service.</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02136">2136</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a07093831732e656542d11fa08f7528b3"/><section>
    <title>Token</title>
<indexterm><primary>Token</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>Token</secondary></indexterm>
<para><computeroutput>object Photon.Realtime.AuthenticationValues.Token<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Internal <emphasis role="bold"><link linkend="_namespace_photon">Photon</link> token</emphasis>. </para>
</para>

<para>After initial authentication, <link linkend="_namespace_photon">Photon</link> provides a token for this client, subsequently used as (cached) validation.</para>

<para>Any token for custom authentication should be set via SetAuthPostData or AddAuthParameter.</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02155">2155</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_authentication_values_1a46b9aa634618f6634c8a567cb6dd987c"/><section>
    <title>UserId</title>
<indexterm><primary>UserId</primary><secondary>Photon.Realtime.AuthenticationValues</secondary></indexterm>
<indexterm><primary>Photon.Realtime.AuthenticationValues</primary><secondary>UserId</secondary></indexterm>
<para><computeroutput>string Photon.Realtime.AuthenticationValues.UserId<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The UserId should be a unique identifier per user. </para>
</para>

<para>This is for finding friends, etc..</para>

<para>See remarks of AuthValues for info about how this is set and used.</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02159">2159</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/<link linkend="__loadbalancing_peer_8cs">LoadbalancingPeer.cs</link></section>
</section>
