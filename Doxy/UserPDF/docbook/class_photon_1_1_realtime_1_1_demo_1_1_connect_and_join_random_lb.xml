<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb" xml:lang="en-US">
<title>Photon.Realtime.Demo.ConnectAndJoinRandomLb Class Reference</title>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary></indexterm>
Inheritance diagram for Photon.Realtime.Demo.ConnectAndJoinRandomLb:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Photon.Realtime.Demo.ConnectAndJoinRandomLb:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a8bb8b49446440e7bab6b36d5342f52f8">Start</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a83e6fbba4e52ae1459f938027752f6cf">Update</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a09d3c0b43ab6fdd6accddee12a43faef">OnConnected</link> ()</para>

<para>Called to signal that the &quot;low level connection&quot; got established but before the client can call operation on the server. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9892dfffa14371a343074e9bf96092f2">OnConnectedToMaster</link> ()</para>

<para>Called when the client is connected to the Master Server and ready for matchmaking and other tasks. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1ce82aa6347d9c08b777946623429729">OnDisconnected</link> (<link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6">DisconnectCause</link> cause)</para>

<para>Called after disconnecting from the <link linkend="_namespace_photon">Photon</link> server. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1a8e91c623ece390cf1d8d525c2683e5">OnCustomAuthenticationResponse</link> (Dictionary&lt; string, object &gt; data)</para>

<para>Called when your Custom Authentication service responds with additional data. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aa5af7ebd9800465bab5d6dbceeade93e">OnCustomAuthenticationFailed</link> (string debugMessage)</para>

<para>Called when the custom authentication failed. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a0ae9b9b10119366621182ef8554d102c">OnRegionListReceived</link> (<link linkend="_class_photon_1_1_realtime_1_1_region_handler">RegionHandler</link> regionHandler)</para>

<para>Called when the Name Server provided a list of regions for your title. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1bf323059eaf90cc88a4d1b65eb68f97">OnRoomListUpdate</link> (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> &gt; roomList)</para>

<para>Called for any update of the room-listing while in a lobby (InLobby) on the Master Server. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ac558f3f113a3f48b14a93974c32e8912">OnLobbyStatisticsUpdate</link> (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_typed_lobby_info">TypedLobbyInfo</link> &gt; lobbyStatistics)</para>

<para>Called when the Master Server sent an update for the Lobby Statistics. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9c794fec84463dbc65bfd897ae66b742">OnJoinedLobby</link> ()</para>

<para>Called on entering a lobby on the Master Server. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae59347ec10e79b8ba4b83067a8a5c1c7">OnLeftLobby</link> ()</para>

<para>Called after leaving a lobby. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aa7d164a26ced6c7ca47ba0a12bf38b25">OnFriendListUpdate</link> (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_friend_info">FriendInfo</link> &gt; friendList)</para>

<para>Called when the server sent the response to a FindFriends request. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1572d3f98378ead9aaad79871c7f1e81">OnCreatedRoom</link> ()</para>

<para>Called when this client created a room and entered it. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ab6cc4d3b12d2a9b633f17d02df6b365a">OnCreateRoomFailed</link> (short returnCode, string message)</para>

<para>Called when the server couldn&apos;t create a room (OpCreateRoom failed). </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae48fe093b4e390452c09d5aa6554be2d">OnJoinedRoom</link> ()</para>

<para>Called when the <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link> entered a room, no matter if this client created it or simply joined. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a2cb0c729861f2d7f5b0fd0b676b371d1">OnJoinRoomFailed</link> (short returnCode, string message)</para>

<para>Called when a previous OpJoinRoom call failed on the server. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a87c1e195c79cdfbf18644f0c1fbd360b">OnJoinRandomFailed</link> (short returnCode, string message)</para>

<para>Called when a previous OpJoinRandom call failed on the server. </para>
</listitem>
            <listitem><para>void <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a54c3927644503232611c95efc1c3c6e5">OnLeftRoom</link> ()</para>

<para>Called when the local user/client left a room, so the game&apos;s logic can clean up it&apos;s internal state. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>Text <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a6c0cd2a721973978b68327e334314116">StateUiText</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00014">14</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a09d3c0b43ab6fdd6accddee12a43faef"/><section>
    <title>OnConnected()</title>
<indexterm><primary>OnConnected</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnConnected</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnConnected ( )</computeroutput></para><para>

<para>Called to signal that the &quot;low level connection&quot; got established but before the client can call operation on the server. </para>
</para>

<para>After the (low level transport) connection is established, the client will automatically send the Authentication operation, which needs to get a response before the client can call other operations.</para>

<para>Your logic should wait for either: OnRegionListReceived or OnConnectedToMaster.</para>

<para>This callback is useful to detect if the server can be reached at all (technically). Most often, it&apos;s enough to implement <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1ce82aa6347d9c08b777946623429729">OnDisconnected(DisconnectCause cause)</link> and check for the cause.</para>

<para>This is not called for transitions from the masterserver to game servers. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a2e3c773af453748eaaf877585d3d8e1d">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00059">59</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9892dfffa14371a343074e9bf96092f2"/><section>
    <title>OnConnectedToMaster()</title>
<indexterm><primary>OnConnectedToMaster</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnConnectedToMaster</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnConnectedToMaster ( )</computeroutput></para><para>

<para>Called when the client is connected to the Master Server and ready for matchmaking and other tasks. </para>
</para>

<para>The list of available rooms won&apos;t become available unless you join a lobby via <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a4dd9222198402145e2e4e6c4f3462f9d">LoadBalancingClient.OpJoinLobby</link>. You can join rooms and create them even without being in a lobby. The default lobby is used in that case. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a52dfd77079d550168c7ff7aa0ce01a6c">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00063">63</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_a9892dfffa14371a343074e9bf96092f2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1572d3f98378ead9aaad79871c7f1e81"/><section>
    <title>OnCreatedRoom()</title>
<indexterm><primary>OnCreatedRoom</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnCreatedRoom</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnCreatedRoom ( )</computeroutput></para><para>

<para>Called when this client created a room and entered it. </para>
</para>

<para><link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae48fe093b4e390452c09d5aa6554be2d">OnJoinedRoom()</link> will be called as well. </para>

<para>This callback is only called on the client which created a room (see OpCreateRoom).</para>

<para>As any client might close (or drop connection) anytime, there is a chance that the creator of a room does not execute OnCreatedRoom.</para>

<para>If you need specific room properties or a &quot;start signal&quot;, implement OnMasterClientSwitched() and make each new MasterClient check the room&apos;s state. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a3d084f0aa95b2e8f48514695af73b31d">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00108">108</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ab6cc4d3b12d2a9b633f17d02df6b365a"/><section>
    <title>OnCreateRoomFailed()</title>
<indexterm><primary>OnCreateRoomFailed</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnCreateRoomFailed</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnCreateRoomFailed (short returnCode, string message)</computeroutput></para><para>

<para>Called when the server couldn&apos;t create a room (OpCreateRoom failed). </para>
</para>

<para>Creating a room may fail for various reasons. Most often, the room already exists (roomname in use) or the <link linkend="_class_photon_1_1_realtime_1_1_room_options">RoomOptions</link> clash and it&apos;s impossible to create the room.</para>

<para>When creating a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>returnCode</entry><entry>
<para>Operation ReturnCode from the server.</para>
</entry>
                            </row>
                            <row>
<entry>message</entry><entry>
<para>Debug message for the error.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a099d97fa4d65074adb0db876f47bacd7">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00112">112</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aa5af7ebd9800465bab5d6dbceeade93e"/><section>
    <title>OnCustomAuthenticationFailed()</title>
<indexterm><primary>OnCustomAuthenticationFailed</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnCustomAuthenticationFailed</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnCustomAuthenticationFailed (string debugMessage)</computeroutput></para><para>

<para>Called when the custom authentication failed. </para>
</para>

<para>Followed by disconnect! </para>

<para>Custom Authentication can fail due to user-input, bad tokens/secrets. If authentication is successful, this method is not called. Implement <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9c794fec84463dbc65bfd897ae66b742">OnJoinedLobby()</link> or <link linkend="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9892dfffa14371a343074e9bf96092f2">OnConnectedToMaster()</link> (as usual).</para>

<para>During development of a game, it might also fail due to wrong configuration on the server side. In those cases, logging the debugMessage is very important.</para>

<para>Unless you setup a custom authentication service for your app (in the <link xlink:href="https://dashboard.photonengine.com">Dashboard</link>), this won&apos;t be called! </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>debugMessage</entry><entry>
<para>Contains a debug message why authentication failed. This has to be fixed during development.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a669ed841654618813e551e11d7686225">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00078">78</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1a8e91c623ece390cf1d8d525c2683e5"/><section>
    <title>OnCustomAuthenticationResponse()</title>
<indexterm><primary>OnCustomAuthenticationResponse</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnCustomAuthenticationResponse</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnCustomAuthenticationResponse (Dictionary&lt; string, object &gt; data)</computeroutput></para><para>

<para>Called when your Custom Authentication service responds with additional data. </para>
</para>

<para>Custom Authentication services can include some custom data in their response. When present, that data is made available in this callback as Dictionary. While the keys of your data have to be strings, the values can be either string or a number (in Json). You need to make extra sure, that the value type is the one you expect. Numbers become (currently) int64.</para>

<para>Example: void OnCustomAuthenticationResponse(Dictionary&lt;string, object&gt; data) { ... } </para>

<para>https://doc.photonengine.com/en-us/realtime/current/reference/custom-authentication </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a2a7051e8442a636549eb73705168250c">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00074">74</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1ce82aa6347d9c08b777946623429729"/><section>
    <title>OnDisconnected()</title>
<indexterm><primary>OnDisconnected</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnDisconnected</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnDisconnected (<link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6">DisconnectCause</link> cause)</computeroutput></para><para>

<para>Called after disconnecting from the <link linkend="_namespace_photon">Photon</link> server. </para>
</para>

<para>It could be a failure or an explicit disconnect call </para>

<para>The reason for this disconnect is provided as DisconnectCause. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a5e133a672790851ab0554fdc821c7727">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00069">69</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aa7d164a26ced6c7ca47ba0a12bf38b25"/><section>
    <title>OnFriendListUpdate()</title>
<indexterm><primary>OnFriendListUpdate</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnFriendListUpdate</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnFriendListUpdate (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_friend_info">FriendInfo</link> &gt; friendList)</computeroutput></para><para>

<para>Called when the server sent the response to a FindFriends request. </para>
</para>

<para>After calling OpFindFriends, the Master Server will cache the friend list and send updates to the friend list. The friends includes the name, userId, online state and the room (if any) for each requested user/friend.</para>

<para>Use the friendList to update your UI and store it, if the UI should highlight changes. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a8f08da473647d070c554b5b4daba60af">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00104">104</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9c794fec84463dbc65bfd897ae66b742"/><section>
    <title>OnJoinedLobby()</title>
<indexterm><primary>OnJoinedLobby</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnJoinedLobby</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnJoinedLobby ( )</computeroutput></para><para>

<para>Called on entering a lobby on the Master Server. </para>
</para>

<para>The actual room-list updates will call OnRoomListUpdate. </para>

<para>While in the lobby, the roomlist is automatically updated in fixed intervals (which you can&apos;t modify in the public cloud). The room list gets available via OnRoomListUpdate. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ac3d6267cf8d9b108ed0b621a9e6eab46">Photon.Realtime.ILobbyCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00096">96</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae48fe093b4e390452c09d5aa6554be2d"/><section>
    <title>OnJoinedRoom()</title>
<indexterm><primary>OnJoinedRoom</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnJoinedRoom</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnJoinedRoom ( )</computeroutput></para><para>

<para>Called when the <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link> entered a room, no matter if this client created it or simply joined. </para>
</para>

<para>When this is called, you can access the existing players in <link linkend="_class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa">Room.Players</link>, their custom properties and <link linkend="_class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf">Room.CustomProperties</link>.</para>

<para>In this callback, you could create player objects. For example in Unity, instantiate a prefab for the player.</para>

<para>If you want a match to be started &quot;actively&quot;, enable the user to signal &quot;ready&quot; (using OpRaiseEvent or a Custom Property). </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a8add9e72c38d241a448f4b539acd684b">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00116">116</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a87c1e195c79cdfbf18644f0c1fbd360b"/><section>
    <title>OnJoinRandomFailed()</title>
<indexterm><primary>OnJoinRandomFailed</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnJoinRandomFailed</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnJoinRandomFailed (short returnCode, string message)</computeroutput></para><para>

<para>Called when a previous OpJoinRandom call failed on the server. </para>
</para>

<para>The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room).</para>

<para>This operation is only ever sent to the Master Server. Once a room is found by the Master Server, the client will head off to the designated Game Server and use the operation Join on the Game Server.</para>

<para>When using multiple lobbies (via OpJoinLobby or a <link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link> parameter), another lobby might have more/fitting rooms.
<literallayout>&#160;&#xa;</literallayout>
 </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>returnCode</entry><entry>
<para>Operation ReturnCode from the server.</para>
</entry>
                            </row>
                            <row>
<entry>message</entry><entry>
<para>Debug message for the error.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a837e8522439b89e68805a2b2c25fa824">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00125">125</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_a87c1e195c79cdfbf18644f0c1fbd360b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a2cb0c729861f2d7f5b0fd0b676b371d1"/><section>
    <title>OnJoinRoomFailed()</title>
<indexterm><primary>OnJoinRoomFailed</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnJoinRoomFailed</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnJoinRoomFailed (short returnCode, string message)</computeroutput></para><para>

<para>Called when a previous OpJoinRoom call failed on the server. </para>
</para>

<para>Joining a room may fail for various reasons. Most often, the room is full or does not exist anymore (due to someone else being faster or closing the room).</para>

<para>When joining a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>returnCode</entry><entry>
<para>Operation ReturnCode from the server.</para>
</entry>
                            </row>
                            <row>
<entry>message</entry><entry>
<para>Debug message for the error.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a55bcc9aca42ebe749a8dcb210ed145e9">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00121">121</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae59347ec10e79b8ba4b83067a8a5c1c7"/><section>
    <title>OnLeftLobby()</title>
<indexterm><primary>OnLeftLobby</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnLeftLobby</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnLeftLobby ( )</computeroutput></para><para>

<para>Called after leaving a lobby. </para>
</para>

<para>When you leave a lobby, OpCreateRoom and OpJoinRandomRoom automatically refer to the default lobby. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ae31b4cb08b81157a52a3550be24ceae3">Photon.Realtime.ILobbyCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00100">100</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a54c3927644503232611c95efc1c3c6e5"/><section>
    <title>OnLeftRoom()</title>
<indexterm><primary>OnLeftRoom</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnLeftRoom</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnLeftRoom ( )</computeroutput></para><para>

<para>Called when the local user/client left a room, so the game&apos;s logic can clean up it&apos;s internal state. </para>
</para>

<para>When leaving a room, the <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link> will disconnect the Game Server and connect to the Master Server. This wraps up multiple internal actions.</para>

<para>Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1acedd813313ad6724f3935801481d8e8f">Photon.Realtime.IMatchmakingCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00131">131</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ac558f3f113a3f48b14a93974c32e8912"/><section>
    <title>OnLobbyStatisticsUpdate()</title>
<indexterm><primary>OnLobbyStatisticsUpdate</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnLobbyStatisticsUpdate</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnLobbyStatisticsUpdate (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_typed_lobby_info">TypedLobbyInfo</link> &gt; lobbyStatistics)</computeroutput></para><para>

<para>Called when the Master Server sent an update for the Lobby Statistics. </para>
</para>

<para>This callback has two preconditions: EnableLobbyStatistics must be set to true, before this client connects. And the client has to be connected to the Master Server, which is providing the info about lobbies. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ab2cc546cf0e5189d90360217ebdabd40">Photon.Realtime.ILobbyCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00092">92</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a0ae9b9b10119366621182ef8554d102c"/><section>
    <title>OnRegionListReceived()</title>
<indexterm><primary>OnRegionListReceived</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnRegionListReceived</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnRegionListReceived (<link linkend="_class_photon_1_1_realtime_1_1_region_handler">RegionHandler</link> regionHandler)</computeroutput></para><para>

<para>Called when the Name Server provided a list of regions for your title. </para>
</para>

<para>Check the <link linkend="_class_photon_1_1_realtime_1_1_region_handler">RegionHandler</link> class description, to make use of the provided values.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>regionHandler</entry><entry>
<para>The currently used <link linkend="_class_photon_1_1_realtime_1_1_region_handler">RegionHandler</link>.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a69f1c715fb64aff2dda2d18832ff45d2">Photon.Realtime.IConnectionCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00082">82</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_a0ae9b9b10119366621182ef8554d102c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1bf323059eaf90cc88a4d1b65eb68f97"/><section>
    <title>OnRoomListUpdate()</title>
<indexterm><primary>OnRoomListUpdate</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>OnRoomListUpdate</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnRoomListUpdate (List&lt; <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> &gt; roomList)</computeroutput></para><para>

<para>Called for any update of the room-listing while in a lobby (InLobby) on the Master Server. </para>
</para>

<para>Each item is a <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> which might include custom properties (provided you defined those as lobby-listed when creating a room). Not all types of lobbies provide a listing of rooms to the client. Some are silent and specialized for server-side matchmaking. </para>
<para>
Implements <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ae07fb2877a6af51b34db77422187dcf6">Photon.Realtime.ILobbyCallbacks</link>.</para>
<para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00088">88</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a8bb8b49446440e7bab6b36d5342f52f8"/><section>
    <title>Start()</title>
<indexterm><primary>Start</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>Start</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.Start ( )</computeroutput></para><para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00023">23</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_a8bb8b49446440e7bab6b36d5342f52f8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a83e6fbba4e52ae1459f938027752f6cf"/><section>
    <title>Update()</title>
<indexterm><primary>Update</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>Update</secondary></indexterm>
<para><computeroutput>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.Update ( )</computeroutput></para><para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00041">41</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_a83e6fbba4e52ae1459f938027752f6cf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a6c0cd2a721973978b68327e334314116"/><section>
    <title>StateUiText</title>
<indexterm><primary>StateUiText</primary><secondary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Demo.ConnectAndJoinRandomLb</primary><secondary>StateUiText</secondary></indexterm>
<para><computeroutput>Text Photon.Realtime.Demo.ConnectAndJoinRandomLb.StateUiText</computeroutput></para><para>
Definition at line <link linkend="__connect_and_join_random_lb_8cs_source_1l00021">21</link> of file <link linkend="__connect_and_join_random_lb_8cs_source">ConnectAndJoinRandomLb.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/<link linkend="__connect_and_join_random_lb_8cs">ConnectAndJoinRandomLb.cs</link></section>
</section>
