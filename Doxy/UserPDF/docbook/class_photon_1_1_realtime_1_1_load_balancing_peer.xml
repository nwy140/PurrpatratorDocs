<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer" xml:lang="en-US">
<title>Photon.Realtime.LoadBalancingPeer Class Reference</title>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary></indexterm>
<para>

<para>A <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer">LoadBalancingPeer</link> provides the operations and enum definitions needed to use the LoadBalancing server application which is also used in <link linkend="_namespace_photon">Photon</link> Cloud. </para>
 
</para>
Inheritance diagram for Photon.Realtime.LoadBalancingPeer:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Photon.Realtime.LoadBalancingPeer:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a7f48b5f0c44ef0c67ef32f147ff87246">LoadBalancingPeer</link> (ConnectionProtocol protocolType)</para>

<para>Creates a Peer with specified connection protocol. </para>
</listitem>
            <listitem><para><link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a6abea91b75c73f78640990fd83c6f8e1">LoadBalancingPeer</link> (IPhotonPeerListener listener, ConnectionProtocol protocolType)</para>

<para>Creates a Peer with specified connection protocol and a Listener for callbacks. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1ac21c4ac3367ad68703fb9fd29f1fa063">OpGetRegions</link> (string appId)</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a3d08eb96624ac46f39fba969784e76b4">OpJoinLobby</link> (<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link> lobby=null)</para>

<para>Joins the lobby on the Master Server, where you get a list of RoomInfos of currently open rooms. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1af7132f864b88af2ff8bb3d6221702841">OpLeaveLobby</link> ()</para>

<para>Leaves the lobby on the Master Server. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a67344084f00dcf86aabce99c2610edae">OpCreateRoom</link> (<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link> opParams)</para>

<para>Creates a room (on either Master or Game Server). </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a1dc6be1075f64edd0b746f2e61c114f5">OpJoinRoom</link> (<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link> opParams)</para>

<para>Joins a room by name or creates new room if room with given name not exists. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1aa0b9a197c11005dcc87e07e885239d9b">OpJoinRandomRoom</link> (<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params">OpJoinRandomRoomParams</link> opJoinRandomRoomParams)</para>

<para>Operation to join a random, available room. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a474dc2086d3d17bce9b4f0ddc2eec95a">OpJoinRandomOrCreateRoom</link> (<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params">OpJoinRandomRoomParams</link> opJoinRandomRoomParams, <link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link> createRoomParams)</para>

<para>Only used on the Master Server. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a74f970c5eeaef7851411f0b5011bd693">OpLeaveRoom</link> (bool becomeInactive, bool sendAuthCookie=false)</para>

<para>Leaves a room with option to come back later or &quot;for good&quot;. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a3db92fd58a230dbc94c068ae38d6a7f0">OpGetGameList</link> (<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link> lobby, string queryData)</para>

<para>Gets a list of games matching a SQL-like where clause. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a2b9aebfa506dd7a930d1f0b6d71ba26e">OpFindFriends</link> (string[] friendsToFind, <link linkend="_class_photon_1_1_realtime_1_1_find_friends_options">FindFriendsOptions</link> options=null)</para>

<para>Request the rooms and online status for a list of friends (each client must set a unique username via OpAuthenticate). </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1ad3b61c42e78a82917bb9093cc99e3a32">OpSetCustomPropertiesOfActor</link> (int actorNr, <link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link> actorProperties)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a1ad2f59de68ab42a4882bf0a9ea6595b">OpSetCustomPropertiesOfRoom</link> (<link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link> gameProperties)</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a4ed3ae23ffbc88d5b449997e5af8d9af">OpAuthenticate</link> (string appId, string appVersion, <link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link> authValues, string regionCode, bool getLobbyStatistics)</para>

<para>Sends this app&apos;s appId and appVersion to identify this application server side. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1ad9c7c615e2c96aec5f0f0462efcfcc6a">OpAuthenticateOnce</link> (string appId, string appVersion, <link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link> authValues, string regionCode, <link linkend="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357d">EncryptionMode</link> encryptionMode, ConnectionProtocol expectedProtocol)</para>

<para>Sends this app&apos;s appId and appVersion to identify this application server side. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a2238ffb869240c4e9f18d1d32ccb0c20">OpChangeGroups</link> (byte[] groupsToRemove, byte[] groupsToAdd)</para>

<para>Operation to handle this client&apos;s interest groups (for events in room). </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1af6d68f09d3f683f8d709c3aa4dfe03cc">OpRaiseEvent</link> (byte eventCode, object customEventContent, <link linkend="_class_photon_1_1_realtime_1_1_raise_event_options">RaiseEventOptions</link> raiseEventOptions, SendOptions sendOptions)</para>

<para>Send an event with custom code/type and any content to the other players in the same room. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a691e7bdd1af18f2bbfaf11118707d152">OpSettings</link> (bool receiveLobbyStats)</para>

<para>Internally used operation to set some &quot;per server&quot; settings. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a8c97f436ca4b81bfb18d4a27e88bf6a3">OpSetPropertyOfRoom</link> (byte propCode, object value)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer">LoadBalancingPeer</link> provides the operations and enum definitions needed to use the LoadBalancing server application which is also used in <link linkend="_namespace_photon">Photon</link> Cloud. </para>



<para>This class is internally used. The <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer">LoadBalancingPeer</link> does not keep a state, instead this is done by a <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link>. </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00041">41</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a7f48b5f0c44ef0c67ef32f147ff87246"/><section>
    <title>LoadBalancingPeer()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>LoadBalancingPeer</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>LoadBalancingPeer</secondary></indexterm>
<para><computeroutput>Photon.Realtime.LoadBalancingPeer.LoadBalancingPeer (ConnectionProtocol protocolType)</computeroutput></para><para>

<para>Creates a Peer with specified connection protocol. </para>
</para>

<para>You need to set the Listener before using the peer. </para>

<para>Each connection protocol has it&apos;s own default networking ports for <link linkend="_namespace_photon">Photon</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>protocolType</entry><entry>
<para>The preferred option is UDP.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00063">63</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a7f48b5f0c44ef0c67ef32f147ff87246_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a6abea91b75c73f78640990fd83c6f8e1"/><section>
    <title>LoadBalancingPeer()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>LoadBalancingPeer</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>LoadBalancingPeer</secondary></indexterm>
<para><computeroutput>Photon.Realtime.LoadBalancingPeer.LoadBalancingPeer (IPhotonPeerListener listener, ConnectionProtocol protocolType)</computeroutput></para><para>

<para>Creates a Peer with specified connection protocol and a Listener for callbacks. </para>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00074">74</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a4ed3ae23ffbc88d5b449997e5af8d9af"/><section>
    <title>OpAuthenticate()</title>
<indexterm><primary>OpAuthenticate</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpAuthenticate</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpAuthenticate (string appId, string appVersion, <link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link> authValues, string regionCode, bool getLobbyStatistics)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Sends this app&apos;s appId and appVersion to identify this application server side. </para>
</para>

<para>This is an async request which triggers a OnOperationResponse() call. </para>

<para>This operation makes use of encryption, if that is established before. See: EstablishEncryption(). Check encryption with IsEncryptionAvailable. This operation is allowed only once per connection (multiple calls will have <link linkend="_class_photon_1_1_realtime_1_1_error_code">ErrorCode</link> != Ok). </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>appId</entry><entry>
<para>Your application&apos;s name or ID to authenticate. This is assigned by <link linkend="_namespace_photon">Photon</link> Cloud (webpage).</para>
</entry>
                            </row>
                            <row>
<entry>appVersion</entry><entry>
<para>The client&apos;s version (clients with differing client appVersions are separated and players don&apos;t meet).</para>
</entry>
                            </row>
                            <row>
<entry>authValues</entry><entry>
<para>Contains all values relevant for authentication. Even without account system (external Custom Auth), the clients are allowed to identify themselves.</para>
</entry>
                            </row>
                            <row>
<entry>regionCode</entry><entry>
<para>Optional region code, if the client should connect to a specific <link linkend="_namespace_photon">Photon</link> Cloud <link linkend="_class_photon_1_1_realtime_1_1_region">Region</link>.</para>
</entry>
                            </row>
                            <row>
<entry>getLobbyStatistics</entry><entry>
<para>Set to true on Master Server to receive &quot;Lobby Statistics&quot; events.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If the operation could be sent (has to be connected).</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00729">729</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1ad9c7c615e2c96aec5f0f0462efcfcc6a"/><section>
    <title>OpAuthenticateOnce()</title>
<indexterm><primary>OpAuthenticateOnce</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpAuthenticateOnce</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpAuthenticateOnce (string appId, string appVersion, <link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link> authValues, string regionCode, <link linkend="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357d">EncryptionMode</link> encryptionMode, ConnectionProtocol expectedProtocol)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Sends this app&apos;s appId and appVersion to identify this application server side. </para>
</para>

<para>This is an async request which triggers a OnOperationResponse() call. </para>

<para>This operation makes use of encryption, if that is established before. See: EstablishEncryption(). Check encryption with IsEncryptionAvailable. This operation is allowed only once per connection (multiple calls will have <link linkend="_class_photon_1_1_realtime_1_1_error_code">ErrorCode</link> != Ok). </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>appId</entry><entry>
<para>Your application&apos;s name or ID to authenticate. This is assigned by <link linkend="_namespace_photon">Photon</link> Cloud (webpage).</para>
</entry>
                            </row>
                            <row>
<entry>appVersion</entry><entry>
<para>The client&apos;s version (clients with differing client appVersions are separated and players don&apos;t meet).</para>
</entry>
                            </row>
                            <row>
<entry>authValues</entry><entry>
<para>Optional authentication values. The client can set no values or a UserId or some parameters for Custom Authentication by a server.</para>
</entry>
                            </row>
                            <row>
<entry>regionCode</entry><entry>
<para>Optional region code, if the client should connect to a specific <link linkend="_namespace_photon">Photon</link> Cloud <link linkend="_class_photon_1_1_realtime_1_1_region">Region</link>.</para>
</entry>
                            </row>
                            <row>
<entry>encryptionMode</entry><entry></entry>
                            </row>
                            <row>
<entry>expectedProtocol</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If the operation could be sent (has to be connected).</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00804">804</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a2238ffb869240c4e9f18d1d32ccb0c20"/><section>
    <title>OpChangeGroups()</title>
<indexterm><primary>OpChangeGroups</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpChangeGroups</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpChangeGroups (byte[] groupsToRemove, byte[] groupsToAdd)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Operation to handle this client&apos;s interest groups (for events in room). </para>
</para>

<para>Note the difference between passing null and byte[0]: null won&apos;t add/remove any groups. byte[0] will add/remove all (existing) groups. First, removing groups is executed. This way, you could leave all groups and join only the ones provided.</para>

<para>Changes become active not immediately but when the server executes this operation (approximately RTT/2). </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>groupsToRemove</entry><entry>
<para>Groups to remove from interest. Null will not remove any. A byte[0] will remove all.</para>
</entry>
                            </row>
                            <row>
<entry>groupsToAdd</entry><entry>
<para>Groups to add to interest. Null will not add any. A byte[0] will add all current.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If operation could be enqueued for sending. Sent when calling: Service or SendOutgoingCommands.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00882">882</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a2238ffb869240c4e9f18d1d32ccb0c20_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a67344084f00dcf86aabce99c2610edae"/><section>
    <title>OpCreateRoom()</title>
<indexterm><primary>OpCreateRoom</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpCreateRoom</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpCreateRoom (<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link> opParams)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Creates a room (on either Master or Game Server). </para>
</para>

<para>The OperationResponse depends on the server the peer is connected to: Master will return a Game Server to connect to. Game Server will return the joined <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&apos;s data. This is an async request which triggers a OnOperationResponse() call. </para>

<para>If the room is already existing, the OperationResponse will have a returnCode of ErrorCode.GameAlreadyExists. </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00280">280</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a67344084f00dcf86aabce99c2610edae_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a2b9aebfa506dd7a930d1f0b6d71ba26e"/><section>
    <title>OpFindFriends()</title>
<indexterm><primary>OpFindFriends</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpFindFriends</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpFindFriends (string[] friendsToFind, <link linkend="_class_photon_1_1_realtime_1_1_find_friends_options">FindFriendsOptions</link> options = <computeroutput>null</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Request the rooms and online status for a list of friends (each client must set a unique username via OpAuthenticate). </para>
</para>

<para>Used on Master Server to find the rooms played by a selected list of users. Users identify themselves by using OpAuthenticate with a unique user ID. The list of user IDs must be fetched from some other source (not provided by <link linkend="_namespace_photon">Photon</link>).</para>

<para>The server response includes 2 arrays of info (each index matching a friend from the request):
<literallayout>&#160;&#xa;</literallayout>
 <link linkend="_class_photon_1_1_realtime_1_1_parameter_code_1a76a5bf9059c7f6ae83f70349f9378396">ParameterCode.FindFriendsResponseOnlineList</link> = bool[] of online states
<literallayout>&#160;&#xa;</literallayout>
 <link linkend="_class_photon_1_1_realtime_1_1_parameter_code_1ae90fbf712ed42c8de99001639b9a87ce">ParameterCode.FindFriendsResponseRoomIdList</link> = string[] of room names (empty string if not in a room)
<literallayout>&#160;&#xa;</literallayout>
 
<literallayout>&#160;&#xa;</literallayout>
 The options may be used to define which state a room must match to be returned. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>friendsToFind</entry><entry>
<para>Array of friend&apos;s names (make sure they are unique).</para>
</entry>
                            </row>
                            <row>
<entry>options</entry><entry>
<para>Options that affect the result of the FindFriends operation.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If the operation could be sent (requires connection).</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00599">599</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a2b9aebfa506dd7a930d1f0b6d71ba26e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a3db92fd58a230dbc94c068ae38d6a7f0"/><section>
    <title>OpGetGameList()</title>
<indexterm><primary>OpGetGameList</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpGetGameList</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpGetGameList (<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link> lobby, string queryData)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Gets a list of games matching a SQL-like where clause. </para>
</para>

<para>Operation is only available in lobbies of type SqlLobby. This is an async request which triggers a OnOperationResponse() call. Returned game list is stored in RoomInfoList. </para>

<para>https://doc.photonengine.com/en-us/realtime/current/reference/matchmaking-and-lobby::sql_lobby_type 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>lobby</entry><entry>
<para>The lobby to query. Has to be of type SqlLobby.</para>
</entry>
                            </row>
                            <row>
<entry>queryData</entry><entry>
<para>The sql query statement.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If the operation could be sent (has to be connected).</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00531">531</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a3db92fd58a230dbc94c068ae38d6a7f0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1ac21c4ac3367ad68703fb9fd29f1fa063"/><section>
    <title>OpGetRegions()</title>
<indexterm><primary>OpGetRegions</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpGetRegions</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpGetRegions (string appId)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00126">126</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a3d08eb96624ac46f39fba969784e76b4"/><section>
    <title>OpJoinLobby()</title>
<indexterm><primary>OpJoinLobby</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpJoinLobby</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpJoinLobby (<link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link> lobby = <computeroutput>null</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Joins the lobby on the Master Server, where you get a list of RoomInfos of currently open rooms. </para>
</para>

<para>This is an async request which triggers a OnOperationResponse() call. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>lobby</entry><entry>
<para>The lobby join to.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If the operation could be sent (has to be connected).</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00140">140</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a3d08eb96624ac46f39fba969784e76b4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a474dc2086d3d17bce9b4f0ddc2eec95a"/><section>
    <title>OpJoinRandomOrCreateRoom()</title>
<indexterm><primary>OpJoinRandomOrCreateRoom</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpJoinRandomOrCreateRoom</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpJoinRandomOrCreateRoom (<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params">OpJoinRandomRoomParams</link> opJoinRandomRoomParams, <link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link> createRoomParams)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Only used on the Master Server. </para>
</para>

<para>It will assign a game server and room to join-or-create. On the Game Server, the OpJoin is used with option &quot;create if not exists&quot;. </para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00437">437</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a474dc2086d3d17bce9b4f0ddc2eec95a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1aa0b9a197c11005dcc87e07e885239d9b"/><section>
    <title>OpJoinRandomRoom()</title>
<indexterm><primary>OpJoinRandomRoom</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpJoinRandomRoom</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpJoinRandomRoom (<link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params">OpJoinRandomRoomParams</link> opJoinRandomRoomParams)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Operation to join a random, available room. </para>
</para>

<para>Overloads take additional player properties. This is an async request which triggers a OnOperationResponse() call. If all rooms are closed or full, the OperationResponse will have a returnCode of <link linkend="_class_photon_1_1_realtime_1_1_error_code_1a570678324c9cbd7b1531fa8ac519f48c">ErrorCode.NoRandomMatchFound</link>. If successful, the OperationResponse contains a gameserver address and the name of some room. </para>

<para><formalpara><title>Returns</title>

<para>If the operation could be sent currently (requires connection).</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00388">388</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_aa0b9a197c11005dcc87e07e885239d9b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a1dc6be1075f64edd0b746f2e61c114f5"/><section>
    <title>OpJoinRoom()</title>
<indexterm><primary>OpJoinRoom</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpJoinRoom</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpJoinRoom (<link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link> opParams)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Joins a room by name or creates new room if room with given name not exists. </para>
</para>

<para>The OperationResponse depends on the server the peer is connected to: Master will return a Game Server to connect to. Game Server will return the joined <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&apos;s data. This is an async request which triggers a OnOperationResponse() call. </para>

<para>If the room is not existing (anymore), the OperationResponse will have a returnCode of <link linkend="_class_photon_1_1_realtime_1_1_error_code_1a959ba0e3a6b195e5c2d7ccbca3d8f39a">ErrorCode.GameDoesNotExist</link>. Other possible ErrorCodes are: GameClosed, GameFull. </para>

<para><formalpara><title>Returns</title>

<para>If the operation could be sent (requires connection).</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00330">330</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a1dc6be1075f64edd0b746f2e61c114f5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1af7132f864b88af2ff8bb3d6221702841"/><section>
    <title>OpLeaveLobby()</title>
<indexterm><primary>OpLeaveLobby</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpLeaveLobby</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpLeaveLobby ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Leaves the lobby on the Master Server. </para>
</para>

<para>This is an async request which triggers a OnOperationResponse() call. </para>

<para><formalpara><title>Returns</title>

<para>If the operation could be sent (requires connection).</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00164">164</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_af7132f864b88af2ff8bb3d6221702841_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a74f970c5eeaef7851411f0b5011bd693"/><section>
    <title>OpLeaveRoom()</title>
<indexterm><primary>OpLeaveRoom</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpLeaveRoom</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpLeaveRoom (bool becomeInactive, bool sendAuthCookie = <computeroutput>false</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Leaves a room with option to come back later or &quot;for good&quot;. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>becomeInactive</entry><entry>
<para>Async games can be re-joined (loaded) later on. Set to false, if you want to abandon a game entirely.</para>
</entry>
                            </row>
                            <row>
<entry>sendAuthCookie</entry><entry>
<para>WebFlag: Securely transmit the encrypted object AuthCookie to the web service in PathLeave webhook when available</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If the opteration can be send currently.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00507">507</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a74f970c5eeaef7851411f0b5011bd693_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1af6d68f09d3f683f8d709c3aa4dfe03cc"/><section>
    <title>OpRaiseEvent()</title>
<indexterm><primary>OpRaiseEvent</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpRaiseEvent</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpRaiseEvent (byte eventCode, object customEventContent, <link linkend="_class_photon_1_1_realtime_1_1_raise_event_options">RaiseEventOptions</link> raiseEventOptions, SendOptions sendOptions)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Send an event with custom code/type and any content to the other players in the same room. </para>
</para>

<para>This override explicitly uses another parameter order to not mix it up with the implementation for Hashtable only.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>eventCode</entry><entry>
<para>Identifies this type of event (and the content). Your game&apos;s event codes can start with 0.</para>
</entry>
                            </row>
                            <row>
<entry>customEventContent</entry><entry>
<para>Any serializable datatype (including Hashtable like the other OpRaiseEvent overloads).</para>
</entry>
                            </row>
                            <row>
<entry>raiseEventOptions</entry><entry>
<para>Contains (slightly) less often used options. If you pass null, the default options will be used.</para>
</entry>
                            </row>
                            <row>
<entry>sendOptions</entry><entry>
<para>Send options for reliable, encryption etc</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If operation could be enqueued for sending. Sent when calling: Service or SendOutgoingCommands.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00912">912</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_af6d68f09d3f683f8d709c3aa4dfe03cc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1ad3b61c42e78a82917bb9093cc99e3a32"/><section>
    <title>OpSetCustomPropertiesOfActor()</title>
<indexterm><primary>OpSetCustomPropertiesOfActor</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpSetCustomPropertiesOfActor</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.LoadBalancingPeer.OpSetCustomPropertiesOfActor (int actorNr, <link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link> actorProperties)</computeroutput></para><para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00615">615</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a1ad2f59de68ab42a4882bf0a9ea6595b"/><section>
    <title>OpSetCustomPropertiesOfRoom()</title>
<indexterm><primary>OpSetCustomPropertiesOfRoom</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpSetCustomPropertiesOfRoom</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.LoadBalancingPeer.OpSetCustomPropertiesOfRoom (<link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link> gameProperties)</computeroutput></para><para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00670">670</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a8c97f436ca4b81bfb18d4a27e88bf6a3"/><section>
    <title>OpSetPropertyOfRoom()</title>
<indexterm><primary>OpSetPropertyOfRoom</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpSetPropertyOfRoom</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.LoadBalancingPeer.OpSetPropertyOfRoom (byte propCode, object value)<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00663">663</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_load_balancing_peer_1a691e7bdd1af18f2bbfaf11118707d152"/><section>
    <title>OpSettings()</title>
<indexterm><primary>OpSettings</primary><secondary>Photon.Realtime.LoadBalancingPeer</secondary></indexterm>
<indexterm><primary>Photon.Realtime.LoadBalancingPeer</primary><secondary>OpSettings</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.LoadBalancingPeer.OpSettings (bool receiveLobbyStats)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Internally used operation to set some &quot;per server&quot; settings. </para>
</para>

<para>This is for the Master Server. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>receiveLobbyStats</entry><entry>
<para>Set to true, to get Lobby Statistics (lists of existing lobbies).</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>False if the operation could not be sent.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l00979">979</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_load_balancing_peer_a691e7bdd1af18f2bbfaf11118707d152_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/<link linkend="__loadbalancing_peer_8cs">LoadbalancingPeer.cs</link></section>
</section>
