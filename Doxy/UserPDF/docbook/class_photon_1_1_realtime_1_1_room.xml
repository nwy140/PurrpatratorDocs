<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_photon_1_1_realtime_1_1_room" xml:lang="en-US">
<title>Photon.Realtime.Room Class Reference</title>
<indexterm><primary>Photon.Realtime.Room</primary></indexterm>
<para>

<para>This class represents a room a client joins/joined. </para>
 
</para>
Inheritance diagram for Photon.Realtime.Room:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Photon.Realtime.Room:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_realtime_1_1_room_1a87a911c89e975f4fb602f7b6ddd0f762">Room</link> (string roomName, <link linkend="_class_photon_1_1_realtime_1_1_room_options">RoomOptions</link> options, bool isOffline=false)</para>

<para>Creates a <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> (representation) with given name and properties and the &quot;listing options&quot; as provided by parameters. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_room_1aff6e067d041db92e4fbde6a3277926ad">SetCustomProperties</link> (<link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link> propertiesToSet, <link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link> expectedProperties=null, <link linkend="_class_photon_1_1_realtime_1_1_web_flags">WebFlags</link> webFlags=null)</para>

<para>Updates and synchronizes this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&apos;s Custom Properties. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1af8eb5c7011db5fa9797f680d87f0dea8">SetPropertiesListedInLobby</link> (string[] lobbyProps)</para>

<para>Enables you to define the properties available in the lobby if not all properties are needed to pick a room. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1a9b3518b40c0fb043fe61ecf49e7cef59">SetMasterClient</link> (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> masterClientPlayer)</para>

<para>Asks the server to assign another player as Master Client of your current room. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_photon_1_1_realtime_1_1_room_1a56e911de4cd47b4fd2dba63830c35ed3">AddPlayer</link> (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> player)</para>

<para>Checks if the player is in the room&apos;s list already and calls <link linkend="_class_photon_1_1_realtime_1_1_room_1a5e614a00e26aae5f35f0805c4e4bb7a9">StorePlayer()</link> if not. </para>
</listitem>
            <listitem><para>virtual <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> <link linkend="_class_photon_1_1_realtime_1_1_room_1a5e614a00e26aae5f35f0805c4e4bb7a9">StorePlayer</link> (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> player)</para>

<para>Updates a player reference in the Players dictionary (no matter if it existed before or not). </para>
</listitem>
            <listitem><para>virtual <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> <link linkend="_class_photon_1_1_realtime_1_1_room_1a267b83eaa30e0f7486830dd25e07479c">GetPlayer</link> (int id, bool findMaster=false)</para>

<para>Tries to find the player with given actorNumber (a.k.a. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1ac8c34cb573e9ae58268748ff108d7baf">ClearExpectedUsers</link> ()</para>

<para>Attempts to remove all current expected users from the server&apos;s Slot Reservation list. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1ad2c87953a6e523e71cf658e98fd32512">SetExpectedUsers</link> (string[] newExpectedUsers)</para>

<para>Attempts to update the expected users from the server&apos;s Slot Reservation list. </para>
</listitem>
            <listitem><para>override string <link linkend="_class_photon_1_1_realtime_1_1_room_1a30bce7764a5060e9ecda9c5ef5dc533d">ToString</link> ()</para>

<para>Returns a summary of this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> instance as string. </para>
</listitem>
            <listitem><para>new string <link linkend="_class_photon_1_1_realtime_1_1_room_1a4422b278130187a484b90dbee884c9d2">ToStringFull</link> ()</para>

<para>Returns a summary of this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> instance as longer string, including Custom Properties. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link> <link linkend="_class_photon_1_1_realtime_1_1_room_1a2738258e04aeed075fbd8ad8e1e9363c">LoadBalancingClient</link><computeroutput> [getset]</computeroutput>
</para>

<para>A reference to the <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link> which is currently keeping the connection and state. </para>
</listitem>
            <listitem><para>new string <link linkend="_class_photon_1_1_realtime_1_1_room_1afcfe0384320a9c317bbd1c23ee733bc1">Name</link><computeroutput> [getset]</computeroutput>
</para>

<para>The name of a room. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1af0073760bb6821f6bdeb7ff05fa9ea11">IsOffline</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>new bool <link linkend="_class_photon_1_1_realtime_1_1_room_1a0f2694303332b89463f77a1a4c5e194e">IsOpen</link><computeroutput> [getset]</computeroutput>
</para>

<para>Defines if the room can be joined. </para>
</listitem>
            <listitem><para>new bool <link linkend="_class_photon_1_1_realtime_1_1_room_1aec3e796094cb05e350dcf7b6abab6236">IsVisible</link><computeroutput> [getset]</computeroutput>
</para>

<para>Defines if the room is listed in its lobby. </para>
</listitem>
            <listitem><para>new byte <link linkend="_class_photon_1_1_realtime_1_1_room_1a22243151d5e971fd6d33ac9e0aff501e">MaxPlayers</link><computeroutput> [getset]</computeroutput>
</para>

<para>Sets a limit of players to this room. </para>
</listitem>
            <listitem><para>new byte <link linkend="_class_photon_1_1_realtime_1_1_room_1a04089922748d1e98fcb3397dd7d33bf2">PlayerCount</link><computeroutput> [get]</computeroutput>
</para>

<para>The count of players in this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> (using this.Players.Count).</para>
</listitem>
            <listitem><para>Dictionary&lt; int, <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> &gt; <link linkend="_class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa">Players</link><computeroutput> [get]</computeroutput>
</para>

<para>While inside a <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>, this is the list of players who are also in that room.</para>
</listitem>
            <listitem><para>string[] <link linkend="_class_photon_1_1_realtime_1_1_room_1a75c9a7f303737cde61ffc2b597c90d9c">ExpectedUsers</link><computeroutput> [get]</computeroutput>
</para>

<para>List of users who are expected to join this room. </para>
</listitem>
            <listitem><para>int <link linkend="_class_photon_1_1_realtime_1_1_room_1aadce8b8f98659bf2ebf1de76d3247cff">PlayerTtl</link><computeroutput> [getset]</computeroutput>
</para>

<para><link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> Time To Live. How long any player can be inactive (due to disconnect or leave) before the user gets removed from the playerlist (freeing a slot).</para>
</listitem>
            <listitem><para>int <link linkend="_class_photon_1_1_realtime_1_1_room_1a8225b8a5d67bcb6e6c8248f432bd7986">EmptyRoomTtl</link><computeroutput> [getset]</computeroutput>
</para>

<para><link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> Time To Live. How long a room stays available (and in server-memory), after the last player becomes inactive. After this time, the room gets persisted or destroyed.</para>
</listitem>
            <listitem><para>int <link linkend="_class_photon_1_1_realtime_1_1_room_1a56332f997a5d59eae6d21dcbc4751d83">MasterClientId</link><computeroutput> [get]</computeroutput>
</para>

<para>The ID (actorNumber, actorNumber) of the player who&apos;s the master of this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>. </para>
</listitem>
            <listitem><para>string[] <link linkend="_class_photon_1_1_realtime_1_1_room_1a8355a2216f453b61756b48014870e6cd">PropertiesListedInLobby</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets a list of custom properties that are in the <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> of the Lobby. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1a71478a698297b122b5f29098fe6399c5">AutoCleanUp</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets if this room cleans up the event cache when a player (actor) leaves. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1ad176930be4ce4e546879e50cc6aa2058">BroadcastPropertiesChangeToAll</link><computeroutput> [get]</computeroutput>
</para>

<para>Define if the client who calls SetProperties should receive the properties update event or not. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1a74ef26cdcee2d1e259da5704fe10ea29">SuppressRoomEvents</link><computeroutput> [get]</computeroutput>
</para>

<para>Define if Join and Leave events should not be sent to clients in the room. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1a61260e194fdf4c118c4ff25ee20b95e2">SuppressPlayerInfo</link><computeroutput> [get]</computeroutput>
</para>

<para>Extends SuppressRoomEvents: Define if Join and Leave events but also the actors&apos; list and their respective properties should not be sent to clients. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1ac3a12714d44e9b81210994948e081ef1">PublishUserId</link><computeroutput> [get]</computeroutput>
</para>

<para>Define if UserIds of the players are broadcast in the room. Useful for FindFriends and reserving slots for expected users.</para>
</listitem>
            <listitem><para>bool <link linkend="_class_photon_1_1_realtime_1_1_room_1aa5bdd98d4845727300c3f67b884d967e">DeleteNullProperties</link><computeroutput> [get]</computeroutput>
</para>

<para>Define if actor or room properties with null values are removed on the server or kept.</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This class represents a room a client joins/joined. </para>



<para>Contains a list of current players, their properties and those of this room, too. A room instance has a number of &quot;well known&quot; properties like IsOpen, MaxPlayers which can be changed. Your own, custom properties can be set via <link linkend="_class_photon_1_1_realtime_1_1_room_1aff6e067d041db92e4fbde6a3277926ad">SetCustomProperties()</link> while being in the room.</para>

<para>Typically, this class should be extended by a game-specific implementation with logic and extra features. </para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00040">40</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a87a911c89e975f4fb602f7b6ddd0f762"/><section>
    <title>Room()</title>
<indexterm><primary>Room</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>Room</secondary></indexterm>
<para><computeroutput>Photon.Realtime.Room.Room (string roomName, <link linkend="_class_photon_1_1_realtime_1_1_room_options">RoomOptions</link> options, bool isOffline = <computeroutput>false</computeroutput>
)</computeroutput></para><para>

<para>Creates a <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> (representation) with given name and properties and the &quot;listing options&quot; as provided by parameters. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>roomName</entry><entry>
<para>Name of the room (can be null until it&apos;s actually created on server).</para>
</entry>
                            </row>
                            <row>
<entry>options</entry><entry>
<para><link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> options.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00314">314</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a56e911de4cd47b4fd2dba63830c35ed3"/><section>
    <title>AddPlayer()</title>
<indexterm><primary>AddPlayer</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>AddPlayer</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.Room.AddPlayer (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> player)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Checks if the player is in the room&apos;s list already and calls <link linkend="_class_photon_1_1_realtime_1_1_room_1a5e614a00e26aae5f35f0805c4e4bb7a9">StorePlayer()</link> if not. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>player</entry><entry>
<para>The new player - identified by ID.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>False if the player could not be added (cause it was in the list already).</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00509">509</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room_a56e911de4cd47b4fd2dba63830c35ed3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1ac8c34cb573e9ae58268748ff108d7baf"/><section>
    <title>ClearExpectedUsers()</title>
<indexterm><primary>ClearExpectedUsers</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>ClearExpectedUsers</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.ClearExpectedUsers ( )</computeroutput></para><para>

<para>Attempts to remove all current expected users from the server&apos;s Slot Reservation list. </para>
</para>

<para>Note that this operation can conflict with new/other users joining. They might be adding users to the list of expected users before or after this client called ClearExpectedUsers.</para>

<para>This room&apos;s expectedUsers value will update, when the server sends a successful update.</para>

<para>Internals: This methods wraps up setting the ExpectedUsers property of a room. </para>

<para><formalpara><title>Returns</title>

<para>If the operation could be sent to the server.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00567">567</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room_ac8c34cb573e9ae58268748ff108d7baf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a267b83eaa30e0f7486830dd25e07479c"/><section>
    <title>GetPlayer()</title>
<indexterm><primary>GetPlayer</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>GetPlayer</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> Photon.Realtime.Room.GetPlayer (int id, bool findMaster = <computeroutput>false</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Tries to find the player with given actorNumber (a.k.a. </para>
</para>

<para>ID). Only useful when in a <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>, as IDs are only valid per <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>id</entry><entry>
<para>ID to look for.</para>
</entry>
                            </row>
                            <row>
<entry>findMaster</entry><entry>
<para>If true, the Master Client is returned for ID == 0.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The player with the ID or null.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00545">545</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room_a267b83eaa30e0f7486830dd25e07479c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1aff6e067d041db92e4fbde6a3277926ad"/><section>
    <title>SetCustomProperties()</title>
<indexterm><primary>SetCustomProperties</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>SetCustomProperties</secondary></indexterm>
<para><computeroutput>virtual bool Photon.Realtime.Room.SetCustomProperties (<link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link> propertiesToSet, <link linkend="__player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd">Hashtable</link> expectedProperties = <computeroutput>null</computeroutput>
, <link linkend="_class_photon_1_1_realtime_1_1_web_flags">WebFlags</link> webFlags = <computeroutput>null</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Updates and synchronizes this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>&apos;s Custom Properties. </para>
</para>

<para>Optionally, expectedProperties can be provided as condition. </para>

<para>Custom Properties are a set of string keys and arbitrary values which is synchronized for the players in a <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>. They are available when the client enters the room, as they are in the response of OpJoin and OpCreate.</para>

<para>Custom Properties either relate to the (current) <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> or a <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> (in that <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>).</para>

<para>Both classes locally cache the current key/values and make them available as property: CustomProperties. This is provided only to read them. You must use the method SetCustomProperties to set/modify them.</para>

<para>Any client can set any Custom Properties anytime (when in a room). It&apos;s up to the game logic to organize how they are best used.</para>

<para>You should call SetCustomProperties only with key/values that are new or changed. This reduces traffic and performance.</para>

<para>Unless you define some expectedProperties, setting key/values is always permitted. In this case, the property-setting client will not receive the new values from the server but instead update its local cache in SetCustomProperties.</para>

<para>If you define expectedProperties, the server will skip updates if the server property-cache does not contain all expectedProperties with the same values. In this case, the property-setting client will get an update from the server and update it&apos;s cached key/values at about the same time as everyone else.</para>

<para>The benefit of using expectedProperties can be only one client successfully sets a key from one known value to another. As example: Store who owns an item in a Custom Property &quot;ownedBy&quot;. It&apos;s 0 initally. When multiple players reach the item, they all attempt to change &quot;ownedBy&quot; from 0 to their actorNumber. If you use expectedProperties {&quot;ownedBy&quot;, 0} as condition, the first player to take the item will have it (and the others fail to set the ownership).</para>

<para>Properties get saved with the game state for Turnbased games (which use IsPersistent = true). </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>propertiesToSet</entry><entry>
<para>Hashtable of Custom Properties that changes.</para>
</entry>
                            </row>
                            <row>
<entry>expectedProperties</entry><entry>
<para>Provide some keys/values to use as condition for setting the new values. Client must be in room.</para>
</entry>
                            </row>
                            <row>
<entry>webFlags</entry><entry>
<para>Defines if this SetCustomProperties-operation gets forwarded to your WebHooks. Client must be in room.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>False if propertiesToSet is null or empty or have zero string keys. True in offline mode even if expectedProperties or webFlags are used. Otherwise, returns if this operation could be sent to the server. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00405">405</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room_aff6e067d041db92e4fbde6a3277926ad_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1ad2c87953a6e523e71cf658e98fd32512"/><section>
    <title>SetExpectedUsers()</title>
<indexterm><primary>SetExpectedUsers</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>SetExpectedUsers</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.SetExpectedUsers (string[] newExpectedUsers)</computeroutput></para><para>

<para>Attempts to update the expected users from the server&apos;s Slot Reservation list. </para>
</para>

<para>Note that this operation can conflict with new/other users joining. They might be adding users to the list of expected users before or after this client called SetExpectedUsers.</para>

<para>This room&apos;s expectedUsers value will update, when the server sends a successful update.</para>

<para>Internals: This methods wraps up setting the ExpectedUsers property of a room. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>newExpectedUsers</entry><entry>
<para>The new array of UserIDs to be reserved in the room.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If the operation could be sent to the server.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00589">589</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room_ad2c87953a6e523e71cf658e98fd32512_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room_ad2c87953a6e523e71cf658e98fd32512_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a9b3518b40c0fb043fe61ecf49e7cef59"/><section>
    <title>SetMasterClient()</title>
<indexterm><primary>SetMasterClient</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>SetMasterClient</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.SetMasterClient (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> masterClientPlayer)</computeroutput></para><para>

<para>Asks the server to assign another player as Master Client of your current room. </para>
</para>

<para>RaiseEvent has the option to send messages only to the Master Client of a room. SetMasterClient affects which client gets those messages.</para>

<para>This method calls an operation on the server to set a new Master Client, which takes a roundtrip. In case of success, this client and the others get the new Master Client from the server.</para>

<para>SetMasterClient tells the server which current Master Client should be replaced with the new one. It will fail, if anything switches the Master Client moments earlier. There is no callback for this error. All clients should get the new Master Client assigned by the server anyways.</para>

<para>See also: MasterClientId </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>masterClientPlayer</entry><entry>
<para>The player to become the next Master Client.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>False when this operation couldn&apos;t be done currently. Requires a v4 <link linkend="_namespace_photon">Photon</link> Server.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00493">493</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room_a9b3518b40c0fb043fe61ecf49e7cef59_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1af8eb5c7011db5fa9797f680d87f0dea8"/><section>
    <title>SetPropertiesListedInLobby()</title>
<indexterm><primary>SetPropertiesListedInLobby</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>SetPropertiesListedInLobby</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.SetPropertiesListedInLobby (string[] lobbyProps)</computeroutput></para><para>

<para>Enables you to define the properties available in the lobby if not all properties are needed to pick a room. </para>
</para>

<para>Limit the amount of properties sent to users in the lobby to improve speed and stability. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>lobbyProps</entry><entry>
<para>An array of custom room property names to forward to the lobby.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If the operation could be sent to the server.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00444">444</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a5e614a00e26aae5f35f0805c4e4bb7a9"/><section>
    <title>StorePlayer()</title>
<indexterm><primary>StorePlayer</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>StorePlayer</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> Photon.Realtime.Room.StorePlayer (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> player)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Updates a player reference in the Players dictionary (no matter if it existed before or not). </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>player</entry><entry>
<para>The <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> instance to insert into the room.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00524">524</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_photon_1_1_realtime_1_1_room_a5e614a00e26aae5f35f0805c4e4bb7a9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a30bce7764a5060e9ecda9c5ef5dc533d"/><section>
    <title>ToString()</title>
<indexterm><primary>ToString</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>ToString</secondary></indexterm>
<para><computeroutput>override string Photon.Realtime.Room.ToString ( )</computeroutput></para><para>

<para>Returns a summary of this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> instance as string. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Summary of this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> instance.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00618">618</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a4422b278130187a484b90dbee884c9d2"/><section>
    <title>ToStringFull()</title>
<indexterm><primary>ToStringFull</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>ToStringFull</secondary></indexterm>
<para><computeroutput>new string Photon.Realtime.Room.ToStringFull ( )</computeroutput></para><para>

<para>Returns a summary of this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> instance as longer string, including Custom Properties. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Summary of this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> instance.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00625">625</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a71478a698297b122b5f29098fe6399c5"/><section>
    <title>AutoCleanUp</title>
<indexterm><primary>AutoCleanUp</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>AutoCleanUp</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.AutoCleanUp<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets if this room cleans up the event cache when a player (actor) leaves. </para>
</para>

<para>This affects which events joining players get.</para>

<para>Set in room creation via <link linkend="_class_photon_1_1_realtime_1_1_room_options_1afe21151ad217648ac308d208eb7cef74">RoomOptions.CleanupCacheOnLeave</link>.</para>

<para>Within PUN, auto cleanup of events means that cached RPCs and instantiated networked objects are deleted from the room. </para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00286">286</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1ad176930be4ce4e546879e50cc6aa2058"/><section>
    <title>BroadcastPropertiesChangeToAll</title>
<indexterm><primary>BroadcastPropertiesChangeToAll</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>BroadcastPropertiesChangeToAll</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.BroadcastPropertiesChangeToAll<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Define if the client who calls SetProperties should receive the properties update event or not. </para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00295">295</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1aa5bdd98d4845727300c3f67b884d967e"/><section>
    <title>DeleteNullProperties</title>
<indexterm><primary>DeleteNullProperties</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>DeleteNullProperties</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.DeleteNullProperties<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Define if actor or room properties with null values are removed on the server or kept.</para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00303">303</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a8225b8a5d67bcb6e6c8248f432bd7986"/><section>
    <title>EmptyRoomTtl</title>
<indexterm><primary>EmptyRoomTtl</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>EmptyRoomTtl</secondary></indexterm>
<para><computeroutput>int Photon.Realtime.Room.EmptyRoomTtl<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para><link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> Time To Live. How long a room stays available (and in server-memory), after the last player becomes inactive. After this time, the room gets persisted or destroyed.</para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00234">234</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a75c9a7f303737cde61ffc2b597c90d9c"/><section>
    <title>ExpectedUsers</title>
<indexterm><primary>ExpectedUsers</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>ExpectedUsers</secondary></indexterm>
<para><computeroutput>string [] Photon.Realtime.Room.ExpectedUsers<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>List of users who are expected to join this room. </para>
</para>

<para>In matchmaking, <link linkend="_namespace_photon">Photon</link> blocks a slot for each of these UserIDs out of the MaxPlayers. </para>

<para>The corresponding feature in <link linkend="_namespace_photon">Photon</link> is called &quot;Slot Reservation&quot; and can be found in the doc pages. Define expected players in the methods: <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ac5360b52a4284e623f41b0f870843342">LoadBalancingClient.OpCreateRoom</link>, <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a0dc81af9d3bde45838728c93f906c2ca">LoadBalancingClient.OpJoinRoom</link> and <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ad00ac5adf15d214a91a2762a99f07cf6">LoadBalancingClient.OpJoinRandomRoom</link>. </para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00209">209</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1af0073760bb6821f6bdeb7ff05fa9ea11"/><section>
    <title>IsOffline</title>
<indexterm><primary>IsOffline</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>IsOffline</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.IsOffline<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__room_8cs_source_1l00064">64</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a0f2694303332b89463f77a1a4c5e194e"/><section>
    <title>IsOpen</title>
<indexterm><primary>IsOpen</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>IsOpen</secondary></indexterm>
<para><computeroutput>new bool Photon.Realtime.Room.IsOpen<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Defines if the room can be joined. </para>
</para>

<para>This does not affect listing in a lobby but joining the room will fail if not open. If not open, the room is excluded from random matchmaking. Due to racing conditions, found matches might become closed while users are trying to join. Simply re-connect to master and find another. Use property &quot;IsVisible&quot; to not list the room.</para>

<para>As part of <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> this can&apos;t be set. As part of a <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> (which the player joined), the setter will update the server and all clients. </para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00090">90</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1aec3e796094cb05e350dcf7b6abab6236"/><section>
    <title>IsVisible</title>
<indexterm><primary>IsVisible</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>IsVisible</secondary></indexterm>
<para><computeroutput>new bool Photon.Realtime.Room.IsVisible<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Defines if the room is listed in its lobby. </para>
</para>

<para>Rooms can be created invisible, or changed to invisible. To change if a room can be joined, use property: open.</para>

<para>As part of <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> this can&apos;t be set. As part of a <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> (which the player joined), the setter will update the server and all clients. </para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00121">121</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a2738258e04aeed075fbd8ad8e1e9363c"/><section>
    <title>LoadBalancingClient</title>
<indexterm><primary>LoadBalancingClient</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>LoadBalancingClient</secondary></indexterm>
<para><computeroutput><link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link> Photon.Realtime.Room.LoadBalancingClient<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>A reference to the <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link> which is currently keeping the connection and state. </para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00045">45</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a56332f997a5d59eae6d21dcbc4751d83"/><section>
    <title>MasterClientId</title>
<indexterm><primary>MasterClientId</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>MasterClientId</secondary></indexterm>
<para><computeroutput>int Photon.Realtime.Room.MasterClientId<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>The ID (actorNumber, actorNumber) of the player who&apos;s the master of this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>. </para>
</para>

<para>Note: This changes when the current master leaves the room. </para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00256">256</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a22243151d5e971fd6d33ac9e0aff501e"/><section>
    <title>MaxPlayers</title>
<indexterm><primary>MaxPlayers</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>MaxPlayers</secondary></indexterm>
<para><computeroutput>new byte Photon.Realtime.Room.MaxPlayers<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Sets a limit of players to this room. </para>
</para>

<para>This property is synced and shown in lobby, too. If the room is full (players count == maxplayers), joining this room will fail. </para>

<para>As part of <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> this can&apos;t be set. As part of a <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> (which the player joined), the setter will update the server and all clients. </para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00150">150</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1afcfe0384320a9c317bbd1c23ee733bc1"/><section>
    <title>Name</title>
<indexterm><primary>Name</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>Name</secondary></indexterm>
<para><computeroutput>new string Photon.Realtime.Room.Name<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The name of a room. </para>
</para>

<para>Unique identifier (per region and virtual appid) for a room/match.</para>

<para>The name can&apos;t be changed once it&apos;s set by the server.</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00049">49</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a04089922748d1e98fcb3397dd7d33bf2"/><section>
    <title>PlayerCount</title>
<indexterm><primary>PlayerCount</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>PlayerCount</secondary></indexterm>
<para><computeroutput>new byte Photon.Realtime.Room.PlayerCount<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>The count of players in this <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link> (using this.Players.Count).</para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00172">172</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa"/><section>
    <title>Players</title>
<indexterm><primary>Players</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>Players</secondary></indexterm>
<para><computeroutput>Dictionary&lt;int, <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link>&gt; Photon.Realtime.Room.Players<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>While inside a <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link>, this is the list of players who are also in that room.</para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00189">189</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1aadce8b8f98659bf2ebf1de76d3247cff"/><section>
    <title>PlayerTtl</title>
<indexterm><primary>PlayerTtl</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>PlayerTtl</secondary></indexterm>
<para><computeroutput>int Photon.Realtime.Room.PlayerTtl<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para><link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> Time To Live. How long any player can be inactive (due to disconnect or leave) before the user gets removed from the playerlist (freeing a slot).</para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00215">215</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a8355a2216f453b61756b48014870e6cd"/><section>
    <title>PropertiesListedInLobby</title>
<indexterm><primary>PropertiesListedInLobby</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>PropertiesListedInLobby</secondary></indexterm>
<para><computeroutput>string [] Photon.Realtime.Room.PropertiesListedInLobby<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets a list of custom properties that are in the <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link> of the Lobby. </para>
</para>

<para>This list is defined when creating the room and can&apos;t be changed afterwards. Compare: <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1ac5360b52a4284e623f41b0f870843342">LoadBalancingClient.OpCreateRoom()</link> </para>

<para>You could name properties that are not set from the beginning. Those will be synced with the lobby when added later on.</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00263">263</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1ac3a12714d44e9b81210994948e081ef1"/><section>
    <title>PublishUserId</title>
<indexterm><primary>PublishUserId</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>PublishUserId</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.PublishUserId<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Define if UserIds of the players are broadcast in the room. Useful for FindFriends and reserving slots for expected users.</para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00301">301</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a61260e194fdf4c118c4ff25ee20b95e2"/><section>
    <title>SuppressPlayerInfo</title>
<indexterm><primary>SuppressPlayerInfo</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>SuppressPlayerInfo</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.SuppressPlayerInfo<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Extends SuppressRoomEvents: Define if Join and Leave events but also the actors&apos; list and their respective properties should not be sent to clients. </para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00299">299</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<anchor xml:id="_class_photon_1_1_realtime_1_1_room_1a74ef26cdcee2d1e259da5704fe10ea29"/><section>
    <title>SuppressRoomEvents</title>
<indexterm><primary>SuppressRoomEvents</primary><secondary>Photon.Realtime.Room</secondary></indexterm>
<indexterm><primary>Photon.Realtime.Room</primary><secondary>SuppressRoomEvents</secondary></indexterm>
<para><computeroutput>bool Photon.Realtime.Room.SuppressRoomEvents<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Define if Join and Leave events should not be sent to clients in the room. </para>
</para>
<para>
Definition at line <link linkend="__room_8cs_source_1l00297">297</link> of file <link linkend="__room_8cs_source">Room.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/<link linkend="__room_8cs">Room.cs</link></section>
</section>
