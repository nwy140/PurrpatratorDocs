<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_player_list_item___old" xml:lang="en-US">
<title>PlayerListItem_Old Class Reference</title>
<indexterm><primary>PlayerListItem_Old</primary></indexterm>
Inheritance diagram for PlayerListItem_Old:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_list_item___old__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for PlayerListItem_Old:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_player_list_item___old__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_player_list_item___old_1a9a07e4e1db78bbbdc6f231c1258a79df">SetUpPlayer</link> (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> _player)</para>
</listitem>
            <listitem><para>override void <link linkend="_class_player_list_item___old_1a0cb45c2fb745f40d42cafc2cb82f52b2">OnPlayerLeftRoom</link> (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> otherPlayer)</para>

<para>Called when a remote player left the room or became inactive. </para>
</listitem>
            <listitem><para>override void <link linkend="_class_player_list_item___old_1ac26068a0ec197118d2a280bc82c3f17c">OnLeftRoom</link> ()</para>

<para>Called when the local user/client left a room, so the game&apos;s logic can clean up it&apos;s internal state. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__player_list_item___old_8cs_source_1l00009">9</link> of file <link linkend="__player_list_item___old_8cs_source">PlayerListItem_Old.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_player_list_item___old_1ac26068a0ec197118d2a280bc82c3f17c"/><section>
    <title>OnLeftRoom()</title>
<indexterm><primary>OnLeftRoom</primary><secondary>PlayerListItem_Old</secondary></indexterm>
<indexterm><primary>PlayerListItem_Old</primary><secondary>OnLeftRoom</secondary></indexterm>
<para><computeroutput>override void PlayerListItem_Old.OnLeftRoom ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when the local user/client left a room, so the game&apos;s logic can clean up it&apos;s internal state. </para>
</para>

<para>When leaving a room, the LoadBalancingClient will disconnect the Game Server and connect to the Master Server. This wraps up multiple internal actions.</para>

<para>Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms. </para>
<para>
Reimplemented from <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1abc95ff5fb76dbbbe7efa875cea69a650">Photon.Pun.MonoBehaviourPunCallbacks</link>.</para>
<para>
Definition at line <link linkend="__player_list_item___old_8cs_source_1l00030">30</link> of file <link linkend="__player_list_item___old_8cs_source">PlayerListItem_Old.cs</link>.</para>
</section>
<anchor xml:id="_class_player_list_item___old_1a0cb45c2fb745f40d42cafc2cb82f52b2"/><section>
    <title>OnPlayerLeftRoom()</title>
<indexterm><primary>OnPlayerLeftRoom</primary><secondary>PlayerListItem_Old</secondary></indexterm>
<indexterm><primary>PlayerListItem_Old</primary><secondary>OnPlayerLeftRoom</secondary></indexterm>
<para><computeroutput>override void PlayerListItem_Old.OnPlayerLeftRoom (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> otherPlayer)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called when a remote player left the room or became inactive. </para>
</para>

<para>Check otherPlayer.IsInactive. </para>

<para>If another player leaves the room or if the server detects a lost connection, this callback will be used to notify your game logic.</para>

<para>Depending on the room&apos;s setup, players may become inactive, which means they may return and retake their spot in the room. In such cases, the Player stays in the Room.Players dictionary.</para>

<para>If the player is not just inactive, it gets removed from the Room.Players dictionary, before the callback is called. </para>
<para>
Reimplemented from <link linkend="_class_photon_1_1_pun_1_1_mono_behaviour_pun_callbacks_1a0c633b69e27c8f7d8840ac2279d8e1e9">Photon.Pun.MonoBehaviourPunCallbacks</link>.</para>
<para>
Definition at line <link linkend="__player_list_item___old_8cs_source_1l00021">21</link> of file <link linkend="__player_list_item___old_8cs_source">PlayerListItem_Old.cs</link>.</para>
</section>
<anchor xml:id="_class_player_list_item___old_1a9a07e4e1db78bbbdc6f231c1258a79df"/><section>
    <title>SetUpPlayer()</title>
<indexterm><primary>SetUpPlayer</primary><secondary>PlayerListItem_Old</secondary></indexterm>
<indexterm><primary>PlayerListItem_Old</primary><secondary>SetUpPlayer</secondary></indexterm>
<para><computeroutput>void PlayerListItem_Old.SetUpPlayer (<link linkend="_class_photon_1_1_realtime_1_1_player">Player</link> _player)</computeroutput></para><para>
Definition at line <link linkend="__player_list_item___old_8cs_source_1l00014">14</link> of file <link linkend="__player_list_item___old_8cs_source">PlayerListItem_Old.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/_Developers/ChuYao/Old/<link linkend="__player_list_item___old_8cs">PlayerListItem_Old.cs</link></section>
</section>
