<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_interface_photon_1_1_pun_1_1_i_pun_prefab_pool" xml:lang="en-US">
<title>Photon.Pun.IPunPrefabPool Interface Reference</title>
<indexterm><primary>Photon.Pun.IPunPrefabPool</primary></indexterm>
<para>

<para>Defines an interface for object pooling, used in <link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3c3998fe3bc09a7de8d09378d7a3e2d0">PhotonNetwork.Instantiate</link> and <link linkend="_class_photon_1_1_pun_1_1_photon_network_1ada7d7b9bdb306863c66b260dde7c544e">PhotonNetwork.Destroy</link>. </para>
 
</para>
Inheritance diagram for Photon.Pun.IPunPrefabPool:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="interface_photon_1_1_pun_1_1_i_pun_prefab_pool__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Photon.Pun.IPunPrefabPool:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="interface_photon_1_1_pun_1_1_i_pun_prefab_pool__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>GameObject <link linkend="_interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a870a5155ad093e64f224a774cb1959d9">Instantiate</link> (string prefabId, Vector3 position, Quaternion rotation)</para>

<para>Called to get an instance of a prefab. </para>
</listitem>
            <listitem><para>void <link linkend="_interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a2429b5aceee58b1566d4ac03ad69f359">Destroy</link> (GameObject gameObject)</para>

<para>Called to destroy (or just return) the instance of a prefab. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Defines an interface for object pooling, used in <link linkend="_class_photon_1_1_pun_1_1_photon_network_1a3c3998fe3bc09a7de8d09378d7a3e2d0">PhotonNetwork.Instantiate</link> and <link linkend="_class_photon_1_1_pun_1_1_photon_network_1ada7d7b9bdb306863c66b260dde7c544e">PhotonNetwork.Destroy</link>. </para>



<para>To apply your custom <link linkend="_interface_photon_1_1_pun_1_1_i_pun_prefab_pool">IPunPrefabPool</link>, set <link linkend="_class_photon_1_1_pun_1_1_photon_network_1ab4dd61936d6f0060d7317607076071bf">PhotonNetwork.PrefabPool</link>.</para>

<para>The pool has to return a valid, disabled GameObject when PUN calls Instantiate. Also, the position and rotation must be applied.</para>

<para>Note that Awake and Start are only called once by Unity, so scripts on re-used GameObjects should make use of OnEnable and or OnDisable. When OnEnable gets called, the <link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link> is already updated to the new values.</para>

<para>To be able to enable a GameObject, Instantiate must return an inactive object.</para>

<para>Before PUN &quot;destroys&quot; GameObjects, it will disable them.</para>

<para>If a component implements <link linkend="_interface_photon_1_1_pun_1_1_i_pun_instantiate_magic_callback">IPunInstantiateMagicCallback</link>, PUN will call OnPhotonInstantiate when the networked object gets instantiated. If no components implement this on a prefab, PUN will optimize the instantiation and no longer looks up <link linkend="_interface_photon_1_1_pun_1_1_i_pun_instantiate_magic_callback">IPunInstantiateMagicCallback</link> via GetComponents. </para>
<para>
Definition at line <link linkend="__i_pun_callbacks_8cs_source_1l00120">120</link> of file <link linkend="__i_pun_callbacks_8cs_source">IPunCallbacks.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a2429b5aceee58b1566d4ac03ad69f359"/><section>
    <title>Destroy()</title>
<indexterm><primary>Destroy</primary><secondary>Photon.Pun.IPunPrefabPool</secondary></indexterm>
<indexterm><primary>Photon.Pun.IPunPrefabPool</primary><secondary>Destroy</secondary></indexterm>
<para><computeroutput>void Photon.Pun.IPunPrefabPool.Destroy (GameObject gameObject)</computeroutput></para><para>

<para>Called to destroy (or just return) the instance of a prefab. </para>
</para>

<para>It&apos;s disabled and the pool may reset and cache it for later use in Instantiate. </para>

<para>A pool needs some way to find out which type of GameObject got returned via <link linkend="_interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a2429b5aceee58b1566d4ac03ad69f359">Destroy()</link>. It could be a tag, name, a component or anything similar. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>gameObject</entry><entry>
<para>The instance to destroy.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implemented in <link linkend="_class_photon_1_1_pun_1_1_default_pool_1a358b21299f8257b3a2c8a826dd626d6c">Photon.Pun.DefaultPool</link>.</para>
</section>
<anchor xml:id="_interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a870a5155ad093e64f224a774cb1959d9"/><section>
    <title>Instantiate()</title>
<indexterm><primary>Instantiate</primary><secondary>Photon.Pun.IPunPrefabPool</secondary></indexterm>
<indexterm><primary>Photon.Pun.IPunPrefabPool</primary><secondary>Instantiate</secondary></indexterm>
<para><computeroutput>GameObject Photon.Pun.IPunPrefabPool.Instantiate (string prefabId, Vector3 position, Quaternion rotation)</computeroutput></para><para>

<para>Called to get an instance of a prefab. </para>
</para>

<para>Must return valid, disabled GameObject with <link linkend="_class_photon_1_1_pun_1_1_photon_view">PhotonView</link>. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>prefabId</entry><entry>
<para>The id of this prefab.</para>
</entry>
                            </row>
                            <row>
<entry>position</entry><entry>
<para>The position for the instance.</para>
</entry>
                            </row>
                            <row>
<entry>rotation</entry><entry>
<para>The rotation for the instance.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A disabled instance to use by PUN or null if the prefabId is unknown.</para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_class_photon_1_1_pun_1_1_default_pool_1a676a4c575a8be85f802d35c010a66232">Photon.Pun.DefaultPool</link>.</para>
</section>
<para>
The documentation for this interface was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/<link linkend="__i_pun_callbacks_8cs">IPunCallbacks.cs</link></section>
</section>
