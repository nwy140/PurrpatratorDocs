<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_photon_1_1_realtime" xml:lang="en-US">
<title>Photon.Realtime Namespace Reference</title>
<indexterm><primary>Photon.Realtime</primary></indexterm>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace_photon_1_1_realtime_1_1_demo">Demo</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_actor_properties">ActorProperties</link></para>

<para>Class for constants. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_app_settings">AppSettings</link></para>

<para>Settings for <link linkend="_namespace_photon">Photon</link> application(s) and the server to connect to. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link></para>

<para>Container for user authentication in <link linkend="_namespace_photon">Photon</link>. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_connection_callbacks_container">ConnectionCallbacksContainer</link></para>

<para>Container type for callbacks defined by <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks">IConnectionCallbacks</link>. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_connection_handler">ConnectionHandler</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_enter_room_params">EnterRoomParams</link></para>

<para>Parameters for creating rooms.</para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_error_code">ErrorCode</link></para>

<para><link linkend="_class_photon_1_1_realtime_1_1_error_code">ErrorCode</link> defines the default codes associated with <link linkend="_namespace_photon">Photon</link> client/server communication. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_error_info">ErrorInfo</link></para>

<para>Class wrapping the received <link linkend="_class_photon_1_1_realtime_1_1_event_code_1a8ac7b996b1b15eb56a0e8eb3342cea8c">EventCode.ErrorInfo</link> event. </para>
</listitem>
            <listitem><para>class <emphasis role="strong">ErrorInfoCallbacksContainer</emphasis></para>

<para>Container type for callbacks defined by <link linkend="_interface_photon_1_1_realtime_1_1_i_error_info_callback">IErrorInfoCallback</link>. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_event_code">EventCode</link></para>

<para>Class for constants. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_extensions">Extensions</link></para>

<para>This static class defines some useful extension methods for several existing classes (e.g. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_find_friends_options">FindFriendsOptions</link></para>

<para>Options for OpFindFriends can be combined to filter which rooms of friends are returned. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_friend_info">FriendInfo</link></para>

<para>Used to store info about a friend&apos;s online state and in which room he/she is. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_game_property_key">GamePropertyKey</link></para>

<para>Class for constants. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_photon_1_1_realtime_1_1_i_connection_callbacks">IConnectionCallbacks</link></para>

<para>Collection of &quot;organizational&quot; callbacks for the <link linkend="_namespace_photon_1_1_realtime">Realtime</link> Api to cover: Connection and Regions. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_photon_1_1_realtime_1_1_i_error_info_callback">IErrorInfoCallback</link></para>

<para>Interface for <link linkend="_class_photon_1_1_realtime_1_1_event_code_1a8ac7b996b1b15eb56a0e8eb3342cea8c">EventCode.ErrorInfo</link> event callback for the <link linkend="_namespace_photon_1_1_realtime">Realtime</link> Api. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_photon_1_1_realtime_1_1_i_in_room_callbacks">IInRoomCallbacks</link></para>

<para>Collection of &quot;in room&quot; callbacks for the <link linkend="_namespace_photon_1_1_realtime">Realtime</link> Api to cover: Players entering or leaving, property updates and Master Client switching. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks">ILobbyCallbacks</link></para>

<para>Collection of &quot;organizational&quot; callbacks for the <link linkend="_namespace_photon_1_1_realtime">Realtime</link> Api to cover the Lobby. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks">IMatchmakingCallbacks</link></para>

<para>Collection of &quot;organizational&quot; callbacks for the <link linkend="_namespace_photon_1_1_realtime">Realtime</link> Api to cover Matchmaking. </para>
</listitem>
            <listitem><para>class <emphasis role="strong">InRoomCallbacksContainer</emphasis></para>

<para>Container type for callbacks defined by <link linkend="_interface_photon_1_1_realtime_1_1_i_in_room_callbacks">IInRoomCallbacks</link>. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_photon_1_1_realtime_1_1_i_on_event_callback">IOnEventCallback</link></para>

<para>Event callback for the <link linkend="_namespace_photon_1_1_realtime">Realtime</link> Api. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_photon_1_1_realtime_1_1_i_web_rpc_callback">IWebRpcCallback</link></para>

<para>Interface for &quot;WebRpc&quot; callbacks for the <link linkend="_namespace_photon_1_1_realtime">Realtime</link> Api. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link></para>

<para>This class implements the <link linkend="_namespace_photon">Photon</link> LoadBalancing workflow by using a <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer">LoadBalancingPeer</link>. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer">LoadBalancingPeer</link></para>

<para>A <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_peer">LoadBalancingPeer</link> provides the operations and enum definitions needed to use the LoadBalancing server application which is also used in <link linkend="_namespace_photon">Photon</link> Cloud. </para>
</listitem>
            <listitem><para>class <emphasis role="strong">LobbyCallbacksContainer</emphasis></para>

<para>Container type for callbacks defined by <link linkend="_interface_photon_1_1_realtime_1_1_i_lobby_callbacks">ILobbyCallbacks</link>. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_match_making_callbacks_container">MatchMakingCallbacksContainer</link></para>

<para>Container type for callbacks defined by <link linkend="_interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks">IMatchmakingCallbacks</link>. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_operation_code">OperationCode</link></para>

<para>Class for constants. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_op_join_random_room_params">OpJoinRandomRoomParams</link></para>

<para>Parameters for the matchmaking of JoinRandomRoom and JoinRandomOrCreateRoom. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_parameter_code">ParameterCode</link></para>

<para>Class for constants. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_photon_app_settings">PhotonAppSettings</link></para>

<para>Collection of connection-relevant settings, used internally by PhotonNetwork.ConnectUsingSettings. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_photon_ping">PhotonPing</link></para>

<para>Abstract implementation of <link linkend="_class_photon_1_1_realtime_1_1_photon_ping">PhotonPing</link>, ase for pinging servers to find the &quot;Best Region&quot;. </para>
</listitem>
            <listitem><para>struct <link linkend="_struct_photon_1_1_realtime_1_1_photon_port_definition">PhotonPortDefinition</link></para>

<para>Container for port definitions.</para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_ping_mono">PingMono</link></para>

<para>Uses C# Socket class from System.Net.Sockets (as Unity usually does). </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_player">Player</link></para>

<para>Summarizes a &quot;player&quot; within a room, identified (in that room) by ID (or &quot;actorNumber&quot;). </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_raise_event_options">RaiseEventOptions</link></para>

<para>Aggregates several less-often used options for operation RaiseEvent. See field descriptions for usage details.</para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_region">Region</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_region_handler">RegionHandler</link></para>

<para>Provides methods to work with <link linkend="_namespace_photon">Photon</link>&apos;s regions (<link linkend="_namespace_photon">Photon</link> Cloud) and can be use to find the one with best ping. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_region_pinger">RegionPinger</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_room">Room</link></para>

<para>This class represents a room a client joins/joined. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_room_info">RoomInfo</link></para>

<para>A simplified room with just the info required to list and join, used for the room listing in the lobby. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_room_options">RoomOptions</link></para>

<para>Wraps up common room properties needed when you create rooms. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_support_logger">SupportLogger</link></para>

<para>Helper class to debug log basic information about <link linkend="_namespace_photon">Photon</link> client and vital traffic statistics. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_typed_lobby">TypedLobby</link></para>

<para>Refers to a specific lobby on the server. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_typed_lobby_info">TypedLobbyInfo</link></para>

<para>Info for a lobby on the server. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_web_flags">WebFlags</link></para>

<para>Optional flags to be used in <link linkend="_namespace_photon">Photon</link> client SDKs with Op RaiseEvent and Op SetProperties. </para>
</listitem>
            <listitem><para>class <emphasis role="strong">WebRpcCallbacksContainer</emphasis></para>

<para>Container type for callbacks defined by <link linkend="_interface_photon_1_1_realtime_1_1_i_web_rpc_callback">IWebRpcCallback</link>. </para>
</listitem>
            <listitem><para>class <link linkend="_class_photon_1_1_realtime_1_1_web_rpc_response">WebRpcResponse</link></para>

<para>Reads an operation response of a WebRpc and provides convenient access to most common values. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_namespace_photon_1_1_realtime_1aee53af119f47f74d4224e7b8dcb4ff4b">SupportClass</link> = ExitGames.Client.Photon.SupportClass</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_photon_1_1_realtime_1a0b1996e86891e8965cbb883e6a833298">Stopwatch</link> = System.Diagnostics.Stopwatch</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_group__public_api_1ga5500bb7cf5b4d5493f545a2fcb02ae16">ClientState</link> { 
<link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a8f20319172b2aa6813ba3359f8790a39">ClientState.PeerCreated</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16aedb214653d9f3cecd840463790ac2894">ClientState.Authenticating</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16aa927b3e1f83aa1b3c6feff945ca18f77">ClientState.Authenticated</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a9ed567110f6be2c6fee8794ceea48605">ClientState.JoiningLobby</link>
, 
<link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a628d81b73c9e217e7388d07c448d98bf">ClientState.JoinedLobby</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16afc854c276ff180463c0121a2ed2a2452">ClientState.DisconnectingFromMasterServer</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16ab468dfbd5b304bf96c74152856bd09a7">ClientState.DisconnectingFromMasterserver</link> = DisconnectingFromMasterServer
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a39284d58fc9229e8214b6e36bc528689">ClientState.ConnectingToGameServer</link>
, 
<link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a2adb83359e79fb5cfc94ab00dcf2184b">ClientState.ConnectingToGameserver</link> = ConnectingToGameServer
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a7a9bd7a8334c7c72f4e105a27b507d24">ClientState.ConnectedToGameServer</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a5310d1fb96be7d3ddd41079a9249c2b3">ClientState.ConnectedToGameserver</link> = ConnectedToGameServer
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16af6807db4ae3a5c82b99bced82a0ca92b">ClientState.Joining</link>
, 
<link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a7d50c09f1ad7d098e0a847bcdcab7efb">ClientState.Joined</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16aa9c7b1d7219fa9d3de551ba5bc639eb6">ClientState.Leaving</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16af06290c6bd8a380268c5b444b40380b4">ClientState.DisconnectingFromGameServer</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16ac2b8e7a526f5bdbd0ca4e42a1fc87fdf">ClientState.DisconnectingFromGameserver</link> = DisconnectingFromGameServer
, 
<link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a4126383e860a568e2f20d89c4314f185">ClientState.ConnectingToMasterServer</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a6bfd906f466d549d660a2e7356ac58dd">ClientState.ConnectingToMasterserver</link> = ConnectingToMasterServer
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a10b0501000c144cb2a7424bd45e1bcde">ClientState.Disconnecting</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16aef70e46fd3bbc21e3e1f0b6815e750c0">ClientState.Disconnected</link>
, 
<link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16ab77cffe86b6b88f54fbabb5bd7bba123">ClientState.ConnectedToMasterServer</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16a403e60831a31a656caba417989a92d01">ClientState.ConnectedToMasterserver</link> = ConnectedToMasterServer
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16aaf3c26fc49c920a4779844921baeeef8">ClientState.ConnectedToMaster</link> = ConnectedToMasterServer
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16ae047588dabb5a0b1e059604b80289791">ClientState.ConnectingToNameServer</link>
, 
<link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16ac495884e9133962e72063062d1382466">ClientState.ConnectedToNameServer</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16aa3db59f96790ca93f6c8ac703735f401">ClientState.DisconnectingFromNameServer</link>
, <link linkend="_group__public_api_1gga5500bb7cf5b4d5493f545a2fcb02ae16aeaa0e15921db2455c7c7c3548394ecba">ClientState.ConnectWithFallbackProtocol</link>
 }</para>

<para>State values for a client, which handles switching <link linkend="_namespace_photon">Photon</link> server types, some operations, etc. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6">DisconnectCause</link> { 
<link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a6adf97f83acf6453d4a6a4b1070f3754">None</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ae28f71975b160263c7e6438b4b4429ef">ExceptionOnConnect</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6aca084dd52bb28abfeaa97c351ec9be6b">DnsExceptionOnConnect</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a45210512cbbb3868c65ff097a634befa">ServerAddressInvalid</link>
, 
<link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ab0d4998a26f5b5742ad38c4af8817e32">Exception</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ae84f654bd9644d73e38c585d40a07025">ServerTimeout</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a8b14d34b443a616eb7e0e5f8ff1efd4b">ClientTimeout</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6abbec862190460d01acb3557a0e9a13f5">DisconnectByServerLogic</link>
, 
<link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a9b724152defffa0d39ea88d5581d8540">DisconnectByServerReasonUnknown</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ab67551dad56fc73fd4a580e810dc5f7f">InvalidAuthentication</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ac18fb72fa24e41efb70cd214f7681dfc">CustomAuthenticationFailed</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a65537dc549af3f90695ff7cf0002b17b">AuthenticationTicketExpired</link>
, 
<link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a522f961eb7a2b35f0ef4b99b4ad3bb0a">MaxCcuReached</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6aa8534012cb63e62c0b3a2335206117cc">InvalidRegion</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a85a7970b25fcbdfd2f82f78609298e56">OperationNotAllowedInCurrentState</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a8b87ea0f6c00718bace24e4c4f616d84">DisconnectByClientLogic</link>
, 
<link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a4249d856fb26424d175d39fec6c11d55">DisconnectByOperationLimit</link>
, <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a025e428abec8a5a0fca938138cb759f2">DisconnectByDisconnectMessage</link>
 }</para>

<para>Enumeration of causes for Disconnects (used in LoadBalancingClient.DisconnectedCause). </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">ServerConnection</link> { <link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356a183832aa8cc99ec3e781066d643b2d25">MasterServer</link>
, <link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356a1c7d561350ce0a5a7e51b973a3796315">GameServer</link>
, <link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356a6f478184dbea3df0c2e9147987c01e64">NameServer</link>
 }</para>

<para>Available server (types) for internally used field: server. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33">ClientAppType</link> { <link linkend="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33aa5ff58bda67e2160b5e5d5a47a4333c3">Realtime</link>
, <link linkend="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33ad7a3fdf1351b72249a47454751549deb">Voice</link>
, <link linkend="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33aadc69293e8fd256b2609664f1e11cb53">Fusion</link>
 }</para>

<para>Defines which sort of app the LoadBalancingClient is used for: Realtime or Voice.</para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357d">EncryptionMode</link> { <link linkend="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357da279497bbf0f95253e9d5bb0de757d10d">PayloadEncryption</link>
, <link linkend="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357dad8d9b213c7c5146145b74119aa01c9a3">DatagramEncryption</link> = 10
, <link linkend="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357daaefb059b91127594f8339d9a0767b374">DatagramEncryptionRandomSequence</link> = 11
, <link linkend="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357da24767aa2b014fbdd4ccb1b6ed177dc26">DatagramEncryptionGCM</link> = 13
 }</para>

<para>Defines how the communication gets encrypted. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96f">JoinMode</link> : byte { <link linkend="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96fa7a1920d61156abc05a60135aefe8bc67">Default</link> = 0
, <link linkend="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96fa1e41e14c1f9344f2db61fe8653b5b001">CreateIfNotExists</link> = 1
, <link linkend="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96faa63ce0e3e810c781a410d3addc56db7f">JoinOrRejoin</link> = 2
, <link linkend="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96fadc2168ee308fc14616dfd264d45cfd15">RejoinOnly</link> = 3
 }</para>

<para>Defines possible values for OpJoinRoom and OpJoinOrCreate. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fc">MatchmakingMode</link> : byte { <link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fcaa5912f7a88c36ab01e9c1c38fd7bad9e">FillRoom</link> = 0
, <link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fca85e600e069b55d677fcc38fe96002751">SerialMatching</link> = 1
, <link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fca43f0360f3d6dd072a905e7bf6343b565">RandomMatching</link> = 2
 }</para>

<para>Options for matchmaking rules for OpJoinRandom. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40">ReceiverGroup</link> : byte { <link linkend="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40a52ef9633d88a7480b3a938ff9eaa2a25">Others</link> = 0
, <link linkend="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40ab1c94ca2fbc3e78fc30069c8d0f01680">All</link> = 1
, <link linkend="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40ad0209f4a40060d6e7c37d29979d8f444">MasterClient</link> = 2
 }</para>

<para>Lite - OpRaiseEvent lets you chose which actors in the room should receive events. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39d">EventCaching</link> : byte { 
<link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39daed89696ce2a8a4cfb22e37d482c72cbb">DoNotCache</link> = 0
, <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39dac9a823ae99d397814cb62b335ba9e0a9">MergeCache</link> = 1
, <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da28f79c65a5ac3ff0e04978cf99f7e540">ReplaceCache</link> = 2
, <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39dad45857356b7a23b7daac5ef397b3825e">RemoveCache</link> = 3
, 
<link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da53f67bc41da305a88205d1ded2f35954">AddToRoomCache</link> = 4
, <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da187c171b946f4fb73de86aaee4d7aad2">AddToRoomCacheGlobal</link> = 5
, <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da92cb14adcb4e187b188c94fb74c53dab">RemoveFromRoomCache</link> = 6
, <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da06e5db15df6ca1969b38628518d71d76">RemoveFromRoomCacheForActorsLeft</link> = 7
, 
<link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da0dc854abbac4ba563d1151c331e58c91">SliceIncreaseIndex</link> = 10
, <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39daf8a05e1851a5563b3aff68bf8bf8486b">SliceSetIndex</link> = 11
, <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39dacdf56f0af5cd6eecb93e8d808c131841">SlicePurgeIndex</link> = 12
, <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39dae426b4afc51b756484914daadb36ad4d">SlicePurgeUpToIndex</link> = 13
 }</para>

<para>Lite - OpRaiseEvent allows you to cache events and automatically send them to joining players in a room. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0">PropertyTypeFlag</link> : byte { <link linkend="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0a6adf97f83acf6453d4a6a4b1070f3754">None</link> = 0x00
, <link linkend="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0a63d72051e901c069f8aa1b32aa0c43bb">Game</link> = 0x01
, <link linkend="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0a1cc84619677de81ee6e44149845270a3">Actor</link> = 0x02
, <link linkend="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0a68ebb8ef1cbd0371b060a93d7788d460">GameAndActor</link> = Game | Actor
 }</para>

<para>Flags for &quot;types of properties&quot;, being used as filter in OpGetProperties. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1acba484bf10d5d8dc25a2ac061edc7bca">LobbyType</link> : byte { <link linkend="_namespace_photon_1_1_realtime_1acba484bf10d5d8dc25a2ac061edc7bcaa7a1920d61156abc05a60135aefe8bc67">Default</link> = 0
, <link linkend="_namespace_photon_1_1_realtime_1acba484bf10d5d8dc25a2ac061edc7bcaa5c1bd8d2513ea60a7adcc388b0702dd9">SqlLobby</link> = 2
, <link linkend="_namespace_photon_1_1_realtime_1acba484bf10d5d8dc25a2ac061edc7bcaac833c502bc8e709e70d75b82c027bb6b">AsyncRandomLobby</link> = 3
 }</para>

<para>Types of lobbies define their behaviour and capabilities. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1abddee7522874d75d666874c4129b3613">AuthModeOption</link> { <link linkend="_namespace_photon_1_1_realtime_1abddee7522874d75d666874c4129b3613a632c9594449737188c71ee1c8534f893">Auth</link>
, <link linkend="_namespace_photon_1_1_realtime_1abddee7522874d75d666874c4129b3613aa3863fc49e47221d013aed5edca1ca03">AuthOnce</link>
, <link linkend="_namespace_photon_1_1_realtime_1abddee7522874d75d666874c4129b3613ae36ec8ecce3ddc0a8ce532dd4d5133dd">AuthOnceWss</link>
 }</para>

<para>Options for authentication modes. </para>
</listitem>
            <listitem><para>enum <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82a">CustomAuthenticationType</link> : byte { 
<link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa90589c47f06eb971d548591f23c285af">Custom</link> = 0
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa4db4563826bad0eb2f60ee6e42d0ea4b">Steam</link> = 1
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aad85544fce402c7a2a96a48078edaf203">Facebook</link> = 2
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aaa8a06837aec81e16c9a07221848aef6f">Oculus</link> = 3
, 
<link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa95830dd4b3c29e91f6ba2bb62d3b4f37">PlayStation4</link> = 4
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa3f6fb6f058deeea1407bacefec5265a2">PlayStation</link> = 4
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa183709ebe3a1d675014d32b94ad7ed94">Xbox</link> = 5
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa7a395899344672c58a6a8558cb08f482">Viveport</link> = 10
, 
<link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa013ed2500604451a094b5aaf9ad2827c">NintendoSwitch</link> = 11
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa8f9a9bff56e92b3e9791ea68a304edf0">PlayStation5</link> = 12
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aac01785569dcafd27975a5829aebc9b0f">Playstation5</link> = 12
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aae3f530e977d74053c6d70eb84886e756">Epic</link> = 13
, 
<link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aaaca3aba6a25b128648f656c04976493c">FacebookGaming</link> = 15
, <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa6adf97f83acf6453d4a6a4b1070f3754">None</link> = byte.MaxValue
 }</para>

<para>Options for optional &quot;Custom Authentication&quot; services used with <link linkend="_namespace_photon">Photon</link>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_namespace_photon_1_1_realtime_1a0b1996e86891e8965cbb883e6a833298"/><section>
    <title>Stopwatch</title>
<indexterm><primary>Stopwatch</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Stopwatch</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_photon_1_1_realtime_1a0b1996e86891e8965cbb883e6a833298">Photon.Realtime.Stopwatch</link> = typedef System.Diagnostics.Stopwatch</computeroutput></para><para>
Definition at line <link linkend="__support_logger_8cs_source_1l00026">26</link> of file <link linkend="__support_logger_8cs_source">SupportLogger.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1aee53af119f47f74d4224e7b8dcb4ff4b"/><section>
    <title>SupportClass</title>
<indexterm><primary>SupportClass</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>SupportClass</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_photon_1_1_realtime_1aee53af119f47f74d4224e7b8dcb4ff4b">Photon.Realtime.SupportClass</link> = typedef ExitGames.Client.Photon.SupportClass</computeroutput></para><para>
Definition at line <link linkend="__connection_handler_8cs_source_1l00021">21</link> of file <link linkend="__connection_handler_8cs_source">ConnectionHandler.cs</link>.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_namespace_photon_1_1_realtime_1abddee7522874d75d666874c4129b3613"/><section>
    <title>AuthModeOption</title>
<indexterm><primary>AuthModeOption</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>AuthModeOption</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1abddee7522874d75d666874c4129b3613">Photon.Realtime.AuthModeOption</link></computeroutput></para><para>

<para>Options for authentication modes. </para>
</para>

<para>From &quot;classic&quot; auth on each server to AuthOnce (on NameServer). </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>Auth</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Auth</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1abddee7522874d75d666874c4129b3613a632c9594449737188c71ee1c8534f893"/>Auth</entry><entry></entry></row><row><entry><indexterm><primary>AuthOnce</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>AuthOnce</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1abddee7522874d75d666874c4129b3613aa3863fc49e47221d013aed5edca1ca03"/>AuthOnce</entry><entry></entry></row><row><entry><indexterm><primary>AuthOnceWss</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>AuthOnceWss</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1abddee7522874d75d666874c4129b3613ae36ec8ecce3ddc0a8ce532dd4d5133dd"/>AuthOnceWss</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02060">2060</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33"/><section>
    <title>ClientAppType</title>
<indexterm><primary>ClientAppType</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>ClientAppType</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33">Photon.Realtime.ClientAppType</link></computeroutput></para><para>

<para>Defines which sort of app the <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client">LoadBalancingClient</link> is used for: <link linkend="_namespace_photon_1_1_realtime">Realtime</link> or Voice.</para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>Realtime</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Realtime</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33aa5ff58bda67e2160b5e5d5a47a4333c3"/>Realtime</entry><entry>
<para><link linkend="_namespace_photon_1_1_realtime">Realtime</link> apps are for gaming / interaction. Also used by PUN 2.</para>
</entry></row><row><entry><indexterm><primary>Voice</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Voice</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33ad7a3fdf1351b72249a47454751549deb"/>Voice</entry><entry>
<para>Voice apps stream audio.</para>
</entry></row><row><entry><indexterm><primary>Fusion</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Fusion</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1aa38fa4af1bcb3dcd4ae2d2faf507aa33aadc69293e8fd256b2609664f1e11cb53"/>Fusion</entry><entry>
<para>Fusion clients are for matchmaking and relay in <link linkend="_namespace_photon">Photon</link> Fusion.</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__load_balancing_client_8cs_source_1l00209">209</link> of file <link linkend="__load_balancing_client_8cs_source">LoadBalancingClient.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82a"/><section>
    <title>CustomAuthenticationType</title>
<indexterm><primary>CustomAuthenticationType</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>CustomAuthenticationType</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82a">Photon.Realtime.CustomAuthenticationType</link> : byte</computeroutput></para><para>

<para>Options for optional &quot;Custom Authentication&quot; services used with <link linkend="_namespace_photon">Photon</link>. </para>
</para>

<para>Used by OpAuthenticate after connecting to <link linkend="_namespace_photon">Photon</link>. </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>Custom</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Custom</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa90589c47f06eb971d548591f23c285af"/>Custom</entry><entry>
<para>Use a custom authentication service. Currently the only implemented option.</para>
</entry></row><row><entry><indexterm><primary>Steam</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Steam</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa4db4563826bad0eb2f60ee6e42d0ea4b"/>Steam</entry><entry>
<para>Authenticates users by their Steam Account. Set Steam&apos;s ticket as &quot;ticket&quot; via AddAuthParameter().</para>
</entry></row><row><entry><indexterm><primary>Facebook</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Facebook</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aad85544fce402c7a2a96a48078edaf203"/>Facebook</entry><entry>
<para>Authenticates users by their Facebook Account. Set Facebooks&apos;s tocken as &quot;token&quot; via AddAuthParameter().</para>
</entry></row><row><entry><indexterm><primary>Oculus</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Oculus</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aaa8a06837aec81e16c9a07221848aef6f"/>Oculus</entry><entry>
<para>Authenticates users by their Oculus Account and token. Set Oculus&apos; userid as &quot;userid&quot; and nonce as &quot;nonce&quot; via AddAuthParameter().</para>
</entry></row><row><entry><indexterm><primary>PlayStation4</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>PlayStation4</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa95830dd4b3c29e91f6ba2bb62d3b4f37"/>PlayStation4</entry><entry>
<para>Authenticates users by their PSN Account and token on PS4. Set token as &quot;token&quot;, env as &quot;env&quot; and userName as &quot;userName&quot; via AddAuthParameter().</para>
</entry></row><row><entry><indexterm><primary>PlayStation</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>PlayStation</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa3f6fb6f058deeea1407bacefec5265a2"/>PlayStation</entry><entry></entry></row><row><entry><indexterm><primary>Xbox</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Xbox</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa183709ebe3a1d675014d32b94ad7ed94"/>Xbox</entry><entry>
<para>Authenticates users by their Xbox Account. Pass the XSTS token via SetAuthPostData().</para>
</entry></row><row><entry><indexterm><primary>Viveport</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Viveport</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa7a395899344672c58a6a8558cb08f482"/>Viveport</entry><entry>
<para>Authenticates users by their HTC Viveport Account. Set userToken as &quot;userToken&quot; via AddAuthParameter().</para>
</entry></row><row><entry><indexterm><primary>NintendoSwitch</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>NintendoSwitch</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa013ed2500604451a094b5aaf9ad2827c"/>NintendoSwitch</entry><entry>
<para>Authenticates users by their NSA ID. Set token as &quot;token&quot; and appversion as &quot;appversion&quot; via AddAuthParameter(). The appversion is optional.</para>
</entry></row><row><entry><indexterm><primary>PlayStation5</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>PlayStation5</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa8f9a9bff56e92b3e9791ea68a304edf0"/>PlayStation5</entry><entry>
<para>Authenticates users by their PSN Account and token on PS5. Set token as &quot;token&quot;, env as &quot;env&quot; and userName as &quot;userName&quot; via AddAuthParameter().</para>
</entry></row><row><entry><indexterm><primary>Playstation5</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Playstation5</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aac01785569dcafd27975a5829aebc9b0f"/>Playstation5</entry><entry></entry></row><row><entry><indexterm><primary>Epic</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Epic</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aae3f530e977d74053c6d70eb84886e756"/>Epic</entry><entry>
<para>Authenticates users with Epic Online Services (EOS). Set token as &quot;token&quot; and ownershipToken as &quot;ownershipToken&quot; via AddAuthParameter(). The ownershipToken is optional.</para>
</entry></row><row><entry><indexterm><primary>FacebookGaming</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>FacebookGaming</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aaaca3aba6a25b128648f656c04976493c"/>FacebookGaming</entry><entry>
<para>Authenticates users with Facebook Gaming api. Set token as &quot;token&quot; via AddAuthParameter().</para>
</entry></row><row><entry><indexterm><primary>None</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>None</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a5317f0e297e7082e4b1cca873695a82aa6adf97f83acf6453d4a6a4b1070f3754"/>None</entry><entry>
<para>Disables custom authentication. Same as not providing any <link linkend="_class_photon_1_1_realtime_1_1_authentication_values">AuthenticationValues</link> for connect (more precisely for: OpAuthenticate).</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l02066">2066</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6"/><section>
    <title>DisconnectCause</title>
<indexterm><primary>DisconnectCause</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DisconnectCause</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6">Photon.Realtime.DisconnectCause</link></computeroutput></para><para>

<para>Enumeration of causes for Disconnects (used in <link linkend="_class_photon_1_1_realtime_1_1_load_balancing_client_1a24120686f2811a69cb4ec4e92964a2a6">LoadBalancingClient.DisconnectedCause</link>). </para>
</para>

<para>Read the individual descriptions to find out what to do about this type of disconnect.</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>None</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>None</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a6adf97f83acf6453d4a6a4b1070f3754"/>None</entry><entry>
<para>No error was tracked.</para>
</entry></row><row><entry><indexterm><primary>ExceptionOnConnect</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>ExceptionOnConnect</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ae28f71975b160263c7e6438b4b4429ef"/>ExceptionOnConnect</entry><entry>
<para>OnStatusChanged: The server is not available or the address is wrong. Make sure the port is provided and the server is up.</para>
</entry></row><row><entry><indexterm><primary>DnsExceptionOnConnect</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DnsExceptionOnConnect</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6aca084dd52bb28abfeaa97c351ec9be6b"/>DnsExceptionOnConnect</entry><entry>
<para>OnStatusChanged: Dns resolution for a hostname failed. The exception for this is being catched and logged with error level.</para>
</entry></row><row><entry><indexterm><primary>ServerAddressInvalid</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>ServerAddressInvalid</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a45210512cbbb3868c65ff097a634befa"/>ServerAddressInvalid</entry><entry>
<para>OnStatusChanged: The server address was parsed as IPv4 illegally. An illegal address would be e.g. 192.168.1.300. IPAddress.TryParse() will let this pass but our check won&apos;t.</para>
</entry></row><row><entry><indexterm><primary>Exception</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Exception</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ab0d4998a26f5b5742ad38c4af8817e32"/>Exception</entry><entry>
<para>OnStatusChanged: Some internal exception caused the socket code to fail. This may happen if you attempt to connect locally but the server is not available. In doubt: Contact Exit Games.</para>
</entry></row><row><entry><indexterm><primary>ServerTimeout</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>ServerTimeout</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ae84f654bd9644d73e38c585d40a07025"/>ServerTimeout</entry><entry>
<para>OnStatusChanged: The server disconnected this client due to timing out (missing acknowledgement from the client).</para>
</entry></row><row><entry><indexterm><primary>ClientTimeout</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>ClientTimeout</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a8b14d34b443a616eb7e0e5f8ff1efd4b"/>ClientTimeout</entry><entry>
<para>OnStatusChanged: This client detected that the server&apos;s responses are not received in due time.</para>
</entry></row><row><entry><indexterm><primary>DisconnectByServerLogic</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DisconnectByServerLogic</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6abbec862190460d01acb3557a0e9a13f5"/>DisconnectByServerLogic</entry><entry>
<para>OnStatusChanged: The server disconnected this client from within the room&apos;s logic (the C# code).</para>
</entry></row><row><entry><indexterm><primary>DisconnectByServerReasonUnknown</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DisconnectByServerReasonUnknown</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a9b724152defffa0d39ea88d5581d8540"/>DisconnectByServerReasonUnknown</entry><entry>
<para>OnStatusChanged: The server disconnected this client for unknown reasons.</para>
</entry></row><row><entry><indexterm><primary>InvalidAuthentication</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>InvalidAuthentication</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ab67551dad56fc73fd4a580e810dc5f7f"/>InvalidAuthentication</entry><entry>
<para>OnOperationResponse: Authenticate in the <link linkend="_namespace_photon">Photon</link> Cloud with invalid AppId. Update your subscription or contact Exit Games.</para>
</entry></row><row><entry><indexterm><primary>CustomAuthenticationFailed</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>CustomAuthenticationFailed</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6ac18fb72fa24e41efb70cd214f7681dfc"/>CustomAuthenticationFailed</entry><entry>
<para>OnOperationResponse: Authenticate in the <link linkend="_namespace_photon">Photon</link> Cloud with invalid client values or custom authentication setup in Cloud Dashboard.</para>
</entry></row><row><entry><indexterm><primary>AuthenticationTicketExpired</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>AuthenticationTicketExpired</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a65537dc549af3f90695ff7cf0002b17b"/>AuthenticationTicketExpired</entry><entry>
<para>The authentication ticket should provide access to any <link linkend="_namespace_photon">Photon</link> Cloud server without doing another authentication-service call. However, the ticket expired.</para>
</entry></row><row><entry><indexterm><primary>MaxCcuReached</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>MaxCcuReached</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a522f961eb7a2b35f0ef4b99b4ad3bb0a"/>MaxCcuReached</entry><entry>
<para>OnOperationResponse: Authenticate (temporarily) failed when using a <link linkend="_namespace_photon">Photon</link> Cloud subscription without CCU Burst. Update your subscription.</para>
</entry></row><row><entry><indexterm><primary>InvalidRegion</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>InvalidRegion</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6aa8534012cb63e62c0b3a2335206117cc"/>InvalidRegion</entry><entry>
<para>OnOperationResponse: Authenticate when the app&apos;s <link linkend="_namespace_photon">Photon</link> Cloud subscription is locked to some (other) region(s). Update your subscription or master server address.</para>
</entry></row><row><entry><indexterm><primary>OperationNotAllowedInCurrentState</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>OperationNotAllowedInCurrentState</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a85a7970b25fcbdfd2f82f78609298e56"/>OperationNotAllowedInCurrentState</entry><entry>
<para>OnOperationResponse: Operation that&apos;s (currently) not available for this client (not authorized usually). Only tracked for op Authenticate.</para>
</entry></row><row><entry><indexterm><primary>DisconnectByClientLogic</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DisconnectByClientLogic</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a8b87ea0f6c00718bace24e4c4f616d84"/>DisconnectByClientLogic</entry><entry>
<para>OnStatusChanged: The client disconnected from within the logic (the C# code).</para>
</entry></row><row><entry><indexterm><primary>DisconnectByOperationLimit</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DisconnectByOperationLimit</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a4249d856fb26424d175d39fec6c11d55"/>DisconnectByOperationLimit</entry><entry>
<para>The client called an operation too frequently and got disconnected due to hitting the OperationLimit. </para>

<para>This triggers a client-side disconnect, too.</para>

<para>To protect the server, some operations have a limit. When an OperationResponse fails with <link linkend="_class_photon_1_1_realtime_1_1_error_code_1ad5093411b769f5e0a4dc7a7476487c4c">ErrorCode.OperationLimitReached</link>, the client disconnects.</para>
</entry></row><row><entry><indexterm><primary>DisconnectByDisconnectMessage</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DisconnectByDisconnectMessage</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6a025e428abec8a5a0fca938138cb759f2"/>DisconnectByDisconnectMessage</entry><entry>
<para>The client received a &quot;Disconnect Message&quot; from the server. Check the debug logs for details.</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__load_balancing_client_8cs_source_1l00138">138</link> of file <link linkend="__load_balancing_client_8cs_source">LoadBalancingClient.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357d"/><section>
    <title>EncryptionMode</title>
<indexterm><primary>EncryptionMode</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>EncryptionMode</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357d">Photon.Realtime.EncryptionMode</link></computeroutput></para><para>

<para>Defines how the communication gets encrypted. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>PayloadEncryption</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>PayloadEncryption</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357da279497bbf0f95253e9d5bb0de757d10d"/>PayloadEncryption</entry><entry>
<para>This is the default encryption mode: Messages get encrypted only on demand (when you send operations with the &quot;encrypt&quot; parameter set to true). </para>
</entry></row><row><entry><indexterm><primary>DatagramEncryption</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DatagramEncryption</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357dad8d9b213c7c5146145b74119aa01c9a3"/>DatagramEncryption</entry><entry>
<para>With this encryption mode for UDP, the connection gets setup and all further datagrams get encrypted almost entirely. </para>

<para>On-demand message encryption (like in PayloadEncryption) is unavailable. </para>
</entry></row><row><entry><indexterm><primary>DatagramEncryptionRandomSequence</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DatagramEncryptionRandomSequence</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357daaefb059b91127594f8339d9a0767b374"/>DatagramEncryptionRandomSequence</entry><entry>
<para>With this encryption mode for UDP, the connection gets setup with random sequence numbers and all further datagrams get encrypted almost entirely. </para>

<para>On-demand message encryption (like in PayloadEncryption) is unavailable. </para>
</entry></row><row><entry><indexterm><primary>DatagramEncryptionGCM</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DatagramEncryptionGCM</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae1d7dca0c489e7d7970d94c135ff357da24767aa2b014fbdd4ccb1b6ed177dc26"/>DatagramEncryptionGCM</entry><entry>
<para>Datagram Encryption with GCM. </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__load_balancing_client_8cs_source_1l00222">222</link> of file <link linkend="__load_balancing_client_8cs_source">LoadBalancingClient.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39d"/><section>
    <title>EventCaching</title>
<indexterm><primary>EventCaching</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>EventCaching</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39d">Photon.Realtime.EventCaching</link> : byte</computeroutput></para><para>

<para>Lite - OpRaiseEvent allows you to cache events and automatically send them to joining players in a room. </para>
</para>

<para>Events are cached per event code and player: Event 100 (example!) can be stored once per player. Cached events can be modified, replaced and removed. </para>

<para>Caching works only combination with ReceiverGroup options Others and All. </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>DoNotCache</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>DoNotCache</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39daed89696ce2a8a4cfb22e37d482c72cbb"/>DoNotCache</entry><entry>
<para>Default value (not sent).</para>
</entry></row><row><entry><indexterm><primary>MergeCache</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>MergeCache</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39dac9a823ae99d397814cb62b335ba9e0a9"/>MergeCache</entry><entry>
<para>Will merge this event&apos;s keys with those already cached.</para>
</entry></row><row><entry><indexterm><primary>ReplaceCache</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>ReplaceCache</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da28f79c65a5ac3ff0e04978cf99f7e540"/>ReplaceCache</entry><entry>
<para>Replaces the event cache for this eventCode with this event&apos;s content.</para>
</entry></row><row><entry><indexterm><primary>RemoveCache</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>RemoveCache</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39dad45857356b7a23b7daac5ef397b3825e"/>RemoveCache</entry><entry>
<para>Removes this event (by eventCode) from the cache.</para>
</entry></row><row><entry><indexterm><primary>AddToRoomCache</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>AddToRoomCache</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da53f67bc41da305a88205d1ded2f35954"/>AddToRoomCache</entry><entry>
<para>Adds an event to the room&apos;s cache</para>
</entry></row><row><entry><indexterm><primary>AddToRoomCacheGlobal</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>AddToRoomCacheGlobal</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da187c171b946f4fb73de86aaee4d7aad2"/>AddToRoomCacheGlobal</entry><entry>
<para>Adds this event to the cache for actor 0 (becoming a &quot;globally owned&quot; event in the cache).</para>
</entry></row><row><entry><indexterm><primary>RemoveFromRoomCache</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>RemoveFromRoomCache</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da92cb14adcb4e187b188c94fb74c53dab"/>RemoveFromRoomCache</entry><entry>
<para>Remove fitting event from the room&apos;s cache.</para>
</entry></row><row><entry><indexterm><primary>RemoveFromRoomCacheForActorsLeft</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>RemoveFromRoomCacheForActorsLeft</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da06e5db15df6ca1969b38628518d71d76"/>RemoveFromRoomCacheForActorsLeft</entry><entry>
<para>Removes events of players who already left the room (cleaning up).</para>
</entry></row><row><entry><indexterm><primary>SliceIncreaseIndex</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>SliceIncreaseIndex</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39da0dc854abbac4ba563d1151c331e58c91"/>SliceIncreaseIndex</entry><entry>
<para>Increase the index of the sliced cache.</para>
</entry></row><row><entry><indexterm><primary>SliceSetIndex</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>SliceSetIndex</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39daf8a05e1851a5563b3aff68bf8bf8486b"/>SliceSetIndex</entry><entry>
<para>Set the index of the sliced cache. You must set RaiseEventOptions.CacheSliceIndex for this.</para>
</entry></row><row><entry><indexterm><primary>SlicePurgeIndex</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>SlicePurgeIndex</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39dacdf56f0af5cd6eecb93e8d808c131841"/>SlicePurgeIndex</entry><entry>
<para>Purge cache slice with index. Exactly one slice is removed from cache. You must set RaiseEventOptions.CacheSliceIndex for this.</para>
</entry></row><row><entry><indexterm><primary>SlicePurgeUpToIndex</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>SlicePurgeUpToIndex</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1af18c2eb259b8f639c151ea60e026e39dae426b4afc51b756484914daadb36ad4d"/>SlicePurgeUpToIndex</entry><entry>
<para>Purge cache slices with specified index and anything lower than that. You must set RaiseEventOptions.CacheSliceIndex for this.</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l01742">1742</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96f"/><section>
    <title>JoinMode</title>
<indexterm><primary>JoinMode</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>JoinMode</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96f">Photon.Realtime.JoinMode</link> : byte</computeroutput></para><para>

<para>Defines possible values for OpJoinRoom and OpJoinOrCreate. </para>
</para>

<para>It tells the server if the room can be only be joined normally, created implicitly or found on a web-service for Turnbased games.</para>

<para>These values are not directly used by a game but implicitly set.</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>Default</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Default</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96fa7a1920d61156abc05a60135aefe8bc67"/>Default</entry><entry>
<para>Regular join. The room must exist.</para>
</entry></row><row><entry><indexterm><primary>CreateIfNotExists</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>CreateIfNotExists</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96fa1e41e14c1f9344f2db61fe8653b5b001"/>CreateIfNotExists</entry><entry>
<para>Join or create the room if it&apos;s not existing. Used for OpJoinOrCreate for example.</para>
</entry></row><row><entry><indexterm><primary>JoinOrRejoin</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>JoinOrRejoin</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96faa63ce0e3e810c781a410d3addc56db7f"/>JoinOrRejoin</entry><entry>
<para>The room might be out of memory and should be loaded (if possible) from a Turnbased web-service.</para>
</entry></row><row><entry><indexterm><primary>RejoinOnly</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>RejoinOnly</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ae97c496429f751b88142ce09c2e0e96fadc2168ee308fc14616dfd264d45cfd15"/>RejoinOnly</entry><entry>
<para>Only re-join will be allowed. If the user is not yet in the room, this will fail.</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l01685">1685</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1acba484bf10d5d8dc25a2ac061edc7bca"/><section>
    <title>LobbyType</title>
<indexterm><primary>LobbyType</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>LobbyType</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1acba484bf10d5d8dc25a2ac061edc7bca">Photon.Realtime.LobbyType</link> : byte</computeroutput></para><para>

<para>Types of lobbies define their behaviour and capabilities. </para>
</para>

<para>Check each value for details.</para>

<para>Values of this enum must be matched by the server.</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>Default</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Default</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1acba484bf10d5d8dc25a2ac061edc7bcaa7a1920d61156abc05a60135aefe8bc67"/>Default</entry><entry>
<para>Standard type and behaviour: While joined to this lobby clients get room-lists and JoinRandomRoom can use a simple filter to match properties (perfectly).</para>
</entry></row><row><entry><indexterm><primary>SqlLobby</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>SqlLobby</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1acba484bf10d5d8dc25a2ac061edc7bcaa5c1bd8d2513ea60a7adcc388b0702dd9"/>SqlLobby</entry><entry>
<para>This lobby type lists rooms like Default but JoinRandom has a parameter for SQL-like &quot;where&quot; clauses for filtering. This allows bigger, less, or and and combinations.</para>
</entry></row><row><entry><indexterm><primary>AsyncRandomLobby</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>AsyncRandomLobby</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1acba484bf10d5d8dc25a2ac061edc7bcaac833c502bc8e709e70d75b82c027bb6b"/>AsyncRandomLobby</entry><entry>
<para>This lobby does not send lists of games. It is only used for OpJoinRandomRoom. It keeps rooms available for a while when there are only inactive users left.</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l01960">1960</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fc"/><section>
    <title>MatchmakingMode</title>
<indexterm><primary>MatchmakingMode</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>MatchmakingMode</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fc">Photon.Realtime.MatchmakingMode</link> : byte</computeroutput></para><para>

<para>Options for matchmaking rules for OpJoinRandom. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>FillRoom</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>FillRoom</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fcaa5912f7a88c36ab01e9c1c38fd7bad9e"/>FillRoom</entry><entry>
<para>Fills up rooms (oldest first) to get players together as fast as possible. </para>

<para>Default.</para>

<para>Makes most sense with MaxPlayers &gt; 0 and games that can only start with more players.</para>
</entry></row><row><entry><indexterm><primary>SerialMatching</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>SerialMatching</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fca85e600e069b55d677fcc38fe96002751"/>SerialMatching</entry><entry>
<para>Distributes players across available rooms sequentially but takes filter into account. Without filter, rooms get players evenly distributed.</para>
</entry></row><row><entry><indexterm><primary>RandomMatching</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>RandomMatching</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1ac809ce956b3bd82a1b4bc24c56a2d9fca43f0360f3d6dd072a905e7bf6343b565"/>RandomMatching</entry><entry>
<para>Joins a (fully) random room. Expected properties must match but aside from this, any available room might be selected.</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l01703">1703</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0"/><section>
    <title>PropertyTypeFlag</title>
<indexterm><primary>PropertyTypeFlag</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>PropertyTypeFlag</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0">Photon.Realtime.PropertyTypeFlag</link> : byte</computeroutput></para><para>

<para>Flags for &quot;types of properties&quot;, being used as filter in OpGetProperties. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>None</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>None</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0a6adf97f83acf6453d4a6a4b1070f3754"/>None</entry><entry>
<para>(0x00) Flag type for no property type.</para>
</entry></row><row><entry><indexterm><primary>Game</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Game</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0a63d72051e901c069f8aa1b32aa0c43bb"/>Game</entry><entry>
<para>(0x01) Flag type for game-attached properties.</para>
</entry></row><row><entry><indexterm><primary>Actor</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Actor</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0a1cc84619677de81ee6e44149845270a3"/>Actor</entry><entry>
<para>(0x02) Flag type for actor related propeties.</para>
</entry></row><row><entry><indexterm><primary>GameAndActor</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>GameAndActor</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a764ac92345b843c15d1935d1a6eafaf0a68ebb8ef1cbd0371b060a93d7788d460"/>GameAndActor</entry><entry>
<para>(0x01) Flag type for game AND actor properties. Equal to &apos;Game&apos;</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l01788">1788</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40"/><section>
    <title>ReceiverGroup</title>
<indexterm><primary>ReceiverGroup</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>ReceiverGroup</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40">Photon.Realtime.ReceiverGroup</link> : byte</computeroutput></para><para>

<para>Lite - OpRaiseEvent lets you chose which actors in the room should receive events. </para>
</para>

<para>By default, events are sent to &quot;Others&quot; but you can overrule this. </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>Others</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>Others</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40a52ef9633d88a7480b3a938ff9eaa2a25"/>Others</entry><entry>
<para>Default value (not sent). Anyone else gets my event.</para>
</entry></row><row><entry><indexterm><primary>All</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>All</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40ab1c94ca2fbc3e78fc30069c8d0f01680"/>All</entry><entry>
<para>Everyone in the current room (including this peer) will get this event.</para>
</entry></row><row><entry><indexterm><primary>MasterClient</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>MasterClient</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a32e1cc9d538d60db8e5fb79b7a4e2e40ad0209f4a40060d6e7c37d29979d8f444"/>MasterClient</entry><entry>
<para>The server sends this event only to the actor with the lowest actorNumber. </para>

<para>The &quot;master client&quot; does not have special rights but is the one who is in this room the longest time.</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__loadbalancing_peer_8cs_source_1l01721">1721</link> of file <link linkend="__loadbalancing_peer_8cs_source">LoadbalancingPeer.cs</link>.</para>
</section>
<anchor xml:id="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356"/><section>
    <title>ServerConnection</title>
<indexterm><primary>ServerConnection</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>ServerConnection</secondary></indexterm>
<para><computeroutput>enum <link linkend="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356">Photon.Realtime.ServerConnection</link></computeroutput></para><para>

<para>Available server (types) for internally used field: server. </para>
</para>

<para><link linkend="_namespace_photon">Photon</link> uses 3 different roles of servers: Name Server, Master Server and Game Server.</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>MasterServer</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>MasterServer</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356a183832aa8cc99ec3e781066d643b2d25"/>MasterServer</entry><entry>
<para>This server is where matchmaking gets done and where clients can get lists of rooms in lobbies.</para>
</entry></row><row><entry><indexterm><primary>GameServer</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>GameServer</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356a1c7d561350ce0a5a7e51b973a3796315"/>GameServer</entry><entry>
<para>This server handles a number of rooms to execute and relay the messages between players (in a room).</para>
</entry></row><row><entry><indexterm><primary>NameServer</primary><secondary>Photon.Realtime</secondary></indexterm>
<indexterm><primary>Photon.Realtime</primary><secondary>NameServer</secondary></indexterm>
<anchor xml:id="_namespace_photon_1_1_realtime_1a354e0e08dc26547ca0735fbcc3825356a6f478184dbea3df0c2e9147987c01e64"/>NameServer</entry><entry>
<para>This server is used initially to get the address (IP) of a Master Server for a specific region. Not used for <link linkend="_namespace_photon">Photon</link> OnPremise (self hosted).</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__load_balancing_client_8cs_source_1l00198">198</link> of file <link linkend="__load_balancing_client_8cs_source">LoadBalancingClient.cs</link>.</para>
</section>
</section>
</section>
