<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half" xml:lang="en-US">
<title>Photon.Compression.HalfFloat.Half Struct Reference</title>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary></indexterm>
<para>

<para>A half precision (16 bit) floating point value. </para>
 
</para>
Inheritance diagram for Photon.Compression.HalfFloat.Half:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Photon.Compression.HalfFloat.Half:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a046c52bc5180178e3f43a593d79165ea">Half</link> (float value)</para>

<para>Initializes a new instance of the T:SlimMath.Half structure. </para>
</listitem>
            <listitem><para>override string <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a906c1fefd372a1b788ead0739aed59e4">ToString</link> ()</para>

<para>Converts the value of the object to its equivalent string representation. </para>
</listitem>
            <listitem><para>string <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1afa018f6d7983bfd79e19c0e9c9222783">ToString</link> (string format)</para>

<para>Returns a System.String that represents this instance. </para>
</listitem>
            <listitem><para>string <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a3908d873e3584acbbacfb9c0482a0b6f">ToString</link> (IFormatProvider formatProvider)</para>

<para>Returns a System.String that represents this instance. </para>
</listitem>
            <listitem><para>string <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ac5475150e7047b8f7807edd2768c855b">ToString</link> (string format, IFormatProvider formatProvider)</para>

<para>Returns a System.String that represents this instance. </para>
</listitem>
            <listitem><para>override int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1adf7e7432daae305a5887eed9c9e444c8">GetHashCode</link> ()</para>

<para>Returns the hash code for this instance. </para>
</listitem>
            <listitem><para>int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a7218ef863787bfab3f75615940f15503">CompareTo</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> value)</para>

<para>Compares this instance to another instance of the same type. </para>
</listitem>
            <listitem><para>int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a459ce79f8bc00dd6964aa2821e3ee050">CompareTo</link> (object value)</para>

<para>Compares this instance to another instance of another type. </para>
</listitem>
            <listitem><para>bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ae73ad7877bde6b823bf0736c24f3c218">Equals</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> other)</para>

<para>Returns a value that indicates whether the current instance is equal to the specified object. </para>
</listitem>
            <listitem><para>override bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a995606b36233aca6583ff51ad1f8d44c">Equals</link> (object obj)</para>

<para>Returns a value that indicates whether the current instance is equal to a specified object. </para>
</listitem>
            <listitem><para>TypeCode <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a3211582b8061ae2891b70f2fbde74c7f">GetTypeCode</link> ()</para>

<para>Returns the System.TypeCode for value type. </para>
</listitem>
            <listitem><para>bool IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1af76e515aa550090bd5b6f170980356c6">ToBoolean</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>byte IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ab43dd952765e82d5bf23ffcdad0448c8">ToByte</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>char IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a25eb40fdd55c1b530353e89450343010">ToChar</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>DateTime IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a8a6c0db7df065913503d2917e0d1ad07">ToDateTime</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>decimal IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a7df4ae718efc762b17e3a5912ff6d218">ToDecimal</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>double IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a9c878c24478757d597b723758bfaa25f">ToDouble</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>short IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a4d7e2260b96c3f2c48682c686e55ea08">ToInt16</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>int IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a06c60039a4abb97e5a2815ba3b516c85">ToInt32</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>long IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a07d943420fd00445ea9de879ea6afc1f">ToInt64</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>sbyte IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a3943d20bf430e64952d980dd02e00ccb">ToSByte</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>float IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aa281954e80a8ebf127b90b2284677b61">ToSingle</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>object IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ad885addca113125f53e962620882f692">ToType</link> (Type type, IFormatProvider provider)</para>
</listitem>
            <listitem><para>ushort IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a50507e92d757786b6d24cab61d569ca0">ToUInt16</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>uint IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aba4380d5d9125bdbab8e7956014cac1e">ToUInt32</link> (IFormatProvider provider)</para>
</listitem>
            <listitem><para>ulong IConvertible. <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a023a216a0cdf89e2036307ce9976f5e4">ToUInt64</link> (IFormatProvider provider)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static float[] <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1adbba489e73b6aeae38d7647b437be5bb">ConvertToFloat</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>[] values)</para>

<para>Converts an array of half precision values into full precision values. </para>
</listitem>
            <listitem><para>static <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>[] <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a1495c53ecb7a355a52130c1202801c05">ConvertToHalf</link> (float[] values)</para>

<para>Converts an array of full precision values into half precision values. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aa18ae94a3c7a3c158224132008ced06e">IsInfinity</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> half)</para>

<para>Returns a value indicating whether the specified number evaluates to negative or positive infinity. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a9ce2438193b882b63bfec1a6efb1dc15">IsNaN</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> half)</para>

<para>Returns a value indicating whether the specified number evaluates to NaN. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a906fea5725f206a38cdabedd0ab56417">IsNegativeInfinity</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> half)</para>

<para>Returns a value indicating whether the specified number evaluates to negative infinity. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a7e4e4314d2e1bca9fd1755cc10ccd550">IsPositiveInfinity</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> half)</para>

<para>Returns a value indicating whether the specified number evaluates to positive infinity. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a9e09a8639293e29493e8bcab08150235">operator&lt;</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)</para>

<para>Returns a value that indicates whether a specified value is less than another specified value. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a34a595f78d9d04cec5f1958e71b9ab86">operator&gt;</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)</para>

<para>Returns a value that indicates whether a specified value is greater than another specified value. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a674e44fa492edfc3431d4a7d845cda71">operator&lt;=</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)</para>

<para>Returns a value that indicates whether a specified value is less than or equal to another specified value. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1afcfeb9a643a610550a333913a6d35610">operator&gt;=</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)</para>

<para>Returns a value that indicates whether a specified value is greater than or equal to another specified value. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a586f47f97bc299c7dcc3beb3a9b59096">operator==</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)</para>

<para>Tests for equality between two objects. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ac4d330e8555714e71600e87df17c4abc">operator!=</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)</para>

<para>Tests for inequality between two objects. </para>
</listitem>
            <listitem><para>static <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ab2a811eace135b03c3d544d407553709">operator Half</link> (float value)</para>

<para>Performs an explicit conversion from T:System.Single to T:SlimMath.Half. </para>
</listitem>
            <listitem><para>static implicit <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a4c3c90130d1d96aa1a47dc6955223719">operator float</link> (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> value)</para>

<para>Performs an implicit conversion from T:SlimMath.Half to T:System.Single. </para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a3c766d4c16ebaabed730158b25b8332c">Equals</link> (ref <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> value1, ref <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> value2)</para>

<para>Determines whether the specified object instances are considered equal. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>const int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a4ec44ed1e835977107d1b9f3899736df">PrecisionDigits</link> = 3</para>

<para>Number of decimal digits of precision. </para>
</listitem>
            <listitem><para>const int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a73aa258f916d6e7655bb07416a9a542e">MantissaBits</link> = 11</para>

<para>Number of bits in the mantissa. </para>
</listitem>
            <listitem><para>const int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a9a64e19598a35caab2afb7101d9941d7">MaximumDecimalExponent</link> = 4</para>

<para>Maximum decimal exponent. </para>
</listitem>
            <listitem><para>const int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aaec191fbb42075e874ec2998517e5f8b">MaximumBinaryExponent</link> = 15</para>

<para>Maximum binary exponent. </para>
</listitem>
            <listitem><para>const int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ab70e4820792d6e7c9f66ef13bf2d4d54">MinimumDecimalExponent</link> = -4</para>

<para>Minimum decimal exponent. </para>
</listitem>
            <listitem><para>const int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a61e9dd4a961c137bed10343726448b9a">MinimumBinaryExponent</link> = -14</para>

<para>Minimum binary exponent. </para>
</listitem>
            <listitem><para>const int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a0a14c19d6f00936bb94d0989b182d55e">ExponentRadix</link> = 2</para>

<para>Exponent radix. </para>
</listitem>
            <listitem><para>const int <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a4fb1bedeb1c88643aa4b448ea1671b9c">AdditionRounding</link> = 1</para>

<para>Additional rounding. </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aba21e4c390efd4ee131f5c25501d5c0c">Epsilon</link> = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(0.0004887581f)</para>

<para>Smallest value such that 1.0 + epsilon != 1.0 </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1af3cda36319ae890f04a731cb53e06764">MaxValue</link> = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(65504f)</para>

<para>Maximum value of the number. </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a59ed128f39c31360e082f369c5194191">MinValue</link> = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(6.103516E-05f)</para>

<para>Minimum value of the number. </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a30a2004288a495029a686eefadeadecc">NaN</link> = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(0.0f / 0.0f)</para>

<para>Represents not a number (NaN). </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a6d616994f2e0928d8abfee678e3cb381">NegativeInfinity</link> = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(-1.0f / 0.0f)</para>

<para>Represents negative infinity. </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a44058ecd87e425be56ebd495cc655aec">PositiveInfinity</link> = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(1.0f / 0.0f)</para>

<para>Represents positive infinity. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>ushort <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1af83a4f32d18a4063627b0f37370cff7e">RawValue</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets the raw 16 bit value used to back this half-float. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A half precision (16 bit) floating point value. </para>


<para>
Definition at line <link linkend="__half_8cs_source_1l00035">35</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a046c52bc5180178e3f43a593d79165ea"/><section>
    <title>Half()</title>
<indexterm><primary>Half</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>Half</secondary></indexterm>
<para><computeroutput>Photon.Compression.HalfFloat.Half.Half (float value)</computeroutput></para><para>

<para>Initializes a new instance of the T:SlimMath.Half structure. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>The floating point value that should be stored in 16 bit format.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00113">113</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a046c52bc5180178e3f43a593d79165ea_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a046c52bc5180178e3f43a593d79165ea_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a7218ef863787bfab3f75615940f15503"/><section>
    <title>CompareTo()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>CompareTo</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>CompareTo</secondary></indexterm>
<para><computeroutput>int Photon.Compression.HalfFloat.Half.CompareTo (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> value)</computeroutput></para><para>

<para>Compares this instance to another instance of the same type. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>The other value to compare to this instance.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A value that specifies if this instance is greater than, less than, or equal to <emphasis>value</emphasis> .</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00351">351</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a7218ef863787bfab3f75615940f15503_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a459ce79f8bc00dd6964aa2821e3ee050"/><section>
    <title>CompareTo()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>CompareTo</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>CompareTo</secondary></indexterm>
<para><computeroutput>int Photon.Compression.HalfFloat.Half.CompareTo (object value)</computeroutput></para><para>

<para>Compares this instance to another instance of another type. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>The other value to compare to this instance.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A value that specifies if this instance is greater than, less than, or equal to <emphasis>value</emphasis> .</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00384">384</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a459ce79f8bc00dd6964aa2821e3ee050_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1adbba489e73b6aeae38d7647b437be5bb"/><section>
    <title>ConvertToFloat()</title>
<indexterm><primary>ConvertToFloat</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ConvertToFloat</secondary></indexterm>
<para><computeroutput>static float[] Photon.Compression.HalfFloat.Half.ConvertToFloat (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>[] values)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Converts an array of half precision values into full precision values. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>values</entry><entry>
<para>The values to be converted.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>An array of converted values.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00132">132</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_adbba489e73b6aeae38d7647b437be5bb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a1495c53ecb7a355a52130c1202801c05"/><section>
    <title>ConvertToHalf()</title>
<indexterm><primary>ConvertToHalf</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ConvertToHalf</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>[] Photon.Compression.HalfFloat.Half.ConvertToHalf (float[] values)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Converts an array of full precision values into half precision values. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>values</entry><entry>
<para>The values to be converted.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>An array of converted values.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00147">147</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a1495c53ecb7a355a52130c1202801c05_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ae73ad7877bde6b823bf0736c24f3c218"/><section>
    <title>Equals()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Equals</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>Equals</secondary></indexterm>
<para><computeroutput>bool Photon.Compression.HalfFloat.Half.Equals (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> other)</computeroutput></para><para>

<para>Returns a value that indicates whether the current instance is equal to the specified object. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>other</entry><entry>
<para>Object to make the comparison with.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if the current instance is equal to the specified object; <computeroutput>false</computeroutput> otherwise.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00443">443</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a995606b36233aca6583ff51ad1f8d44c"/><section>
    <title>Equals()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Equals</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>Equals</secondary></indexterm>
<para><computeroutput>override bool Photon.Compression.HalfFloat.Half.Equals (object obj)</computeroutput></para><para>

<para>Returns a value that indicates whether the current instance is equal to a specified object. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>obj</entry><entry>
<para>Object to make the comparison with.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if the current instance is equal to the specified object; <computeroutput>false</computeroutput> otherwise.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00454">454</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a995606b36233aca6583ff51ad1f8d44c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a3c766d4c16ebaabed730158b25b8332c"/><section>
    <title>Equals()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Equals</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>Equals</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.Equals (ref <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> value1, ref <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> value2)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Determines whether the specified object instances are considered equal. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value1</entry><entry></entry>
                            </row>
                            <row>
<entry>value2</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>value1</emphasis>  is the same instance as <emphasis>value2</emphasis>  or if both are <computeroutput>null</computeroutput> references or if <computeroutput>value1.Equals(value2)</computeroutput> returns <computeroutput>true</computeroutput>; otherwise, <computeroutput>false</computeroutput>. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00432">432</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a3c766d4c16ebaabed730158b25b8332c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1adf7e7432daae305a5887eed9c9e444c8"/><section>
    <title>GetHashCode()</title>
<indexterm><primary>GetHashCode</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>GetHashCode</secondary></indexterm>
<para><computeroutput>override int Photon.Compression.HalfFloat.Half.GetHashCode ( )</computeroutput></para><para>

<para>Returns the hash code for this instance. </para>
</para>

<para><formalpara><title>Returns</title>

<para>A 32-bit signed integer hash code.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00341">341</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a3211582b8061ae2891b70f2fbde74c7f"/><section>
    <title>GetTypeCode()</title>
<indexterm><primary>GetTypeCode</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>GetTypeCode</secondary></indexterm>
<para><computeroutput>TypeCode Photon.Compression.HalfFloat.Half.GetTypeCode ( )</computeroutput></para><para>

<para>Returns the System.TypeCode for value type. </para>
</para>

<para><formalpara><title>Returns</title>

<para>The type code.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00469">469</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aa18ae94a3c7a3c158224132008ced06e"/><section>
    <title>IsInfinity()</title>
<indexterm><primary>IsInfinity</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>IsInfinity</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.IsInfinity (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> half)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a value indicating whether the specified number evaluates to negative or positive infinity. </para>
</para>

<para><formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>half</emphasis>  evaluates to positive or negative infinity; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00161">161</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a9ce2438193b882b63bfec1a6efb1dc15"/><section>
    <title>IsNaN()</title>
<indexterm><primary>IsNaN</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>IsNaN</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.IsNaN (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> half)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a value indicating whether the specified number evaluates to NaN. </para>
</para>

<para><formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>half</emphasis>  evaluates to NaN; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00170">170</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a9ce2438193b882b63bfec1a6efb1dc15_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a906fea5725f206a38cdabedd0ab56417"/><section>
    <title>IsNegativeInfinity()</title>
<indexterm><primary>IsNegativeInfinity</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>IsNegativeInfinity</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.IsNegativeInfinity (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> half)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a value indicating whether the specified number evaluates to negative infinity. </para>
</para>

<para><formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>half</emphasis>  evaluates to negative infinity; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00179">179</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a7e4e4314d2e1bca9fd1755cc10ccd550"/><section>
    <title>IsPositiveInfinity()</title>
<indexterm><primary>IsPositiveInfinity</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>IsPositiveInfinity</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.IsPositiveInfinity (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> half)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a value indicating whether the specified number evaluates to positive infinity. </para>
</para>

<para><formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>half</emphasis>  evaluates to positive infinity; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00188">188</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a4c3c90130d1d96aa1a47dc6955223719"/><section>
    <title>operator float()</title>
<indexterm><primary>operator float</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>operator float</secondary></indexterm>
<para><computeroutput>static implicit Photon.Compression.HalfFloat.Half.operator float (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> value)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Performs an implicit conversion from T:SlimMath.Half to T:System.Single. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>The value to be converted.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The converted value.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00280">280</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a4c3c90130d1d96aa1a47dc6955223719_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ab2a811eace135b03c3d544d407553709"/><section>
    <title>operator Half()</title>
<indexterm><primary>operator Half</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>operator Half</secondary></indexterm>
<para><computeroutput>static Photon.Compression.HalfFloat.Half.operator <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> (float value)<computeroutput>[explicit]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Performs an explicit conversion from T:System.Single to T:SlimMath.Half. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>The value to be converted.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The converted value.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00270">270</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_ab2a811eace135b03c3d544d407553709_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ac4d330e8555714e71600e87df17c4abc"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.operator!= (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Tests for inequality between two objects. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>left</entry><entry>
<para>The first value to compare.</para>
</entry>
                            </row>
                            <row>
<entry>right</entry><entry>
<para>The second value to compare.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>left</emphasis>  has a different value than <emphasis>right</emphasis> ; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00260">260</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_ac4d330e8555714e71600e87df17c4abc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a9e09a8639293e29493e8bcab08150235"/><section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.operator&lt; (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a value that indicates whether a specified value is less than another specified value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>left</entry><entry>
<para>The first value to compare.</para>
</entry>
                            </row>
                            <row>
<entry>right</entry><entry>
<para>The second value to compare.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>left</emphasis>  is less than <emphasis>right</emphasis> ; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00200">200</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a674e44fa492edfc3431d4a7d845cda71"/><section>
    <title>operator&lt;=()</title>
<indexterm><primary>operator&lt;=</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>operator&lt;=</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.operator&lt;= (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a value that indicates whether a specified value is less than or equal to another specified value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>left</entry><entry>
<para>The first value to compare.</para>
</entry>
                            </row>
                            <row>
<entry>right</entry><entry>
<para>The second value to compare.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>left</emphasis>  is less than or equal to <emphasis>right</emphasis> ; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00224">224</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a586f47f97bc299c7dcc3beb3a9b59096"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.operator== (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Tests for equality between two objects. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>left</entry><entry>
<para>The first value to compare.</para>
</entry>
                            </row>
                            <row>
<entry>right</entry><entry>
<para>The second value to compare.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>left</emphasis>  has the same value as <emphasis>right</emphasis> ; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00248">248</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a586f47f97bc299c7dcc3beb3a9b59096_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a34a595f78d9d04cec5f1958e71b9ab86"/><section>
    <title>operator&gt;()</title>
<indexterm><primary>operator&gt;</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>operator&gt;</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.operator&gt; (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a value that indicates whether a specified value is greater than another specified value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>left</entry><entry>
<para>The first value to compare.</para>
</entry>
                            </row>
                            <row>
<entry>right</entry><entry>
<para>The second value to compare.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>left</emphasis>  is greater than <emphasis>right</emphasis> ; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00212">212</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1afcfeb9a643a610550a333913a6d35610"/><section>
    <title>operator&gt;=()</title>
<indexterm><primary>operator&gt;=</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>operator&gt;=</secondary></indexterm>
<para><computeroutput>static bool Photon.Compression.HalfFloat.Half.operator&gt;= (<link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> left, <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> right)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Returns a value that indicates whether a specified value is greater than or equal to another specified value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>left</entry><entry>
<para>The first value to compare.</para>
</entry>
                            </row>
                            <row>
<entry>right</entry><entry>
<para>The second value to compare.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><computeroutput>true</computeroutput> if <emphasis>left</emphasis>  is greater than or equal to right; otherwise, <computeroutput>false</computeroutput>.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00236">236</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1af76e515aa550090bd5b6f170980356c6"/><section>
    <title>ToBoolean()</title>
<indexterm><primary>ToBoolean</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToBoolean</secondary></indexterm>
<para><computeroutput>bool IConvertible. Photon.Compression.HalfFloat.Half.ToBoolean (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00474">474</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ab43dd952765e82d5bf23ffcdad0448c8"/><section>
    <title>ToByte()</title>
<indexterm><primary>ToByte</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToByte</secondary></indexterm>
<para><computeroutput>byte IConvertible. Photon.Compression.HalfFloat.Half.ToByte (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00479">479</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a25eb40fdd55c1b530353e89450343010"/><section>
    <title>ToChar()</title>
<indexterm><primary>ToChar</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToChar</secondary></indexterm>
<para><computeroutput>char IConvertible. Photon.Compression.HalfFloat.Half.ToChar (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00484">484</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a8a6c0db7df065913503d2917e0d1ad07"/><section>
    <title>ToDateTime()</title>
<indexterm><primary>ToDateTime</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToDateTime</secondary></indexterm>
<para><computeroutput>DateTime IConvertible. Photon.Compression.HalfFloat.Half.ToDateTime (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00489">489</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a7df4ae718efc762b17e3a5912ff6d218"/><section>
    <title>ToDecimal()</title>
<indexterm><primary>ToDecimal</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToDecimal</secondary></indexterm>
<para><computeroutput>decimal IConvertible. Photon.Compression.HalfFloat.Half.ToDecimal (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00494">494</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a9c878c24478757d597b723758bfaa25f"/><section>
    <title>ToDouble()</title>
<indexterm><primary>ToDouble</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToDouble</secondary></indexterm>
<para><computeroutput>double IConvertible. Photon.Compression.HalfFloat.Half.ToDouble (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00499">499</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a4d7e2260b96c3f2c48682c686e55ea08"/><section>
    <title>ToInt16()</title>
<indexterm><primary>ToInt16</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToInt16</secondary></indexterm>
<para><computeroutput>short IConvertible. Photon.Compression.HalfFloat.Half.ToInt16 (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00504">504</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a06c60039a4abb97e5a2815ba3b516c85"/><section>
    <title>ToInt32()</title>
<indexterm><primary>ToInt32</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToInt32</secondary></indexterm>
<para><computeroutput>int IConvertible. Photon.Compression.HalfFloat.Half.ToInt32 (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00509">509</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a07d943420fd00445ea9de879ea6afc1f"/><section>
    <title>ToInt64()</title>
<indexterm><primary>ToInt64</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToInt64</secondary></indexterm>
<para><computeroutput>long IConvertible. Photon.Compression.HalfFloat.Half.ToInt64 (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00514">514</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a3943d20bf430e64952d980dd02e00ccb"/><section>
    <title>ToSByte()</title>
<indexterm><primary>ToSByte</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToSByte</secondary></indexterm>
<para><computeroutput>sbyte IConvertible. Photon.Compression.HalfFloat.Half.ToSByte (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00519">519</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aa281954e80a8ebf127b90b2284677b61"/><section>
    <title>ToSingle()</title>
<indexterm><primary>ToSingle</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToSingle</secondary></indexterm>
<para><computeroutput>float IConvertible. Photon.Compression.HalfFloat.Half.ToSingle (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00524">524</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a906c1fefd372a1b788ead0739aed59e4"/><section>
    <title>ToString()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>ToString</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToString</secondary></indexterm>
<para><computeroutput>override string Photon.Compression.HalfFloat.Half.ToString ( )</computeroutput></para><para>

<para>Converts the value of the object to its equivalent string representation. </para>
</para>

<para><formalpara><title>Returns</title>

<para>The string representation of the value of this instance.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00289">289</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a906c1fefd372a1b788ead0739aed59e4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a3908d873e3584acbbacfb9c0482a0b6f"/><section>
    <title>ToString()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>ToString</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToString</secondary></indexterm>
<para><computeroutput>string Photon.Compression.HalfFloat.Half.ToString (IFormatProvider formatProvider)</computeroutput></para><para>

<para>Returns a System.String that represents this instance. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>formatProvider</entry><entry>
<para>The format provider.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A System.String that represents this instance. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00316">316</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_a3908d873e3584acbbacfb9c0482a0b6f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1afa018f6d7983bfd79e19c0e9c9222783"/><section>
    <title>ToString()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>ToString</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToString</secondary></indexterm>
<para><computeroutput>string Photon.Compression.HalfFloat.Half.ToString (string format)</computeroutput></para><para>

<para>Returns a System.String that represents this instance. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>format</entry><entry>
<para>The format.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A System.String that represents this instance. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00301">301</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_afa018f6d7983bfd79e19c0e9c9222783_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ac5475150e7047b8f7807edd2768c855b"/><section>
    <title>ToString()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>ToString</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToString</secondary></indexterm>
<para><computeroutput>string Photon.Compression.HalfFloat.Half.ToString (string format, IFormatProvider formatProvider)</computeroutput></para><para>

<para>Returns a System.String that represents this instance. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>format</entry><entry>
<para>The format.</para>
</entry>
                            </row>
                            <row>
<entry>formatProvider</entry><entry>
<para>The format provider.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A System.String that represents this instance. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00329">329</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_compression_1_1_half_float_1_1_half_ac5475150e7047b8f7807edd2768c855b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ad885addca113125f53e962620882f692"/><section>
    <title>ToType()</title>
<indexterm><primary>ToType</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToType</secondary></indexterm>
<para><computeroutput>object IConvertible. Photon.Compression.HalfFloat.Half.ToType (Type type, IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00529">529</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a50507e92d757786b6d24cab61d569ca0"/><section>
    <title>ToUInt16()</title>
<indexterm><primary>ToUInt16</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToUInt16</secondary></indexterm>
<para><computeroutput>ushort IConvertible. Photon.Compression.HalfFloat.Half.ToUInt16 (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00534">534</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aba4380d5d9125bdbab8e7956014cac1e"/><section>
    <title>ToUInt32()</title>
<indexterm><primary>ToUInt32</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToUInt32</secondary></indexterm>
<para><computeroutput>uint IConvertible. Photon.Compression.HalfFloat.Half.ToUInt32 (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00539">539</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a023a216a0cdf89e2036307ce9976f5e4"/><section>
    <title>ToUInt64()</title>
<indexterm><primary>ToUInt64</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ToUInt64</secondary></indexterm>
<para><computeroutput>ulong IConvertible. Photon.Compression.HalfFloat.Half.ToUInt64 (IFormatProvider provider)</computeroutput></para><para>
Definition at line <link linkend="__half_8cs_source_1l00544">544</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a4fb1bedeb1c88643aa4b448ea1671b9c"/><section>
    <title>AdditionRounding</title>
<indexterm><primary>AdditionRounding</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>AdditionRounding</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.HalfFloat.Half.AdditionRounding = 1<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Additional rounding. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00077">77</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aba21e4c390efd4ee131f5c25501d5c0c"/><section>
    <title>Epsilon</title>
<indexterm><primary>Epsilon</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>Epsilon</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> Photon.Compression.HalfFloat.Half.Epsilon = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(0.0004887581f)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Smallest value such that 1.0 + epsilon != 1.0 </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00082">82</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a0a14c19d6f00936bb94d0989b182d55e"/><section>
    <title>ExponentRadix</title>
<indexterm><primary>ExponentRadix</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>ExponentRadix</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.HalfFloat.Half.ExponentRadix = 2<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Exponent radix. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00072">72</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a73aa258f916d6e7655bb07416a9a542e"/><section>
    <title>MantissaBits</title>
<indexterm><primary>MantissaBits</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>MantissaBits</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.HalfFloat.Half.MantissaBits = 11<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Number of bits in the mantissa. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00047">47</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1aaec191fbb42075e874ec2998517e5f8b"/><section>
    <title>MaximumBinaryExponent</title>
<indexterm><primary>MaximumBinaryExponent</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>MaximumBinaryExponent</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.HalfFloat.Half.MaximumBinaryExponent = 15<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Maximum binary exponent. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00057">57</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a9a64e19598a35caab2afb7101d9941d7"/><section>
    <title>MaximumDecimalExponent</title>
<indexterm><primary>MaximumDecimalExponent</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>MaximumDecimalExponent</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.HalfFloat.Half.MaximumDecimalExponent = 4<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Maximum decimal exponent. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00052">52</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1af3cda36319ae890f04a731cb53e06764"/><section>
    <title>MaxValue</title>
<indexterm><primary>MaxValue</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>MaxValue</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> Photon.Compression.HalfFloat.Half.MaxValue = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(65504f)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Maximum value of the number. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00087">87</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a61e9dd4a961c137bed10343726448b9a"/><section>
    <title>MinimumBinaryExponent</title>
<indexterm><primary>MinimumBinaryExponent</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>MinimumBinaryExponent</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.HalfFloat.Half.MinimumBinaryExponent = -14<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Minimum binary exponent. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00067">67</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1ab70e4820792d6e7c9f66ef13bf2d4d54"/><section>
    <title>MinimumDecimalExponent</title>
<indexterm><primary>MinimumDecimalExponent</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>MinimumDecimalExponent</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.HalfFloat.Half.MinimumDecimalExponent = -4<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Minimum decimal exponent. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00062">62</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a59ed128f39c31360e082f369c5194191"/><section>
    <title>MinValue</title>
<indexterm><primary>MinValue</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>MinValue</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> Photon.Compression.HalfFloat.Half.MinValue = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(6.103516E-05f)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Minimum value of the number. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00092">92</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a30a2004288a495029a686eefadeadecc"/><section>
    <title>NaN</title>
<indexterm><primary>NaN</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>NaN</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> Photon.Compression.HalfFloat.Half.NaN = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(0.0f / 0.0f)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Represents not a number (NaN). </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00097">97</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a6d616994f2e0928d8abfee678e3cb381"/><section>
    <title>NegativeInfinity</title>
<indexterm><primary>NegativeInfinity</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>NegativeInfinity</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> Photon.Compression.HalfFloat.Half.NegativeInfinity = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(-1.0f / 0.0f)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Represents negative infinity. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00102">102</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a44058ecd87e425be56ebd495cc655aec"/><section>
    <title>PositiveInfinity</title>
<indexterm><primary>PositiveInfinity</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>PositiveInfinity</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link> Photon.Compression.HalfFloat.Half.PositiveInfinity = new <link linkend="_struct_photon_1_1_compression_1_1_half_float_1_1_half">Half</link>(1.0f / 0.0f)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Represents positive infinity. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00107">107</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1a4ec44ed1e835977107d1b9f3899736df"/><section>
    <title>PrecisionDigits</title>
<indexterm><primary>PrecisionDigits</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>PrecisionDigits</secondary></indexterm>
<para><computeroutput>const int Photon.Compression.HalfFloat.Half.PrecisionDigits = 3<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Number of decimal digits of precision. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00042">42</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_struct_photon_1_1_compression_1_1_half_float_1_1_half_1af83a4f32d18a4063627b0f37370cff7e"/><section>
    <title>RawValue</title>
<indexterm><primary>RawValue</primary><secondary>Photon.Compression.HalfFloat.Half</secondary></indexterm>
<indexterm><primary>Photon.Compression.HalfFloat.Half</primary><secondary>RawValue</secondary></indexterm>
<para><computeroutput>ushort Photon.Compression.HalfFloat.Half.RawValue<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets the raw 16 bit value used to back this half-float. </para>
</para>
<para>
Definition at line <link linkend="__half_8cs_source_1l00122">122</link> of file <link linkend="__half_8cs_source">Half.cs</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/HalfFloat/<link linkend="__half_8cs">Half.cs</link></section>
</section>
