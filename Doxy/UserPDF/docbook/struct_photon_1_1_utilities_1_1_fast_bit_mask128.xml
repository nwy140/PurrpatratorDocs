<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128" xml:lang="en-US">
<title>Photon.Utilities.FastBitMask128 Struct Reference</title>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary></indexterm>
<para>

<para>Very unchecked, and exposed alternative to BitArray for masks in the 65-128 bit range. </para>
 
</para>
Collaboration diagram for Photon.Utilities.FastBitMask128:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_utilities_1_1_fast_bit_mask128__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab05f32fe7c521a16d4efbb53cc597cb7">FastBitMask128</link> (int bitcount)</para>
</listitem>
            <listitem><para><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a2ea078b9cf686594c71a8a220350dd9a">FastBitMask128</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> copyFrom)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8e3a586d4c2613cc70edad65d14ee0db">Get</link> (int bit)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a726dce8e3f2698541b171ee5dcc4ce0b">Set</link> (int bit, bool value)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ae317ca134584363171aab7fe429c3aaa">SetTrue</link> (int bit)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a55ef5aa2f25f3f16dd083bf4daea8075">SetFalse</link> (int bit)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a7cc5ccb40c34d4aa2a741272ca026baf">SetAllTrue</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a22852960773d69428e112cd25b6b2ddc">SetAllFalse</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aad5d1bfe8be1928b897d8931f17ec051">OR</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aee09b122e0e6bb2a2c7fc51d2e631882">OR</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other, int otherOffset)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a64ef1ee797646ae1daf67acac6c22057">AND</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a35ab941effaa700b1d125081980bab48">XOR</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</para>
</listitem>
            <listitem><para><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8fa80f028971525e11969a36852a5d07">NOT</link> ()</para>

<para>Returns a FastMask with all bits flipped. </para>
</listitem>
            <listitem><para>int <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a1c1481e06a72e75e63ce8b1904ca142f">CountTrue</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ac4baa9435e76835f326e2eba3b741d52">CountFalse</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aa9950170bb2e23bd3a00c7a31dfc6062">ClearBitsBefore</link> (int start, int count)</para>

<para>Non-inclusive clearning of X bits working back from start. </para>
</listitem>
            <listitem><para>int <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aae2ca192afe22303cc6525e78d49b3d5">CountValidRange</link> (int start, int lookahead)</para>

<para>Inclusively get relative distance to most future true bit in the range. </para>
</listitem>
            <listitem><para>void <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a455e692c15da7a3eb7f6faeb1276f799">Copy</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a2ab4da234fdca6e6d1f0d650eeb892c6">Compare</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a4bf6b057b68d16581c62a17443b159b6">operator|</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> a, <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> b)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8ffff637f05a4111b28d7d15b7a95abc">operator&amp;</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> a, <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> b)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a3e293be67b9278ac19ac9bae34df54a3">operator^</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> a, <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> b)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aaf979b1749bb8a8a05bda62933800804">operator!</link> (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> a)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>ulong <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab857e51b0597a1a25e1a7dbf9b85cf79">Seg1</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>ulong <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a0f99bebf69052b0a3b379d9ade015e13">Seg2</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>ulong <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a986a6ef9eac7adb6383cdd3cd2dbc638">AllTrue1</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>ulong <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aebc6131a7df0c31ac08729b066267eb6">AllTrue2</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>int????? <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1abfb0effd7b7f259038cf07d39804286f">BitCount</link><computeroutput> [getset]</computeroutput>
</para>

<para>Changing the bitcount with this property recalculates the masks, and sets any unused bits in the backing fields to 0; </para>
</listitem>
            <listitem><para>bool <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ad97526ad83919d98c03c047709907361">this[int bit]</link><computeroutput> [getset]</computeroutput>
</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ac30b8937cbd1047d432ee8a4f6d5c91a">AllAreFalse</link><computeroutput> [get]</computeroutput>
</para>

<para>All of the backing ulongs == 0 </para>
</listitem>
            <listitem><para>bool <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a5af7e332fa9b8697c37bbe9ab29f6025">AllAreTrue</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Very unchecked, and exposed alternative to BitArray for masks in the 65-128 bit range. </para>



<para>Zero-based indexes. Specifically made for use with ring buffers. </para>
<para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00015">15</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab05f32fe7c521a16d4efbb53cc597cb7"/><section>
    <title>FastBitMask128()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>FastBitMask128</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>FastBitMask128</secondary></indexterm>
<para><computeroutput>Photon.Utilities.FastBitMask128.FastBitMask128 (int bitcount)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00073">73</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_utilities_1_1_fast_bit_mask128_ab05f32fe7c521a16d4efbb53cc597cb7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a2ea078b9cf686594c71a8a220350dd9a"/><section>
    <title>FastBitMask128()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>FastBitMask128</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>FastBitMask128</secondary></indexterm>
<para><computeroutput>Photon.Utilities.FastBitMask128.FastBitMask128 (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> copyFrom)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00094">94</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a64ef1ee797646ae1daf67acac6c22057"/><section>
    <title>AND()</title>
<indexterm><primary>AND</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>AND</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.AND (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00254">254</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aa9950170bb2e23bd3a00c7a31dfc6062"/><section>
    <title>ClearBitsBefore()</title>
<indexterm><primary>ClearBitsBefore</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>ClearBitsBefore</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.ClearBitsBefore (int start, int count)</computeroutput></para><para>

<para>Non-inclusive clearning of X bits working back from start. </para>
</para>

<para>Max count of 64. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>start</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>

<para>Account for possiblity of wrapping back around to seg 1</para>

<para>if we are only using the first ulong (64 or less bits)</para>
<para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00396">396</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_utilities_1_1_fast_bit_mask128_aa9950170bb2e23bd3a00c7a31dfc6062_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a2ab4da234fdca6e6d1f0d650eeb892c6"/><section>
    <title>Compare()</title>
<indexterm><primary>Compare</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>Compare</secondary></indexterm>
<para><computeroutput>bool Photon.Utilities.FastBitMask128.Compare (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00488">488</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a455e692c15da7a3eb7f6faeb1276f799"/><section>
    <title>Copy()</title>
<indexterm><primary>Copy</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>Copy</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.Copy (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00477">477</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ac4baa9435e76835f326e2eba3b741d52"/><section>
    <title>CountFalse()</title>
<indexterm><primary>CountFalse</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>CountFalse</secondary></indexterm>
<para><computeroutput>int Photon.Utilities.FastBitMask128.CountFalse ( )</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00346">346</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a1c1481e06a72e75e63ce8b1904ca142f"/><section>
    <title>CountTrue()</title>
<indexterm><primary>CountTrue</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>CountTrue</secondary></indexterm>
<para><computeroutput>int Photon.Utilities.FastBitMask128.CountTrue ( )</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00304">304</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aae2ca192afe22303cc6525e78d49b3d5"/><section>
    <title>CountValidRange()</title>
<indexterm><primary>CountValidRange</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>CountValidRange</secondary></indexterm>
<para><computeroutput>int Photon.Utilities.FastBitMask128.CountValidRange (int start, int lookahead)</computeroutput></para><para>

<para>Inclusively get relative distance to most future true bit in the range. </para>
</para>

<para>Start with the farthest, and work backwards until we find a true.</para>
<para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00447">447</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_utilities_1_1_fast_bit_mask128_aae2ca192afe22303cc6525e78d49b3d5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8e3a586d4c2613cc70edad65d14ee0db"/><section>
    <title>Get()</title>
<indexterm><primary>Get</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>Get</secondary></indexterm>
<para><computeroutput>bool Photon.Utilities.FastBitMask128.Get (int bit)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00142">142</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8fa80f028971525e11969a36852a5d07"/><section>
    <title>NOT()</title>
<indexterm><primary>NOT</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>NOT</secondary></indexterm>
<para><computeroutput><link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> Photon.Utilities.FastBitMask128.NOT ( )</computeroutput></para><para>

<para>Returns a FastMask with all bits flipped. </para>
</para>

<para>Unused bits remain as zeros. </para>

<para><formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00290">290</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_utilities_1_1_fast_bit_mask128_a8fa80f028971525e11969a36852a5d07_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aaf979b1749bb8a8a05bda62933800804"/><section>
    <title>operator!()</title>
<indexterm><primary>operator!</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>operator!</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> Photon.Utilities.FastBitMask128.operator! (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> a)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00281">281</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_utilities_1_1_fast_bit_mask128_aaf979b1749bb8a8a05bda62933800804_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a8ffff637f05a4111b28d7d15b7a95abc"/><section>
    <title>operator&amp;()</title>
<indexterm><primary>operator&amp;</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>operator&amp;</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> Photon.Utilities.FastBitMask128.operator&amp; (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> a, <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> b)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00271">271</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_utilities_1_1_fast_bit_mask128_a8ffff637f05a4111b28d7d15b7a95abc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a3e293be67b9278ac19ac9bae34df54a3"/><section>
    <title>operator^()</title>
<indexterm><primary>operator^</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>operator^</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> Photon.Utilities.FastBitMask128.operator^ (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> a, <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> b)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00276">276</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_utilities_1_1_fast_bit_mask128_a3e293be67b9278ac19ac9bae34df54a3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a4bf6b057b68d16581c62a17443b159b6"/><section>
    <title>operator|()</title>
<indexterm><primary>operator|</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>operator|</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> Photon.Utilities.FastBitMask128.operator| (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> a, <link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> b)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00266">266</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_photon_1_1_utilities_1_1_fast_bit_mask128_a4bf6b057b68d16581c62a17443b159b6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aad5d1bfe8be1928b897d8931f17ec051"/><section>
    <title>OR()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>OR</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>OR</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.OR (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00218">218</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aee09b122e0e6bb2a2c7fc51d2e631882"/><section>
    <title>OR()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>OR</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>OR</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.OR (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other, int otherOffset)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00224">224</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a726dce8e3f2698541b171ee5dcc4ce0b"/><section>
    <title>Set()</title>
<indexterm><primary>Set</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>Set</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.Set (int bit, bool value)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00154">154</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a22852960773d69428e112cd25b6b2ddc"/><section>
    <title>SetAllFalse()</title>
<indexterm><primary>SetAllFalse</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>SetAllFalse</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.SetAllFalse ( )</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00206">206</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a7cc5ccb40c34d4aa2a741272ca026baf"/><section>
    <title>SetAllTrue()</title>
<indexterm><primary>SetAllTrue</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>SetAllTrue</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.SetAllTrue ( )</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00200">200</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a55ef5aa2f25f3f16dd083bf4daea8075"/><section>
    <title>SetFalse()</title>
<indexterm><primary>SetFalse</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>SetFalse</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.SetFalse (int bit)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00188">188</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ae317ca134584363171aab7fe429c3aaa"/><section>
    <title>SetTrue()</title>
<indexterm><primary>SetTrue</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>SetTrue</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.SetTrue (int bit)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00176">176</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a35ab941effaa700b1d125081980bab48"/><section>
    <title>XOR()</title>
<indexterm><primary>XOR</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>XOR</secondary></indexterm>
<para><computeroutput>void Photon.Utilities.FastBitMask128.XOR (<link linkend="_struct_photon_1_1_utilities_1_1_fast_bit_mask128">FastBitMask128</link> other)</computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00260">260</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ac30b8937cbd1047d432ee8a4f6d5c91a"/><section>
    <title>AllAreFalse</title>
<indexterm><primary>AllAreFalse</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>AllAreFalse</secondary></indexterm>
<para><computeroutput>bool Photon.Utilities.FastBitMask128.AllAreFalse<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>All of the backing ulongs == 0 </para>
</para>
<para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00215">215</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a5af7e332fa9b8697c37bbe9ab29f6025"/><section>
    <title>AllAreTrue</title>
<indexterm><primary>AllAreTrue</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>AllAreTrue</secondary></indexterm>
<para><computeroutput>bool Photon.Utilities.FastBitMask128.AllAreTrue<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00216">216</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a986a6ef9eac7adb6383cdd3cd2dbc638"/><section>
    <title>AllTrue1</title>
<indexterm><primary>AllTrue1</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>AllTrue1</secondary></indexterm>
<para><computeroutput>ulong Photon.Utilities.FastBitMask128.AllTrue1<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00023">23</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1aebc6131a7df0c31ac08729b066267eb6"/><section>
    <title>AllTrue2</title>
<indexterm><primary>AllTrue2</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>AllTrue2</secondary></indexterm>
<para><computeroutput>ulong Photon.Utilities.FastBitMask128.AllTrue2<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00024">24</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1abfb0effd7b7f259038cf07d39804286f"/><section>
    <title>BitCount</title>
<indexterm><primary>BitCount</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>BitCount</secondary></indexterm>
<para><computeroutput>int????? Photon.Utilities.FastBitMask128.BitCount<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Changing the bitcount with this property recalculates the masks, and sets any unused bits in the backing fields to 0; </para>
</para>
<para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00029">29</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ab857e51b0597a1a25e1a7dbf9b85cf79"/><section>
    <title>Seg1</title>
<indexterm><primary>Seg1</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>Seg1</secondary></indexterm>
<para><computeroutput>ulong Photon.Utilities.FastBitMask128.Seg1<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00021">21</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1a0f99bebf69052b0a3b379d9ade015e13"/><section>
    <title>Seg2</title>
<indexterm><primary>Seg2</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>Seg2</secondary></indexterm>
<para><computeroutput>ulong Photon.Utilities.FastBitMask128.Seg2<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00022">22</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<anchor xml:id="_struct_photon_1_1_utilities_1_1_fast_bit_mask128_1ad97526ad83919d98c03c047709907361"/><section>
    <title>this[int bit]</title>
<indexterm><primary>this[int bit]</primary><secondary>Photon.Utilities.FastBitMask128</secondary></indexterm>
<indexterm><primary>Photon.Utilities.FastBitMask128</primary><secondary>this[int bit]</secondary></indexterm>
<para><computeroutput>bool Photon.Utilities.FastBitMask128.this[int bit]<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__fast_bit_mask128_8cs_source_1l00105">105</link> of file <link linkend="__fast_bit_mask128_8cs_source">FastBitMask128.cs</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/FastBitMask/<link linkend="__fast_bit_mask128_8cs">FastBitMask128.cs</link></section>
</section>
