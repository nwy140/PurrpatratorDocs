.TH "Photon.Chat" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Chat
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBDemo\fP"
.br
.ti -1c
.RI "namespace \fBUtilityScripts\fP"
.br
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBAuthenticationValues\fP"
.br
.RI "Container for user authentication in \fBPhoton\fP\&. "
.ti -1c
.RI "class \fBChannelCreationOptions\fP"
.br
.ti -1c
.RI "class \fBChannelWellKnownProperties\fP"
.br
.ti -1c
.RI "class \fBChatAppSettings\fP"
.br
.RI "Settings for \fBPhoton\fP application(s) and the server to connect to\&. "
.ti -1c
.RI "class \fBChatChannel\fP"
.br
.RI "A channel of communication in \fBPhoton\fP \fBChat\fP, updated by \fBChatClient\fP and provided as READ ONLY\&. "
.ti -1c
.RI "class \fBChatClient\fP"
.br
.RI "Central class of the \fBPhoton\fP \fBChat\fP API to connect, handle channels and messages\&. "
.ti -1c
.RI "class \fBChatEventCode\fP"
.br
.RI "Wraps up internally used constants in \fBPhoton\fP \fBChat\fP events\&. "
.ti -1c
.RI "class \fBChatOperationCode\fP"
.br
.RI "Wraps up codes for operations used internally in \fBPhoton\fP \fBChat\fP\&. "
.ti -1c
.RI "class \fBChatParameterCode\fP"
.br
.RI "Wraps up codes for parameters (in operations and events) used internally in \fBPhoton\fP \fBChat\fP\&. "
.ti -1c
.RI "class \fBChatPeer\fP"
.br
.RI "Provides basic operations of the \fBPhoton\fP \fBChat\fP server\&. "
.ti -1c
.RI "class \fBChatUserStatus\fP"
.br
.RI "Contains commonly used status values for SetOnlineStatus\&. "
.ti -1c
.RI "class \fBErrorCode\fP"
.br
.RI "\fBErrorCode\fP defines the default codes associated with \fBPhoton\fP client/server communication\&. "
.ti -1c
.RI "interface \fBIChatClientListener\fP"
.br
.RI "Callback interface for \fBChat\fP client side\&. "
.ti -1c
.RI "class \fBParameterCode\fP"
.br
.RI "Class for constants\&. Codes for parameters of Operations and Events\&."
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBChatDisconnectCause\fP { \fBNone\fP, \fBExceptionOnConnect\fP, \fBDisconnectByServerLogic\fP, \fBDisconnectByServerReasonUnknown\fP, \fBServerTimeout\fP, \fBClientTimeout\fP, \fBException\fP, \fBInvalidAuthentication\fP, \fBMaxCcuReached\fP, \fBInvalidRegion\fP, \fBOperationNotAllowedInCurrentState\fP, \fBCustomAuthenticationFailed\fP, \fBAuthenticationTicketExpired\fP, \fBDisconnectByClientLogic\fP }"
.br
.RI "Enumeration of causes for Disconnects (used in ChatClient\&.DisconnectedCause)\&. "
.ti -1c
.RI "enum \fBCustomAuthenticationType\fP : byte { \fBCustom\fP = 0, \fBSteam\fP = 1, \fBFacebook\fP = 2, \fBOculus\fP = 3, \fBPlayStation4\fP = 4, \fBPlayStation\fP = 4, \fBXbox\fP = 5, \fBViveport\fP = 10, \fBNintendoSwitch\fP = 11, \fBPlayStation5\fP = 12, \fBPlaystation5\fP = 12, \fBEpic\fP = 13, \fBFacebookGaming\fP = 15, \fBNone\fP = byte\&.MaxValue }"
.br
.RI "Options for optional 'Custom Authentication' services used with \fBPhoton\fP\&. "
.ti -1c
.RI "enum \fBChatState\fP { \fBUninitialized\fP, \fBConnectingToNameServer\fP, \fBConnectedToNameServer\fP, \fBAuthenticating\fP, \fBAuthenticated\fP, \fBDisconnectingFromNameServer\fP, \fBConnectingToFrontEnd\fP, \fBConnectedToFrontEnd\fP, \fBDisconnectingFromFrontEnd\fP, \fBQueuedComingFromFrontEnd\fP, \fBDisconnecting\fP, \fBDisconnected\fP, \fBConnectWithFallbackProtocol\fP }"
.br
.RI "Possible states for a Chat Client\&."
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBPhoton\&.Chat\&.ChatDisconnectCause\fP"

.PP
Enumeration of causes for Disconnects (used in \fBChatClient\&.DisconnectedCause\fP)\&. Read the individual descriptions to find out what to do about this type of disconnect\&.
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINone \fP\fP
No error was tracked\&.
.TP
\fB\fIExceptionOnConnect \fP\fP
OnStatusChanged: The server is not available or the address is wrong\&. Make sure the port is provided and the server is up\&.
.TP
\fB\fIDisconnectByServerLogic \fP\fP
OnStatusChanged: The server disconnected this client from within the room's logic (the C# code)\&.
.TP
\fB\fIDisconnectByServerReasonUnknown \fP\fP
OnStatusChanged: The server disconnected this client for unknown reasons\&.
.TP
\fB\fIServerTimeout \fP\fP
OnStatusChanged: The server disconnected this client due to timing out (missing acknowledgement from the client)\&.
.TP
\fB\fIClientTimeout \fP\fP
OnStatusChanged: This client detected that the server's responses are not received in due time\&.
.TP
\fB\fIException \fP\fP
OnStatusChanged: Some internal exception caused the socket code to fail\&. Contact Exit Games\&.
.TP
\fB\fIInvalidAuthentication \fP\fP
OnOperationResponse: Authenticate in the \fBPhoton\fP Cloud with invalid AppId\&. Update your subscription or contact Exit Games\&.
.TP
\fB\fIMaxCcuReached \fP\fP
OnOperationResponse: Authenticate (temporarily) failed when using a \fBPhoton\fP Cloud subscription without CCU Burst\&. Update your subscription\&.
.TP
\fB\fIInvalidRegion \fP\fP
OnOperationResponse: Authenticate when the app's \fBPhoton\fP Cloud subscription is locked to some (other) region(s)\&. Update your subscription or change region\&.
.TP
\fB\fIOperationNotAllowedInCurrentState \fP\fP
OnOperationResponse: Operation that's (currently) not available for this client (not authorized usually)\&. Only tracked for op Authenticate\&.
.TP
\fB\fICustomAuthenticationFailed \fP\fP
OnOperationResponse: Authenticate in the \fBPhoton\fP Cloud with invalid client values or custom authentication setup in Cloud Dashboard\&.
.TP
\fB\fIAuthenticationTicketExpired \fP\fP
The authentication ticket should provide access to any \fBPhoton\fP Cloud server without doing another authentication-service call\&. However, the ticket expired\&.
.TP
\fB\fIDisconnectByClientLogic \fP\fP
OnStatusChanged: The client disconnected from within the logic (the C# code)\&.
.PP
Definition at line \fB11\fP of file \fBChatDisconnectCause\&.cs\fP\&.
.SS "enum \fBPhoton\&.Chat\&.ChatState\fP"

.PP
Possible states for a \fBChat\fP Client\&.
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIUninitialized \fP\fP
Peer is created but not used yet\&.
.TP
\fB\fIConnectingToNameServer \fP\fP
Connecting to name server\&.
.TP
\fB\fIConnectedToNameServer \fP\fP
Connected to name server\&.
.TP
\fB\fIAuthenticating \fP\fP
Authenticating on current server\&.
.TP
\fB\fIAuthenticated \fP\fP
Finished authentication on current server\&.
.TP
\fB\fIDisconnectingFromNameServer \fP\fP
Disconnecting from name server\&. This is usually a transition from name server to frontend server\&.
.TP
\fB\fIConnectingToFrontEnd \fP\fP
Connecting to frontend server\&.
.TP
\fB\fIConnectedToFrontEnd \fP\fP
Connected to frontend server\&.
.TP
\fB\fIDisconnectingFromFrontEnd \fP\fP
Disconnecting from frontend server\&.
.TP
\fB\fIQueuedComingFromFrontEnd \fP\fP
Currently not used\&.
.TP
\fB\fIDisconnecting \fP\fP
The client disconnects (from any server)\&.
.TP
\fB\fIDisconnected \fP\fP
The client is no longer connected (to any server)\&.
.TP
\fB\fIConnectWithFallbackProtocol \fP\fP
Client was unable to connect to Name Server and will attempt to connect with an alternative network protocol (TCP)\&.
.PP
Definition at line \fB10\fP of file \fBChatState\&.cs\fP\&.
.SS "enum \fBPhoton\&.Chat\&.CustomAuthenticationType\fP : byte"

.PP
Options for optional 'Custom Authentication' services used with \fBPhoton\fP\&. Used by OpAuthenticate after connecting to \fBPhoton\fP\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICustom \fP\fP
Use a custom authentication service\&. Currently the only implemented option\&.
.TP
\fB\fISteam \fP\fP
Authenticates users by their Steam Account\&. Set Steam's ticket as 'ticket' via AddAuthParameter()\&.
.TP
\fB\fIFacebook \fP\fP
Authenticates users by their Facebook Account\&. Set Facebooks's tocken as 'token' via AddAuthParameter()\&.
.TP
\fB\fIOculus \fP\fP
Authenticates users by their Oculus Account and token\&. Set Oculus' userid as 'userid' and nonce as 'nonce' via AddAuthParameter()\&.
.TP
\fB\fIPlayStation4 \fP\fP
Authenticates users by their PSN Account and token on PS4\&. Set token as 'token', env as 'env' and userName as 'userName' via AddAuthParameter()\&.
.TP
\fB\fIPlayStation \fP\fP
.TP
\fB\fIXbox \fP\fP
Authenticates users by their Xbox Account\&. Pass the XSTS token via SetAuthPostData()\&.
.TP
\fB\fIViveport \fP\fP
Authenticates users by their HTC Viveport Account\&. Set userToken as 'userToken' via AddAuthParameter()\&.
.TP
\fB\fINintendoSwitch \fP\fP
Authenticates users by their NSA ID\&. Set token as 'token' and appversion as 'appversion' via AddAuthParameter()\&. The appversion is optional\&.
.TP
\fB\fIPlayStation5 \fP\fP
Authenticates users by their PSN Account and token on PS5\&. Set token as 'token', env as 'env' and userName as 'userName' via AddAuthParameter()\&.
.TP
\fB\fIPlaystation5 \fP\fP
.TP
\fB\fIEpic \fP\fP
Authenticates users with Epic Online Services (EOS)\&. Set token as 'token' and ownershipToken as 'ownershipToken' via AddAuthParameter()\&. The ownershipToken is optional\&.
.TP
\fB\fIFacebookGaming \fP\fP
Authenticates users with Facebook Gaming api\&. Set token as 'token' via AddAuthParameter()\&.
.TP
\fB\fINone \fP\fP
Disables custom authentication\&. Same as not providing any \fBAuthenticationValues\fP for connect (more precisely for: OpAuthenticate)\&.
.PP
Definition at line \fB190\fP of file \fBChatPeer\&.cs\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
