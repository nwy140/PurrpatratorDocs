.TH "Photon.Chat.AuthenticationValues" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Chat.AuthenticationValues \- Container for user authentication in \fBPhoton\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAuthenticationValues\fP ()"
.br
.RI "Creates empty auth values without any info\&."
.ti -1c
.RI "\fBAuthenticationValues\fP (string userId)"
.br
.RI "Creates minimal info about the user\&. "
.ti -1c
.RI "virtual void \fBSetAuthPostData\fP (string stringData)"
.br
.RI "Sets the data to be passed-on to the auth service via POST\&. "
.ti -1c
.RI "virtual void \fBSetAuthPostData\fP (byte[] byteData)"
.br
.RI "Sets the data to be passed-on to the auth service via POST\&. "
.ti -1c
.RI "virtual void \fBSetAuthPostData\fP (Dictionary< string, object > dictData)"
.br
.RI "Sets data to be passed-on to the auth service as Json (Content-Type: 'application/json') via Post\&. "
.ti -1c
.RI "virtual void \fBAddAuthParameter\fP (string key, string value)"
.br
.RI "Adds a key-value pair to the get-parameters used for Custom Auth (AuthGetParameters)\&. "
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.RI "Transform this object into string\&. "
.ti -1c
.RI "\fBAuthenticationValues\fP \fBCopyTo\fP (\fBAuthenticationValues\fP copy)"
.br
.RI "Make a copy of the current object\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBCustomAuthenticationType\fP \fBAuthType\fP\fC [getset]\fP"
.br
.RI "The type of authentication provider that should be used\&. "
.ti -1c
.RI "string \fBAuthGetParameters\fP\fC [getset]\fP"
.br
.RI "This string must contain any (http get) parameters expected by the used authentication service\&. "
.ti -1c
.RI "object \fBAuthPostData\fP\fC [get]\fP"
.br
.RI "Data to be passed-on to the auth service via POST\&. "
.ti -1c
.RI "object \fBToken\fP\fC [getset]\fP"
.br
.RI "Internal \fB\fBPhoton\fP token\fP\&. "
.ti -1c
.RI "string \fBUserId\fP\fC [getset]\fP"
.br
.RI "The UserId should be a unique identifier per user\&. "
.in -1c
.SH "Detailed Description"
.PP 
Container for user authentication in \fBPhoton\fP\&. 

Set AuthValues before you connect - all else is handled\&. 
.PP
On \fBPhoton\fP, user authentication is optional but can be useful in many cases\&. If you want to FindFriends, a unique ID per user is very practical\&.
.PP
There are basically three options for user authentication: None at all, the client sets some UserId or you can use some account web-service to authenticate a user (and set the UserId server-side)\&.
.PP
Custom Authentication lets you verify end-users by some kind of login or token\&. It sends those values to \fBPhoton\fP which will verify them before granting access or disconnecting the client\&.
.PP
The AuthValues are sent in OpAuthenticate when you connect, so they must be set before you connect\&. If the AuthValues\&.UserId is null or empty when it's sent to the server, then the \fBPhoton\fP Server assigns a UserId!
.PP
The \fBPhoton\fP Cloud Dashboard will let you enable this feature and set important server values for it\&. https://dashboard.photonengine.com 
.PP
Definition at line \fB253\fP of file \fBChatPeer\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Photon\&.Chat\&.AuthenticationValues\&.AuthenticationValues ()"

.PP
Creates empty auth values without any info\&.
.PP
Definition at line \fB287\fP of file \fBChatPeer\&.cs\fP\&.
.SS "Photon\&.Chat\&.AuthenticationValues\&.AuthenticationValues (string userId)"

.PP
Creates minimal info about the user\&. If this is authenticated or not, depends on the set AuthType\&.
.PP
\fBParameters\fP
.RS 4
\fIuserId\fP Some UserId to set in \fBPhoton\fP\&.
.RE
.PP

.PP
Definition at line \fB293\fP of file \fBChatPeer\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual void Photon\&.Chat\&.AuthenticationValues\&.AddAuthParameter (string key, string value)\fC [virtual]\fP"

.PP
Adds a key-value pair to the get-parameters used for Custom Auth (AuthGetParameters)\&. This method does uri-encoding for you\&.
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Key for the value to set\&.
.br
\fIvalue\fP Some value relevant for Custom Authentication\&.
.RE
.PP

.PP
Definition at line \fB326\fP of file \fBChatPeer\&.cs\fP\&.
.SS "\fBAuthenticationValues\fP Photon\&.Chat\&.AuthenticationValues\&.CopyTo (\fBAuthenticationValues\fP copy)"

.PP
Make a copy of the current object\&. 
.PP
\fBParameters\fP
.RS 4
\fIcopy\fP The object to be copied into\&.
.RE
.PP
\fBReturns\fP
.RS 4
The copied object\&.
.RE
.PP

.PP
Definition at line \fB346\fP of file \fBChatPeer\&.cs\fP\&.
.SS "virtual void Photon\&.Chat\&.AuthenticationValues\&.SetAuthPostData (byte[] byteData)\fC [virtual]\fP"

.PP
Sets the data to be passed-on to the auth service via POST\&. AuthPostData is just one value\&. Each SetAuthPostData replaces any previous value\&. It can be either a string, a byte[] or a dictionary\&.
.PP
\fBParameters\fP
.RS 4
\fIbyteData\fP Binary token / auth-data to pass on\&.
.RE
.PP

.PP
Definition at line \fB309\fP of file \fBChatPeer\&.cs\fP\&.
.SS "virtual void Photon\&.Chat\&.AuthenticationValues\&.SetAuthPostData (Dictionary< string, object > dictData)\fC [virtual]\fP"

.PP
Sets data to be passed-on to the auth service as Json (Content-Type: 'application/json') via Post\&. AuthPostData is just one value\&. Each SetAuthPostData replaces any previous value\&. It can be either a string, a byte[] or a dictionary\&.
.PP
\fBParameters\fP
.RS 4
\fIdictData\fP A authentication-data dictionary will be converted to Json and passed to the Auth webservice via HTTP Post\&.
.RE
.PP

.PP
Definition at line \fB317\fP of file \fBChatPeer\&.cs\fP\&.
.SS "virtual void Photon\&.Chat\&.AuthenticationValues\&.SetAuthPostData (string stringData)\fC [virtual]\fP"

.PP
Sets the data to be passed-on to the auth service via POST\&. AuthPostData is just one value\&. Each SetAuthPostData replaces any previous value\&. It can be either a string, a byte[] or a dictionary\&.
.PP
\fBParameters\fP
.RS 4
\fIstringData\fP String data to be used in the body of the POST request\&. Null or empty string will set AuthPostData to null\&.
.RE
.PP

.PP
Definition at line \fB301\fP of file \fBChatPeer\&.cs\fP\&.
.SS "override string Photon\&.Chat\&.AuthenticationValues\&.ToString ()"

.PP
Transform this object into string\&. 
.PP
\fBReturns\fP
.RS 4
string representation of this object\&.
.RE
.PP

.PP
Definition at line \fB336\fP of file \fBChatPeer\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "string Photon\&.Chat\&.AuthenticationValues\&.AuthGetParameters\fC [get]\fP, \fC [set]\fP"

.PP
This string must contain any (http get) parameters expected by the used authentication service\&. By default, username and token\&.
.PP
Maps to operation parameter 216\&. Standard http get parameters are used here and passed on to the service that's defined in the server (\fBPhoton\fP Cloud Dashboard)\&. 
.PP
Definition at line \fB271\fP of file \fBChatPeer\&.cs\fP\&.
.SS "object Photon\&.Chat\&.AuthenticationValues\&.AuthPostData\fC [get]\fP"

.PP
Data to be passed-on to the auth service via POST\&. Default: null (not sent)\&. Either string or byte[] (see setters)\&.
.PP
Maps to operation parameter 214\&.
.PP
Definition at line \fB275\fP of file \fBChatPeer\&.cs\fP\&.
.SS "\fBCustomAuthenticationType\fP Photon\&.Chat\&.AuthenticationValues\&.AuthType\fC [get]\fP, \fC [set]\fP"

.PP
The type of authentication provider that should be used\&. Defaults to None (no auth whatsoever)\&.
.PP
Several auth providers are available and \fBCustomAuthenticationType\&.Custom\fP can be used if you build your own service\&.
.PP
Definition at line \fB260\fP of file \fBChatPeer\&.cs\fP\&.
.SS "object Photon\&.Chat\&.AuthenticationValues\&.Token\fC [get]\fP, \fC [set]\fP"

.PP
Internal \fB\fBPhoton\fP token\fP\&. After initial authentication, \fBPhoton\fP provides a token for this client, subsequently used as (cached) validation\&.
.PP
Any token for custom authentication should be set via SetAuthPostData or AddAuthParameter\&.
.PP
Definition at line \fB279\fP of file \fBChatPeer\&.cs\fP\&.
.SS "string Photon\&.Chat\&.AuthenticationValues\&.UserId\fC [get]\fP, \fC [set]\fP"

.PP
The UserId should be a unique identifier per user\&. This is for finding friends, etc\&.\&.
.PP
See remarks of AuthValues for info about how this is set and used\&.
.PP
Definition at line \fB283\fP of file \fBChatPeer\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
