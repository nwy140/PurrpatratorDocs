.TH "Photon.Chat.ChatChannel" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Chat.ChatChannel \- A channel of communication in \fBPhoton\fP \fBChat\fP, updated by \fBChatClient\fP and provided as READ ONLY\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBChatChannel\fP (string name)"
.br
.RI "Used internally to create new channels\&. This does NOT create a channel on the server! Use \fBChatClient\&.Subscribe\fP\&."
.ti -1c
.RI "void \fBAdd\fP (string sender, object message, int msgId)"
.br
.RI "Used internally to add messages to this channel\&."
.ti -1c
.RI "void \fBAdd\fP (string[] senders, object[] messages, int lastMsgId)"
.br
.RI "Used internally to add messages to this channel\&."
.ti -1c
.RI "void \fBTruncateMessages\fP ()"
.br
.RI "Reduces the number of locally cached messages in this channel to the MessageLimit (if set)\&."
.ti -1c
.RI "void \fBClearMessages\fP ()"
.br
.RI "Clear the local cache of messages currently stored\&. This frees memory but doesn't affect the server\&."
.ti -1c
.RI "string \fBToStringMessages\fP ()"
.br
.RI "Provides a string-representation of all messages in this channel\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "readonly string \fBName\fP"
.br
.RI "Name of the channel (used to subscribe and unsubscribe)\&."
.ti -1c
.RI "readonly List< string > \fBSenders\fP = new List<string>()"
.br
.RI "Senders of messages in chronological order\&. Senders and Messages refer to each other by index\&. Senders[x] is the sender of Messages[x]\&."
.ti -1c
.RI "readonly List< object > \fBMessages\fP = new List<object>()"
.br
.RI "Messages in chronological order\&. Senders and Messages refer to each other by index\&. Senders[x] is the sender of Messages[x]\&."
.ti -1c
.RI "int \fBMessageLimit\fP"
.br
.RI "If greater than 0, this channel will limit the number of messages, that it caches locally\&."
.ti -1c
.RI "int \fBChannelID\fP"
.br
.RI "Unique channel ID\&."
.ti -1c
.RI "readonly HashSet< string > \fBSubscribers\fP = new HashSet<string>()"
.br
.RI "Subscribed users\&."
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "bool \fBIsPrivate\fP\fC [getset]\fP"
.br
.RI "Is this a private 1:1 channel?"
.ti -1c
.RI "int \fBMessageCount\fP\fC [get]\fP"
.br
.RI "Count of messages this client still buffers/knows for this channel\&."
.ti -1c
.RI "int \fBLastMsgId\fP\fC [getprotected set]\fP"
.br
.RI "ID of the last message received\&. "
.ti -1c
.RI "bool \fBPublishSubscribers\fP\fC [getprotected set]\fP"
.br
.RI "Whether or not this channel keeps track of the list of its subscribers\&."
.ti -1c
.RI "int \fBMaxSubscribers\fP\fC [getprotected set]\fP"
.br
.RI "Maximum number of channel subscribers\&. 0 means infinite\&."
.in -1c
.SH "Detailed Description"
.PP 
A channel of communication in \fBPhoton\fP \fBChat\fP, updated by \fBChatClient\fP and provided as READ ONLY\&. 

Contains messages and senders to use (read!) and display by your GUI\&. Access these by: \fBChatClient\&.PublicChannels\fP \fBChatClient\&.PrivateChannels\fP 
.PP
Definition at line \fB31\fP of file \fBChatChannel\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Photon\&.Chat\&.ChatChannel\&.ChatChannel (string name)"

.PP
Used internally to create new channels\&. This does NOT create a channel on the server! Use \fBChatClient\&.Subscribe\fP\&.
.PP
Definition at line \fB71\fP of file \fBChatChannel\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Chat\&.ChatChannel\&.Add (string sender, object message, int msgId)"

.PP
Used internally to add messages to this channel\&.
.PP
Definition at line \fB77\fP of file \fBChatChannel\&.cs\fP\&.
.SS "void Photon\&.Chat\&.ChatChannel\&.Add (string[] senders, object[] messages, int lastMsgId)"

.PP
Used internally to add messages to this channel\&.
.PP
Definition at line \fB86\fP of file \fBChatChannel\&.cs\fP\&.
.SS "void Photon\&.Chat\&.ChatChannel\&.ClearMessages ()"

.PP
Clear the local cache of messages currently stored\&. This frees memory but doesn't affect the server\&.
.PP
Definition at line \fB108\fP of file \fBChatChannel\&.cs\fP\&.
.SS "string Photon\&.Chat\&.ChatChannel\&.ToStringMessages ()"

.PP
Provides a string-representation of all messages in this channel\&. 
.PP
\fBReturns\fP
.RS 4
All known messages in format 'Sender: Message', line by line\&.
.RE
.PP

.PP
Definition at line \fB116\fP of file \fBChatChannel\&.cs\fP\&.
.SS "void Photon\&.Chat\&.ChatChannel\&.TruncateMessages ()"

.PP
Reduces the number of locally cached messages in this channel to the MessageLimit (if set)\&.
.PP
Definition at line \fB95\fP of file \fBChatChannel\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "int Photon\&.Chat\&.ChatChannel\&.ChannelID"

.PP
Unique channel ID\&.
.PP
Definition at line \fB46\fP of file \fBChatChannel\&.cs\fP\&.
.SS "int Photon\&.Chat\&.ChatChannel\&.MessageLimit"

.PP
If greater than 0, this channel will limit the number of messages, that it caches locally\&.
.PP
Definition at line \fB43\fP of file \fBChatChannel\&.cs\fP\&.
.SS "readonly List<object> Photon\&.Chat\&.ChatChannel\&.Messages = new List<object>()"

.PP
Messages in chronological order\&. Senders and Messages refer to each other by index\&. Senders[x] is the sender of Messages[x]\&.
.PP
Definition at line \fB40\fP of file \fBChatChannel\&.cs\fP\&.
.SS "readonly string Photon\&.Chat\&.ChatChannel\&.Name"

.PP
Name of the channel (used to subscribe and unsubscribe)\&.
.PP
Definition at line \fB34\fP of file \fBChatChannel\&.cs\fP\&.
.SS "readonly List<string> Photon\&.Chat\&.ChatChannel\&.Senders = new List<string>()"

.PP
Senders of messages in chronological order\&. Senders and Messages refer to each other by index\&. Senders[x] is the sender of Messages[x]\&.
.PP
Definition at line \fB37\fP of file \fBChatChannel\&.cs\fP\&.
.SS "readonly HashSet<string> Photon\&.Chat\&.ChatChannel\&.Subscribers = new HashSet<string>()"

.PP
Subscribed users\&.
.PP
Definition at line \fB68\fP of file \fBChatChannel\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "bool Photon\&.Chat\&.ChatChannel\&.IsPrivate\fC [get]\fP, \fC [set]\fP"

.PP
Is this a private 1:1 channel?
.PP
Definition at line \fB49\fP of file \fBChatChannel\&.cs\fP\&.
.SS "int Photon\&.Chat\&.ChatChannel\&.LastMsgId\fC [get]\fP, \fC [protected set]\fP"

.PP
ID of the last message received\&. 
.PP
Definition at line \fB57\fP of file \fBChatChannel\&.cs\fP\&.
.SS "int Photon\&.Chat\&.ChatChannel\&.MaxSubscribers\fC [get]\fP, \fC [protected set]\fP"

.PP
Maximum number of channel subscribers\&. 0 means infinite\&.
.PP
Definition at line \fB65\fP of file \fBChatChannel\&.cs\fP\&.
.SS "int Photon\&.Chat\&.ChatChannel\&.MessageCount\fC [get]\fP"

.PP
Count of messages this client still buffers/knows for this channel\&.
.PP
Definition at line \fB52\fP of file \fBChatChannel\&.cs\fP\&.
.SS "bool Photon\&.Chat\&.ChatChannel\&.PublishSubscribers\fC [get]\fP, \fC [protected set]\fP"

.PP
Whether or not this channel keeps track of the list of its subscribers\&.
.PP
Definition at line \fB62\fP of file \fBChatChannel\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
