.TH "Photon.Chat.ChatParameterCode" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Chat.ChatParameterCode \- Wraps up codes for parameters (in operations and events) used internally in \fBPhoton\fP \fBChat\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "const byte \fBChannels\fP = 0"
.br
.RI "(0) Array of chat channels\&."
.ti -1c
.RI "const byte \fBChannel\fP = 1"
.br
.RI "(1) Name of a single chat channel\&."
.ti -1c
.RI "const byte \fBMessages\fP = 2"
.br
.RI "(2) Array of chat messages\&."
.ti -1c
.RI "const byte \fBMessage\fP = 3"
.br
.RI "(3) A single chat message\&."
.ti -1c
.RI "const byte \fBSenders\fP = 4"
.br
.RI "(4) Array of names of the users who sent the array of chat messages\&."
.ti -1c
.RI "const byte \fBSender\fP = 5"
.br
.RI "(5) Name of a the user who sent a chat message\&."
.ti -1c
.RI "const byte \fBChannelUserCount\fP = 6"
.br
.RI "(6) Not used\&."
.ti -1c
.RI "const byte \fBUserId\fP = 225"
.br
.RI "(225) Name of user to send a (private) message to\&."
.ti -1c
.RI "const byte \fBMsgId\fP = 8"
.br
.RI "(8) Id of a message\&."
.ti -1c
.RI "const byte \fBMsgIds\fP = 9"
.br
.RI "(9) Not used\&."
.ti -1c
.RI "const byte \fBSecret\fP = 221"
.br
.RI "(221) Secret token to identify an authorized user\&."
.ti -1c
.RI "const byte \fBSubscribeResults\fP = 15"
.br
.RI "(15) Subscribe operation result parameter\&. A bool[] with result per channel\&."
.ti -1c
.RI "const byte \fBStatus\fP = 10"
.br
.RI "(10) Status"
.ti -1c
.RI "const byte \fBFriends\fP = 11"
.br
.RI "(11) Friends"
.ti -1c
.RI "const byte \fBSkipMessage\fP = 12"
.br
.RI "(12) SkipMessage is used in SetOnlineStatus and if true, the message is not being broadcast\&."
.ti -1c
.RI "const byte \fBHistoryLength\fP = 14"
.br
.RI "(14) Number of message to fetch from history\&. 0: no history\&. 1 and higher: number of messages in history\&. -1: all history\&."
.ti -1c
.RI "const byte \fBDebugMessage\fP = 17"
.br
.ti -1c
.RI "const byte \fBWebFlags\fP = 21"
.br
.RI "(21) WebFlags object for changing behaviour of webhooks from client\&."
.ti -1c
.RI "const byte \fBProperties\fP = 22"
.br
.RI "(22) WellKnown or custom properties of channel or user\&. "
.ti -1c
.RI "const byte \fBChannelSubscribers\fP = 23"
.br
.RI "(23) Array of UserIds of users already subscribed to a channel\&. "
.ti -1c
.RI "const byte \fBDebugData\fP = 24"
.br
.RI "(24) Optional data sent in ErrorInfo event from \fBChat\fP WebHooks\&. "
.ti -1c
.RI "const byte \fBExpectedValues\fP = 25"
.br
.RI "(25) Code for values to be used for 'Check And Swap' (CAS) when changing properties\&."
.ti -1c
.RI "const byte \fBBroadcast\fP = 26"
.br
.RI "(26) Code for broadcast parameter of \fBChatOperationCode\&.SetProperties\fP method\&."
.ti -1c
.RI "const byte \fBUserProperties\fP = 28"
.br
.RI "WellKnown and custom user properties\&. "
.ti -1c
.RI "const byte \fBUniqueRoomId\fP = 29"
.br
.RI "Generated unique reusable room id "
.in -1c
.SH "Detailed Description"
.PP 
Wraps up codes for parameters (in operations and events) used internally in \fBPhoton\fP \fBChat\fP\&. 

You don't have to use them directly usually\&. 
.PP
Definition at line \fB12\fP of file \fBChatParameterCode\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Broadcast = 26\fC [static]\fP"

.PP
(26) Code for broadcast parameter of \fBChatOperationCode\&.SetProperties\fP method\&.
.PP
Definition at line \fB71\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Channel = 1\fC [static]\fP"

.PP
(1) Name of a single chat channel\&.
.PP
Definition at line \fB17\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Channels = 0\fC [static]\fP"

.PP
(0) Array of chat channels\&.
.PP
Definition at line \fB15\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.ChannelSubscribers = 23\fC [static]\fP"

.PP
(23) Array of UserIds of users already subscribed to a channel\&. Used in Subscribe event when PublishSubscribers is enabled\&. Does not include local user who just subscribed\&. Maximum length is (\fBChatChannel\&.MaxSubscribers\fP - 1)\&.
.PP
Definition at line \fB65\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.ChannelUserCount = 6\fC [static]\fP"

.PP
(6) Not used\&.
.PP
Definition at line \fB27\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.DebugData = 24\fC [static]\fP"

.PP
(24) Optional data sent in ErrorInfo event from \fBChat\fP WebHooks\&. 
.PP
Definition at line \fB67\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.DebugMessage = 17\fC [static]\fP"

.PP
Definition at line \fB49\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.ExpectedValues = 25\fC [static]\fP"

.PP
(25) Code for values to be used for 'Check And Swap' (CAS) when changing properties\&.
.PP
Definition at line \fB69\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Friends = 11\fC [static]\fP"

.PP
(11) Friends
.PP
Definition at line \fB42\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.HistoryLength = 14\fC [static]\fP"

.PP
(14) Number of message to fetch from history\&. 0: no history\&. 1 and higher: number of messages in history\&. -1: all history\&.
.PP
Definition at line \fB47\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Message = 3\fC [static]\fP"

.PP
(3) A single chat message\&.
.PP
Definition at line \fB21\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Messages = 2\fC [static]\fP"

.PP
(2) Array of chat messages\&.
.PP
Definition at line \fB19\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.MsgId = 8\fC [static]\fP"

.PP
(8) Id of a message\&.
.PP
Definition at line \fB31\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.MsgIds = 9\fC [static]\fP"

.PP
(9) Not used\&.
.PP
Definition at line \fB33\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Properties = 22\fC [static]\fP"

.PP
(22) WellKnown or custom properties of channel or user\&. In event \fBChatEventCode\&.Subscribe\fP it's always channel properties, in event \fBChatEventCode\&.UserSubscribed\fP it's always user properties, in event \fBChatEventCode\&.PropertiesChanged\fP it's channel properties unless \fBUserId\fP parameter value is not null 
.PP
Definition at line \fB60\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Secret = 221\fC [static]\fP"

.PP
(221) Secret token to identify an authorized user\&.The code is used in LoadBalancing and copied over here\&.
.PP
Definition at line \fB35\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Sender = 5\fC [static]\fP"

.PP
(5) Name of a the user who sent a chat message\&.
.PP
Definition at line \fB25\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Senders = 4\fC [static]\fP"

.PP
(4) Array of names of the users who sent the array of chat messages\&.
.PP
Definition at line \fB23\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.SkipMessage = 12\fC [static]\fP"

.PP
(12) SkipMessage is used in SetOnlineStatus and if true, the message is not being broadcast\&.
.PP
Definition at line \fB44\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.Status = 10\fC [static]\fP"

.PP
(10) Status
.PP
Definition at line \fB40\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.SubscribeResults = 15\fC [static]\fP"

.PP
(15) Subscribe operation result parameter\&. A bool[] with result per channel\&.
.PP
Definition at line \fB37\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.UniqueRoomId = 29\fC [static]\fP"

.PP
Generated unique reusable room id 
.PP
Definition at line \fB83\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.UserId = 225\fC [static]\fP"

.PP
(225) Name of user to send a (private) message to\&.The code is used in LoadBalancing and copied over here\&.
.PP
Definition at line \fB29\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.UserProperties = 28\fC [static]\fP"

.PP
WellKnown and custom user properties\&. Used only in event \fBChatEventCode\&.Subscribe\fP 
.PP
Definition at line \fB78\fP of file \fBChatParameterCode\&.cs\fP\&.
.SS "const byte Photon\&.Chat\&.ChatParameterCode\&.WebFlags = 21\fC [static]\fP"

.PP
(21) WebFlags object for changing behaviour of webhooks from client\&.
.PP
Definition at line \fB52\fP of file \fBChatParameterCode\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
