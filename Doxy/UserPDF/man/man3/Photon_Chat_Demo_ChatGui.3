.TH "Photon.Chat.Demo.ChatGui" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Chat.Demo.ChatGui \- This simple \fBChat\fP UI demonstrate basics usages of the \fBChat\fP Api  

.SH SYNOPSIS
.br
.PP
.PP
Inherits MonoBehaviour, and \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBStart\fP ()"
.br
.ti -1c
.RI "void \fBConnect\fP ()"
.br
.ti -1c
.RI "void \fBOnDestroy\fP ()"
.br
.RI "To avoid that the Editor becomes unresponsive, disconnect all \fBPhoton\fP connections in OnDestroy\&."
.ti -1c
.RI "void \fBOnApplicationQuit\fP ()"
.br
.RI "To avoid that the Editor becomes unresponsive, disconnect all \fBPhoton\fP connections in OnApplicationQuit\&."
.ti -1c
.RI "void \fBUpdate\fP ()"
.br
.ti -1c
.RI "void \fBOnEnterSend\fP ()"
.br
.ti -1c
.RI "void \fBOnClickSend\fP ()"
.br
.ti -1c
.RI "void \fBPostHelpToCurrentChannel\fP ()"
.br
.ti -1c
.RI "void \fBDebugReturn\fP (ExitGames\&.Client\&.Photon\&.DebugLevel level, string message)"
.br
.ti -1c
.RI "void \fBOnConnected\fP ()"
.br
.RI "Client is connected now\&. "
.ti -1c
.RI "void \fBOnDisconnected\fP ()"
.br
.RI "Disconnection happened\&. "
.ti -1c
.RI "void \fBOnChatStateChange\fP (\fBChatState\fP state)"
.br
.RI "The \fBChatClient\fP's state changed\&. "
.ti -1c
.RI "void \fBOnSubscribed\fP (string[] channels, bool[] results)"
.br
.RI "Result of Subscribe operation\&. "
.ti -1c
.RI "void \fBOnSubscribed\fP (string channel, string[] users, Dictionary< object, object > properties)"
.br
.ti -1c
.RI "void \fBOnUnsubscribed\fP (string[] channels)"
.br
.RI "Result of Unsubscribe operation\&. "
.ti -1c
.RI "void \fBOnGetMessages\fP (string channelName, string[] senders, object[] messages)"
.br
.RI "Notifies app that client got new messages from server Number of senders is equal to number of messages in 'messages'\&. "
.ti -1c
.RI "void \fBOnPrivateMessage\fP (string sender, object message, string channelName)"
.br
.RI "Notifies client about private message "
.ti -1c
.RI "void \fBOnStatusUpdate\fP (string user, int status, bool gotMessage, object message)"
.br
.RI "New status of another user (you get updates for users set in your friends list)\&. "
.ti -1c
.RI "void \fBOnUserSubscribed\fP (string channel, string user)"
.br
.RI "A user has subscribed to a public chat channel "
.ti -1c
.RI "void \fBOnUserUnsubscribed\fP (string channel, string user)"
.br
.RI "A user has unsubscribed from a public chat channel "
.ti -1c
.RI "void \fBOnChannelPropertiesChanged\fP (string channel, string userId, Dictionary< object, object > properties)"
.br
.ti -1c
.RI "void \fBOnUserPropertiesChanged\fP (string channel, string targetUserId, string senderUserId, Dictionary< object, object > properties)"
.br
.ti -1c
.RI "void \fBOnErrorInfo\fP (string channel, string error, object data)"
.br
.ti -1c
.RI "void \fBAddMessageToSelectedChannel\fP (string msg)"
.br
.ti -1c
.RI "void \fBShowChannel\fP (string channelName)"
.br
.ti -1c
.RI "void \fBOpenDashboard\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "string[] \fBChannelsToJoinOnConnect\fP"
.br
.ti -1c
.RI "string[] \fBFriendsList\fP"
.br
.ti -1c
.RI "int \fBHistoryLengthToFetch\fP"
.br
.ti -1c
.RI "\fBChatClient\fP \fBchatClient\fP"
.br
.ti -1c
.RI "GameObject \fBmissingAppIdErrorPanel\fP"
.br
.ti -1c
.RI "GameObject \fBConnectingLabel\fP"
.br
.ti -1c
.RI "RectTransform \fBChatPanel\fP"
.br
.ti -1c
.RI "GameObject \fBUserIdFormPanel\fP"
.br
.ti -1c
.RI "InputField \fBInputFieldChat\fP"
.br
.ti -1c
.RI "Text \fBCurrentChannelText\fP"
.br
.ti -1c
.RI "Toggle \fBChannelToggleToInstantiate\fP"
.br
.ti -1c
.RI "GameObject \fBFriendListUiItemtoInstantiate\fP"
.br
.ti -1c
.RI "bool \fBShowState\fP = true"
.br
.ti -1c
.RI "GameObject \fBTitle\fP"
.br
.ti -1c
.RI "Text \fBStateText\fP"
.br
.ti -1c
.RI "Text \fBUserIdText\fP"
.br
.ti -1c
.RI "int \fBTestLength\fP = 2048"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "string \fBUserName\fP\fC [getset]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This simple \fBChat\fP UI demonstrate basics usages of the \fBChat\fP Api 

The \fBChatClient\fP basically lets you create any number of channels\&.
.PP
some friends are already set in the \fBChat\fP demo 'DemoChat-Scene', 'Joe', 'Jane' and 'Bob', simply log with them so that you can see the status changes in the Interface
.PP
Workflow: Create \fBChatClient\fP, Connect to a server with your AppID, Authenticate the user (apply a unique name,) and subscribe to some channels\&. Subscribe a channel before you publish to that channel!
.PP
Note: Don't forget to call \fBChatClient\&.Service()\fP on Update to keep the Chatclient operational\&. 
.PP
Definition at line \fB40\fP of file \fBChatGui\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.AddMessageToSelectedChannel (string msg)"

.PP
Definition at line \fB597\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.Connect ()"

.PP
Definition at line \fB148\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.DebugReturn (ExitGames\&.Client\&.Photon\&.DebugLevel level, string message)"

.PP
Definition at line \fB350\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnApplicationQuit ()"

.PP
To avoid that the Editor becomes unresponsive, disconnect all \fBPhoton\fP connections in OnApplicationQuit\&.
.PP
Definition at line \fB175\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnChannelPropertiesChanged (string channel, string userId, Dictionary< object, object > properties)"

.PP

.PP
Definition at line \fB581\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnChatStateChange (\fBChatState\fP state)"

.PP
The \fBChatClient\fP's state changed\&. Usually, OnConnected and OnDisconnected are the callbacks to react to\&.
.PP
\fBParameters\fP
.RS 4
\fIstate\fP The new state\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB409\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnClickSend ()"

.PP
Definition at line \fB210\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnConnected ()"

.PP
Client is connected now\&. Clients have to be connected before they can send their state, subscribe to channels and send any messages\&. 
.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB366\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnDestroy ()"

.PP
To avoid that the Editor becomes unresponsive, disconnect all \fBPhoton\fP connections in OnDestroy\&.
.PP
Definition at line \fB166\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnDisconnected ()"

.PP
Disconnection happened\&. 
.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB404\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnEnterSend ()"

.PP
Definition at line \fB201\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnErrorInfo (string channel, string error, object data)"

.PP

.PP
Definition at line \fB592\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnGetMessages (string channelName, string[] senders, object[] messages)"

.PP
Notifies app that client got new messages from server Number of senders is equal to number of messages in 'messages'\&. Sender with number '0' corresponds to message with number '0', sender with number '1' corresponds to message with number '1' and so on 
.PP
\fBParameters\fP
.RS 4
\fIchannelName\fP channel from where messages came
.br
\fIsenders\fP list of users who sent messages
.br
\fImessages\fP list of messages it self
.RE
.PP

.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB524\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnPrivateMessage (string sender, object message, string channelName)"

.PP
Notifies client about private message 
.PP
\fBParameters\fP
.RS 4
\fIsender\fP user who sent this message
.br
\fImessage\fP message it self
.br
\fIchannelName\fP channelName for private messages (messages you sent yourself get added to a channel per target username)
.RE
.PP

.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB533\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnStatusUpdate (string user, int status, bool gotMessage, object message)"

.PP
New status of another user (you get updates for users set in your friends list)\&. 
.PP
\fBParameters\fP
.RS 4
\fIuser\fP Name of the user\&.
.br
\fIstatus\fP New status of that user\&.
.br
\fIgotMessage\fP True if the status contains a message you should cache locally\&. False: This status update does not include a message (keep any you have)\&.
.br
\fImessage\fP Message that user set\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB558\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnSubscribed (string channel, string[] users, Dictionary< object, object > properties)"

.PP

.PP
Definition at line \fB458\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnSubscribed (string[] channels, bool[] results)"

.PP
Result of Subscribe operation\&. Returns subscription result for every requested channel name\&. 
.PP
If multiple channels sent in Subscribe operation, OnSubscribed may be called several times, each call with part of sent array or with single channel in 'channels' parameter\&. Calls order and order of channels in 'channels' parameter may differ from order of channels in 'channels' parameter of Subscribe operation\&. 
.PP
\fBParameters\fP
.RS 4
\fIchannels\fP Array of channel names\&.
.br
\fIresults\fP Per channel result if subscribed\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB417\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnUnsubscribed (string[] channels)"

.PP
Result of Unsubscribe operation\&. Returns for channel name if the channel is now unsubscribed\&. 
.PP
If multiple channels sent in Unsubscribe operation, OnUnsubscribed may be called several times, each call with part of sent array or with single channel in 'channels' parameter\&. Calls order and order of channels in 'channels' parameter may differ from order of channels in 'channels' parameter of Unsubscribe operation\&. 
.PP
\fBParameters\fP
.RS 4
\fIchannels\fP Array of channel names that are no longer subscribed\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB493\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnUserPropertiesChanged (string channel, string targetUserId, string senderUserId, Dictionary< object, object > properties)"

.PP
Definition at line \fB586\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnUserSubscribed (string channel, string user)"

.PP
A user has subscribed to a public chat channel 
.PP
\fBParameters\fP
.RS 4
\fIchannel\fP Name of the chat channel
.br
\fIuser\fP UserId of the user who subscribed
.RE
.PP

.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB570\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OnUserUnsubscribed (string channel, string user)"

.PP
A user has unsubscribed from a public chat channel 
.PP
\fBParameters\fP
.RS 4
\fIchannel\fP Name of the chat channel
.br
\fIuser\fP UserId of the user who unsubscribed
.RE
.PP

.PP
Implements \fBPhoton\&.Chat\&.IChatClientListener\fP\&.
.PP
Definition at line \fB575\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.OpenDashboard ()"

.PP
Definition at line \fB640\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.PostHelpToCurrentChannel ()"

.PP
Definition at line \fB345\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.ShowChannel (string channelName)"

.PP
Definition at line \fB615\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.Start ()"

.PP
Definition at line \fB116\fP of file \fBChatGui\&.cs\fP\&.
.SS "void Photon\&.Chat\&.Demo\&.ChatGui\&.Update ()"

.PP
Definition at line \fB183\fP of file \fBChatGui\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "string [] Photon\&.Chat\&.Demo\&.ChatGui\&.ChannelsToJoinOnConnect"

.PP
Definition at line \fB43\fP of file \fBChatGui\&.cs\fP\&.
.SS "Toggle Photon\&.Chat\&.Demo\&.ChatGui\&.ChannelToggleToInstantiate"

.PP
Definition at line \fB68\fP of file \fBChatGui\&.cs\fP\&.
.SS "\fBChatClient\fP Photon\&.Chat\&.Demo\&.ChatGui\&.chatClient"

.PP
Definition at line \fB53\fP of file \fBChatGui\&.cs\fP\&.
.SS "RectTransform Photon\&.Chat\&.Demo\&.ChatGui\&.ChatPanel"

.PP
Definition at line \fB64\fP of file \fBChatGui\&.cs\fP\&.
.SS "GameObject Photon\&.Chat\&.Demo\&.ChatGui\&.ConnectingLabel"

.PP
Definition at line \fB62\fP of file \fBChatGui\&.cs\fP\&.
.SS "Text Photon\&.Chat\&.Demo\&.ChatGui\&.CurrentChannelText"

.PP
Definition at line \fB67\fP of file \fBChatGui\&.cs\fP\&.
.SS "GameObject Photon\&.Chat\&.Demo\&.ChatGui\&.FriendListUiItemtoInstantiate"

.PP
Definition at line \fB71\fP of file \fBChatGui\&.cs\fP\&.
.SS "string [] Photon\&.Chat\&.Demo\&.ChatGui\&.FriendsList"

.PP
Definition at line \fB45\fP of file \fBChatGui\&.cs\fP\&.
.SS "int Photon\&.Chat\&.Demo\&.ChatGui\&.HistoryLengthToFetch"

.PP
Definition at line \fB47\fP of file \fBChatGui\&.cs\fP\&.
.SS "InputField Photon\&.Chat\&.Demo\&.ChatGui\&.InputFieldChat"

.PP
Definition at line \fB66\fP of file \fBChatGui\&.cs\fP\&.
.SS "GameObject Photon\&.Chat\&.Demo\&.ChatGui\&.missingAppIdErrorPanel"

.PP
Definition at line \fB61\fP of file \fBChatGui\&.cs\fP\&.
.SS "bool Photon\&.Chat\&.Demo\&.ChatGui\&.ShowState = true"

.PP
Definition at line \fB77\fP of file \fBChatGui\&.cs\fP\&.
.SS "Text Photon\&.Chat\&.Demo\&.ChatGui\&.StateText"

.PP
Definition at line \fB79\fP of file \fBChatGui\&.cs\fP\&.
.SS "int Photon\&.Chat\&.Demo\&.ChatGui\&.TestLength = 2048"

.PP
Definition at line \fB220\fP of file \fBChatGui\&.cs\fP\&.
.SS "GameObject Photon\&.Chat\&.Demo\&.ChatGui\&.Title"

.PP
Definition at line \fB78\fP of file \fBChatGui\&.cs\fP\&.
.SS "GameObject Photon\&.Chat\&.Demo\&.ChatGui\&.UserIdFormPanel"

.PP
Definition at line \fB65\fP of file \fBChatGui\&.cs\fP\&.
.SS "Text Photon\&.Chat\&.Demo\&.ChatGui\&.UserIdText"

.PP
Definition at line \fB80\fP of file \fBChatGui\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "string Photon\&.Chat\&.Demo\&.ChatGui\&.UserName\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB49\fP of file \fBChatGui\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
