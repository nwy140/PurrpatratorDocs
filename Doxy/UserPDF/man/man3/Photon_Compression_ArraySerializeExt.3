.TH "Photon.Compression.ArraySerializeExt" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Compression.ArraySerializeExt \- A Utility class that gives all byte[], uint[] and ulong[] buffers bitpacking/serialization methods\&.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBZero\fP (this byte[] buffer, int startByte, int endByte)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this byte[] buffer, int startByte)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this byte[] buffer)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this ushort[] buffer, int startByte, int endByte)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this ushort[] buffer, int startByte)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this ushort[] buffer)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this uint[] buffer, int startByte, int endByte)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this uint[] buffer, int startByte)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this uint[] buffer)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this ulong[] buffer, int startByte, int endByte)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this ulong[] buffer, int startByte)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBZero\fP (this ulong[] buffer)"
.br
.RI "Zero out all array values\&. "
.ti -1c
.RI "static void \fBWriteSigned\fP (this byte[] buffer, int value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBWriteSigned\fP (this uint[] buffer, int value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBWriteSigned\fP (this ulong[] buffer, int value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBWriteSigned\fP (this byte[] buffer, long value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBWriteSigned\fP (this uint[] buffer, long value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBWriteSigned\fP (this ulong[] buffer, long value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static int \fBReadSigned\fP (this byte[] buffer, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static int \fBReadSigned\fP (this uint[] buffer, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static int \fBReadSigned\fP (this ulong[] buffer, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static long \fBReadSigned64\fP (this byte[] buffer, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static long \fBReadSigned64\fP (this uint[] buffer, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static long \fBReadSigned64\fP (this ulong[] buffer, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBWriteFloat\fP (this byte[] buffer, float value, ref int bitposition)"
.br
.RI "Converts a float to a 32bit uint with \fBByteConverter\fP, then writes those 32 bits to the buffer\&. "
.ti -1c
.RI "static float \fBReadFloat\fP (this byte[] buffer, ref int bitposition)"
.br
.RI "Reads a uint32 from the buffer, and converts that back to a float with a \fBByteConverter\fP cast\&. "
.ti -1c
.RI "static void \fBAppend\fP (this byte[] buffer, ulong value, ref int bitposition, int bits)"
.br
.RI "Faster Primary Write method specifically specifically for sequential writes\&. "
.ti -1c
.RI "static void \fBAppend\fP (this uint[] buffer, ulong value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBAppend\fP (this uint[] buffer, uint value, ref int bitposition, int bits)"
.br
.RI "Faster Primary Write method specifically specifically for sequential writes\&. "
.ti -1c
.RI "static void \fBAppend\fP (this ulong[] buffer, ulong value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBWrite\fP (this byte[] buffer, ulong value, ref int bitposition, int bits)"
.br
.RI "This is the primary byte[]\&.\fBWrite()\fP method\&. "
.ti -1c
.RI "static void \fBWrite\fP (this uint[] buffer, ulong value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBWrite\fP (this ulong[] buffer, ulong value, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static void \fBWriteBool\fP (this ulong[] buffer, bool b, ref int bitposition)"
.br
.ti -1c
.RI "static void \fBWriteBool\fP (this uint[] buffer, bool b, ref int bitposition)"
.br
.ti -1c
.RI "static void \fBWriteBool\fP (this byte[] buffer, bool b, ref int bitposition)"
.br
.ti -1c
.RI "static ulong \fBRead\fP (this byte[] buffer, ref int bitposition, int bits)"
.br
.RI "This is the Primary byte[]\&.\fBRead()\fP method\&. "
.ti -1c
.RI "static ulong \fBRead\fP (this uint[] buffer, ref int bitposition, int bits)"
.br
.RI "This is the Primary uint[]\&.\fBRead()\fP method\&. "
.ti -1c
.RI "static ulong \fBRead\fP (this ulong[] buffer, ref int bitposition, int bits)"
.br
.RI "This is the Primary ulong[]\&.\fBRead()\fP method\&. "
.ti -1c
.RI "static ulong \fBReadUInt64\fP (this byte[] buffer, ref int bitposition, int bits=64)"
.br
.ti -1c
.RI "static ulong \fBReadUInt64\fP (this uint[] buffer, ref int bitposition, int bits=64)"
.br
.ti -1c
.RI "static ulong \fBReadUInt64\fP (this ulong[] buffer, ref int bitposition, int bits=64)"
.br
.ti -1c
.RI "static uint \fBReadUInt32\fP (this byte[] buffer, ref int bitposition, int bits=32)"
.br
.ti -1c
.RI "static uint \fBReadUInt32\fP (this uint[] buffer, ref int bitposition, int bits=32)"
.br
.ti -1c
.RI "static uint \fBReadUInt32\fP (this ulong[] buffer, ref int bitposition, int bits=32)"
.br
.ti -1c
.RI "static ushort \fBReadUInt16\fP (this byte[] buffer, ref int bitposition, int bits=16)"
.br
.ti -1c
.RI "static ushort \fBReadUInt16\fP (this uint[] buffer, ref int bitposition, int bits=16)"
.br
.ti -1c
.RI "static ushort \fBReadUInt16\fP (this ulong[] buffer, ref int bitposition, int bits=16)"
.br
.ti -1c
.RI "static byte \fBReadByte\fP (this byte[] buffer, ref int bitposition, int bits=8)"
.br
.ti -1c
.RI "static byte \fBReadByte\fP (this uint[] buffer, ref int bitposition, int bits=32)"
.br
.ti -1c
.RI "static byte \fBReadByte\fP (this ulong[] buffer, ref int bitposition, int bits)"
.br
.ti -1c
.RI "static bool \fBReadBool\fP (this ulong[] buffer, ref int bitposition)"
.br
.ti -1c
.RI "static bool \fBReadBool\fP (this uint[] buffer, ref int bitposition)"
.br
.ti -1c
.RI "static bool \fBReadBool\fP (this byte[] buffer, ref int bitposition)"
.br
.ti -1c
.RI "static char \fBReadChar\fP (this ulong[] buffer, ref int bitposition)"
.br
.ti -1c
.RI "static char \fBReadChar\fP (this uint[] buffer, ref int bitposition)"
.br
.ti -1c
.RI "static char \fBReadChar\fP (this byte[] buffer, ref int bitposition)"
.br
.ti -1c
.RI "static void \fBReadOutSafe\fP (this ulong[] source, int srcStartPos, byte[] target, ref int bitposition, int bits)"
.br
.RI "Read the contents of one array buffer to another\&. "
.ti -1c
.RI "static void \fBReadOutSafe\fP (this ulong[] source, int srcStartPos, ulong[] target, ref int bitposition, int bits)"
.br
.RI "Read the contents of one array buffer to another\&. "
.ti -1c
.RI "static void \fBReadOutSafe\fP (this byte[] source, int srcStartPos, ulong[] target, ref int bitposition, int bits)"
.br
.RI "Read the contents of one array buffer to another\&. "
.ti -1c
.RI "static void \fBReadOutSafe\fP (this byte[] source, int srcStartPos, byte[] target, ref int bitposition, int bits)"
.br
.RI "Read the contents of one array buffer to another\&. "
.ti -1c
.RI "static ulong \fBIndexAsUInt64\fP (this byte[] buffer, int index)"
.br
.RI "Treats buffer as ulong[] and returns the index value of that virtual ulong[] "
.ti -1c
.RI "static ulong \fBIndexAsUInt64\fP (this uint[] buffer, int index)"
.br
.RI "Treats buffer as ulong[] and returns the index value of that virtual ulong[] "
.ti -1c
.RI "static uint \fBIndexAsUInt32\fP (this byte[] buffer, int index)"
.br
.RI "Treats buffer as uint[] and returns the index value of that virtual uint[] "
.ti -1c
.RI "static uint \fBIndexAsUInt32\fP (this ulong[] buffer, int index)"
.br
.RI "Treats buffer as uint[] and returns the index value of that virtual uint[] "
.ti -1c
.RI "static byte \fBIndexAsUInt8\fP (this ulong[] buffer, int index)"
.br
.RI "Treats buffer as byte[] and returns the index value of that virtual byte[] "
.ti -1c
.RI "static byte \fBIndexAsUInt8\fP (this uint[] buffer, int index)"
.br
.RI "Treats buffer as byte[] and returns the index value of that virtual byte[] "
.ti -1c
.RI "static byte[] \fBWrite\fP (this byte[] buffer, ulong value, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static uint[] \fBWrite\fP (this uint[] buffer, ulong value, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static ulong[] \fBWrite\fP (this ulong[] buffer, ulong value, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static byte[] \fBWrite\fP (this byte[] buffer, float value, ref int bitposition)"
.br
.ti -1c
.RI "static float \fBRead\fP (this byte[] buffer, ref int bitposition)"
.br
.ti -1c
.RI "static ulong \fBRead\fP (this byte[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static ulong \fBRead\fP (this uint[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static ulong \fBRead\fP (this ulong[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static byte \fBReadUInt8\fP (this ulong[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static uint \fBReadUInt32\fP (this ulong[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static ulong \fBReadUInt64\fP (this ulong[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static byte \fBReadUInt8\fP (this uint[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static uint \fBReadUInt32\fP (this uint[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static ulong \fBReadUInt64\fP (this uint[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static byte \fBReadUInt8\fP (this byte[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static uint \fBReadUInt32\fP (this byte[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static ulong \fBReadUInt64\fP (this byte[] buffer, int bits, ref int bitposition)"
.br
.ti -1c
.RI "static byte[] \fBWrite\fP (this byte[] buffer, byte[] srcbuffer, ref int readpos, ref int writepos, int bits)"
.br
.ti -1c
.RI "static void \fBReadArrayOutSafe\fP (this ulong[] source, int srcStartPos, byte[] target, ref int bitposition, int bits)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A Utility class that gives all byte[], uint[] and ulong[] buffers bitpacking/serialization methods\&. 


.PP
Definition at line \fB37\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Append (this byte[] buffer, ulong value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Faster Primary Write method specifically specifically for sequential writes\&. Doesn't preserve existing data past the write point in exchnage for a faster write\&. 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP 
.br
\fIvalue\fP 
.br
\fIbitposition\fP 
.br
\fIbits\fP 
.RE
.PP

.PP
Definition at line \fB274\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Append (this uint[] buffer, uint value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Faster Primary Write method specifically specifically for sequential writes\&. Doesn't preserve existing data past the write point in exchnage for a faster write\&. 
.PP
Definition at line \fB331\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Append (this uint[] buffer, ulong value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB301\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Append (this ulong[] buffer, ulong value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB351\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.ArraySerializeExt\&.IndexAsUInt32 (this byte[] buffer, int index)\fC [static]\fP"

.PP
Treats buffer as uint[] and returns the index value of that virtual uint[] 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the virtual uint[]
.RE
.PP

.PP
Definition at line \fB869\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.ArraySerializeExt\&.IndexAsUInt32 (this ulong[] buffer, int index)\fC [static]\fP"

.PP
Treats buffer as uint[] and returns the index value of that virtual uint[] 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the virtual uint[]
.RE
.PP

.PP
Definition at line \fB882\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.IndexAsUInt64 (this byte[] buffer, int index)\fC [static]\fP"

.PP
Treats buffer as ulong[] and returns the index value of that virtual ulong[] 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the virtual ulong[]
.RE
.PP

.PP
Definition at line \fB840\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.IndexAsUInt64 (this uint[] buffer, int index)\fC [static]\fP"

.PP
Treats buffer as ulong[] and returns the index value of that virtual ulong[] 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the virtual ulong[]
.RE
.PP

.PP
Definition at line \fB857\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte Photon\&.Compression\&.ArraySerializeExt\&.IndexAsUInt8 (this uint[] buffer, int index)\fC [static]\fP"

.PP
Treats buffer as byte[] and returns the index value of that virtual byte[] 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the virtual byte[]
.RE
.PP

.PP
Definition at line \fB906\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte Photon\&.Compression\&.ArraySerializeExt\&.IndexAsUInt8 (this ulong[] buffer, int index)\fC [static]\fP"

.PP
Treats buffer as byte[] and returns the index value of that virtual byte[] 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The index of the virtual byte[]
.RE
.PP

.PP
Definition at line \fB894\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.Read (this byte[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB954\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static float Photon\&.Compression\&.ArraySerializeExt\&.Read (this byte[] buffer, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB944\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.Read (this byte[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
This is the Primary byte[]\&.\fBRead()\fP method\&. All other byte[]\&.ReadXXX() methods lead here\&. For maximum performance use this for all \fBRead()\fP calls and cast accordingly\&. 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP The array we are deserializing from\&.
.br
\fIbitposition\fP The position in the array (in bits) where we will begin reading\&.
.br
\fIbits\fP The number of bits to read\&.
.RE
.PP
\fBReturns\fP
.RS 4
UInt64 read value\&. Cast this to the intended type\&.
.RE
.PP

.PP
Definition at line \fB517\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.Read (this uint[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB959\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.Read (this uint[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
This is the Primary uint[]\&.\fBRead()\fP method\&. All other uint[]\&.ReadXXX methods lead here\&. For maximum performance use this for all \fBRead()\fP calls and cast accordingly\&. 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP The array we are deserializing from\&.
.br
\fIbitposition\fP The position in the array (in bits) where we will begin reading\&.
.br
\fIbits\fP The number of bits to read\&.
.RE
.PP
\fBReturns\fP
.RS 4
UInt64 read value\&. Cast this to the intended type\&.
.RE
.PP

.PP
Definition at line \fB553\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.Read (this ulong[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB964\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.Read (this ulong[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
This is the Primary ulong[]\&.\fBRead()\fP method\&. All other ulong[]\&.ReadXXX methods lead here\&. For maximum performance use this for all \fBRead()\fP calls and cast accordingly\&. 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP The array we are deserializing from\&.
.br
\fIbitposition\fP The position in the array (in bits) where we will begin reading\&.
.br
\fIbits\fP The number of bits to read\&.
.RE
.PP
\fBReturns\fP
.RS 4
UInt64 read value\&. Cast this to the intended type\&.
.RE
.PP

.PP
Definition at line \fB588\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.ReadArrayOutSafe (this ulong[] source, int srcStartPos, byte[] target, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB1035\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static bool Photon\&.Compression\&.ArraySerializeExt\&.ReadBool (this byte[] buffer, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB697\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static bool Photon\&.Compression\&.ArraySerializeExt\&.ReadBool (this uint[] buffer, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB693\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static bool Photon\&.Compression\&.ArraySerializeExt\&.ReadBool (this ulong[] buffer, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB689\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte Photon\&.Compression\&.ArraySerializeExt\&.ReadByte (this byte[] buffer, ref int bitposition, int bits = \fC8\fP)\fC [static]\fP"

.PP
Definition at line \fB673\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte Photon\&.Compression\&.ArraySerializeExt\&.ReadByte (this uint[] buffer, ref int bitposition, int bits = \fC32\fP)\fC [static]\fP"

.PP
Definition at line \fB678\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte Photon\&.Compression\&.ArraySerializeExt\&.ReadByte (this ulong[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB683\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static char Photon\&.Compression\&.ArraySerializeExt\&.ReadChar (this byte[] buffer, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB711\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static char Photon\&.Compression\&.ArraySerializeExt\&.ReadChar (this uint[] buffer, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB707\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static char Photon\&.Compression\&.ArraySerializeExt\&.ReadChar (this ulong[] buffer, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB703\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static float Photon\&.Compression\&.ArraySerializeExt\&.ReadFloat (this byte[] buffer, ref int bitposition)\fC [static]\fP"

.PP
Reads a uint32 from the buffer, and converts that back to a float with a \fBByteConverter\fP cast\&. If performance is a concern, you can call the primary (\fBByteConverter\fP)byte[]\&.\fBRead()\fP) 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP The array we are reading from\&.
.br
\fIbitposition\fP The bit position in the array we start the read at\&. Will be incremented by 32 bits\&.
.RE
.PP

.PP
Definition at line \fB257\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.ReadOutSafe (this byte[] source, int srcStartPos, byte[] target, ref int bitposition, int bits)\fC [static]\fP"

.PP
Read the contents of one array buffer to another\&. This safe version doesn't use Unsafe, and may be up to 3x slower than ReadArrayOutUnsafe()\&. 
.PP
\fBParameters\fP
.RS 4
\fIsource\fP Source array to copy from\&.
.br
\fIsrcStartPos\fP Bit position in source to start reading frome\&.
.br
\fItarget\fP Target array
.br
\fIbitposition\fP Current write position for target\&. Will start writing at this bitposition\&. Value gets incremented\&.
.br
\fIbits\fP Number of bits to readout\&. Typically the current write position of the source buffer\&.
.RE
.PP

.PP
Definition at line \fB812\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.ReadOutSafe (this byte[] source, int srcStartPos, ulong[] target, ref int bitposition, int bits)\fC [static]\fP"

.PP
Read the contents of one array buffer to another\&. This safe version doesn't use Unsafe, and may be up to 3x slower than ReadArrayOutUnsafe()\&. 
.PP
\fBParameters\fP
.RS 4
\fIsource\fP Source array to copy from\&.
.br
\fIsrcStartPos\fP Bit position in source to start reading frome\&.
.br
\fItarget\fP Target array
.br
\fIbitposition\fP Current write position for target\&. Will start writing at this bitposition\&. Value gets incremented\&.
.br
\fIbits\fP Number of bits to readout\&. Typically the current write position of the source buffer\&.
.RE
.PP

.PP
Definition at line \fB784\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.ReadOutSafe (this ulong[] source, int srcStartPos, byte[] target, ref int bitposition, int bits)\fC [static]\fP"

.PP
Read the contents of one array buffer to another\&. This safe version doesn't use Unsafe, and may be up to 3x slower than ReadArrayOutUnsafe()\&. 
.PP
\fBParameters\fP
.RS 4
\fIsource\fP Source array to copy from\&.
.br
\fIsrcStartPos\fP Bit position in source to start reading frome\&.
.br
\fItarget\fP Target array
.br
\fIbitposition\fP Current write position for target\&. Will start writing at this bitposition\&. Value gets incremented\&.
.br
\fIbits\fP Number of bits to readout\&. Typically the current write position of the source buffer\&.
.RE
.PP

.PP
Definition at line \fB728\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.ReadOutSafe (this ulong[] source, int srcStartPos, ulong[] target, ref int bitposition, int bits)\fC [static]\fP"

.PP
Read the contents of one array buffer to another\&. This safe version doesn't use Unsafe, and may be up to 3x slower than ReadArrayOutUnsafe()\&. 
.PP
\fBParameters\fP
.RS 4
\fIsource\fP Source array to copy from\&.
.br
\fIsrcStartPos\fP Bit position in source to start reading frome\&.
.br
\fItarget\fP Target array
.br
\fIbitposition\fP Current write position for target\&. Will start writing at this bitposition\&. Value gets incremented\&.
.br
\fIbits\fP Number of bits to readout\&. Typically the current write position of the source buffer\&.
.RE
.PP

.PP
Definition at line \fB756\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static int Photon\&.Compression\&.ArraySerializeExt\&.ReadSigned (this byte[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB199\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static int Photon\&.Compression\&.ArraySerializeExt\&.ReadSigned (this uint[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB205\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static int Photon\&.Compression\&.ArraySerializeExt\&.ReadSigned (this ulong[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB211\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static long Photon\&.Compression\&.ArraySerializeExt\&.ReadSigned64 (this byte[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB218\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static long Photon\&.Compression\&.ArraySerializeExt\&.ReadSigned64 (this uint[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB224\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static long Photon\&.Compression\&.ArraySerializeExt\&.ReadSigned64 (this ulong[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB230\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ushort Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt16 (this byte[] buffer, ref int bitposition, int bits = \fC16\fP)\fC [static]\fP"

.PP
Definition at line \fB657\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ushort Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt16 (this uint[] buffer, ref int bitposition, int bits = \fC16\fP)\fC [static]\fP"

.PP
Definition at line \fB662\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ushort Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt16 (this ulong[] buffer, ref int bitposition, int bits = \fC16\fP)\fC [static]\fP"

.PP
Definition at line \fB667\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt32 (this byte[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB1009\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt32 (this byte[] buffer, ref int bitposition, int bits = \fC32\fP)\fC [static]\fP"

.PP
Definition at line \fB641\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt32 (this uint[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB991\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt32 (this uint[] buffer, ref int bitposition, int bits = \fC32\fP)\fC [static]\fP"

.PP
Definition at line \fB646\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt32 (this ulong[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB975\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt32 (this ulong[] buffer, ref int bitposition, int bits = \fC32\fP)\fC [static]\fP"

.PP
Definition at line \fB651\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt64 (this byte[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB1015\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt64 (this byte[] buffer, ref int bitposition, int bits = \fC64\fP)\fC [static]\fP"

.PP
Definition at line \fB623\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt64 (this uint[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB997\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt64 (this uint[] buffer, ref int bitposition, int bits = \fC64\fP)\fC [static]\fP"

.PP
Definition at line \fB629\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt64 (this ulong[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB980\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt64 (this ulong[] buffer, ref int bitposition, int bits = \fC64\fP)\fC [static]\fP"

.PP
Definition at line \fB635\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt8 (this byte[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB1003\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt8 (this uint[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB986\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte Photon\&.Compression\&.ArraySerializeExt\&.ReadUInt8 (this ulong[] buffer, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB970\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte[] Photon\&.Compression\&.ArraySerializeExt\&.Write (this byte[] buffer, byte[] srcbuffer, ref int readpos, ref int writepos, int bits)\fC [static]\fP"

.PP
Definition at line \fB1021\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte[] Photon\&.Compression\&.ArraySerializeExt\&.Write (this byte[] buffer, float value, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB938\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static byte[] Photon\&.Compression\&.ArraySerializeExt\&.Write (this byte[] buffer, ulong value, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB920\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Write (this byte[] buffer, ulong value, ref int bitposition, int bits)\fC [static]\fP"

.PP
This is the primary byte[]\&.\fBWrite()\fP method\&. All other byte[]\&.Write methods lead to this one, so when performance matters, cast using (\fBByteConverter\fP)value and use this method\&. 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP 
.br
\fIvalue\fP 
.br
\fIbitposition\fP 
.br
\fIbits\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line \fB383\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static uint[] Photon\&.Compression\&.ArraySerializeExt\&.Write (this uint[] buffer, ulong value, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB926\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Write (this uint[] buffer, ulong value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB425\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static ulong[] Photon\&.Compression\&.ArraySerializeExt\&.Write (this ulong[] buffer, ulong value, int bits, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB932\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Write (this ulong[] buffer, ulong value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB457\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteBool (this byte[] buffer, bool b, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB501\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteBool (this uint[] buffer, bool b, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB497\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteBool (this ulong[] buffer, bool b, ref int bitposition)\fC [static]\fP"

.PP
Definition at line \fB493\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteFloat (this byte[] buffer, float value, ref int bitposition)\fC [static]\fP"

.PP
Converts a float to a 32bit uint with \fBByteConverter\fP, then writes those 32 bits to the buffer\&. 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP The array we are reading from\&.
.br
\fIvalue\fP The float value to write\&.
.br
\fIbitposition\fP The bit position in the array we start the read at\&. Will be incremented by 32 bits\&.
.RE
.PP

.PP
Definition at line \fB247\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteSigned (this byte[] buffer, int value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB167\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteSigned (this byte[] buffer, long value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB183\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteSigned (this uint[] buffer, int value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB172\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteSigned (this uint[] buffer, long value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB188\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteSigned (this ulong[] buffer, int value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB177\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.WriteSigned (this ulong[] buffer, long value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Definition at line \fB193\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this byte[] buffer)\fC [static]\fP"

.PP
Zero out all array values\&. 
.PP
Definition at line \fB66\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this byte[] buffer, int startByte)\fC [static]\fP"

.PP
Zero out all array values\&. Start value is inclusive\&. 
.PP
Definition at line \fB56\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this byte[] buffer, int startByte, int endByte)\fC [static]\fP"

.PP
Zero out all array values\&. Start and End values are inclusive\&. 
.PP
Definition at line \fB47\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this uint[] buffer)\fC [static]\fP"

.PP
Zero out all array values\&. 
.PP
Definition at line \fB126\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this uint[] buffer, int startByte)\fC [static]\fP"

.PP
Zero out all array values\&. Start value is inclusive\&. 
.PP
Definition at line \fB116\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this uint[] buffer, int startByte, int endByte)\fC [static]\fP"

.PP
Zero out all array values\&. Start and End values are inclusive\&. 
.PP
Definition at line \fB107\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this ulong[] buffer)\fC [static]\fP"

.PP
Zero out all array values\&. 
.PP
Definition at line \fB156\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this ulong[] buffer, int startByte)\fC [static]\fP"

.PP
Zero out all array values\&. Start value is inclusive\&. 
.PP
Definition at line \fB146\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this ulong[] buffer, int startByte, int endByte)\fC [static]\fP"

.PP
Zero out all array values\&. Start and End values are inclusive\&. 
.PP
Definition at line \fB137\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this ushort[] buffer)\fC [static]\fP"

.PP
Zero out all array values\&. 
.PP
Definition at line \fB96\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this ushort[] buffer, int startByte)\fC [static]\fP"

.PP
Zero out all array values\&. Start value is inclusive\&. 
.PP
Definition at line \fB86\fP of file \fBArraySerializeExt\&.cs\fP\&.
.SS "static void Photon\&.Compression\&.ArraySerializeExt\&.Zero (this ushort[] buffer, int startByte, int endByte)\fC [static]\fP"

.PP
Zero out all array values\&. Start and End values are inclusive\&. 
.PP
Definition at line \fB77\fP of file \fBArraySerializeExt\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
