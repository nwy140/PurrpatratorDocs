.TH "Photon.Compression.ElementCrusher" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Compression.ElementCrusher
.SH SYNOPSIS
.br
.PP
.PP
Inherits Crusher< ElementCrusher >, System\&.IEquatable< ElementCrusher >, and ICrusherCopy< ElementCrusher >\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBUniformAxes\fP { \fBNonUniform\fP = 0, \fBXY\fP = 3, \fBXZ\fP = 5, \fBYZ\fP = 6, \fBXYZ\fP = 7 }"
.br
.ti -1c
.RI "enum \fBStaticTRSType\fP { \fBPosition\fP = 0, \fBEuler\fP = 1, \fBQuaternion\fP = 2, \fBScale\fP = 3, \fBGeneric\fP = 4 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBOnCrusherChange\fP (\fBQuatCrusher\fP crusher)"
.br
.ti -1c
.RI "void \fBOnCrusherChange\fP (FloatCrusher crusher)"
.br
.ti -1c
.RI "void \fBApplyWorldCrusherSettings\fP ()"
.br
.RI "Initial crusher references to match the \fBWorldBoundsGroup\fP specified by the current settings\&. "
.ti -1c
.RI "void \fBApplyWorldCrusherSettings\fP (bool newUseBounds, int newBndsGrpId)"
.br
.RI "Swap the crusher references to match the \fBWorldBoundsGroup\fP specified by the current settings\&. "
.ti -1c
.RI "override void \fBOnBeforeSerialize\fP ()"
.br
.ti -1c
.RI "override void \fBOnAfterDeserialize\fP ()"
.br
.ti -1c
.RI "void \fBCacheValues\fP ()"
.br
.ti -1c
.RI "\fBElementCrusher\fP ()"
.br
.ti -1c
.RI "\fBElementCrusher\fP (bool \fBenableTRSTypeSelector\fP=true)"
.br
.ti -1c
.RI "\fBElementCrusher\fP (\fBTRSType\fP trsType, bool \fBenableTRSTypeSelector\fP=true)"
.br
.ti -1c
.RI "void \fBDefaults\fP (\fBTRSType\fP trs)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Transform trans, byte[] bytes, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Automatically use the correct transform TRS element based on the TRSType and local settings of each Crusher\&. "
.ti -1c
.RI "\fBCompressedElement\fP \fBWrite\fP (Transform trans, byte[] bytes, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP ce, byte[] buffer, ref int bitposition, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Serialize a \fBCompressedElement\fP into a byte[] buffer\&. "
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP ce, uint[] buffer, ref int bitposition, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Serialize a \fBCompressedElement\fP into a uint[] buffer\&. "
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP ce, ulong[] buffer, ref int bitposition, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Serialize a \fBCompressedElement\fP into a ulong[] buffer\&. "
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Vector3 v3, byte[] bytes, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "\fBCompressedElement\fP \fBWrite\fP (Vector3 v3, byte[] bytes, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Vector3 v3, byte[] bytes, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Compress and then write a vector3 value into a byte[] buffer\&. "
.ti -1c
.RI "\fBCompressedElement\fP \fBWrite\fP (Vector3 v3, byte[] bytes, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Quaternion quat, byte[] bytes, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "\fBCompressedElement\fP \fBWrite\fP (Quaternion quat, byte[] bytes, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Transform trans, ulong[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Vector3 v3, ulong[] buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Quaternion quat, ulong[] bytes, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBRead\fP (\fBCompressedElement\fP nonalloc, byte[] bytes, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Read \fBCompressedElement\fP from buffer\&. "
.ti -1c
.RI "\fBCompressedElement\fP \fBRead\fP (byte[] buffer, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Read \fBCompressedElement\fP from buffer\&. "
.ti -1c
.RI "void \fBRead\fP (\fBCompressedElement\fP nonalloc, byte[] bytes, ref int bitposition, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Reads out the commpressed value for this vector/quaternion from a buffer\&. "
.ti -1c
.RI "\fBCompressedElement\fP \fBRead\fP (byte[] bytes, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Deserialize a compressed Vector/Quaternion and return as a \fBCompressedElement\fP\&. "
.ti -1c
.RI "void \fBRead\fP (\fBCompressedElement\fP nonalloc, ulong[] buffer, ref int bitposition, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Reads out the commpressed value for this vector/quaternion from a buffer\&. "
.ti -1c
.RI "void \fBRead\fP (\fBCompressedElement\fP nonalloc, uint[] buffer, ref int bitposition, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Reads out the commpressed value for this vector/quaternion from a buffer\&. "
.ti -1c
.RI "\fBElement\fP \fBReadAndDecompress\fP (byte[] bytes, ref int bitposition, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Transform trans, ref ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Automatically use the correct transform element based on the TRSType for this Crusher\&. "
.ti -1c
.RI "void \fBWrite\fP (Transform trans, ref ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Vector3 v3, ref ulong buffer, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (Vector3 v3, ref ulong buffer, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Vector3 v3, ref ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (Vector3 v3, ref ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Quaternion quat, ref ulong buffer)"
.br
.ti -1c
.RI "void \fBWrite\fP (Quaternion quat, ref ulong buffer)"
.br
.ti -1c
.RI "void \fBWrite\fP (\fBCompressedElement\fP nonalloc, Quaternion quat, ref ulong buffer, ref int bitposition)"
.br
.ti -1c
.RI "void \fBWrite\fP (Quaternion quat, ref ulong buffer, ref int bitposition)"
.br
.ti -1c
.RI "\fBCompressedElement\fP \fBWrite\fP (\fBCompressedElement\fP ce, ref ulong buffer, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "\fBCompressedElement\fP \fBWrite\fP (\fBCompressedElement\fP ce, ref ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "\fBElement\fP \fBRead\fP (ulong buffer, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "\fBElement\fP \fBRead\fP (ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Deserialize a compressed element directly from the buffer stream into a vector3/quaternion\&. "
.ti -1c
.RI "void \fBRead\fP (\fBCompressedElement\fP nonalloc, ulong buffer, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBRead\fP (\fBCompressedElement\fP nonalloc, ulong buffer, ref int bitposition, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBRead\fP (\fBCompressedElement\fP nonalloc, ulong frag0, ulong frag1=0, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "\fBCompressedElement\fP \fBRead\fP (ulong frag0, ulong frag1=0, BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.ti -1c
.RI "void \fBCompress\fP (\fBCompressedElement\fP nonalloc, Transform trans)"
.br
.ti -1c
.RI "\fBCompressedElement\fP \fBCompress\fP (Transform trans)"
.br
.ti -1c
.RI "void \fBCompressAndWrite\fP (Transform trans, byte[] buffer, ref int bitposition)"
.br
.RI "CompressAndWrite doesn't produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream\&. "
.ti -1c
.RI "void \fBCompress\fP (\fBCompressedElement\fP nonalloc, \fBElement\fP e)"
.br
.ti -1c
.RI "\fBCompressedElement\fP \fBCompress\fP (\fBElement\fP e)"
.br
.RI "Compress an \fBElement\fP (Vector/Quaternion wrapper) and return as a \fBCompressedElement\fP\&. "
.ti -1c
.RI "void \fBCompressAndWrite\fP (\fBElement\fP e, byte[] buffer, ref int bitposition)"
.br
.RI "CompressAndWrite doesn't produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream\&. "
.ti -1c
.RI "void \fBCompress\fP (\fBCompressedElement\fP nonalloc, Rigidbody rb, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.ti -1c
.RI "void \fBCompress\fP (\fBCompressedElement\fP nonalloc, Vector3 v, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.ti -1c
.RI "\fBCompressedElement\fP \fBCompress\fP (Vector3 v)"
.br
.ti -1c
.RI "void \fBCompressAndWrite\fP (Vector3 v, byte[] buffer, ref int bitposition, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "CompressAndWrite doesn't produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream\&. "
.ti -1c
.RI "void \fBCompress\fP (\fBCompressedElement\fP nonalloc, Quaternion quat)"
.br
.RI "Compress and bitpack the enabled vectors into a generic unsigned int\&. "
.ti -1c
.RI "\fBCompressedElement\fP \fBCompress\fP (Quaternion quat)"
.br
.ti -1c
.RI "void \fBCompressAndWrite\fP (Quaternion quat, byte[] buffer, ref int bitposition)"
.br
.RI "CompressAndWrite doesn't produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream\&. "
.ti -1c
.RI "\fBElement\fP \fBDecompress\fP (\fBCompressedElement\fP compressed)"
.br
.RI "Decode (decompresss) and restore an element that was compressed by this crusher\&. "
.ti -1c
.RI "\fBElement\fP \fBDecompress\fP (ulong cval, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.ti -1c
.RI "void \fBApply\fP (Rigidbody rb, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Applies only the enabled axes to the transform, leaving the disabled axes untouched\&. "
.ti -1c
.RI "void \fBApply\fP (Rigidbody rb, \fBElement\fP e, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Applies only the enabled axes to the rigidbody, leaving the disabled axes untouched\&. "
.ti -1c
.RI "void \fBMove\fP (Rigidbody rb, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Rigidbody\&.MovePosition/MoveRotation only the enabled axes, leaving the disabled axes untouched\&. "
.ti -1c
.RI "void \fBMove\fP (Rigidbody rb, \fBElement\fP e, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Rigidbody\&.MovePosition/MoveRotation only the enabled axes, leaving the disabled axes untouched\&. "
.ti -1c
.RI "void \fBSet\fP (Rigidbody rb, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Set RB pos/rot using only the enabled axes, leaving the disabled axes untouched\&. "
.ti -1c
.RI "void \fBSet\fP (Rigidbody2D rb, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Set RB pos/rot using only the enabled axes, leaving the disabled axes untouched\&. "
.ti -1c
.RI "void \fBSet\fP (Rigidbody rb, \fBElement\fP e, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Set RB pos/rot using only the enabled axes, leaving the disabled axes untouched\&. "
.ti -1c
.RI "void \fBSet\fP (Rigidbody2D rb2d, \fBElement\fP e, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Set RB pos/rot using only the enabled axes, leaving the disabled axes untouched\&. "
.ti -1c
.RI "void \fBApply\fP (Transform trans, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Applies only the enabled axes to the transform, leaving the disabled axes untouched\&. "
.ti -1c
.RI "void \fBApply\fP (Transform trans, \fBElement\fP e, \fBIncludedAxes\fP ia=\fBIncludedAxes\&.XYZ\fP)"
.br
.RI "Applies only the enabled axes to the transform, leaving the disabled axes untouched\&. "
.ti -1c
.RI "Vector3 \fBClamp\fP (Vector3 v3)"
.br
.RI "Return a value clamped to the Min/Max values defined for each axis by this Crusher\&. "
.ti -1c
.RI "BitCullingLevel \fBFindBestBitCullLevel\fP (\fBCompressedElement\fP a, \fBCompressedElement\fP b, BitCullingLevel maxCulling)"
.br
.RI "Return the smallest bit culling level that will be able to communicate the changes between two compressed elements\&. "
.ti -1c
.RI "bool \fBTestMatchingUpper\fP (\fBCompressedElement\fP a, \fBCompressedElement\fP b, BitCullingLevel bcl)"
.br
.ti -1c
.RI "int \fBTallyBits\fP (BitCullingLevel bcl=BitCullingLevel\&.NoCulling)"
.br
.RI "Get the total number of bits needed to serialize an element with this crusher\&. "
.ti -1c
.RI "void \fBCopyFrom\fP (\fBElementCrusher\fP src)"
.br
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.ti -1c
.RI "override bool \fBEquals\fP (object obj)"
.br
.ti -1c
.RI "bool \fBEquals\fP (\fBElementCrusher\fP other)"
.br
.ti -1c
.RI "override int \fBGetHashCode\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBElementCrusher\fP \fBGetStaticPositionCrusher\fP (\fBBounds\fP \fBbounds\fP, int resolution)"
.br
.ti -1c
.RI "static \fBElementCrusher\fP \fBGetStaticQuatCrusher\fP (int minBits)"
.br
.ti -1c
.RI "static \fBElementCrusher\fP \fBCheckAgainstStatics\fP (\fBElementCrusher\fP ec, bool CheckAgainstFloatCrushersAsWell=true)"
.br
.RI "Checks to see if a crusher with the same settings has been registered with our dictionary\&. "
.ti -1c
.RI "static bool \fBoperator==\fP (\fBElementCrusher\fP crusher1, \fBElementCrusher\fP crusher2)"
.br
.ti -1c
.RI "static bool \fBoperator!=\fP (\fBElementCrusher\fP crusher1, \fBElementCrusher\fP crusher2)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBhideFieldName\fP = false"
.br
.ti -1c
.RI "Transform \fBdefaultTransform\fP"
.br
.ti -1c
.RI "\fBUniformAxes\fP \fBuniformAxes\fP"
.br
.ti -1c
.RI "bool \fBlocal\fP"
.br
.ti -1c
.RI "bool \fBenableTRSTypeSelector\fP"
.br
.ti -1c
.RI "bool \fBenableLocalSelector\fP = true"
.br
.ti -1c
.RI "ReadOnlyCollection< int > \fBCached_TotalBits\fP"
.br
.ti -1c
.RI "\fBBounds\fP \fBbounds\fP = new \fBBounds\fP()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static Dictionary< int, \fBElementCrusher\fP > \fBstaticElementCrushers\fP = new Dictionary<int, \fBElementCrusher\fP>()"
.br
.RI "Experiemental collection of non-changing crushers, to avoid redundant crushers\&. "
.ti -1c
.RI "static \fBElementCrusher\fP \fBdefaultUncompressedElementCrusher\fP"
.br
.ti -1c
.RI "static \fBElementCrusher\fP \fBdefaultUncompressedPosCrusher\fP"
.br
.ti -1c
.RI "static \fBElementCrusher\fP \fBdefaultUncompressedSclCrusher\fP"
.br
.ti -1c
.RI "static \fBElementCrusher\fP \fBdefaultHalfFloatElementCrusher\fP"
.br
.ti -1c
.RI "static \fBElementCrusher\fP \fBdefaultHalfFloatPosCrusher\fP"
.br
.ti -1c
.RI "static \fBElementCrusher\fP \fBdefaultHalfFloatSclCrusher\fP"
.br
.ti -1c
.RI "static ulong[] \fBreusableArray64\fP = new ulong[2]"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "TRSType \fBTRSType\fP\fC [getset]\fP"
.br
.ti -1c
.RI "FloatCrusher \fBxcrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "FloatCrusher \fBycrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "FloatCrusher \fBzcrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "FloatCrusher \fBucrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "\fBQuatCrusher\fP \fBqcrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "FloatCrusher \fBXCrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "FloatCrusher \fBYCrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "FloatCrusher \fBZCrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "FloatCrusher \fBUCrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "\fBQuatCrusher\fP \fBQCrusher\fP\fC [getset]\fP"
.br
.ti -1c
.RI "bool \fBUseWorldBounds\fP\fC [getset]\fP"
.br
.ti -1c
.RI "int \fBBoundsGroupId\fP\fC [getset]\fP"
.br
.ti -1c
.RI "Bounds?????? \fBBounds\fP\fC [getset]\fP"
.br
.RI "Get will return a Bounds struct with the ranges of the x/y/z crushers\&. "
.ti -1c
.RI "bool \fBEnabled\fP\fC [getset]\fP"
.br
.RI "Property that returns if this element crusher is effectively enabled (has any enabled float/quat crushers using bits > 0) "
.ti -1c
.RI "FloatCrusher \fBthis[int axis]\fP\fC [get]\fP"
.br
.RI "Indexer returns the component crushers\&. "
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB26\fP of file \fBElementCrusher\&.cs\fP\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBPhoton\&.Compression\&.ElementCrusher\&.StaticTRSType\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIPosition \fP\fP
.TP
\fB\fIEuler \fP\fP
.TP
\fB\fIQuaternion \fP\fP
.TP
\fB\fIScale \fP\fP
.TP
\fB\fIGeneric \fP\fP
.PP
Definition at line \fB29\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "enum \fBPhoton\&.Compression\&.ElementCrusher\&.UniformAxes\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINonUniform \fP\fP
.TP
\fB\fIXY \fP\fP
.TP
\fB\fIXZ \fP\fP
.TP
\fB\fIYZ \fP\fP
.TP
\fB\fIXYZ \fP\fP
.PP
Definition at line \fB28\fP of file \fBElementCrusher\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Photon\&.Compression\&.ElementCrusher\&.ElementCrusher ()"

.PP
Definition at line \fB695\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "Photon\&.Compression\&.ElementCrusher\&.ElementCrusher (bool enableTRSTypeSelector = \fCtrue\fP)"

.PP
Definition at line \fB711\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "Photon\&.Compression\&.ElementCrusher\&.ElementCrusher (\fBTRSType\fP trsType, bool enableTRSTypeSelector = \fCtrue\fP)"

.PP
Definition at line \fB720\fP of file \fBElementCrusher\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Compression\&.ElementCrusher\&.Apply (Rigidbody rb, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Applies only the enabled axes to the transform, leaving the disabled axes untouched\&. 
.PP
\fBParameters\fP
.RS 4
\fIia\fP The indicated axis will be used (assuming they are enabled for the crusher)\&. For example if an object only moves up and down in place, \fBIncludedAxes\&.Y\fP would only apply the Y axis compression values, and would leave the X and Z values as they currently are\&.
.RE
.PP

.PP
Definition at line \fB1904\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Apply (Rigidbody rb, \fBElement\fP e, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Applies only the enabled axes to the rigidbody, leaving the disabled axes untouched\&. 
.PP
\fBParameters\fP
.RS 4
\fIrb\fP 
.br
\fIe\fP 
.br
\fIia\fP The indicated axis will be used (assuming they are enabled for the crusher)\&. For example if an object only moves up and down in place, \fBIncludedAxes\&.Y\fP would only apply the Y axis compression values, and would leave the X and Z values as they currently are\&.
.RE
.PP

.PP
Definition at line \fB1918\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Apply (Transform trans, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Applies only the enabled axes to the transform, leaving the disabled axes untouched\&. 
.PP
\fBParameters\fP
.RS 4
\fIia\fP The indicated axis will be used (assuming they are enabled for the crusher)\&. For example if an object only moves up and down in place, \fBIncludedAxes\&.Y\fP would only apply the Y axis compression values, and would leave the X and Z values as they currently are\&.
.RE
.PP

.PP
Definition at line \fB2227\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Apply (Transform trans, \fBElement\fP e, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Applies only the enabled axes to the transform, leaving the disabled axes untouched\&. 
.PP
Definition at line \fB2236\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.ApplyWorldCrusherSettings ()"

.PP
Initial crusher references to match the \fBWorldBoundsGroup\fP specified by the current settings\&. IF the WorldBoundsSO is not ready, stop\&. This method will be recalled when WorldBoundsSO is ready\&.
.PP
Definition at line \fB350\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.ApplyWorldCrusherSettings (bool newUseBounds, int newBndsGrpId)"

.PP
Swap the crusher references to match the \fBWorldBoundsGroup\fP specified by the current settings\&. If BoundsGroup ID has changed, change the event subscribe to that group and update the local fields\&.
.PP
Definition at line \fB399\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.CacheValues ()"
Trigger OnChange callback
.PP
Definition at line \fB542\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "static \fBElementCrusher\fP Photon\&.Compression\&.ElementCrusher\&.CheckAgainstStatics (\fBElementCrusher\fP ec, bool CheckAgainstFloatCrushersAsWell = \fCtrue\fP)\fC [static]\fP"

.PP
Checks to see if a crusher with the same settings has been registered with our dictionary\&. If a crusher with the same value exists there, that crusher is returned\&. If no duplicate of of the supplied crusher exists, the supplied crusher is returned\&. 
.PP
\fBParameters\fP
.RS 4
\fIec\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line \fB77\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "Vector3 Photon\&.Compression\&.ElementCrusher\&.Clamp (Vector3 v3)"

.PP
Return a value clamped to the Min/Max values defined for each axis by this Crusher\&. 
.PP
\fBParameters\fP
.RS 4
\fIv3\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line \fB2375\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Compress (\fBCompressedElement\fP nonalloc, \fBElement\fP e)"

.PP
Definition at line \fB1602\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Compress (\fBCompressedElement\fP nonalloc, Quaternion quat)"

.PP
Compress and bitpack the enabled vectors into a generic unsigned int\&. 
.PP
Definition at line \fB1783\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Compress (\fBCompressedElement\fP nonalloc, Rigidbody rb, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Definition at line \fB1637\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Compress (\fBCompressedElement\fP nonalloc, Transform trans)"

.PP
Definition at line \fB1533\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Compress (\fBCompressedElement\fP nonalloc, Vector3 v, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Definition at line \fB1713\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Compress (\fBElement\fP e)"

.PP
Compress an \fBElement\fP (Vector/Quaternion wrapper) and return as a \fBCompressedElement\fP\&. WARNING: The returned \fBCompressedElement\fP is recycled and its values need to be used immediately\&.
.PP
Supply a pre-allocated \fBCompressedElement\fP as an argument if you intend to store these values\&.
.PP
Definition at line \fB1615\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Compress (Quaternion quat)"

.PP
Definition at line \fB1796\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Compress (Transform trans)"

.PP
Definition at line \fB1563\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Compress (Vector3 v)"

.PP
Definition at line \fB1739\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.CompressAndWrite (\fBElement\fP e, byte[] buffer, ref int bitposition)"

.PP
CompressAndWrite doesn't produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream\&. Use this rather than \fBWrite()\fP and \fBCompress()\fP when you don't need the lossy or compressed value returned\&. 
.PP
Definition at line \fB1629\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.CompressAndWrite (Quaternion quat, byte[] buffer, ref int bitposition)"

.PP
CompressAndWrite doesn't produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream\&. Use this rather than \fBWrite()\fP and \fBCompress()\fP when you don't need the lossy or compressed value returned\&. 
.PP
Definition at line \fB1806\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.CompressAndWrite (Transform trans, byte[] buffer, ref int bitposition)"

.PP
CompressAndWrite doesn't produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream\&. Use this rather than \fBWrite()\fP and \fBCompress()\fP when you don't need the lossy or compressed value returned\&. 
.PP
Definition at line \fB1573\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.CompressAndWrite (Vector3 v, byte[] buffer, ref int bitposition, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
CompressAndWrite doesn't produce any temporary 40byte bitstream structs, but rather will compress and write directly to the supplied bitstream\&. Use this rather than \fBWrite()\fP and \fBCompress()\fP when you don't need the lossy or compressed value returned\&. 
.PP
Definition at line \fB1749\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.CopyFrom (\fBElementCrusher\fP src)"

.PP
Definition at line \fB2491\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElement\fP Photon\&.Compression\&.ElementCrusher\&.Decompress (\fBCompressedElement\fP compressed)"

.PP
Decode (decompresss) and restore an element that was compressed by this crusher\&. 
.PP
Definition at line \fB1825\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElement\fP Photon\&.Compression\&.ElementCrusher\&.Decompress (ulong cval, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Definition at line \fB1852\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Defaults (\fBTRSType\fP trs)"

.PP
Definition at line \fB728\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "bool Photon\&.Compression\&.ElementCrusher\&.Equals (\fBElementCrusher\fP other)"

.PP
Definition at line \fB2517\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "override bool Photon\&.Compression\&.ElementCrusher\&.Equals (object obj)"

.PP
Definition at line \fB2512\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "BitCullingLevel Photon\&.Compression\&.ElementCrusher\&.FindBestBitCullLevel (\fBCompressedElement\fP a, \fBCompressedElement\fP b, BitCullingLevel maxCulling)"

.PP
Return the smallest bit culling level that will be able to communicate the changes between two compressed elements\&. Quats can't cull upper bits, so its an all or nothing\&. Either the bits match or they don't
.PP
Definition at line \fB2426\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "override int Photon\&.Compression\&.ElementCrusher\&.GetHashCode ()"

.PP
Definition at line \fB2533\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "static \fBElementCrusher\fP Photon\&.Compression\&.ElementCrusher\&.GetStaticPositionCrusher (\fBBounds\fP bounds, int resolution)\fC [static]\fP"

.PP
Definition at line \fB47\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "static \fBElementCrusher\fP Photon\&.Compression\&.ElementCrusher\&.GetStaticQuatCrusher (int minBits)\fC [static]\fP"

.PP
Definition at line \fB60\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Move (Rigidbody rb, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Rigidbody\&.MovePosition/MoveRotation only the enabled axes, leaving the disabled axes untouched\&. 
.PP
\fBParameters\fP
.RS 4
\fIrb\fP 
.br
\fIe\fP 
.br
\fIia\fP The indicated axis will be used (assuming they are enabled for the crusher)\&. For example if an object only moves up and down in place, \fBIncludedAxes\&.Y\fP would only apply the Y axis compression values, and would leave the X and Z values as they currently are\&.
.RE
.PP

.PP
Definition at line \fB1991\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Move (Rigidbody rb, \fBElement\fP e, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Rigidbody\&.MovePosition/MoveRotation only the enabled axes, leaving the disabled axes untouched\&. 
.PP
\fBParameters\fP
.RS 4
\fIrb\fP 
.br
\fIe\fP 
.br
\fIia\fP The indicated axis will be used (assuming they are enabled for the crusher)\&. For example if an object only moves up and down in place, \fBIncludedAxes\&.Y\fP would only apply the Y axis compression values, and would leave the X and Z values as they currently are\&.
.RE
.PP

.PP
Definition at line \fB2004\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "override void Photon\&.Compression\&.ElementCrusher\&.OnAfterDeserialize ()"

.PP
Definition at line \fB536\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "override void Photon\&.Compression\&.ElementCrusher\&.OnBeforeSerialize ()"

.PP
Definition at line \fB534\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.OnCrusherChange (FloatCrusher crusher)"

.PP
Definition at line \fB305\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.OnCrusherChange (\fBQuatCrusher\fP crusher)"

.PP
Definition at line \fB300\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "static bool Photon\&.Compression\&.ElementCrusher\&.operator!= (\fBElementCrusher\fP crusher1, \fBElementCrusher\fP crusher2)\fC [static]\fP"

.PP
Definition at line \fB2559\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "static bool Photon\&.Compression\&.ElementCrusher\&.operator== (\fBElementCrusher\fP crusher1, \fBElementCrusher\fP crusher2)\fC [static]\fP"

.PP
Definition at line \fB2554\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Read (byte[] buffer, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Read \fBCompressedElement\fP from buffer\&. WARNING: Returned \fBCompressedElement\fP is a recycled class and values should be used immediately\&.
.PP
Definition at line \fB1093\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Read (byte[] bytes, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Deserialize a compressed Vector/Quaternion and return as a \fBCompressedElement\fP\&. WARNING: The returned \fBCompressedElement\fP is recycled and its values need to be used immediately\&.
.PP
Supply a pre-allocated \fBCompressedElement\fP as an argument if you intend to store these values\&.
.PP
Definition at line \fB1152\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Read (\fBCompressedElement\fP nonalloc, byte[] bytes, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Read \fBCompressedElement\fP from buffer\&. 
.PP
Definition at line \fB1083\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Read (\fBCompressedElement\fP nonalloc, byte[] bytes, ref int bitposition, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Reads out the commpressed value for this vector/quaternion from a buffer\&. Needs to be decompressed still to become vector3/quaterion\&. 
.PP
Definition at line \fB1103\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Read (\fBCompressedElement\fP nonalloc, uint[] buffer, ref int bitposition, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Reads out the commpressed value for this vector/quaternion from a buffer\&. Needs to be decompressed still to become vector3/quaterion\&. 
.PP
Definition at line \fB1207\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Read (\fBCompressedElement\fP nonalloc, ulong buffer, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1475\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Read (\fBCompressedElement\fP nonalloc, ulong buffer, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1480\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Read (\fBCompressedElement\fP nonalloc, ulong frag0, ulong frag1 = \fC0\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1510\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Read (\fBCompressedElement\fP nonalloc, ulong[] buffer, ref int bitposition, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Reads out the commpressed value for this vector/quaternion from a buffer\&. Needs to be decompressed still to become vector3/quaterion\&. 
.PP
Definition at line \fB1161\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElement\fP Photon\&.Compression\&.ElementCrusher\&.Read (ulong buffer, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1414\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElement\fP Photon\&.Compression\&.ElementCrusher\&.Read (ulong buffer, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Deserialize a compressed element directly from the buffer stream into a vector3/quaternion\&. This is the most efficient read, but it does not return any intermediary compressed values\&. 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP Serialized source\&.
.br
\fIbitposition\fP Current read position in source\&.
.br
\fIbcl\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line \fB1451\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Read (ulong frag0, ulong frag1 = \fC0\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1523\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElement\fP Photon\&.Compression\&.ElementCrusher\&.ReadAndDecompress (byte[] bytes, ref int bitposition, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1251\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Set (Rigidbody rb, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Set RB pos/rot using only the enabled axes, leaving the disabled axes untouched\&. 
.PP
\fBParameters\fP
.RS 4
\fIrb\fP 
.br
\fIe\fP 
.br
\fIia\fP The indicated axis will be used (assuming they are enabled for the crusher)\&. For example if an object only moves up and down in place, \fBIncludedAxes\&.Y\fP would only apply the Y axis compression values, and would leave the X and Z values as they currently are\&.
.RE
.PP

.PP
Definition at line \fB2075\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Set (Rigidbody rb, \fBElement\fP e, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Set RB pos/rot using only the enabled axes, leaving the disabled axes untouched\&. 
.PP
\fBParameters\fP
.RS 4
\fIrb\fP 
.br
\fIe\fP 
.br
\fIia\fP The indicated axis will be used (assuming they are enabled for the crusher)\&. For example if an object only moves up and down in place, \fBIncludedAxes\&.Y\fP would only apply the Y axis compression values, and would leave the X and Z values as they currently are\&.
.RE
.PP

.PP
Definition at line \fB2100\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Set (Rigidbody2D rb, \fBCompressedElement\fP ce, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Set RB pos/rot using only the enabled axes, leaving the disabled axes untouched\&. 
.PP
\fBParameters\fP
.RS 4
\fIrb\fP 
.br
\fIe\fP 
.br
\fIia\fP The indicated axis will be used (assuming they are enabled for the crusher)\&. For example if an object only moves up and down in place, \fBIncludedAxes\&.Y\fP would only apply the Y axis compression values, and would leave the X and Z values as they currently are\&.
.RE
.PP

.PP
Definition at line \fB2088\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Set (Rigidbody2D rb2d, \fBElement\fP e, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP)"

.PP
Set RB pos/rot using only the enabled axes, leaving the disabled axes untouched\&. 
.PP
\fBParameters\fP
.RS 4
\fIrb2d\fP 
.br
\fIe\fP 
.br
\fIia\fP The indicated axis will be used (assuming they are enabled for the crusher)\&. For example if an object only moves up and down in place, \fBIncludedAxes\&.Y\fP would only apply the Y axis compression values, and would leave the X and Z values as they currently are\&.
.RE
.PP

.PP
Definition at line \fB2170\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "int Photon\&.Compression\&.ElementCrusher\&.TallyBits (BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Get the total number of bits needed to serialize an element with this crusher\&. 
.PP
Definition at line \fB2468\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "bool Photon\&.Compression\&.ElementCrusher\&.TestMatchingUpper (\fBCompressedElement\fP a, \fBCompressedElement\fP b, BitCullingLevel bcl)"

.PP
Definition at line \fB2455\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "override string Photon\&.Compression\&.ElementCrusher\&.ToString ()"

.PP
Definition at line \fB2503\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP ce, byte[] buffer, ref int bitposition, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Serialize a \fBCompressedElement\fP into a byte[] buffer\&. 
.PP
Definition at line \fB833\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP ce, ref ulong buffer, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1382\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP ce, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1387\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP ce, uint[] buffer, ref int bitposition, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Serialize a \fBCompressedElement\fP into a uint[] buffer\&. 
.PP
Definition at line \fB857\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP ce, ulong[] buffer, ref int bitposition, \fBIncludedAxes\fP ia = \fC\fBIncludedAxes\&.XYZ\fP\fP, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Serialize a \fBCompressedElement\fP into a ulong[] buffer\&. 
.PP
Definition at line \fB881\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Quaternion quat, byte[] bytes, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB978\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Quaternion quat, ref ulong buffer)"

.PP
Definition at line \fB1354\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Quaternion quat, ref ulong buffer, ref int bitposition)"

.PP
Definition at line \fB1365\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Quaternion quat, ulong[] bytes, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1063\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Transform trans, byte[] bytes, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Automatically use the correct transform TRS element based on the TRSType and local settings of each Crusher\&. 
.PP
Definition at line \fB775\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Transform trans, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Automatically use the correct transform element based on the TRSType for this Crusher\&. 
.PP
Definition at line \fB1264\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Transform trans, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1004\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Vector3 v3, byte[] bytes, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB902\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Vector3 v3, byte[] bytes, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Compress and then write a vector3 value into a byte[] buffer\&. 
.PP
\fBParameters\fP
.RS 4
\fInonalloc\fP Overwrite this \fBCompressedElement\fP with the compressed value\&.
.br
\fIv3\fP The uncompressed value to compress and serialize\&.
.br
\fIbytes\fP The target buffer\&.
.br
\fIbitposition\fP Write position of the target buffer\&.
.br
\fIbcl\fP 
.RE
.PP

.PP
Definition at line \fB922\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Vector3 v3, ref ulong buffer, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1321\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Vector3 v3, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1332\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (\fBCompressedElement\fP nonalloc, Vector3 v3, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1034\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Write (Quaternion quat, byte[] bytes, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB989\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (Quaternion quat, ref ulong buffer)"

.PP
Definition at line \fB1359\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (Quaternion quat, ref ulong buffer, ref int bitposition)"

.PP
Definition at line \fB1374\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Write (Transform trans, byte[] bytes, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB806\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (Transform trans, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1292\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Write (Vector3 v3, byte[] bytes, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB908\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBCompressedElement\fP Photon\&.Compression\&.ElementCrusher\&.Write (Vector3 v3, byte[] bytes, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB951\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (Vector3 v3, ref ulong buffer, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1326\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "void Photon\&.Compression\&.ElementCrusher\&.Write (Vector3 v3, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = \fCBitCullingLevel\&.NoCulling\fP)"

.PP
Definition at line \fB1343\fP of file \fBElementCrusher\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBBounds\fP Photon\&.Compression\&.ElementCrusher\&.bounds = new \fBBounds\fP()"

.PP
Definition at line \fB498\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "ReadOnlyCollection<int> Photon\&.Compression\&.ElementCrusher\&.Cached_TotalBits"

.PP
Definition at line \fB491\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElementCrusher\fP Photon\&.Compression\&.ElementCrusher\&.defaultHalfFloatElementCrusher\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= CheckAgainstStatics(new ElementCrusher(StaticTRSType\&.Generic)
        {
            XCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            YCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            ZCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            UCrusher = FloatCrusher\&.defaultUncompressedCrusher,
        })
.fi
.PP
Definition at line \fB129\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElementCrusher\fP Photon\&.Compression\&.ElementCrusher\&.defaultHalfFloatPosCrusher\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= CheckAgainstStatics(new ElementCrusher(StaticTRSType\&.Position)
        {
            XCrusher = FloatCrusher\&.defaulHalfFloatCrusher,
            YCrusher = FloatCrusher\&.defaulHalfFloatCrusher,
            ZCrusher = FloatCrusher\&.defaulHalfFloatCrusher,
            UCrusher = FloatCrusher\&.defaulHalfFloatCrusher,
        })
.fi
.PP
Definition at line \fB137\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElementCrusher\fP Photon\&.Compression\&.ElementCrusher\&.defaultHalfFloatSclCrusher\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= CheckAgainstStatics(new ElementCrusher(StaticTRSType\&.Scale)
        {
            XCrusher = FloatCrusher\&.defaulHalfFloatCrusher,
            YCrusher = FloatCrusher\&.defaulHalfFloatCrusher,
            ZCrusher = FloatCrusher\&.defaulHalfFloatCrusher,
            UCrusher = FloatCrusher\&.defaulHalfFloatCrusher,
        })
.fi
.PP
Definition at line \fB145\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "Transform Photon\&.Compression\&.ElementCrusher\&.defaultTransform"

.PP
Definition at line \fB200\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElementCrusher\fP Photon\&.Compression\&.ElementCrusher\&.defaultUncompressedElementCrusher\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= CheckAgainstStatics(new ElementCrusher(StaticTRSType\&.Generic)
        {
            XCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            YCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            ZCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            UCrusher = FloatCrusher\&.defaultUncompressedCrusher,
        })
.fi
.PP
Definition at line \fB105\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElementCrusher\fP Photon\&.Compression\&.ElementCrusher\&.defaultUncompressedPosCrusher\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= CheckAgainstStatics(new ElementCrusher(StaticTRSType\&.Position)
        {
            XCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            YCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            ZCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            UCrusher = FloatCrusher\&.defaultUncompressedCrusher,
        })
.fi
.PP
Definition at line \fB113\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBElementCrusher\fP Photon\&.Compression\&.ElementCrusher\&.defaultUncompressedSclCrusher\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= CheckAgainstStatics(new ElementCrusher(StaticTRSType\&.Position)
        {
            XCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            YCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            ZCrusher = FloatCrusher\&.defaultUncompressedCrusher,
            UCrusher = FloatCrusher\&.defaultUncompressedCrusher,
        })
.fi
.PP
Definition at line \fB121\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "bool Photon\&.Compression\&.ElementCrusher\&.enableLocalSelector = true"

.PP
Definition at line \fB472\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "bool Photon\&.Compression\&.ElementCrusher\&.enableTRSTypeSelector"

.PP
Definition at line \fB471\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "bool Photon\&.Compression\&.ElementCrusher\&.hideFieldName = false"

.PP
Definition at line \fB185\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "bool Photon\&.Compression\&.ElementCrusher\&.local"

.PP
Definition at line \fB312\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "ulong [] Photon\&.Compression\&.ElementCrusher\&.reusableArray64 = new ulong[2]\fC [static]\fP"

.PP
Definition at line \fB1508\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "Dictionary<int, \fBElementCrusher\fP> Photon\&.Compression\&.ElementCrusher\&.staticElementCrushers = new Dictionary<int, \fBElementCrusher\fP>()\fC [static]\fP"

.PP
Experiemental collection of non-changing crushers, to avoid redundant crushers\&. 
.PP
Definition at line \fB40\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBUniformAxes\fP Photon\&.Compression\&.ElementCrusher\&.uniformAxes"

.PP
Definition at line \fB201\fP of file \fBElementCrusher\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "Bounds?????? Photon\&.Compression\&.ElementCrusher\&.Bounds\fC [get]\fP, \fC [set]\fP"

.PP
Get will return a Bounds struct with the ranges of the x/y/z crushers\&. Set will set the x/y/z crusher to match those of the Bounds value\&. 
.PP
Definition at line \fB503\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "int Photon\&.Compression\&.ElementCrusher\&.BoundsGroupId\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB329\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "bool Photon\&.Compression\&.ElementCrusher\&.Enabled\fC [get]\fP, \fC [set]\fP"

.PP
Property that returns if this element crusher is effectively enabled (has any enabled float/quat crushers using bits > 0) 
.PP
Definition at line \fB635\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBQuatCrusher\fP Photon\&.Compression\&.ElementCrusher\&.qcrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB220\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "\fBQuatCrusher\fP Photon\&.Compression\&.ElementCrusher\&.QCrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB284\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "FloatCrusher Photon\&.Compression\&.ElementCrusher\&.this[int axis]\fC [get]\fP"

.PP
Indexer returns the component crushers\&. 
.PP
\fBParameters\fP
.RS 4
\fIaxis\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line \fB671\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "TRSType Photon\&.Compression\&.ElementCrusher\&.TRSType\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB188\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "FloatCrusher Photon\&.Compression\&.ElementCrusher\&.ucrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB218\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "FloatCrusher Photon\&.Compression\&.ElementCrusher\&.UCrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB269\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "bool Photon\&.Compression\&.ElementCrusher\&.UseWorldBounds\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB315\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "FloatCrusher Photon\&.Compression\&.ElementCrusher\&.xcrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB212\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "FloatCrusher Photon\&.Compression\&.ElementCrusher\&.XCrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB222\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "FloatCrusher Photon\&.Compression\&.ElementCrusher\&.ycrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB214\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "FloatCrusher Photon\&.Compression\&.ElementCrusher\&.YCrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB239\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "FloatCrusher Photon\&.Compression\&.ElementCrusher\&.zcrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB216\fP of file \fBElementCrusher\&.cs\fP\&.
.SS "FloatCrusher Photon\&.Compression\&.ElementCrusher\&.ZCrusher\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB254\fP of file \fBElementCrusher\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
