.TH "Photon.Compression.Matrix" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Compression.Matrix \- A class that holds TRS (Position / Rotation / Scale) values as well as a reference to the crusher that was used to restore it, and the RotationType enum to indicate if this is using Quaternion or Eulers for rotation\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMatrix\fP ()"
.br
.ti -1c
.RI "\fBMatrix\fP (\fBTransformCrusher\fP \fBcrusher\fP)"
.br
.ti -1c
.RI "\fBMatrix\fP (\fBTransformCrusher\fP \fBcrusher\fP, Vector3 \fBposition\fP, \fBElement\fP \fBrotation\fP, Vector3 \fBscale\fP)"
.br
.ti -1c
.RI "\fBMatrix\fP (\fBTransformCrusher\fP \fBcrusher\fP, Transform transform)"
.br
.ti -1c
.RI "void \fBSet\fP (\fBTransformCrusher\fP \fBcrusher\fP, Vector3 \fBposition\fP, \fBElement\fP \fBrotation\fP, Vector3 \fBscale\fP)"
.br
.ti -1c
.RI "void \fBSet\fP (\fBTransformCrusher\fP \fBcrusher\fP, Transform transform)"
.br
.ti -1c
.RI "void \fBCapture\fP (\fBTransformCrusher\fP \fBcrusher\fP, Transform transform)"
.br
.RI "Set \fBMatrix\fP values to the current values of the supplied Rigidbody\&. "
.ti -1c
.RI "void \fBSet\fP (Transform transform)"
.br
.ti -1c
.RI "void \fBCapture\fP (Transform transform)"
.br
.RI "Set \fBMatrix\fP values to the current values of the supplied Transform "
.ti -1c
.RI "void \fBSet\fP (\fBTransformCrusher\fP \fBcrusher\fP, Rigidbody rb)"
.br
.ti -1c
.RI "void \fBCapture\fP (\fBTransformCrusher\fP \fBcrusher\fP, Rigidbody rb)"
.br
.RI "Set \fBMatrix\fP values to the current values of the supplied Rigidbody\&. "
.ti -1c
.RI "void \fBSet\fP (Rigidbody rb)"
.br
.ti -1c
.RI "void \fBCapture\fP (Rigidbody rb)"
.br
.RI "Set \fBMatrix\fP values to the current values of the supplied Rigidbody "
.ti -1c
.RI "void \fBClear\fP ()"
.br
.ti -1c
.RI "void \fBCompress\fP (\fBCompressedMatrix\fP nonalloc)"
.br
.RI "Compress this matrix using the crusher it was previously created with\&. "
.ti -1c
.RI "void \fBApply\fP ()"
.br
.RI "Apply this TRS \fBMatrix\fP to the default transform, using the crusher that created this TRS \fBMatrix\fP\&. "
.ti -1c
.RI "void \fBApply\fP (Transform t)"
.br
.RI "Apply this TRS \fBMatrix\fP to the supplied transform, using the crusher that created this TRS \fBMatrix\fP\&. "
.ti -1c
.RI "void \fBApply\fP (Rigidbody rb)"
.br
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBMatrix\fP \fBLerp\fP (\fBMatrix\fP target, \fBMatrix\fP start, \fBMatrix\fP end, float t)"
.br
.RI "Lerp the position, rotation and scale of two \fBMatrix\fP objects, writing the results to the target \fBMatrix\fP\&. "
.ti -1c
.RI "static \fBMatrix\fP \fBLerpUnclamped\fP (\fBMatrix\fP target, \fBMatrix\fP start, \fBMatrix\fP end, float t)"
.br
.RI "Unclamped Lerp the position, rotation and scale of two \fBMatrix\fP objects, writing the results to the target \fBMatrix\fP\&. "
.ti -1c
.RI "static \fBMatrix\fP \fBCatmullRomLerpUnclamped\fP (\fBMatrix\fP target, \fBMatrix\fP pre, \fBMatrix\fP start, \fBMatrix\fP end, \fBMatrix\fP post, float t)"
.br
.ti -1c
.RI "static \fBMatrix\fP \fBCatmullRomLerpUnclamped\fP (\fBMatrix\fP target, \fBMatrix\fP pre, \fBMatrix\fP start, \fBMatrix\fP end, float t)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBTransformCrusher\fP \fBcrusher\fP"
.br
.ti -1c
.RI "Vector3 \fBposition\fP"
.br
.ti -1c
.RI "\fBElement\fP \fBrotation\fP"
.br
.ti -1c
.RI "Vector3 \fBscale\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBMatrix\fP \fBreusable\fP = new \fBMatrix\fP()"
.br
.in -1c
.SH "Detailed Description"
.PP 
A class that holds TRS (Position / Rotation / Scale) values as well as a reference to the crusher that was used to restore it, and the RotationType enum to indicate if this is using Quaternion or Eulers for rotation\&. 


.PP
Definition at line \fB16\fP of file \fBMatrix\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Photon\&.Compression\&.Matrix\&.Matrix ()"

.PP
Definition at line \fB27\fP of file \fBMatrix\&.cs\fP\&.
.SS "Photon\&.Compression\&.Matrix\&.Matrix (\fBTransformCrusher\fP crusher)"

.PP
Definition at line \fB31\fP of file \fBMatrix\&.cs\fP\&.
.SS "Photon\&.Compression\&.Matrix\&.Matrix (\fBTransformCrusher\fP crusher, Vector3 position, \fBElement\fP rotation, Vector3 scale)"

.PP
Definition at line \fB36\fP of file \fBMatrix\&.cs\fP\&.
.SS "Photon\&.Compression\&.Matrix\&.Matrix (\fBTransformCrusher\fP crusher, Transform transform)"

.PP
Definition at line \fB45\fP of file \fBMatrix\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Compression\&.Matrix\&.Apply ()"

.PP
Apply this TRS \fBMatrix\fP to the default transform, using the crusher that created this TRS \fBMatrix\fP\&. Unused Axes will be left unchanged\&. 
.PP
Definition at line \fB169\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Apply (Rigidbody rb)"

.PP
Definition at line \fB188\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Apply (Transform t)"

.PP
Apply this TRS \fBMatrix\fP to the supplied transform, using the crusher that created this TRS \fBMatrix\fP\&. Unused Axes will be left unchanged\&. 
.PP
Definition at line \fB177\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Capture (Rigidbody rb)"

.PP
Set \fBMatrix\fP values to the current values of the supplied Rigidbody 
.PP
Definition at line \fB137\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Capture (Transform transform)"

.PP
Set \fBMatrix\fP values to the current values of the supplied Transform 
.PP
Definition at line \fB97\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Capture (\fBTransformCrusher\fP crusher, Rigidbody rb)"

.PP
Set \fBMatrix\fP values to the current values of the supplied Rigidbody\&. Also set the crusher ref\&. 
.PP
Definition at line \fB117\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Capture (\fBTransformCrusher\fP crusher, Transform transform)"

.PP
Set \fBMatrix\fP values to the current values of the supplied Rigidbody\&. Also set the crusher ref\&. 
.PP
Definition at line \fB77\fP of file \fBMatrix\&.cs\fP\&.
.SS "static \fBMatrix\fP Photon\&.Compression\&.Matrix\&.CatmullRomLerpUnclamped (\fBMatrix\fP target, \fBMatrix\fP pre, \fBMatrix\fP start, \fBMatrix\fP end, float t)\fC [static]\fP"

.PP
Definition at line \fB323\fP of file \fBMatrix\&.cs\fP\&.
.SS "static \fBMatrix\fP Photon\&.Compression\&.Matrix\&.CatmullRomLerpUnclamped (\fBMatrix\fP target, \fBMatrix\fP pre, \fBMatrix\fP start, \fBMatrix\fP end, \fBMatrix\fP post, float t)\fC [static]\fP"

.PP
Definition at line \fB286\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Clear ()"

.PP
Definition at line \fB151\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Compress (\fBCompressedMatrix\fP nonalloc)"

.PP
Compress this matrix using the crusher it was previously created with\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.PP
Definition at line \fB160\fP of file \fBMatrix\&.cs\fP\&.
.SS "static \fBMatrix\fP Photon\&.Compression\&.Matrix\&.Lerp (\fBMatrix\fP target, \fBMatrix\fP start, \fBMatrix\fP end, float t)\fC [static]\fP"

.PP
Lerp the position, rotation and scale of two \fBMatrix\fP objects, writing the results to the target \fBMatrix\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fItarget\fP Result target\&.
.br
\fIstart\fP 
.br
\fIend\fP 
.br
\fIt\fP 
.RE
.PP
\fBReturns\fP
.RS 4
Returns a reference to the supplied target matrix\&.
.RE
.PP

.PP
Definition at line \fB206\fP of file \fBMatrix\&.cs\fP\&.
.SS "static \fBMatrix\fP Photon\&.Compression\&.Matrix\&.LerpUnclamped (\fBMatrix\fP target, \fBMatrix\fP start, \fBMatrix\fP end, float t)\fC [static]\fP"

.PP
Unclamped Lerp the position, rotation and scale of two \fBMatrix\fP objects, writing the results to the target \fBMatrix\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fItarget\fP Result target\&.
.br
\fIstart\fP 
.br
\fIend\fP 
.br
\fIt\fP 
.RE
.PP
\fBReturns\fP
.RS 4
Returns a reference to the supplied target matrix\&.
.RE
.PP

.PP
Definition at line \fB250\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Set (Rigidbody rb)"

.PP
Definition at line \fB132\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Set (Transform transform)"

.PP
Definition at line \fB92\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Set (\fBTransformCrusher\fP crusher, Rigidbody rb)"

.PP
Definition at line \fB112\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Set (\fBTransformCrusher\fP crusher, Transform transform)"

.PP
Definition at line \fB72\fP of file \fBMatrix\&.cs\fP\&.
.SS "void Photon\&.Compression\&.Matrix\&.Set (\fBTransformCrusher\fP crusher, Vector3 position, \fBElement\fP rotation, Vector3 scale)"

.PP
Definition at line \fB63\fP of file \fBMatrix\&.cs\fP\&.
.SS "override string Photon\&.Compression\&.Matrix\&.ToString ()"

.PP
Definition at line \fB360\fP of file \fBMatrix\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBTransformCrusher\fP Photon\&.Compression\&.Matrix\&.crusher"

.PP
Definition at line \fB18\fP of file \fBMatrix\&.cs\fP\&.
.SS "Vector3 Photon\&.Compression\&.Matrix\&.position"

.PP
Definition at line \fB20\fP of file \fBMatrix\&.cs\fP\&.
.SS "\fBMatrix\fP Photon\&.Compression\&.Matrix\&.reusable = new \fBMatrix\fP()\fC [static]\fP"

.PP
Definition at line \fB24\fP of file \fBMatrix\&.cs\fP\&.
.SS "\fBElement\fP Photon\&.Compression\&.Matrix\&.rotation"

.PP
Definition at line \fB21\fP of file \fBMatrix\&.cs\fP\&.
.SS "Vector3 Photon\&.Compression\&.Matrix\&.scale"

.PP
Definition at line \fB22\fP of file \fBMatrix\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
