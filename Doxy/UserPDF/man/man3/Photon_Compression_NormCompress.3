.TH "Photon.Compression.NormCompress" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Compression.NormCompress \- Very basic and lightweight compression of floats ranging from 0-1 in value\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBNormCompressCodec\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static uint \fBCompressNorm\fP (this float value, int bits)"
.br
.RI "Compress a Normalized float\&. "
.ti -1c
.RI "static uint \fBWriteNorm\fP (this byte[] buffer, float value, ref int bitposition, int bits)"
.br
.RI "Compress and Write a Normalized float\&. "
.ti -1c
.RI "static float \fBReadNorm\fP (this byte[] buffer, ref int bitposition, int bits)"
.br
.RI "Read out a serialized compressed float\&. "
.ti -1c
.RI "static uint \fBGetMaxValueForBits\fP (int bitcount)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBNormCompressCodec\fP[] \fBcodecForBit\fP = new \fBNormCompressCodec\fP[33]"
.br
.in -1c
.SH "Detailed Description"
.PP 
Very basic and lightweight compression of floats ranging from 0-1 in value\&. 

No clamping or other checks are employed, so be sure you are passing only values in the 0-1 range\&. 
.PP
Definition at line \fB17\fP of file \fBNormCompress\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "static uint Photon\&.Compression\&.NormCompress\&.CompressNorm (this float value, int bits)\fC [static]\fP"

.PP
Compress a Normalized float\&. For bit-based settings, you must supply floats in the range of 0 to 1\&. Values outside of that range will produce a looping modulus behaviour\&. 
.PP
\fBReturns\fP
.RS 4
Returns the compressed value as a uint, with an out bits value for convenience with bitpacking\&.
.RE
.PP

.PP
Definition at line \fB100\fP of file \fBNormCompress\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.NormCompress\&.GetMaxValueForBits (int bitcount)\fC [static]\fP"

.PP
Definition at line \fB315\fP of file \fBNormCompress\&.cs\fP\&.
.SS "static float Photon\&.Compression\&.NormCompress\&.ReadNorm (this byte[] buffer, ref int bitposition, int bits)\fC [static]\fP"

.PP
Read out a serialized compressed float\&. 
.PP
Definition at line \fB255\fP of file \fBNormCompress\&.cs\fP\&.
.SS "static uint Photon\&.Compression\&.NormCompress\&.WriteNorm (this byte[] buffer, float value, ref int bitposition, int bits)\fC [static]\fP"

.PP
Compress and Write a Normalized float\&. For bit-based settings, you must supply floats in the range of 0 to 1\&. Values outside of that range will produce a looping modulus behavior\&. 
.PP
\fBReturns\fP
.RS 4
Returns the compressed value as a UInt32\&.
.RE
.PP

.PP
Definition at line \fB167\fP of file \fBNormCompress\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBNormCompressCodec\fP [] Photon\&.Compression\&.NormCompress\&.codecForBit = new \fBNormCompressCodec\fP[33]\fC [static]\fP"

.PP
Definition at line \fB21\fP of file \fBNormCompress\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
