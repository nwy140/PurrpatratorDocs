.TH "Photon.Pun.Demo.PunBasics.PlayerManager" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.Demo.PunBasics.PlayerManager \- Player manager\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPhoton\&.Pun\&.MonoBehaviourPunCallbacks\fP, and \fBPhoton\&.Pun\&.IPunObservable\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBAwake\fP ()"
.br
.RI "MonoBehaviour method called on GameObject by Unity during early initialization phase\&. "
.ti -1c
.RI "void \fBStart\fP ()"
.br
.RI "MonoBehaviour method called on GameObject by Unity during initialization phase\&. "
.ti -1c
.RI "override void \fBOnDisable\fP ()"
.br
.ti -1c
.RI "void \fBUpdate\fP ()"
.br
.RI "MonoBehaviour method called on GameObject by Unity on every frame\&. "
.ti -1c
.RI "void \fBOnTriggerEnter\fP (Collider other)"
.br
.RI "MonoBehaviour method called when the Collider 'other' enters the trigger\&. "
.ti -1c
.RI "void \fBOnTriggerStay\fP (Collider other)"
.br
.RI "MonoBehaviour method called once per frame for every Collider 'other' that is touching the trigger\&. "
.ti -1c
.RI "void \fBOnPhotonSerializeView\fP (\fBPhotonStream\fP stream, \fBPhotonMessageInfo\fP info)"
.br
.RI "Called by PUN several times per second, so that your script can write and read synchronization data for the \fBPhotonView\fP\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "float \fBHealth\fP = 1f"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static GameObject \fBLocalPlayerInstance\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Player manager\&. 

Handles fire Input and Beams\&. 
.PP
Definition at line \fB22\fP of file \fBPlayerManager\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Pun\&.Demo\&.PunBasics\&.PlayerManager\&.Awake ()"

.PP
MonoBehaviour method called on GameObject by Unity during early initialization phase\&. 
.PP
Definition at line \fB54\fP of file \fBPlayerManager\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Demo\&.PunBasics\&.PlayerManager\&.OnDisable ()\fC [virtual]\fP"

.PP
Reimplemented from \fBPhoton\&.Pun\&.MonoBehaviourPunCallbacks\fP\&.
.PP
Definition at line \fB114\fP of file \fBPlayerManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Demo\&.PunBasics\&.PlayerManager\&.OnPhotonSerializeView (\fBPhotonStream\fP stream, \fBPhotonMessageInfo\fP info)"

.PP
Called by PUN several times per second, so that your script can write and read synchronization data for the \fBPhotonView\fP\&. This method will be called in scripts that are assigned as Observed component of a \fBPhotonView\fP\&.
.br
 \fBPhotonNetwork\&.SerializationRate\fP affects how often this method is called\&.
.br
 \fBPhotonNetwork\&.SendRate\fP affects how often packages are sent by this client\&.
.br
.PP
Implementing this method, you can customize which data a \fBPhotonView\fP regularly synchronizes\&. Your code defines what is being sent (content) and how your data is used by receiving clients\&.
.PP
Unlike other callbacks, \fIOnPhotonSerializeView only gets called when it is assigned to a \fBPhotonView\fP\fP as PhotonView\&.observed script\&.
.PP
To make use of this method, the \fBPhotonStream\fP is essential\&. It will be in 'writing' mode' on the
client that controls a PhotonView (PhotonStream\&.IsWriting == true) and in 'reading mode' on the
remote clients that just receive that the controlling client sends\&.

If you skip writing any value into the stream, PUN will skip the update\&. Used carefully, this can
conserve bandwidth and messages (which have a limit per room/second)\&.

Note that OnPhotonSerializeView is not called on remote clients when the sender does not send
any update\&. This can't be used as 'x-times per second \fBUpdate()\fP"\&. 
.PP
Implements \fBPhoton\&.Pun\&.IPunObservable\fP\&.
.PP
Definition at line \fB271\fP of file \fBPlayerManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Demo\&.PunBasics\&.PlayerManager\&.OnTriggerEnter (Collider other)"

.PP
MonoBehaviour method called when the Collider 'other' enters the trigger\&. Affect Health of the Player if the collider is a beam Note: when jumping and firing at the same, you'll find that the player's own beam intersects with itself One could move the collider further away to prevent this or check if the beam belongs to the player\&. 
.PP
Definition at line \fB156\fP of file \fBPlayerManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Demo\&.PunBasics\&.PlayerManager\&.OnTriggerStay (Collider other)"

.PP
MonoBehaviour method called once per frame for every Collider 'other' that is touching the trigger\&. We're going to affect health while the beams are interesting the player 
.PP
\fBParameters\fP
.RS 4
\fIother\fP Other\&.
.RE
.PP

.PP
Definition at line \fB179\fP of file \fBPlayerManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Demo\&.PunBasics\&.PlayerManager\&.Start ()"

.PP
MonoBehaviour method called on GameObject by Unity during initialization phase\&. 
.PP
Definition at line \fB80\fP of file \fBPlayerManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Demo\&.PunBasics\&.PlayerManager\&.Update ()"

.PP
MonoBehaviour method called on GameObject by Unity on every frame\&. Process Inputs if local player\&. Show and hide the beams Watch for end of game, when local player health is 0\&. 
.PP
Definition at line \fB131\fP of file \fBPlayerManager\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "float Photon\&.Pun\&.Demo\&.PunBasics\&.PlayerManager\&.Health = 1f"

.PP
Definition at line \fB27\fP of file \fBPlayerManager\&.cs\fP\&.
.SS "GameObject Photon\&.Pun\&.Demo\&.PunBasics\&.PlayerManager\&.LocalPlayerInstance\fC [static]\fP"

.PP
Definition at line \fB30\fP of file \fBPlayerManager\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
