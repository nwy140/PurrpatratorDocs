.TH "Photon.Pun.PhotonHandler" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.PhotonHandler \- Internal MonoBehaviour that allows \fBPhoton\fP to run an Update loop\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPhoton\&.Realtime\&.ConnectionHandler\fP, \fBPhoton\&.Realtime\&.IInRoomCallbacks\fP, and \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBOnCreatedRoom\fP ()"
.br
.RI "Called when this client created a room and entered it\&. "
.ti -1c
.RI "void \fBOnRoomPropertiesUpdate\fP (\fBHashtable\fP propertiesThatChanged)"
.br
.RI "Called when a room's custom properties changed\&. "
.ti -1c
.RI "void \fBOnPlayerPropertiesUpdate\fP (\fBPlayer\fP targetPlayer, \fBHashtable\fP changedProps)"
.br
.RI "Called when custom player-properties are changed\&. "
.ti -1c
.RI "void \fBOnMasterClientSwitched\fP (\fBPlayer\fP newMasterClient)"
.br
.RI "Called after switching to a new MasterClient when the current one leaves\&. "
.ti -1c
.RI "void \fBOnFriendListUpdate\fP (System\&.Collections\&.Generic\&.List< \fBFriendInfo\fP > friendList)"
.br
.ti -1c
.RI "void \fBOnCreateRoomFailed\fP (short returnCode, string message)"
.br
.RI "Called when the server couldn't create a room (OpCreateRoom failed)\&. "
.ti -1c
.RI "void \fBOnJoinRoomFailed\fP (short returnCode, string message)"
.br
.RI "Called when a previous OpJoinRoom call failed on the server\&. "
.ti -1c
.RI "void \fBOnJoinRandomFailed\fP (short returnCode, string message)"
.br
.RI "Called when a previous OpJoinRandom call failed on the server\&. "
.ti -1c
.RI "void \fBOnJoinedRoom\fP ()"
.br
.RI "Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined\&. "
.ti -1c
.RI "void \fBOnLeftRoom\fP ()"
.br
.RI "Called when the local user/client left a room, so the game's logic can clean up it's internal state\&. "
.ti -1c
.RI "void \fBOnPlayerEnteredRoom\fP (\fBPlayer\fP newPlayer)"
.br
.RI "Called when a remote player entered the room\&. "
.ti -1c
.RI "void \fBOnPlayerLeftRoom\fP (\fBPlayer\fP otherPlayer)"
.br
.RI "Called when a remote player left the room or became inactive\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static int \fBMaxDatagrams\fP = 3"
.br
.RI "Limits the number of datagrams that are created in each LateUpdate\&. "
.ti -1c
.RI "static bool \fBSendAsap\fP"
.br
.RI "Signals that outgoing messages should be sent in the next LateUpdate call\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBAwake\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnEnable\fP ()"
.br
.ti -1c
.RI "void \fBStart\fP ()"
.br
.ti -1c
.RI "override void \fBOnDisable\fP ()"
.br
.ti -1c
.RI "void \fBFixedUpdate\fP ()"
.br
.RI "Called in intervals by UnityEngine\&. Affected by Time\&.timeScale\&."
.ti -1c
.RI "void \fBLateUpdate\fP ()"
.br
.RI "Called in intervals by UnityEngine, after running the normal game code and physics\&."
.ti -1c
.RI "void \fBDispatch\fP ()"
.br
.RI "Dispatches incoming network messages for PUN\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "List< int > \fBreusableIntList\fP = new List<int>()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Internal MonoBehaviour that allows \fBPhoton\fP to run an Update loop\&. 


.PP
Definition at line \fB25\fP of file \fBPhotonHandler\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "override void Photon\&.Pun\&.PhotonHandler\&.Awake ()\fC [protected]\fP"

.PP
Definition at line \fB72\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.Dispatch ()\fC [protected]\fP"

.PP
Dispatches incoming network messages for PUN\&. Called in FixedUpdate or LateUpdate\&.
.PP
It may make sense to dispatch incoming messages, even if the timeScale is near 0\&. That can be configured with \fBPhotonNetwork\&.MinimalTimeScaleToDispatchInFixedUpdate\fP\&.
.PP
Without dispatching messages, PUN won't change state and does not handle updates\&. 
.PP
Definition at line \fB199\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.FixedUpdate ()\fC [protected]\fP"

.PP
Called in intervals by UnityEngine\&. Affected by Time\&.timeScale\&.
.PP
Definition at line \fB136\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.LateUpdate ()\fC [protected]\fP"

.PP
Called in intervals by UnityEngine, after running the normal game code and physics\&.
.PP
Definition at line \fB151\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnCreatedRoom ()"

.PP
Called when this client created a room and entered it\&. \fBOnJoinedRoom()\fP will be called as well\&. 
.PP
This callback is only called on the client which created a room (see OpCreateRoom)\&.
.PP
As any client might close (or drop connection) anytime, there is a chance that the creator of a room does not execute OnCreatedRoom\&.
.PP
If you need specific room properties or a 'start signal', implement \fBOnMasterClientSwitched()\fP and make each new MasterClient check the room's state\&. 
.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB243\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnCreateRoomFailed (short returnCode, string message)"

.PP
Called when the server couldn't create a room (OpCreateRoom failed)\&. Creating a room may fail for various reasons\&. Most often, the room already exists (roomname in use) or the RoomOptions clash and it's impossible to create the room\&.
.PP
When creating a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback\&. This way, the client is ready to find/create a room at the moment of the callback\&. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected\&. Treat callbacks of OnConnected as pure information that the client could connect\&. 
.PP
\fBParameters\fP
.RS 4
\fIreturnCode\fP Operation ReturnCode from the server\&.
.br
\fImessage\fP Debug message for the error\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB271\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.PhotonHandler\&.OnDisable ()\fC [protected]\fP"

.PP
Definition at line \fB128\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "virtual void Photon\&.Pun\&.PhotonHandler\&.OnEnable ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB85\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnFriendListUpdate (System\&.Collections\&.Generic\&.List< \fBFriendInfo\fP > friendList)"

.PP
Definition at line \fB269\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnJoinedRoom ()"

.PP
Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined\&. When this is called, you can access the existing players in \fBRoom\&.Players\fP, their custom properties and \fBRoom\&.CustomProperties\fP\&.
.PP
In this callback, you could create player objects\&. For example in Unity, instantiate a prefab for the player\&.
.PP
If you want a match to be started 'actively', enable the user to signal 'ready' (using OpRaiseEvent or a Custom Property)\&. 
.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB279\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnJoinRandomFailed (short returnCode, string message)"

.PP
Called when a previous OpJoinRandom call failed on the server\&. The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room)\&.
.PP
This operation is only ever sent to the Master Server\&. Once a room is found by the Master Server, the client will head off to the designated Game Server and use the operation Join on the Game Server\&.
.PP
When using multiple lobbies (via OpJoinLobby or a TypedLobby parameter), another lobby might have more/fitting rooms\&.
.br
 
.PP
\fBParameters\fP
.RS 4
\fIreturnCode\fP Operation ReturnCode from the server\&.
.br
\fImessage\fP Debug message for the error\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB275\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnJoinRoomFailed (short returnCode, string message)"

.PP
Called when a previous OpJoinRoom call failed on the server\&. Joining a room may fail for various reasons\&. Most often, the room is full or does not exist anymore (due to someone else being faster or closing the room)\&.
.PP
When joining a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback\&. This way, the client is ready to find/create a room at the moment of the callback\&. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected\&. Treat callbacks of OnConnected as pure information that the client could connect\&. 
.PP
\fBParameters\fP
.RS 4
\fIreturnCode\fP Operation ReturnCode from the server\&.
.br
\fImessage\fP Debug message for the error\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB273\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnLeftRoom ()"

.PP
Called when the local user/client left a room, so the game's logic can clean up it's internal state\&. When leaving a room, the LoadBalancingClient will disconnect the Game Server and connect to the Master Server\&. This wraps up multiple internal actions\&.
.PP
Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms\&. 
.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB317\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnMasterClientSwitched (\fBPlayer\fP newMasterClient)"

.PP
Called after switching to a new MasterClient when the current one leaves\&. This is not called when this client enters a room\&. The former MasterClient is still in the player list when this method get called\&. 
.PP
Implements \fBPhoton\&.Realtime\&.IInRoomCallbacks\fP\&.
.PP
Definition at line \fB256\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnPlayerEnteredRoom (\fBPlayer\fP newPlayer)"

.PP
Called when a remote player entered the room\&. This Player is already added to the playerlist\&. 
.PP
If your game starts with a certain number of players, this callback can be useful to check the Room\&.playerCount and find out if you can start\&. 
.PP
Implements \fBPhoton\&.Realtime\&.IInRoomCallbacks\fP\&.
.PP
Definition at line \fB324\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnPlayerLeftRoom (\fBPlayer\fP otherPlayer)"

.PP
Called when a remote player left the room or became inactive\&. Check otherPlayer\&.IsInactive\&. 
.PP
If another player leaves the room or if the server detects a lost connection, this callback will be used to notify your game logic\&.
.PP
Depending on the room's setup, players may become inactive, which means they may return and retake their spot in the room\&. In such cases, the Player stays in the \fBRoom\&.Players\fP dictionary\&.
.PP
If the player is not just inactive, it gets removed from the \fBRoom\&.Players\fP dictionary, before the callback is called\&. 
.PP
Implements \fBPhoton\&.Realtime\&.IInRoomCallbacks\fP\&.
.PP
Definition at line \fB361\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnPlayerPropertiesUpdate (\fBPlayer\fP targetPlayer, \fBHashtable\fP changedProps)"

.PP
Called when custom player-properties are changed\&. Player and the changed properties are passed as object[]\&. 
.PP
Changing properties must be done by \fBPlayer\&.SetCustomProperties\fP, which causes this callback locally, too\&. 
.PP
\fBParameters\fP
.RS 4
\fItargetPlayer\fP Contains Player that changed\&.
.br
\fIchangedProps\fP Contains the properties that changed\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IInRoomCallbacks\fP\&.
.PP
Definition at line \fB254\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.OnRoomPropertiesUpdate (\fBHashtable\fP propertiesThatChanged)"

.PP
Called when a room's custom properties changed\&. The propertiesThatChanged contains all that was set via \fBRoom\&.SetCustomProperties\fP\&. 
.PP
Since v1\&.25 this method has one parameter: Hashtable propertiesThatChanged\&.
.br
 Changing properties must be done by \fBRoom\&.SetCustomProperties\fP, which causes this callback locally, too\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertiesThatChanged\fP 
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IInRoomCallbacks\fP\&.
.PP
Definition at line \fB248\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonHandler\&.Start ()\fC [protected]\fP"

.PP
Definition at line \fB120\fP of file \fBPhotonHandler\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "int Photon\&.Pun\&.PhotonHandler\&.MaxDatagrams = 3\fC [static]\fP"

.PP
Limits the number of datagrams that are created in each LateUpdate\&. Helps spreading out sending of messages minimally\&.
.PP
Definition at line \fB51\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "List<int> Photon\&.Pun\&.PhotonHandler\&.reusableIntList = new List<int>()\fC [protected]\fP"

.PP
Definition at line \fB277\fP of file \fBPhotonHandler\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.PhotonHandler\&.SendAsap\fC [static]\fP"

.PP
Signals that outgoing messages should be sent in the next LateUpdate call\&. Up to MaxDatagrams are created to send queued messages\&.
.PP
Definition at line \fB55\fP of file \fBPhotonHandler\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
