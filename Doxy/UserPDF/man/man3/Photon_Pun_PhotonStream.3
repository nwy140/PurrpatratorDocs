.TH "Photon.Pun.PhotonStream" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.PhotonStream \- This container is used in OnPhotonSerializeView() to either provide incoming data of a \fBPhotonView\fP or for you to provide it\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPhotonStream\fP (bool write, object[] incomingData)"
.br
.RI "Creates a stream and initializes it\&. "
.ti -1c
.RI "void \fBSetReadStream\fP (object[] incomingData, int pos=0)"
.br
.ti -1c
.RI "object \fBReceiveNext\fP ()"
.br
.RI "Read next piece of data from the stream when IsReading is true\&."
.ti -1c
.RI "object \fBPeekNext\fP ()"
.br
.RI "Read next piece of data from the stream without advancing the 'current' item\&."
.ti -1c
.RI "void \fBSendNext\fP (object obj)"
.br
.RI "Add another piece of data to send it when IsWriting is true\&."
.ti -1c
.RI "bool \fBCopyToListAndClear\fP (List< object > target)"
.br
.ti -1c
.RI "object[] \fBToArray\fP ()"
.br
.RI "Turns the stream into a new object[]\&."
.ti -1c
.RI "void \fBSerialize\fP (ref bool myBool)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.ti -1c
.RI "void \fBSerialize\fP (ref int myInt)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.ti -1c
.RI "void \fBSerialize\fP (ref string value)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.ti -1c
.RI "void \fBSerialize\fP (ref char value)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.ti -1c
.RI "void \fBSerialize\fP (ref short value)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.ti -1c
.RI "void \fBSerialize\fP (ref float obj)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.ti -1c
.RI "void \fBSerialize\fP (ref \fBPlayer\fP obj)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.ti -1c
.RI "void \fBSerialize\fP (ref Vector3 obj)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.ti -1c
.RI "void \fBSerialize\fP (ref Vector2 obj)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.ti -1c
.RI "void \fBSerialize\fP (ref Quaternion obj)"
.br
.RI "Will read or write the value, depending on the stream's IsWriting value\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "bool \fBIsWriting\fP\fC [get]\fP"
.br
.RI "If true, this client should add data to the stream to send it\&."
.ti -1c
.RI "bool \fBIsReading\fP\fC [get]\fP"
.br
.RI "If true, this client should read data send by another client\&."
.ti -1c
.RI "int? \fBCount\fP\fC [get]\fP"
.br
.RI "Count of items in the stream\&."
.in -1c
.SH "Detailed Description"
.PP 
This container is used in OnPhotonSerializeView() to either provide incoming data of a \fBPhotonView\fP or for you to provide it\&. 

The IsWriting property will be true if this client is the 'owner' of the \fBPhotonView\fP (and thus the GameObject)\&. Add data to the stream and it's sent via the server to the other players in a room\&. On the receiving side, IsWriting is false and the data should be read\&.
.PP
Send as few data as possible to keep connection quality up\&. An empty \fBPhotonStream\fP will not be sent\&.
.PP
Use either \fBSerialize()\fP for reading and writing or \fBSendNext()\fP and \fBReceiveNext()\fP\&. The latter two are just explicit read and write methods but do about the same work as \fBSerialize()\fP\&. It's a matter of preference which methods you use\&. 
.PP
Definition at line \fB508\fP of file \fBPunClasses\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Photon\&.Pun\&.PhotonStream\&.PhotonStream (bool write, object[] incomingData)"

.PP
Creates a stream and initializes it\&. Used by PUN internally\&. 
.PP
Definition at line \fB532\fP of file \fBPunClasses\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "bool Photon\&.Pun\&.PhotonStream\&.CopyToListAndClear (List< object > target)"

.PP
Definition at line \fB613\fP of file \fBPunClasses\&.cs\fP\&.
.SS "object Photon\&.Pun\&.PhotonStream\&.PeekNext ()"

.PP
Read next piece of data from the stream without advancing the 'current' item\&.
.PP
Definition at line \fB587\fP of file \fBPunClasses\&.cs\fP\&.
.SS "object Photon\&.Pun\&.PhotonStream\&.ReceiveNext ()"

.PP
Read next piece of data from the stream when IsReading is true\&.
.PP
Definition at line \fB573\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.SendNext (object obj)"

.PP
Add another piece of data to send it when IsWriting is true\&.
.PP
Definition at line \fB601\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref bool myBool)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB632\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref char value)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB689\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref float obj)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB727\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref int myInt)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB651\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref \fBPlayer\fP obj)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB746\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref Quaternion obj)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB803\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref short value)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB708\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref string value)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB670\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref Vector2 obj)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB784\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.Serialize (ref Vector3 obj)"

.PP
Will read or write the value, depending on the stream's IsWriting value\&. 
.PP
Definition at line \fB765\fP of file \fBPunClasses\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStream\&.SetReadStream (object[] incomingData, int pos = \fC0\fP)"

.PP
Definition at line \fB542\fP of file \fBPunClasses\&.cs\fP\&.
.SS "object[] Photon\&.Pun\&.PhotonStream\&.ToArray ()"

.PP
Turns the stream into a new object[]\&.
.PP
Definition at line \fB624\fP of file \fBPunClasses\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "int? Photon\&.Pun\&.PhotonStream\&.Count\fC [get]\fP"

.PP
Count of items in the stream\&.
.PP
Definition at line \fB524\fP of file \fBPunClasses\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.PhotonStream\&.IsReading\fC [get]\fP"

.PP
If true, this client should read data send by another client\&.
.PP
Definition at line \fB518\fP of file \fBPunClasses\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.PhotonStream\&.IsWriting\fC [get]\fP"

.PP
If true, this client should add data to the stream to send it\&.
.PP
Definition at line \fB515\fP of file \fBPunClasses\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
