.TH "Photon.Pun.PhotonStreamQueue" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.PhotonStreamQueue \- The \fBPhotonStreamQueue\fP helps you poll object states at higher frequencies than what \fBPhotonNetwork\&.SendRate\fP dictates and then sends all those states at once when \fBSerialize()\fP is called\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPhotonStreamQueue\fP (int sampleRate)"
.br
.RI "Initializes a new instance of the \fBPhotonStreamQueue\fP class\&. "
.ti -1c
.RI "void \fBReset\fP ()"
.br
.RI "Resets the \fBPhotonStreamQueue\fP\&. "
.ti -1c
.RI "void \fBSendNext\fP (object obj)"
.br
.RI "Adds the next object to the queue\&. "
.ti -1c
.RI "bool \fBHasQueuedObjects\fP ()"
.br
.RI "Determines whether the queue has stored any objects "
.ti -1c
.RI "object \fBReceiveNext\fP ()"
.br
.RI "Receives the next object from the queue\&. "
.ti -1c
.RI "void \fBSerialize\fP (\fBPhotonStream\fP stream)"
.br
.RI "Serializes the specified stream\&. "
.ti -1c
.RI "void \fBDeserialize\fP (\fBPhotonStream\fP stream)"
.br
.RI "Deserializes the specified stream\&. "
.in -1c
.SH "Detailed Description"
.PP 
The \fBPhotonStreamQueue\fP helps you poll object states at higher frequencies than what \fBPhotonNetwork\&.SendRate\fP dictates and then sends all those states at once when \fBSerialize()\fP is called\&. 

On the receiving end you can call \fBDeserialize()\fP and then the stream will roll out the received object states in the same order and timeStep they were recorded in\&. 
.PP
Definition at line \fB24\fP of file \fBPhotonStreamQueue\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Photon\&.Pun\&.PhotonStreamQueue\&.PhotonStreamQueue (int sampleRate)"

.PP
Initializes a new instance of the \fBPhotonStreamQueue\fP class\&. 
.PP
\fBParameters\fP
.RS 4
\fIsampleRate\fP How many times per second should the object states be sampled
.RE
.PP

.PP
Definition at line \fB42\fP of file \fBPhotonStreamQueue\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Pun\&.PhotonStreamQueue\&.Deserialize (\fBPhotonStream\fP stream)"

.PP
Deserializes the specified stream\&. Call this in your OnPhotonSerializeView method to receive the whole recorded stream\&. 
.PP
\fBParameters\fP
.RS 4
\fIstream\fP The \fBPhotonStream\fP you receive as a parameter in OnPhotonSerializeView
.RE
.PP

.PP
Definition at line \fB173\fP of file \fBPhotonStreamQueue\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.PhotonStreamQueue\&.HasQueuedObjects ()"

.PP
Determines whether the queue has stored any objects 
.PP
Definition at line \fB118\fP of file \fBPhotonStreamQueue\&.cs\fP\&.
.SS "object Photon\&.Pun\&.PhotonStreamQueue\&.ReceiveNext ()"

.PP
Receives the next object from the queue\&. This works just like \fBPhotonStream\&.ReceiveNext\fP 
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line \fB127\fP of file \fBPhotonStreamQueue\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStreamQueue\&.Reset ()"

.PP
Resets the \fBPhotonStreamQueue\fP\&. You need to do this whenever the amount of objects you are observing changes 
.PP
Definition at line \fB83\fP of file \fBPhotonStreamQueue\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStreamQueue\&.SendNext (object obj)"

.PP
Adds the next object to the queue\&. This works just like \fBPhotonStream\&.SendNext\fP 
.PP
\fBParameters\fP
.RS 4
\fIobj\fP The object you want to add to the queue
.RE
.PP

.PP
Definition at line \fB98\fP of file \fBPhotonStreamQueue\&.cs\fP\&.
.SS "void Photon\&.Pun\&.PhotonStreamQueue\&.Serialize (\fBPhotonStream\fP stream)"

.PP
Serializes the specified stream\&. Call this in your OnPhotonSerializeView method to send the whole recorded stream\&. 
.PP
\fBParameters\fP
.RS 4
\fIstream\fP The \fBPhotonStream\fP you receive as a parameter in OnPhotonSerializeView
.RE
.PP

.PP
Definition at line \fB146\fP of file \fBPhotonStreamQueue\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
