.TH "Photon.Pun.Simple.Internal.TickManager" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.Simple.Internal.TickManager
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPhoton\&.Realtime\&.IInRoomCallbacks\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBOnPlayerEnteredRoom\fP (\fBRealtime\&.Player\fP newPlayer)"
.br
.ti -1c
.RI "void \fBOnPlayerLeftRoom\fP (\fBRealtime\&.Player\fP otherPlayer)"
.br
.ti -1c
.RI "void \fBOnRoomPropertiesUpdate\fP (\fBHashtable\fP propertiesThatChanged)"
.br
.RI "Called when a room's custom properties changed\&. "
.ti -1c
.RI "void \fBOnPlayerPropertiesUpdate\fP (\fBRealtime\&.Player\fP targetPlayer, \fBHashtable\fP changedProps)"
.br
.ti -1c
.RI "void \fBOnMasterClientSwitched\fP (\fBRealtime\&.Player\fP newMasterClient)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBBootstrap\fP ()"
.br
.ti -1c
.RI "static void \fBPreSnapshot\fP (int currentFrameId)"
.br
.RI "Run this prior to OnSnapshot, to establish if the number of snapshots for connection objects needs to be a value other than 1\&. "
.ti -1c
.RI "static void \fBPostSnapshot\fP (int currentFrameId)"
.br
.ti -1c
.RI "static \fBConnectionTickOffsets\fP \fBLogIncomingFrame\fP (int connId, int originFrameId, out \fBFrameArrival\fP arrival)"
.br
.RI "Notify tick manager of an incoming frame, so it can register/modify offsets for that connection\&. "
.ti -1c
.RI "static void \fBRemoveConnection\fP (int connId)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static readonly Dictionary< int, \fBConnectionTickOffsets\fP > \fBperConnOffsets\fP = new Dictionary<int, \fBConnectionTickOffsets\fP>()"
.br
.ti -1c
.RI "static readonly List< int > \fBconnections\fP = new List<int>()"
.br
.ti -1c
.RI "static \fBTickManager\fP \fBsingle\fP"
.br
.RI "Use the 'Single' property instead of this single field if you are uncertain if the instance has been set yet\&. "
.ti -1c
.RI "static bool \fBneedToSendInitialForNewConn\fP"
.br
.RI "Flag indicates that the next update should be flagged as needing to be reliable\&. "
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB15\fP of file \fBTickManager\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "static void Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.Bootstrap ()\fC [static]\fP"

.PP
Definition at line \fB33\fP of file \fBTickManager\&.cs\fP\&.
.SS "static \fBConnectionTickOffsets\fP Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.LogIncomingFrame (int connId, int originFrameId, out \fBFrameArrival\fP arrival)\fC [static]\fP"

.PP
Notify tick manager of an incoming frame, so it can register/modify offsets for that connection\&. Returns FrameId translated into localFrameId\&. Flag frame as valid if it is still in the future
.PP
Definition at line \fB91\fP of file \fBTickManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.OnMasterClientSwitched (\fBRealtime\&.Player\fP newMasterClient)"

.PP
Definition at line \fB54\fP of file \fBTickManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.OnPlayerEnteredRoom (\fBRealtime\&.Player\fP newPlayer)"

.PP
Definition at line \fB42\fP of file \fBTickManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.OnPlayerLeftRoom (\fBRealtime\&.Player\fP otherPlayer)"

.PP
Definition at line \fB47\fP of file \fBTickManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.OnPlayerPropertiesUpdate (\fBRealtime\&.Player\fP targetPlayer, \fBHashtable\fP changedProps)"

.PP
Definition at line \fB53\fP of file \fBTickManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.OnRoomPropertiesUpdate (\fBHashtable\fP propertiesThatChanged)"

.PP
Called when a room's custom properties changed\&. The propertiesThatChanged contains all that was set via \fBRoom\&.SetCustomProperties\fP\&. 
.PP
Since v1\&.25 this method has one parameter: Hashtable propertiesThatChanged\&.
.br
 Changing properties must be done by \fBRoom\&.SetCustomProperties\fP, which causes this callback locally, too\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertiesThatChanged\fP 
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IInRoomCallbacks\fP\&.
.PP
Definition at line \fB52\fP of file \fBTickManager\&.cs\fP\&.
.SS "static void Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.PostSnapshot (int currentFrameId)\fC [static]\fP"

.PP
Definition at line \fB79\fP of file \fBTickManager\&.cs\fP\&.
.SS "static void Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.PreSnapshot (int currentFrameId)\fC [static]\fP"

.PP
Run this prior to OnSnapshot, to establish if the number of snapshots for connection objects needs to be a value other than 1\&. 
.PP
Definition at line \fB61\fP of file \fBTickManager\&.cs\fP\&.
.SS "static void Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.RemoveConnection (int connId)\fC [static]\fP"

.PP
Definition at line \fB246\fP of file \fBTickManager\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "readonly List<int> Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.connections = new List<int>()\fC [static]\fP"

.PP
Definition at line \fB18\fP of file \fBTickManager\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.needToSendInitialForNewConn\fC [static]\fP"

.PP
Flag indicates that the next update should be flagged as needing to be reliable\&. 
.PP
Definition at line \fB29\fP of file \fBTickManager\&.cs\fP\&.
.SS "readonly Dictionary<int, \fBConnectionTickOffsets\fP> Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.perConnOffsets = new Dictionary<int, \fBConnectionTickOffsets\fP>()\fC [static]\fP"

.PP
Definition at line \fB17\fP of file \fBTickManager\&.cs\fP\&.
.SS "\fBTickManager\fP Photon\&.Pun\&.Simple\&.Internal\&.TickManager\&.single\fC [static]\fP"

.PP
Use the 'Single' property instead of this single field if you are uncertain if the instance has been set yet\&. This field is exposed to allow a slightly faster alternative to the Single property, when you can be certain the singleton has been set\&. 
.PP
Definition at line \fB24\fP of file \fBTickManager\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
