.TH "Photon.Pun.Simple.NetObject" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.Simple.NetObject
.SH SYNOPSIS
.br
.PP
.PP
Inherits MonoBehaviour, \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP, \fBPhoton\&.Pun\&.IOnPhotonViewPreNetDestroy\fP, \fBPhoton\&.Pun\&.IOnPhotonViewOwnerChange\fP, \fBPhoton\&.Pun\&.IOnPhotonViewControllerChange\fP, \fBPhoton\&.Pun\&.Simple\&.IOnPreUpdate\fP, \fBPhoton\&.Pun\&.Simple\&.IOnPreSimulate\fP, \fBPhoton\&.Pun\&.Simple\&.IOnPostSimulate\fP, \fBPhoton\&.Pun\&.Simple\&.IOnQuantize\fP, \fBPhoton\&.Pun\&.Simple\&.IOnIncrementFrame\fP, and \fBPhoton\&.Pun\&.Simple\&.IOnPreQuit\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBOnSyncObjReadyChange\fP (\fBSyncObject\fP sobj, \fBReadyStateEnum\fP readyState)"
.br
.ti -1c
.RI "void \fBOnPackObjReadyChange\fP (Component pobj, \fBReadyStateEnum\fP readyState)"
.br
.ti -1c
.RI "void \fBOnPreQuit\fP ()"
.br
.ti -1c
.RI "void \fBOnPreNetDestroy\fP (\fBPhotonView\fP rootView)"
.br
.RI "This method is called before Destroy() is initiated for a networked object\&. "
.ti -1c
.RI "virtual void \fBPrepareForDestroy\fP ()"
.br
.RI "TODO: likely not needed if moving UnmountAll to OnDisable\&. "
.ti -1c
.RI "void \fBOnOwnerChange\fP (\fBRealtime\&.Player\fP newOwner, \fBRealtime\&.Player\fP previousOwner)"
.br
.ti -1c
.RI "void \fBOnControllerChange\fP (\fBRealtime\&.Player\fP newController, \fBRealtime\&.Player\fP previousController)"
.br
.ti -1c
.RI "void \fBOnFriendListUpdate\fP (List< \fBFriendInfo\fP > friendList)"
.br
.RI "Called when the server sent the response to a FindFriends request\&. "
.ti -1c
.RI "void \fBOnCreatedRoom\fP ()"
.br
.RI "Called when this client created a room and entered it\&. "
.ti -1c
.RI "void \fBOnCreateRoomFailed\fP (short returnCode, string message)"
.br
.RI "Called when the server couldn't create a room (OpCreateRoom failed)\&. "
.ti -1c
.RI "void \fBOnJoinedRoom\fP ()"
.br
.RI "Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined\&. "
.ti -1c
.RI "void \fBOnJoinRoomFailed\fP (short returnCode, string message)"
.br
.RI "Called when a previous OpJoinRoom call failed on the server\&. "
.ti -1c
.RI "void \fBOnJoinRandomFailed\fP (short returnCode, string message)"
.br
.RI "Called when a previous OpJoinRandom call failed on the server\&. "
.ti -1c
.RI "void \fBOnLeftRoom\fP ()"
.br
.RI "Called when the local user/client left a room, so the game's logic can clean up it's internal state\&. "
.ti -1c
.RI "void \fBOnChangeAuthority\fP (bool isMine, bool controllerHasChanged)"
.br
.ti -1c
.RI "void \fBRemoveInterfaces\fP (Component comp)"
.br
.RI "Remove a component from all NetObj callback lists\&. "
.ti -1c
.RI "void \fBOnPreUpdate\fP ()"
.br
.ti -1c
.RI "\fBSerializationFlags\fP \fBGenerateMessage\fP (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"
.br
.RI "Generate a state tick\&. "
.ti -1c
.RI "\fBSerializationFlags\fP \fBOnSerialize\fP (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"
.br
.RI "Serialize all SyncObjs on this NetObj "
.ti -1c
.RI "void \fBOnDeserialize\fP (int connId, int originFrameId, byte[] buffer, ref int bitposition, bool hasData, \fBFrameArrival\fP arrival)"
.br
.ti -1c
.RI "void \fBOnPreSimulate\fP (int frameId, int _currSubFrameId)"
.br
.ti -1c
.RI "void \fBOnPostSimulate\fP (int frameId, int subFrameId, bool isNetTick)"
.br
.ti -1c
.RI "\fBSerializationFlags\fP \fBOnNetSerialize\fP (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"
.br
.ti -1c
.RI "void \fBOnCaptureCurrentState\fP (int frameId)"
.br
.ti -1c
.RI "void \fBOnQuantize\fP (int frameId)"
.br
.ti -1c
.RI "void \fBOnIncrementFrame\fP (int newFrameId, int newSubFrameId, int previousFrameId, int prevSubFrameId)"
.br
.ti -1c
.RI "bool \fBOnSnapshot\fP (int localTargFrameId)"
.br
.ti -1c
.RI "bool \fBOnInterpolate\fP (int localSnapFrameId, int localTargFrameId, float t)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "Dictionary< Component, int > \fBcolliderLookup\fP = new Dictionary<Component, int>()"
.br
.RI "TODO: Pool these? "
.ti -1c
.RI "List< Component > \fBindexedColliders\fP = new List<Component>()"
.br
.ti -1c
.RI "int \fBbitsForColliderIndex\fP"
.br
.ti -1c
.RI "\fBFastBitMask128\fP \fBframeValidMask\fP"
.br
.ti -1c
.RI "int[] \fBoriginHistory\fP"
.br
.RI "Record of the connection that produced the each deserialized frame\&. "
.ti -1c
.RI "\fBFastBitMask128\fP \fBsyncObjReadyMask\fP"
.br
.ti -1c
.RI "\fBFastBitMask128\fP \fBpackObjReadyMask\fP"
.br
.ti -1c
.RI "\fBPhotonView\fP \fBphotonView\fP"
.br
.ti -1c
.RI "readonly List< \fBIOnPreUpdate\fP > \fBonPreUpdateCallbacks\fP = new List<\fBIOnPreUpdate\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnAuthorityChanged\fP > \fBonAuthorityChangedCallbacks\fP = new List<\fBIOnAuthorityChanged\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnNetSerialize\fP > \fBonNetSerializeCallbacks\fP = new List<\fBIOnNetSerialize\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnCriticallyLateFrame\fP > \fBonCriticallyLateFrameCallbacks\fP = new List<\fBIOnCriticallyLateFrame\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnIncrementFrame\fP > \fBonIncrementFramesCallbacks\fP = new List<\fBIOnIncrementFrame\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnSnapshot\fP > \fBonSnapshotCallbacks\fP = new List<\fBIOnSnapshot\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnQuantize\fP > \fBonQuantizeCallbacks\fP = new List<\fBIOnQuantize\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnInterpolate\fP > \fBonInterpolateCallbacks\fP = new List<\fBIOnInterpolate\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnCaptureState\fP > \fBonCaptureCurrentStateCallbacks\fP = new List<\fBIOnCaptureState\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnPreSimulate\fP > \fBonPreSimulateCallbacks\fP = new List<\fBIOnPreSimulate\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnPostSimulate\fP > \fBonPostSimulateCallbacks\fP = new List<\fBIOnPostSimulate\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnPreQuit\fP > \fBonPreQuitCallbacks\fP = new List<\fBIOnPreQuit\fP>()"
.br
.ti -1c
.RI "readonly List< \fBIOnPreNetDestroy\fP > \fBonPreNetDestroyCallbacks\fP = new List<\fBIOnPreNetDestroy\fP>()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static NonAllocDictionary< int, \fBNetObject\fP > \fBactiveControlledNetObjs\fP = new NonAllocDictionary<int, \fBNetObject\fP>()"
.br
.ti -1c
.RI "static NonAllocDictionary< int, \fBNetObject\fP > \fBactiveUncontrolledNetObjs\fP = new NonAllocDictionary<int, \fBNetObject\fP>()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBAwake\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "bool \fBskipWhenEmpty\fP = false"
.br
.ti -1c
.RI "bool \fBignoreNonControllerUpdates\fP = true"
.br
.ti -1c
.RI "bool \fBresimulateLateArrivals\fP = true"
.br
.ti -1c
.RI "Rigidbody \fB_rigidbody\fP"
.br
.ti -1c
.RI "Rigidbody2D \fB_rigidbody2D\fP"
.br
.ti -1c
.RI "int \fBviewID\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "bool \fBSkipWhenEmpty\fP\fC [get]\fP"
.br
.ti -1c
.RI "bool \fBIgnoreNonControllerUpdates\fP\fC [get]\fP"
.br
.ti -1c
.RI "bool \fBResimulateLateArrivals\fP\fC [get]\fP"
.br
.ti -1c
.RI "Rigidbody \fBRb\fP\fC [get]\fP"
.br
.ti -1c
.RI "Rigidbody2D \fBRb2D\fP\fC [get]\fP"
.br
.ti -1c
.RI "static bool \fBNetObjDictsLocked\fP\fC [set]\fP"
.br
.RI "Prevent objects from being added or removed from the activeControlledNetObjs dictionary\&. "
.ti -1c
.RI "bool? \fBAllObjsAreReady\fP\fC [get]\fP"
.br
.ti -1c
.RI "int \fBViewID\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB33\fP of file \fBNetObject\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.Awake ()\fC [protected]\fP"
OnAwake Callbacks
.PP
Definition at line \fB219\fP of file \fBNetObject\&.cs\fP\&.
.SS "\fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.NetObject\&.GenerateMessage (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"

.PP
Generate a state tick\&. 
.PP
\fBParameters\fP
.RS 4
\fIframeId\fP 
.RE
.PP
Begin \fBSyncObject\fP Serialization content
.PP
Definition at line \fB726\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnCaptureCurrentState (int frameId)"
Capture PackObjs
.PP
Capture SyncObjs
.PP
Definition at line \fB1067\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnChangeAuthority (bool isMine, bool controllerHasChanged)"
OnAuthorityChanged Callbacks
.PP
Owner assumes all objects are ready, since it is the state authority
.PP
Definition at line \fB455\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnControllerChange (\fBRealtime\&.Player\fP newController, \fBRealtime\&.Player\fP previousController)"

.PP
Definition at line \fB348\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnCreatedRoom ()"

.PP
Called when this client created a room and entered it\&. \fBOnJoinedRoom()\fP will be called as well\&. 
.PP
This callback is only called on the client which created a room (see OpCreateRoom)\&.
.PP
As any client might close (or drop connection) anytime, there is a chance that the creator of a room does not execute OnCreatedRoom\&.
.PP
If you need specific room properties or a 'start signal', implement OnMasterClientSwitched() and make each new MasterClient check the room's state\&. 
.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB382\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnCreateRoomFailed (short returnCode, string message)"

.PP
Called when the server couldn't create a room (OpCreateRoom failed)\&. Creating a room may fail for various reasons\&. Most often, the room already exists (roomname in use) or the RoomOptions clash and it's impossible to create the room\&.
.PP
When creating a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback\&. This way, the client is ready to find/create a room at the moment of the callback\&. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected\&. Treat callbacks of OnConnected as pure information that the client could connect\&. 
.PP
\fBParameters\fP
.RS 4
\fIreturnCode\fP Operation ReturnCode from the server\&.
.br
\fImessage\fP Debug message for the error\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB383\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnDeserialize (int connId, int originFrameId, byte[] buffer, ref int bitposition, bool hasData, \fBFrameArrival\fP arrival)"
Deserialize Pack Objects
.PP
Experimental - Apply valid values as they arrive if pack object isn't fully ready\&. Ensures even a late arriving reliable full update counts toward Ready
.PP
Add any always ready bits (Triggers)
.PP
Only write to syncvars that are not already marked as valid
.PP
Deserialize SyncObjs
.PP
Experimental - immediately apply complete frames to unready sync objects\&.
.PP
Late update handling\&.
.PP
Definition at line \fB817\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnFriendListUpdate (List< \fBFriendInfo\fP > friendList)"

.PP
Called when the server sent the response to a FindFriends request\&. After calling OpFindFriends, the Master Server will cache the friend list and send updates to the friend list\&. The friends includes the name, userId, online state and the room (if any) for each requested user/friend\&.
.PP
Use the friendList to update your UI and store it, if the UI should highlight changes\&. 
.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB381\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnIncrementFrame (int newFrameId, int newSubFrameId, int previousFrameId, int prevSubFrameId)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnIncrementFrame\fP\&.
.PP
Definition at line \fB1097\fP of file \fBNetObject\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.NetObject\&.OnInterpolate (int localSnapFrameId, int localTargFrameId, float t)"
TODO: Cache this properly
.PP
Interpolate Pack Objects - only interpolate currently if both snap and targ are valid\&. TODO: This will change if/when extrapolate is added to Pack Object system
.PP
Interpolation Sync Obj
.PP
Definition at line \fB1267\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnJoinedRoom ()"

.PP
Called when the LoadBalancingClient entered a room, no matter if this client created it or simply joined\&. When this is called, you can access the existing players in \fBRoom\&.Players\fP, their custom properties and \fBRoom\&.CustomProperties\fP\&.
.PP
In this callback, you could create player objects\&. For example in Unity, instantiate a prefab for the player\&.
.PP
If you want a match to be started 'actively', enable the user to signal 'ready' (using OpRaiseEvent or a Custom Property)\&. OnAwake Callbacks
.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB384\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnJoinRandomFailed (short returnCode, string message)"

.PP
Called when a previous OpJoinRandom call failed on the server\&. The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room)\&.
.PP
This operation is only ever sent to the Master Server\&. Once a room is found by the Master Server, the client will head off to the designated Game Server and use the operation Join on the Game Server\&.
.PP
When using multiple lobbies (via OpJoinLobby or a TypedLobby parameter), another lobby might have more/fitting rooms\&.
.br
 
.PP
\fBParameters\fP
.RS 4
\fIreturnCode\fP Operation ReturnCode from the server\&.
.br
\fImessage\fP Debug message for the error\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB397\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnJoinRoomFailed (short returnCode, string message)"

.PP
Called when a previous OpJoinRoom call failed on the server\&. Joining a room may fail for various reasons\&. Most often, the room is full or does not exist anymore (due to someone else being faster or closing the room)\&.
.PP
When joining a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback\&. This way, the client is ready to find/create a room at the moment of the callback\&. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected\&. Treat callbacks of OnConnected as pure information that the client could connect\&. 
.PP
\fBParameters\fP
.RS 4
\fIreturnCode\fP Operation ReturnCode from the server\&.
.br
\fImessage\fP Debug message for the error\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB396\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnLeftRoom ()"

.PP
Called when the local user/client left a room, so the game's logic can clean up it's internal state\&. When leaving a room, the LoadBalancingClient will disconnect the Game Server and connect to the Master Server\&. This wraps up multiple internal actions\&.
.PP
Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms\&. 
.PP
Implements \fBPhoton\&.Realtime\&.IMatchmakingCallbacks\fP\&.
.PP
Definition at line \fB398\fP of file \fBNetObject\&.cs\fP\&.
.SS "\fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.NetObject\&.OnNetSerialize (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"
TODO: Ideally objects will not be individually serializing themselves into their own send\&. Serialize and Send this netobj state if this is a net tick\&.
.PP
Write FrameId
.PP
Write not end of netObjs bool
.PP
Write viewID
.PP
Placeholder for data size\&. False means this is a contentless heartbea
.PP
Placeholder for data size\&. False means this is a contentless heartbeat
.PP
revise the hasData bool to be false and rewind the bitwriter\&.
.PP
Revise the data size now that we know it
.PP
Write end of netObjs marker
.PP
We sent this object at the netObj level, so we report back to the \fBNetMaster\fP that nothing has been added to the master byte[] send\&.
.PP
Definition at line \fB987\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnOwnerChange (\fBRealtime\&.Player\fP newOwner, \fBRealtime\&.Player\fP previousOwner)"

.PP
Definition at line \fB335\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnPackObjReadyChange (Component pobj, \fBReadyStateEnum\fP readyState)"

.PP
Definition at line \fB146\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnPostSimulate (int frameId, int subFrameId, bool isNetTick)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnPostSimulate\fP\&.
.PP
Definition at line \fB973\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnPreNetDestroy (\fBPhotonView\fP rootView)"

.PP
This method is called before Destroy() is initiated for a networked object\&. 
.PP
\fBParameters\fP
.RS 4
\fIrootView\fP 
.RE
.PP
OnDestroy Callbacks
.PP
Implements \fBPhoton\&.Pun\&.IOnPhotonViewPreNetDestroy\fP\&.
.PP
Definition at line \fB300\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnPreQuit ()"
OnQuit Callbacks
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnPreQuit\fP\&.
.PP
Definition at line \fB292\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnPreSimulate (int frameId, int _currSubFrameId)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnPreSimulate\fP\&.
.PP
Definition at line \fB962\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnPreUpdate ()"
OnPreUpdate Callbacks
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnPreUpdate\fP\&.
.PP
Definition at line \fB671\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnQuantize (int frameId)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnQuantize\fP\&.
.PP
Definition at line \fB1082\fP of file \fBNetObject\&.cs\fP\&.
.SS "\fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.NetObject\&.OnSerialize (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"

.PP
Serialize all SyncObjs on this NetObj Serialize Pack Objects
.PP
make placeholder for mask bits (we don't know them yet)
.PP
go back and write the mask bits
.PP
Serialize SyncComponents
.PP
Definition at line \fB754\fP of file \fBNetObject\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.NetObject\&.OnSnapshot (int localTargFrameId)"
TODO: Cache this properly
.PP
Snap Pack Objects
.PP
update readymask with any new valid fields
.PP
TODO: when extrapolation is implemented, it will replace this basic copy
.PP
Snapshot callbacks - fire every net tick changed or not
.PP
Apply new Snap value / Callback only fires on changes
.PP
Ready Mask has Changed - Issue callback
.PP
Snap SyncObjs
.PP
TODO: Needs a better home
.PP
Definition at line \fB1103\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.OnSyncObjReadyChange (\fBSyncObject\fP sobj, \fBReadyStateEnum\fP readyState)"

.PP
Definition at line \fB130\fP of file \fBNetObject\&.cs\fP\&.
.SS "virtual void Photon\&.Pun\&.Simple\&.NetObject\&.PrepareForDestroy ()\fC [virtual]\fP"

.PP
TODO: likely not needed if moving UnmountAll to OnDisable\&. Destroy an object in a way that respects \fBSimple\fP\&. 
.PP
Definition at line \fB325\fP of file \fBNetObject\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.NetObject\&.RemoveInterfaces (Component comp)"

.PP
Remove a component from all NetObj callback lists\&. 
.PP
\fBParameters\fP
.RS 4
\fIcomp\fP 
.RE
.PP

.PP
Definition at line \fB574\fP of file \fBNetObject\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "Rigidbody Photon\&.Pun\&.Simple\&.NetObject\&._rigidbody\fC [protected]\fP"

.PP
Definition at line \fB71\fP of file \fBNetObject\&.cs\fP\&.
.SS "Rigidbody2D Photon\&.Pun\&.Simple\&.NetObject\&._rigidbody2D\fC [protected]\fP"

.PP
Definition at line \fB74\fP of file \fBNetObject\&.cs\fP\&.
.SS "NonAllocDictionary<int, \fBNetObject\fP> Photon\&.Pun\&.Simple\&.NetObject\&.activeControlledNetObjs = new NonAllocDictionary<int, \fBNetObject\fP>()\fC [static]\fP"

.PP
Definition at line \fB81\fP of file \fBNetObject\&.cs\fP\&.
.SS "NonAllocDictionary<int, \fBNetObject\fP> Photon\&.Pun\&.Simple\&.NetObject\&.activeUncontrolledNetObjs = new NonAllocDictionary<int, \fBNetObject\fP>()\fC [static]\fP"

.PP
Definition at line \fB82\fP of file \fBNetObject\&.cs\fP\&.
.SS "int Photon\&.Pun\&.Simple\&.NetObject\&.bitsForColliderIndex"

.PP
Definition at line \fB114\fP of file \fBNetObject\&.cs\fP\&.
.SS "Dictionary<Component, int> Photon\&.Pun\&.Simple\&.NetObject\&.colliderLookup = new Dictionary<Component, int>()"

.PP
TODO: Pool these? 
.PP
Definition at line \fB112\fP of file \fBNetObject\&.cs\fP\&.
.SS "\fBFastBitMask128\fP Photon\&.Pun\&.Simple\&.NetObject\&.frameValidMask"

.PP
Definition at line \fB120\fP of file \fBNetObject\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.NetObject\&.ignoreNonControllerUpdates = true\fC [protected]\fP"

.PP
Definition at line \fB61\fP of file \fBNetObject\&.cs\fP\&.
.SS "List<Component> Photon\&.Pun\&.Simple\&.NetObject\&.indexedColliders = new List<Component>()"

.PP
Definition at line \fB113\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnAuthorityChanged\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onAuthorityChangedCallbacks = new List<\fBIOnAuthorityChanged\fP>()"

.PP
Definition at line \fB484\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnCaptureState\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onCaptureCurrentStateCallbacks = new List<\fBIOnCaptureState\fP>()"

.PP
Definition at line \fB492\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnCriticallyLateFrame\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onCriticallyLateFrameCallbacks = new List<\fBIOnCriticallyLateFrame\fP>()"

.PP
Definition at line \fB487\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnIncrementFrame\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onIncrementFramesCallbacks = new List<\fBIOnIncrementFrame\fP>()"

.PP
Definition at line \fB488\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnInterpolate\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onInterpolateCallbacks = new List<\fBIOnInterpolate\fP>()"

.PP
Definition at line \fB491\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnNetSerialize\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onNetSerializeCallbacks = new List<\fBIOnNetSerialize\fP>()"

.PP
Definition at line \fB486\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnPostSimulate\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onPostSimulateCallbacks = new List<\fBIOnPostSimulate\fP>()"

.PP
Definition at line \fB494\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnPreNetDestroy\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onPreNetDestroyCallbacks = new List<\fBIOnPreNetDestroy\fP>()"

.PP
Definition at line \fB496\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnPreQuit\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onPreQuitCallbacks = new List<\fBIOnPreQuit\fP>()"

.PP
Definition at line \fB495\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnPreSimulate\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onPreSimulateCallbacks = new List<\fBIOnPreSimulate\fP>()"

.PP
Definition at line \fB493\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnPreUpdate\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onPreUpdateCallbacks = new List<\fBIOnPreUpdate\fP>()"

.PP
Definition at line \fB482\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnQuantize\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onQuantizeCallbacks = new List<\fBIOnQuantize\fP>()"

.PP
Definition at line \fB490\fP of file \fBNetObject\&.cs\fP\&.
.SS "readonly List<\fBIOnSnapshot\fP> Photon\&.Pun\&.Simple\&.NetObject\&.onSnapshotCallbacks = new List<\fBIOnSnapshot\fP>()"

.PP
Definition at line \fB489\fP of file \fBNetObject\&.cs\fP\&.
.SS "int [] Photon\&.Pun\&.Simple\&.NetObject\&.originHistory"

.PP
Record of the connection that produced the each deserialized frame\&. Index is the frameId\&. 
.PP
Definition at line \fB124\fP of file \fBNetObject\&.cs\fP\&.
.SS "\fBFastBitMask128\fP Photon\&.Pun\&.Simple\&.NetObject\&.packObjReadyMask"

.PP
Definition at line \fB127\fP of file \fBNetObject\&.cs\fP\&.
.SS "\fBPhotonView\fP Photon\&.Pun\&.Simple\&.NetObject\&.photonView"

.PP
Definition at line \fB198\fP of file \fBNetObject\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.NetObject\&.resimulateLateArrivals = true\fC [protected]\fP"

.PP
Definition at line \fB68\fP of file \fBNetObject\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.NetObject\&.skipWhenEmpty = false\fC [protected]\fP"

.PP
Definition at line \fB53\fP of file \fBNetObject\&.cs\fP\&.
.SS "\fBFastBitMask128\fP Photon\&.Pun\&.Simple\&.NetObject\&.syncObjReadyMask"

.PP
Definition at line \fB126\fP of file \fBNetObject\&.cs\fP\&.
.SS "int Photon\&.Pun\&.Simple\&.NetObject\&.viewID\fC [protected]\fP"

.PP
Definition at line \fB191\fP of file \fBNetObject\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "bool? Photon\&.Pun\&.Simple\&.NetObject\&.AllObjsAreReady\fC [get]\fP"

.PP
Definition at line \fB163\fP of file \fBNetObject\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.NetObject\&.IgnoreNonControllerUpdates\fC [get]\fP"

.PP
Definition at line \fB62\fP of file \fBNetObject\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.NetObject\&.NetObjDictsLocked\fC [static]\fP, \fC [set]\fP"

.PP
Prevent objects from being added or removed from the activeControlledNetObjs dictionary\&. Any changes are queued and applied after unlock\&. 
.PP
Definition at line \fB89\fP of file \fBNetObject\&.cs\fP\&.
.SS "Rigidbody Photon\&.Pun\&.Simple\&.NetObject\&.Rb\fC [get]\fP"

.PP
Definition at line \fB72\fP of file \fBNetObject\&.cs\fP\&.
.SS "Rigidbody2D Photon\&.Pun\&.Simple\&.NetObject\&.Rb2D\fC [get]\fP"

.PP
Definition at line \fB75\fP of file \fBNetObject\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.NetObject\&.ResimulateLateArrivals\fC [get]\fP"

.PP
Definition at line \fB69\fP of file \fBNetObject\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.NetObject\&.SkipWhenEmpty\fC [get]\fP"

.PP
Definition at line \fB54\fP of file \fBNetObject\&.cs\fP\&.
.SS "int Photon\&.Pun\&.Simple\&.NetObject\&.ViewID\fC [get]\fP"

.PP
Definition at line \fB192\fP of file \fBNetObject\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
