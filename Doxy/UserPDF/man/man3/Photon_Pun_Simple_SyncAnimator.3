.TH "Photon.Pun.Simple.SyncAnimator" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.Simple.SyncAnimator
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPhoton\&.Pun\&.Simple\&.SyncObject< SyncAnimator\&.Frame >\fP, \fBPhoton\&.Pun\&.Simple\&.IOnSnapshot\fP, \fBPhoton\&.Pun\&.Simple\&.IOnNetSerialize\fP, \fBPhoton\&.Pun\&.Simple\&.IOnAuthorityChanged\fP, \fBPhoton\&.Pun\&.Simple\&.ISyncAnimator\fP, \fBPhoton\&.Pun\&.Simple\&.IReadyable\fP, \fBPhoton\&.Pun\&.Simple\&.IUseKeyframes\fP, \fBPhoton\&.Pun\&.Simple\&.IOnInterpolate\fP, and \fBPhoton\&.Pun\&.Simple\&.IOnCaptureState\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBFrame\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override void \fBOnAwake\fP ()"
.br
.RI "Be sure to use base\&.OnAwake() when overriding\&. "
.ti -1c
.RI "override void \fBOnJoinedRoom\fP ()"
.br
.ti -1c
.RI "override void \fBOnStart\fP ()"
.br
.ti -1c
.RI "override void \fBOnAuthorityChanged\fP (bool isMine, bool controllerChanged)"
.br
.ti -1c
.RI "\fBSerializationFlags\fP \fBOnNetSerialize\fP (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"
.br
.RI "\fBNetObject\fP serialize interface\&. "
.ti -1c
.RI "\fBSerializationFlags\fP \fBOnNetDeserialize\fP (int originFrameId, byte[] buffer, ref int bitposition, \fBFrameArrival\fP arrival)"
.br
.RI "\fBNetObject\fP deserialize interface\&. "
.ti -1c
.RI "virtual void \fBOnCaptureCurrentState\fP (int frameId)"
.br
.ti -1c
.RI "void \fBSetTrigger\fP (string triggerName, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBSetTrigger\fP (int hash, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBResetTrigger\fP (string triggerName, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBResetTrigger\fP (int hash, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBPlay\fP (string stateName, int layer=\-1, float normalizedTime=0, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBPlay\fP (int hash, int layer=\-1, float normalizedTime=0, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBPlayInFixedTime\fP (string stateName, int layer=\-1, float fixedTime=0, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBPlayInFixedTime\fP (int hash, int layer=\-1, float fixedTime=0, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBCrossFade\fP (string stateName, float duration, int layer=\-1, float normalizedTime=0, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBCrossFade\fP (int hash, float duration, int layer=\-1, float normalizedTime=0, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBCrossFadeInFixedTime\fP (string stateName, float duration, int layer=\-1, float fixedTime=0, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "void \fBCrossFadeInFixedTime\fP (int hash, float duration, int layer=\-1, float fixedTime=0, \fBLocalApplyTiming\fP localApplyTiming=\fBLocalApplyTiming\&.OnSend\fP)"
.br
.ti -1c
.RI "override bool \fBOnSnapshot\fP (int prevFrameId, int snapFrameId, int targFrameId, bool prevIsValid, bool snapIsValid, bool targIsValid)"
.br
.RI "Advance the buffered state, getting a new target\&. "
.ti -1c
.RI "override bool \fBOnInterpolate\fP (int snapFrameId, int targFrameId, float t)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "List< int > \fBsharedTriggIndexes\fP = new List<int>()"
.br
.ti -1c
.RI "List< int > \fBsharedStateIndexes\fP = new List<int>()"
.br
.ti -1c
.RI "Animator \fBanimator\fP"
.br
.ti -1c
.RI "bool \fBautoRootMotion\fP = true"
.br
.ti -1c
.RI "bool \fBsyncPassThrus\fP = true"
.br
.RI "Passthrus\&. "
.ti -1c
.RI "\fBNormalizedFloatCompression\fP \fBpassthruNormTimeCompress\fP = NormalizedFloatCompression\&.Bits10"
.br
.ti -1c
.RI "bool \fBsyncStates\fP = true"
.br
.RI "States\&. "
.ti -1c
.RI "\fBNormalizedFloatCompression\fP \fBnormalizedTimeCompress\fP = NormalizedFloatCompression\&.Bits10"
.br
.ti -1c
.RI "bool \fBsyncLayers\fP = true"
.br
.ti -1c
.RI "bool \fBsyncLayerWeights\fP = true"
.br
.ti -1c
.RI "\fBNormalizedFloatCompression\fP \fBlayerWeightCompress\fP = NormalizedFloatCompression\&.Bits10"
.br
.ti -1c
.RI "int \fBlayerCount\fP"
.br
.ti -1c
.RI "bool \fBsyncParams\fP = true"
.br
.RI "Parameters\&. "
.ti -1c
.RI "bool \fBuseGlobalParamSettings\fP = true"
.br
.ti -1c
.RI "\fBParameterDefaults\fP \fBsharedParamDefaults\fP = new \fBParameterDefaults\fP()"
.br
.ti -1c
.RI "\fBParameterSettings\fP[] \fBsharedParamSettings\fP = new \fBParameterSettings\fP[0]"
.br
.ti -1c
.RI "int \fBparamCount\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static Dictionary< int, Stack< \fBFrame\fP[]> > \fBmasterSharedFramePool\fP = new Dictionary<int, Stack<\fBFrame\fP[]>>()"
.br
.RI "\fBFrame\fP[] cannot be generically reused\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBPopulateFrames\fP ()"
.br
.RI "Override this with frame initialization code\&. "
.ti -1c
.RI "override void \fBInterpolateFrame\fP (\fBFrame\fP targframe, \fBFrame\fP startframe, \fBFrame\fP endframe, float t)"
.br
.RI "UNTESTED\&. "
.ti -1c
.RI "override void \fBExtrapolateFrame\fP (\fBFrame\fP prevframe, \fBFrame\fP snapframe, \fBFrame\fP targframe)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override int \fBApplyOrder\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBAllowReconstructionOfEmpty\fP\fC [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line \fB23\fP of file \fBSyncAnimator\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.CrossFade (int hash, float duration, int layer = \fC\-1\fP, float normalizedTime = \fC0\fP, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1229\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.CrossFade (string stateName, float duration, int layer = \fC\-1\fP, float normalizedTime = \fC0\fP, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1224\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.CrossFadeInFixedTime (int hash, float duration, int layer = \fC\-1\fP, float fixedTime = \fC0\fP, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1239\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.CrossFadeInFixedTime (string stateName, float duration, int layer = \fC\-1\fP, float fixedTime = \fC0\fP, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1234\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncAnimator\&.ExtrapolateFrame (\fBFrame\fP prevframe, \fBFrame\fP snapframe, \fBFrame\fP targframe)\fC [protected]\fP"
TODO: try changing this from partial to extrapolated
.PP
Definition at line \fB2187\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncAnimator\&.InterpolateFrame (\fBFrame\fP targframe, \fBFrame\fP startframe, \fBFrame\fP endframe, float t)\fC [protected]\fP"

.PP
UNTESTED\&. TODO: This currently just copies the last value
.PP
Definition at line \fB2178\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncAnimator\&.OnAuthorityChanged (bool isMine, bool controllerChanged)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnAuthorityChanged\fP\&.
.PP
Definition at line \fB404\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncAnimator\&.OnAwake ()\fC [virtual]\fP"

.PP
Be sure to use base\&.OnAwake() when overriding\&. This is called when the \fBNetObject\fP runs \fBAwake()\fP\&. All code that depends on the NetObj being initialized should use this rather than \fBAwake()\fP; 
.PP
Reimplemented from \fBPhoton\&.Pun\&.Simple\&.NetComponent\fP\&.
.PP
Definition at line \fB376\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "virtual void Photon\&.Pun\&.Simple\&.SyncAnimator\&.OnCaptureCurrentState (int frameId)\fC [virtual]\fP"
TODO: more may need to be done if not enabled, to ensure the frame is marked as not valid\&.
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnCaptureState\fP\&.
.PP
Definition at line \fB606\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.OnInterpolate (int snapFrameId, int targFrameId, float t)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnInterpolate\fP\&.
.PP
Definition at line \fB2154\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncAnimator\&.OnJoinedRoom ()\fC [virtual]\fP"

.PP
Reimplemented from \fBPhoton\&.Pun\&.Simple\&.NetComponent\fP\&.
.PP
Definition at line \fB392\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "\fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.SyncAnimator\&.OnNetDeserialize (int originFrameId, byte[] buffer, ref int bitposition, \fBFrameArrival\fP arrival)"

.PP
\fBNetObject\fP deserialize interface\&. Needs to ignore any incoming updates that are the server/relay mirroring back what we sent
.PP
If hascontent flag is false, we are done here\&.
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnNetSerialize\fP\&.
.PP
Definition at line \fB583\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "\fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.SyncAnimator\&.OnNetSerialize (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"

.PP
\fBNetObject\fP serialize interface\&. Don't transmit data if this component is disabled\&. Allows for muting components Simply by disabling them at the authority side\&.
.PP
hascontent bool
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnNetSerialize\fP\&.
.PP
Definition at line \fB560\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.OnSnapshot (int prevFrameId, int snapFrameId, int targFrameId, bool prevIsValid, bool snapIsValid, bool targIsValid)"

.PP
Advance the buffered state, getting a new target\&. TODO: change this to snapFrame and put after base call First Apply the previous targ, for end of interpolation application\&.
.PP
End of Interpolation triggers and Events Since we are interpolating, to line up timing of all networked objects The actual occurance of a frame is when it ARRIVES at target\&.
.PP
TODO: don't know if states act like triggers or params yet\&.
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnSnapshot\fP\&.
.PP
Definition at line \fB2100\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncAnimator\&.OnStart ()\fC [virtual]\fP"

.PP
Reimplemented from \fBPhoton\&.Pun\&.Simple\&.NetComponent\fP\&.
.PP
Definition at line \fB398\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.Play (int hash, int layer = \fC\-1\fP, float normalizedTime = \fC0\fP, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1209\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.Play (string stateName, int layer = \fC\-1\fP, float normalizedTime = \fC0\fP, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1204\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.PlayInFixedTime (int hash, int layer = \fC\-1\fP, float fixedTime = \fC0\fP, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1219\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.PlayInFixedTime (string stateName, int layer = \fC\-1\fP, float fixedTime = \fC0\fP, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1214\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncAnimator\&.PopulateFrames ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Override this with frame initialization code\&. The default base just creates the frame instances and assigns them index values\&. Animator frames vary from usage to usage, so there is a pool for every instanceID\&.
.PP
Basic factory, just gives each frame an index\&.
.PP
Reimplemented from \fBPhoton\&.Pun\&.Simple\&.SyncObject< SyncAnimator\&.Frame >\fP\&.
.PP
Definition at line \fB260\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.ResetTrigger (int hash, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1199\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.ResetTrigger (string triggerName, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1194\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.SetTrigger (int hash, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1189\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncAnimator\&.SetTrigger (string triggerName, \fBLocalApplyTiming\fP localApplyTiming = \fC\fBLocalApplyTiming\&.OnSend\fP\fP)"

.PP
Definition at line \fB1184\fP of file \fBSyncAnimator\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "Animator Photon\&.Pun\&.Simple\&.SyncAnimator\&.animator"

.PP
Definition at line \fB63\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.autoRootMotion = true"

.PP
Definition at line \fB66\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "int Photon\&.Pun\&.Simple\&.SyncAnimator\&.layerCount"

.PP
Definition at line \fB79\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "\fBNormalizedFloatCompression\fP Photon\&.Pun\&.Simple\&.SyncAnimator\&.layerWeightCompress = NormalizedFloatCompression\&.Bits10"

.PP
Definition at line \fB78\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "Dictionary<int, Stack<\fBFrame\fP[]> > Photon\&.Pun\&.Simple\&.SyncAnimator\&.masterSharedFramePool = new Dictionary<int, Stack<\fBFrame\fP[]>>()\fC [static]\fP"

.PP
\fBFrame\fP[] cannot be generically reused\&. We reuse \fBFrame\fP[] based on the prefabInstanceId, since different animators will have different numbers of parameters\&. Dict[prefabInstanceId, Stack[\fBFrame\fP[]]] 
.PP
Definition at line \fB129\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "\fBNormalizedFloatCompression\fP Photon\&.Pun\&.Simple\&.SyncAnimator\&.normalizedTimeCompress = NormalizedFloatCompression\&.Bits10"

.PP
Definition at line \fB75\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "int Photon\&.Pun\&.Simple\&.SyncAnimator\&.paramCount"

.PP
Definition at line \fB90\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "\fBNormalizedFloatCompression\fP Photon\&.Pun\&.Simple\&.SyncAnimator\&.passthruNormTimeCompress = NormalizedFloatCompression\&.Bits10"

.PP
Definition at line \fB70\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "\fBParameterDefaults\fP Photon\&.Pun\&.Simple\&.SyncAnimator\&.sharedParamDefaults = new \fBParameterDefaults\fP()"

.PP
Definition at line \fB86\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "\fBParameterSettings\fP [] Photon\&.Pun\&.Simple\&.SyncAnimator\&.sharedParamSettings = new \fBParameterSettings\fP[0]"

.PP
Definition at line \fB89\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "List<int> Photon\&.Pun\&.Simple\&.SyncAnimator\&.sharedStateIndexes = new List<int>()"

.PP
Definition at line \fB50\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "List<int> Photon\&.Pun\&.Simple\&.SyncAnimator\&.sharedTriggIndexes = new List<int>()"

.PP
Definition at line \fB45\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.syncLayers = true"

.PP
Definition at line \fB76\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.syncLayerWeights = true"

.PP
Definition at line \fB77\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.syncParams = true"

.PP
Parameters\&. 
.PP
Definition at line \fB82\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.syncPassThrus = true"

.PP
Passthrus\&. 
.PP
Definition at line \fB69\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.syncStates = true"

.PP
States\&. 
.PP
Definition at line \fB73\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.useGlobalParamSettings = true"

.PP
Definition at line \fB83\fP of file \fBSyncAnimator\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "override bool Photon\&.Pun\&.Simple\&.SyncAnimator\&.AllowReconstructionOfEmpty\fC [get]\fP"

.PP
Definition at line \fB121\fP of file \fBSyncAnimator\&.cs\fP\&.
.SS "override int Photon\&.Pun\&.Simple\&.SyncAnimator\&.ApplyOrder\fC [get]\fP"

.PP
Definition at line \fB113\fP of file \fBSyncAnimator\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
