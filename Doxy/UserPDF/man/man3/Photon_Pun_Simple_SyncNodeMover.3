.TH "Photon.Pun.Simple.SyncNodeMover" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.Simple.SyncNodeMover \- Basic automatic transform mover for objects for network testing\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPhoton\&.Pun\&.Simple\&.SyncMoverBase< SyncNodeMover\&.TRSDefinition, SyncNodeMover\&.Frame >\fP, \fBPhoton\&.Pun\&.Simple\&.IOnPreUpdate\fP, \fBPhoton\&.Pun\&.Simple\&.IOnPreSimulate\fP, \fBPhoton\&.Pun\&.Simple\&.IOnCaptureState\fP, \fBPhoton\&.Pun\&.Simple\&.IOnNetSerialize\fP, \fBPhoton\&.Pun\&.Simple\&.IOnSnapshot\fP, \fBPhoton\&.Pun\&.Simple\&.IOnInterpolate\fP, and \fBPhoton\&.Pun\&.Simple\&.IReadyable\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBFrame\fP"
.br
.ti -1c
.RI "class \fBNode\fP"
.br
.ti -1c
.RI "class \fBTRSDefinition\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBMovement\fP { \fBOscillate\fP, \fBTrigger\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override void \fBOnPreSimulate\fP (int frameId, int subFrameId)"
.br
.ti -1c
.RI "override void \fBOnPreUpdate\fP ()"
.br
.ti -1c
.RI "void \fBTrigger\fP (int \fBtargetNode\fP)"
.br
.ti -1c
.RI "void \fBTriggerMin\fP ()"
.br
.ti -1c
.RI "void \fBTriggerMax\fP ()"
.br
.ti -1c
.RI "void \fBOnCaptureCurrentState\fP (int frameId)"
.br
.ti -1c
.RI "\fBSerializationFlags\fP \fBOnNetSerialize\fP (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"
.br
.ti -1c
.RI "\fBSerializationFlags\fP \fBOnNetDeserialize\fP (int originFrameId, byte[] buffer, ref int bitposition, \fBFrameArrival\fP arrival)"
.br
.ti -1c
.RI "override bool \fBOnInterpolate\fP (int snapFrameId, int targFrameId, float t)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "float \fBpredictWithRTT\fP = 1f"
.br
.ti -1c
.RI "List< \fBNode\fP > \fBnodes\fP = new List<\fBNode\fP>() { new \fBNode\fP(), new \fBNode\fP() }"
.br
.ti -1c
.RI "\fBMovement\fP \fBmovement\fP = \fBMovement\&.Oscillate\fP"
.br
.ti -1c
.RI "float \fBoscillatePeriod\fP = 1"
.br
.ti -1c
.RI "AnimationCurve \fBoscillateCurve\fP = new AnimationCurve(new Keyframe(0, 0), new Keyframe(\&.5f, 1), new Keyframe(1, 0))"
.br
.ti -1c
.RI "\fBLiteFloatCrusher\fP \fBfloatCrusher\fP = new \fBLiteFloatCrusher\fP(LiteFloatCompressType\&.Bits10, LiteFloatCrusher\&.Normalization\&.Positive)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBReset\fP ()"
.br
.ti -1c
.RI "override void \fBInitializeTRS\fP (\fBTRSDefinition\fP def, \fBTRS\fP type)"
.br
.ti -1c
.RI "override void \fBApplySnapshot\fP (\fBFrame\fP snapframe, \fBFrame\fP targframe, bool snapIsVaid, bool targIsValid)"
.br
.ti -1c
.RI "override void \fBConstructMissingFrame\fP (\fBFrame\fP prevFrame, \fBFrame\fP snapframe, \fBFrame\fP targframe)"
.br
.ti -1c
.RI "float \fBOscillatePhaseToLerpT\fP (float phase)"
.br
.RI "Takes a normalized 0-1 value and returns a T value from the OscillateCurve\&. "
.ti -1c
.RI "float \fBTimeToPhase\fP (double time)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "float \fBcurrentPhase\fP"
.br
.ti -1c
.RI "int \fBqueuedTargetNode\fP"
.br
.ti -1c
.RI "int \fBtargetNode\fP"
.br
.ti -1c
.RI "double \fBtimeoffset\fP"
.br
.ti -1c
.RI "float \fBsnapPhase\fP"
.br
.ti -1c
.RI "float \fBtargPhase\fP"
.br
.ti -1c
.RI "float \fBaccumulatedTime\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBNode\fP \fBStartNode\fP\fC [get]\fP"
.br
.ti -1c
.RI "\fBNode\fP \fBEndNode\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Basic automatic transform mover for objects for network testing\&. 

Will only run if object has local authority\&. 
.PP
Definition at line \fB21\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBPhoton\&.Pun\&.Simple\&.SyncNodeMover\&.Movement\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOscillate \fP\fP
.TP
\fB\fITrigger \fP\fP
.PP
Definition at line \fB30\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "override void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.ApplySnapshot (\fBFrame\fP snapframe, \fBFrame\fP targframe, bool snapIsVaid, bool targIsValid)\fC [protected]\fP"

.PP
Definition at line \fB275\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.ConstructMissingFrame (\fBFrame\fP prevFrame, \fBFrame\fP snapframe, \fBFrame\fP targframe)\fC [protected]\fP"

.PP
Definition at line \fB347\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.InitializeTRS (\fBTRSDefinition\fP def, \fBTRS\fP type)\fC [protected]\fP"
Absolute only applies to oscillate\&.\&. make sure its false if we aren't oscillating
.PP
Definition at line \fB130\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.OnCaptureCurrentState (int frameId)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnCaptureState\fP\&.
.PP
Definition at line \fB238\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "override bool Photon\&.Pun\&.Simple\&.SyncNodeMover\&.OnInterpolate (int snapFrameId, int targFrameId, float t)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnInterpolate\fP\&.
.PP
Definition at line \fB308\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "\fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.SyncNodeMover\&.OnNetDeserialize (int originFrameId, byte[] buffer, ref int bitposition, \fBFrameArrival\fP arrival)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnNetSerialize\fP\&.
.PP
Definition at line \fB258\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "\fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.SyncNodeMover\&.OnNetSerialize (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnNetSerialize\fP\&.
.PP
Definition at line \fB247\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.OnPreSimulate (int frameId, int subFrameId)"
Make sure previous lerp is fully applied to scene so our transform capture is based on the fixed time and not the last update time
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnPreSimulate\fP\&.
.PP
Definition at line \fB164\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.OnPreUpdate ()"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnPreUpdate\fP\&.
.PP
Definition at line \fB174\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "float Photon\&.Pun\&.Simple\&.SyncNodeMover\&.OscillatePhaseToLerpT (float phase)\fC [protected]\fP"

.PP
Takes a normalized 0-1 value and returns a T value from the OscillateCurve\&. 
.PP
\fBParameters\fP
.RS 4
\fIphase\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line \fB377\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.Reset ()\fC [protected]\fP"

.PP
Definition at line \fB123\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "float Photon\&.Pun\&.Simple\&.SyncNodeMover\&.TimeToPhase (double time)\fC [protected]\fP"

.PP
Definition at line \fB382\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.Trigger (int targetNode)"

.PP
Definition at line \fB203\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.TriggerMax ()"

.PP
Definition at line \fB212\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.SyncNodeMover\&.TriggerMin ()"

.PP
Definition at line \fB207\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "float Photon\&.Pun\&.Simple\&.SyncNodeMover\&.accumulatedTime\fC [protected]\fP"

.PP
Definition at line \fB345\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "float Photon\&.Pun\&.Simple\&.SyncNodeMover\&.currentPhase\fC [protected]\fP"

.PP
Definition at line \fB71\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "\fBLiteFloatCrusher\fP Photon\&.Pun\&.Simple\&.SyncNodeMover\&.floatCrusher = new \fBLiteFloatCrusher\fP(LiteFloatCompressType\&.Bits10, LiteFloatCrusher\&.Normalization\&.Positive)"

.PP
Definition at line \fB63\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "\fBMovement\fP Photon\&.Pun\&.Simple\&.SyncNodeMover\&.movement = \fBMovement\&.Oscillate\fP"

.PP
Definition at line \fB60\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "List<\fBNode\fP> Photon\&.Pun\&.Simple\&.SyncNodeMover\&.nodes = new List<\fBNode\fP>() { new \fBNode\fP(), new \fBNode\fP() }"

.PP
Definition at line \fB56\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "AnimationCurve Photon\&.Pun\&.Simple\&.SyncNodeMover\&.oscillateCurve = new AnimationCurve(new Keyframe(0, 0), new Keyframe(\&.5f, 1), new Keyframe(1, 0))"

.PP
Definition at line \fB62\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "float Photon\&.Pun\&.Simple\&.SyncNodeMover\&.oscillatePeriod = 1"

.PP
Definition at line \fB61\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "float Photon\&.Pun\&.Simple\&.SyncNodeMover\&.predictWithRTT = 1f"

.PP
Definition at line \fB54\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "int Photon\&.Pun\&.Simple\&.SyncNodeMover\&.queuedTargetNode\fC [protected]\fP"

.PP
Definition at line \fB72\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "float Photon\&.Pun\&.Simple\&.SyncNodeMover\&.snapPhase\fC [protected]\fP"

.PP
Definition at line \fB273\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "int Photon\&.Pun\&.Simple\&.SyncNodeMover\&.targetNode\fC [protected]\fP"

.PP
Definition at line \fB73\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "float Photon\&.Pun\&.Simple\&.SyncNodeMover\&.targPhase\fC [protected]\fP"

.PP
Definition at line \fB273\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "double Photon\&.Pun\&.Simple\&.SyncNodeMover\&.timeoffset\fC [protected]\fP"

.PP
Definition at line \fB182\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "\fBNode\fP Photon\&.Pun\&.Simple\&.SyncNodeMover\&.EndNode\fC [get]\fP"

.PP
Definition at line \fB58\fP of file \fBSyncNodeMover\&.cs\fP\&.
.SS "\fBNode\fP Photon\&.Pun\&.Simple\&.SyncNodeMover\&.StartNode\fC [get]\fP"

.PP
Definition at line \fB57\fP of file \fBSyncNodeMover\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
