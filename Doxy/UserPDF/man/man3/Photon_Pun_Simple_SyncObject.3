.TH "Photon.Pun.Simple.SyncObject< TFrame >" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.Simple.SyncObject< TFrame > \- The base class of all \fBSimple\fP Sync networked components\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPhoton\&.Pun\&.Simple\&.NetComponent\fP, \fBPhoton\&.Pun\&.Simple\&.IOnEnable\fP, \fBPhoton\&.Pun\&.Simple\&.IOnDisable\fP, \fBPhoton\&.Pun\&.Simple\&.IApplyOrder\fP, and SyncObject\&.
.PP
Inherited by \fBPhoton\&.Pun\&.Simple\&.SyncMoverBase< TTRSDef, TFrame >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBIsKeyframe\fP (int frameId)"
.br
.RI "Checks if the supplied frame is a keyframe\&. "
.ti -1c
.RI "virtual void \fBResetBuffers\fP ()"
.br
.ti -1c
.RI "override void \fBOnPostEnable\fP ()"
.br
.ti -1c
.RI "override void \fBOnAuthorityChanged\fP (bool isMine, bool controllerChanged)"
.br
.RI "Updates authority values on authority changes\&. "
.ti -1c
.RI "override void \fBOnPostDisable\fP ()"
.br
.ti -1c
.RI "override void \fBOnAwake\fP ()"
.br
.RI "Be sure to use base\&.OnAwake() when overriding\&. "
.ti -1c
.RI "override void \fBOnAwake\fP ()"
.br
.RI "When overriding, but sure to keep base\&.Awake()\&. "
.ti -1c
.RI "override void \fBOnPostDisable\fP ()"
.br
.ti -1c
.RI "override void \fBOnAuthorityChanged\fP (bool isMine, bool controllerChanged)"
.br
.RI "Updates authority values on authority changes\&. "
.ti -1c
.RI "virtual bool \fBOnSnapshot\fP (int prevFrameId, int snapFrameId, int targFrameId, bool prevIsValid, bool snapIsValid, bool targIsValid)"
.br
.RI "Called every simulation tick, right after the frameId has been incremented by \fBNetMaster\fP\&. "
.ti -1c
.RI "virtual bool \fBOnInterpolate\fP (int snapFrameId, int targFrameId, float t)"
.br
.RI "Interpolate between SnapFrame and TargFrame\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int \fB_applyOrder\fP = \fBApplyOrderConstants\&.DEFAULT\fP"
.br
.ti -1c
.RI "bool \fB_alwaysReady\fP = true"
.br
.ti -1c
.RI "bool \fBserializeThis\fP = true"
.br
.ti -1c
.RI "System\&.Action< \fBSyncObject\fP, \fBReadyStateEnum\fP > \fBonReadyCallbacks\fP"
.br
.ti -1c
.RI "TFrame[] \fBframes\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBOnEnable\fP ()"
.br
.RI "This is here to ensure the enable checkbox visible for the Component\&. "
.ti -1c
.RI "int \fBConvertSecsToTicks\fP (float seconds)"
.br
.ti -1c
.RI "virtual void \fBPopulateFrames\fP ()"
.br
.RI "Override this with frame initialization code\&. "
.ti -1c
.RI "virtual void \fBInitialCompleteSnapshot\fP (TFrame frame)"
.br
.ti -1c
.RI "virtual void \fBApplySnapshot\fP (TFrame snapframe, TFrame targframe, bool snapIsValid, bool targIsValid)"
.br
.RI "TODO: Make this abstract and use everywhere rather than OnSnapshot? "
.ti -1c
.RI "virtual void \fBReconstructEmptyFrame\fP ()"
.br
.RI "Handling if a frame arrived, but the frame was flagged as \fBFrameContents\&.Empty\fP "
.ti -1c
.RI "virtual void \fBReconstructIncompleteFrame\fP ()"
.br
.RI "Handling if a frame arrived, but the frame was flagged as hasConent = true and isComplete = false "
.ti -1c
.RI "virtual void \fBConstructMissingFrame\fP (TFrame \fBprevFrame\fP, TFrame snapframe, TFrame targframe)"
.br
.ti -1c
.RI "virtual void \fBInterpolateFrame\fP (TFrame targframe, TFrame startframe, TFrame endframe, float t)"
.br
.RI "Interpolate used to construct a new from from two existing frames\&. "
.ti -1c
.RI "virtual void \fBExtrapolateFrame\fP (TFrame prevframe, TFrame snapframe, TFrame targframe)"
.br
.RI "Interpolate a new TargFrame from previous frames\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "int \fBkeyframeRate\fP = 1"
.br
.ti -1c
.RI "bool \fBuseDeltas\fP = true"
.br
.ti -1c
.RI "int \fBsyncObjIndex\fP"
.br
.ti -1c
.RI "\fBReadyStateEnum\fP \fB_readyState\fP"
.br
.ti -1c
.RI "TFrame \fBprevFrame\fP"
.br
.RI "Runtime vars\&. "
.ti -1c
.RI "TFrame \fBsnapFrame\fP"
.br
.ti -1c
.RI "TFrame \fBtargFrame\fP"
.br
.ti -1c
.RI "TFrame \fBofftickFrame\fP"
.br
.ti -1c
.RI "bool \fBhadInitialSnapshot\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "virtual int \fBApplyOrder\fP\fC [get]\fP"
.br
.ti -1c
.RI "bool \fBUseDeltas\fP\fC [getset]\fP"
.br
.ti -1c
.RI "virtual bool \fBAlwaysReady\fP\fC [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBIncludeInSerialization\fP\fC [get]\fP"
.br
.ti -1c
.RI "bool \fBSkipWhenEmpty\fP\fC [get]\fP"
.br
.ti -1c
.RI "int \fBSyncObjIndex\fP\fC [getset]\fP"
.br
.ti -1c
.RI "\fBReadyStateEnum\fP \fBReadyState\fP\fC [getset]\fP"
.br
.ti -1c
.RI "virtual bool \fBAllowInterpolation\fP\fC [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBAllowReconstructionOfEmpty\fP\fC [get]\fP"
.br
.ti -1c
.RI "virtual bool \fBAllowReconstructionOfPartial\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The base class of all \fBSimple\fP Sync networked components\&. 

\fBSyncObject\fP base class with handling for frames and frame history\&.
.PP
\fBTemplate Parameters\fP
.RS 4
\fITFrame\fP The derived \fBFrameBase\fP class to be used as the frame\&.
.RE
.PP

.PP
\fBType Constraints\fP
.TP
\fITFrame\fP : \fI\fBFrameBase\fP\fP
.PP
Definition at line \fB20\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.ApplySnapshot (TFrame snapframe, TFrame targframe, bool snapIsValid, bool targIsValid)\fC [protected]\fP, \fC [virtual]\fP"

.PP
TODO: Make this abstract and use everywhere rather than OnSnapshot? 
.PP
Definition at line \fB213\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.ConstructMissingFrame (TFrame prevFrame, TFrame snapframe, TFrame targframe)\fC [protected]\fP, \fC [virtual]\fP"
if we are currently on a valid frame, we can attempt to look forward for another valid frame to reconstruct with a tween\&.
.PP
No future valid frame found, just do a regular extrapolation
.PP
Definition at line \fB248\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "int \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.ConvertSecsToTicks (float seconds)\fC [protected]\fP"

.PP
Definition at line \fB218\fP of file \fBSyncObject\&.cs\fP\&.
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.ExtrapolateFrame (TFrame prevframe, TFrame snapframe, TFrame targframe)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Interpolate a new TargFrame from previous frames\&. Return true if this should flag that new frame now as having content\&. 
.PP
Definition at line \fB357\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.InitialCompleteSnapshot (TFrame frame)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB89\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.InterpolateFrame (TFrame targframe, TFrame startframe, TFrame endframe, float t)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Interpolate used to construct a new from from two existing frames\&. Return true if this should flag that new frame now as having content\&. 
.PP
Definition at line \fB350\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.IsKeyframe (int frameId)"

.PP
Checks if the supplied frame is a keyframe\&. 
.PP
\fBParameters\fP
.RS 4
\fIframeId\fP 
.RE
.PP

.PP
Definition at line \fB69\fP of file \fBSyncObject\&.cs\fP\&.
.SS "override void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnAuthorityChanged (bool isMine, bool controllerChanged)\fC [virtual]\fP"

.PP
Updates authority values on authority changes\&. 
.PP
\fBParameters\fP
.RS 4
\fIcontrollerChanged\fP 
.RE
.PP
\fBIReadyable\fP objects start life Unready by default\&. Non \fBIReadyable\fP objects will never be Unready\&.
.PP
Reimplemented from \fBPhoton\&.Pun\&.Simple\&.NetComponent\fP\&.
.PP
Definition at line \fB149\fP of file \fBSyncObject\&.cs\fP\&.
.SS "override void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnAuthorityChanged (bool isMine, bool controllerChanged)\fC [virtual]\fP"

.PP
Updates authority values on authority changes\&. 
.PP
\fBParameters\fP
.RS 4
\fIcontrollerChanged\fP 
.RE
.PP
Clear all frames from a different controller to avoid ghosts of old non-empty frames\&.
.PP
TODO: some logic about when this happens may be useful\&. Originally was only when changing to IsMine Not sure if this helps or hurts - not fully checked into the need for if this kind of reset is needed\&.
.PP
Reimplemented from \fBPhoton\&.Pun\&.Simple\&.NetComponent\fP\&.
.PP
Definition at line \fB57\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "override void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnAwake ()\fC [virtual]\fP"

.PP
Be sure to use base\&.OnAwake() when overriding\&. This is called when the \fBNetObject\fP runs \fBAwake()\fP\&. All code that depends on the NetObj being initialized should use this rather than \fBAwake()\fP; 
.PP
Reimplemented from \fBPhoton\&.Pun\&.Simple\&.NetComponent\fP\&.
.PP
Definition at line \fB201\fP of file \fBSyncObject\&.cs\fP\&.
.SS "override void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnAwake ()\fC [virtual]\fP"

.PP
When overriding, but sure to keep base\&.Awake()\&. Also, frames are created and given indexes, but any other Initialization will still need to be explicitly called in the derived \fBAwake()\fP\&. 
.PP
Reimplemented from \fBPhoton\&.Pun\&.Simple\&.NetComponent\fP\&.
.PP
Definition at line \fB35\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnEnable ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
This is here to ensure the enable checkbox visible for the Component\&. 
.PP
Definition at line \fB211\fP of file \fBSyncObject\&.cs\fP\&.
.SS "virtual bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnInterpolate (int snapFrameId, int targFrameId, float t)\fC [virtual]\fP"

.PP
Interpolate between SnapFrame and TargFrame\&. 
.PP
\fBParameters\fP
.RS 4
\fIt\fP 
.RE
.PP
\fBReturns\fP
.RS 4
Base will return false if snapshot is not ready\&. Set to true if interpolation can be done\&.
.RE
.PP

.PP
Reimplemented in \fBPhoton\&.Pun\&.Simple\&.SyncAnimator\fP, and \fBPhoton\&.Pun\&.Simple\&.SyncTransform\fP\&.
.PP
Definition at line \fB329\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "override void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnPostDisable ()"
Disabled SyncObjs should be considered ready, so they don't hold up the visibility endlessly
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnDisable\fP\&.
.PP
Definition at line \fB167\fP of file \fBSyncObject\&.cs\fP\&.
.SS "override void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnPostDisable ()"
TEST - Reset when disabled so new initialization isn't ignored (for scene objects after disconnect and reconnect)
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnDisable\fP\&.
.PP
Definition at line \fB49\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "override void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnPostEnable ()"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnEnable\fP\&.
.PP
Definition at line \fB135\fP of file \fBSyncObject\&.cs\fP\&.
.SS "virtual bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.OnSnapshot (int prevFrameId, int snapFrameId, int targFrameId, bool prevIsValid, bool snapIsValid, bool targIsValid)\fC [virtual]\fP"

.PP
Called every simulation tick, right after the frameId has been incremented by \fBNetMaster\fP\&. Base class advances/increments all of the frame references\&. 
.PP
\fBParameters\fP
.RS 4
\fItargFrameId\fP 
.br
\fIinitialize\fP 
.RE
.PP
\fBReturns\fP
.RS 4
Base will return false if snapshot is not ready\&.
.RE
.PP
TODO:should this be active in hierarchy?
.PP
Invalidate old frames
.PP
Tick arrived for targFrame, but Frame may be partial, nochange or otherwise empty
.PP
No tick arrived for targFrame - attempt reconstruction using snapFrame and prevFrame
.PP
snapFrame is valid, so some kind of reconstruction of targFrame is likely possible
.PP
Unable to reconstruct invalid targFrame from invalid snapFrame
.PP
Reconstruction disabled, mark the invalid targFrame as empty
.PP
Reimplemented in \fBPhoton\&.Pun\&.Simple\&.SyncAnimator\fP, and \fBPhoton\&.Pun\&.Simple\&.SyncTransform\fP\&.
.PP
Definition at line \fB100\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.PopulateFrames ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Override this with frame initialization code\&. The default base just creates the frame instances and assigns them index values\&. Basic factory, just gives each frame an index\&.
.PP
Reimplemented in \fBPhoton\&.Pun\&.Simple\&.SyncVitals\fP, \fBPhoton\&.Pun\&.Simple\&.SyncAnimator\fP, and \fBPhoton\&.Pun\&.Simple\&.SyncTransform\fP\&.
.PP
Definition at line \fB83\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.ReconstructEmptyFrame ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Handling if a frame arrived, but the frame was flagged as \fBFrameContents\&.Empty\fP 
.PP
Definition at line \fB225\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.ReconstructIncompleteFrame ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Handling if a frame arrived, but the frame was flagged as hasConent = true and isComplete = false 
.PP
Definition at line \fB241\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual void \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.ResetBuffers ()\fC [virtual]\fP"

.PP
Definition at line \fB74\fP of file \fBSyncObject\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&._alwaysReady = true"

.PP
Definition at line \fB81\fP of file \fBSyncObject\&.cs\fP\&.
.SS "int \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&._applyOrder = \fBApplyOrderConstants\&.DEFAULT\fP"

.PP
Definition at line \fB41\fP of file \fBSyncObject\&.cs\fP\&.
.SS "\fBReadyStateEnum\fP \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&._readyState\fC [protected]\fP"

.PP
Definition at line \fB105\fP of file \fBSyncObject\&.cs\fP\&.
.SS "TFrame [] \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.frames"

.PP
Definition at line \fB24\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.hadInitialSnapshot\fC [protected]\fP"

.PP
Definition at line \fB28\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "int \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.keyframeRate = 1\fC [protected]\fP"

.PP
Definition at line \fB52\fP of file \fBSyncObject\&.cs\fP\&.
.SS "TFrame \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.offtickFrame\fC [protected]\fP"

.PP
Definition at line \fB27\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "System\&.Action<\fBSyncObject\fP, \fBReadyStateEnum\fP> \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.onReadyCallbacks"

.PP
Definition at line \fB133\fP of file \fBSyncObject\&.cs\fP\&.
.SS "TFrame \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.prevFrame\fC [protected]\fP"

.PP
Runtime vars\&. 
.PP
Definition at line \fB27\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.serializeThis = true"

.PP
Definition at line \fB92\fP of file \fBSyncObject\&.cs\fP\&.
.SS "TFrame \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.snapFrame\fC [protected]\fP"

.PP
Definition at line \fB27\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "int \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.syncObjIndex\fC [protected]\fP"

.PP
Definition at line \fB100\fP of file \fBSyncObject\&.cs\fP\&.
.SS "TFrame \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.targFrame\fC [protected]\fP"

.PP
Definition at line \fB27\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.useDeltas = true\fC [protected]\fP"

.PP
Definition at line \fB57\fP of file \fBSyncObject\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "virtual bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.AllowInterpolation\fC [get]\fP"

.PP
Definition at line \fB218\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.AllowReconstructionOfEmpty\fC [get]\fP"

.PP
Definition at line \fB219\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.AllowReconstructionOfPartial\fC [get]\fP"

.PP
Definition at line \fB220\fP of file \fBSyncObjectTFrame\&.cs\fP\&.
.SS "virtual bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.AlwaysReady\fC [get]\fP"

.PP
Definition at line \fB82\fP of file \fBSyncObject\&.cs\fP\&.
.SS "virtual int \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.ApplyOrder\fC [get]\fP"

.PP
Definition at line \fB42\fP of file \fBSyncObject\&.cs\fP\&.
.SS "virtual bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.IncludeInSerialization\fC [get]\fP"

.PP
Definition at line \fB93\fP of file \fBSyncObject\&.cs\fP\&.
.SS "\fBReadyStateEnum\fP \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.ReadyState\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB106\fP of file \fBSyncObject\&.cs\fP\&.
.SS "bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.SkipWhenEmpty\fC [get]\fP"

.PP
Definition at line \fB97\fP of file \fBSyncObject\&.cs\fP\&.
.SS "int \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.SyncObjIndex\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB101\fP of file \fBSyncObject\&.cs\fP\&.
.SS "bool \fBPhoton\&.Pun\&.Simple\&.SyncObject\fP< TFrame >\&.UseDeltas\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line \fB58\fP of file \fBSyncObject\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
