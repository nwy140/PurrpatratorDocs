.TH "Photon.Pun.Simple.SyncShootBase" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.Simple.SyncShootBase \- Base class of synced projectile/hitscan sources\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPhoton\&.Pun\&.Simple\&.SyncObject< SyncShootBase\&.Frame >\fP, \fBPhoton\&.Pun\&.Simple\&.IOnNetSerialize\fP, \fBPhoton\&.Pun\&.Simple\&.IOnPostSimulate\fP, \fBPhoton\&.Pun\&.Simple\&.IOnPreUpdate\fP, \fBPhoton\&.Pun\&.Simple\&.IOnIncrementFrame\fP, \fBPhoton\&.Pun\&.Simple\&.IOnSnapshot\fP, and \fBPhoton\&.Pun\&.Simple\&.IOnInterpolate\fP\&.
.PP
Inherited by \fBPhoton\&.Pun\&.Simple\&.SyncCannon\fP, and \fBPhoton\&.Pun\&.Simple\&.SyncContactScan\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBFrame\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override void \fBOnAwakeInitialize\fP (bool isNetObject)"
.br
.RI "Awake code that will run whether or not a \fBNetObject\fP Exists "
.ti -1c
.RI "virtual void \fBOnPreUpdate\fP ()"
.br
.ti -1c
.RI "virtual void \fBQueueTrigger\fP ()"
.br
.RI "Call this on the authority to initiate a hitscan\&. "
.ti -1c
.RI "virtual \fBSerializationFlags\fP \fBOnNetSerialize\fP (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)"
.br
.ti -1c
.RI "virtual \fBSerializationFlags\fP \fBOnNetDeserialize\fP (int originFrameId, byte[] buffer, ref int bitposition, \fBFrameArrival\fP arrival)"
.br
.ti -1c
.RI "virtual void \fBOnPostSimulate\fP (int frameId, int subFrameId, bool isNetTick)"
.br
.ti -1c
.RI "virtual void \fBOnIncrementFrame\fP (int newFrameId, int newSubFrameId, int previousFrameId, int prevSubFrameId)"
.br
.RI "Since shots can be spread over the duration of a frame, we apply them onIncrement\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "KeyCode \fBtriggerKey\fP = KeyCode\&.None"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBApplySubframe\fP (int newFrameId, int newSubFrameId, int offset)"
.br
.ti -1c
.RI "abstract bool \fBTrigger\fP (\fBFrame\fP frame, int subFrameId, float timeshift=0)"
.br
.RI "Instantiate the weapon graphic and hit tests code if applicable\&. "
.ti -1c
.RI "virtual void \fBTriggerCosmetic\fP (\fBFrame\fP frame, int subFrameId, float timeshift=0)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "Transform \fBorigin\fP"
.br
.ti -1c
.RI "\fBIContactTrigger\fP \fBcontactTrigger\fP"
.br
.ti -1c
.RI "bool \fBhasSyncContact\fP"
.br
.ti -1c
.RI "bool \fBtriggerQueued\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBIContactTrigger\fP \fBContactTrigger\fP\fC [get]\fP"
.br
.ti -1c
.RI "override int \fBApplyOrder\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Base class of synced projectile/hitscan sources\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fITFrame\fP 
.RE
.PP

.PP
Definition at line \fB19\fP of file \fBSyncShootBase\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual void Photon\&.Pun\&.Simple\&.SyncShootBase\&.ApplySubframe (int newFrameId, int newSubFrameId, int offset)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB197\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.Simple\&.SyncShootBase\&.OnAwakeInitialize (bool isNetObject)\fC [virtual]\fP"

.PP
Awake code that will run whether or not a \fBNetObject\fP Exists 
.PP
\fBReturns\fP
.RS 4
Returns true if this is a \fBNetObject\fP
.RE
.PP

.PP
Reimplemented from \fBPhoton\&.Pun\&.Simple\&.NetComponent\fP\&.
.PP
Definition at line \fB72\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "virtual void Photon\&.Pun\&.Simple\&.SyncShootBase\&.OnIncrementFrame (int newFrameId, int newSubFrameId, int previousFrameId, int prevSubFrameId)\fC [virtual]\fP"

.PP
Since shots can be spread over the duration of a frame, we apply them onIncrement\&. 
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnIncrementFrame\fP\&.
.PP
Definition at line \fB180\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "virtual \fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.SyncShootBase\&.OnNetDeserialize (int originFrameId, byte[] buffer, ref int bitposition, \fBFrameArrival\fP arrival)\fC [virtual]\fP"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnNetSerialize\fP\&.
.PP
Definition at line \fB126\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "virtual \fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.SyncShootBase\&.OnNetSerialize (int frameId, byte[] buffer, ref int bitposition, \fBSerializationFlags\fP writeFlags)\fC [virtual]\fP"
Serialize TriggerMask (each
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnNetSerialize\fP\&.
.PP
Definition at line \fB103\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "virtual void Photon\&.Pun\&.Simple\&.SyncShootBase\&.OnPostSimulate (int frameId, int subFrameId, bool isNetTick)\fC [virtual]\fP"
Clear the trigger mask for new frames TODO: this is probably not good now that Snapshot will rerun on late frame arrivals
.PP
Process Fire
.PP
TODO: is this needed?
.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnPostSimulate\fP\&.
.PP
Definition at line \fB149\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "virtual void Photon\&.Pun\&.Simple\&.SyncShootBase\&.OnPreUpdate ()\fC [virtual]\fP"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnPreUpdate\fP\&.
.PP
Definition at line \fB84\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "virtual void Photon\&.Pun\&.Simple\&.SyncShootBase\&.QueueTrigger ()\fC [virtual]\fP"

.PP
Call this on the authority to initiate a hitscan\&. Actual firing may be deferred based on settings\&. 
.PP
Definition at line \fB93\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "abstract bool Photon\&.Pun\&.Simple\&.SyncShootBase\&.Trigger (\fBFrame\fP frame, int subFrameId, float timeshift = \fC0\fP)\fC [protected]\fP, \fC [pure virtual]\fP"

.PP
Instantiate the weapon graphic and hit tests code if applicable\&. Results should be stored to the frame\&. 
.PP
\fBParameters\fP
.RS 4
\fIframe\fP 
.RE
.PP

.PP
Implemented in \fBPhoton\&.Pun\&.Simple\&.SyncCannon\fP, and \fBPhoton\&.Pun\&.Simple\&.SyncContactScan\fP\&.
.SS "virtual void Photon\&.Pun\&.Simple\&.SyncShootBase\&.TriggerCosmetic (\fBFrame\fP frame, int subFrameId, float timeshift = \fC0\fP)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB211\fP of file \fBSyncShootBase\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBIContactTrigger\fP Photon\&.Pun\&.Simple\&.SyncShootBase\&.contactTrigger\fC [protected]\fP"

.PP
Definition at line \fB36\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.SyncShootBase\&.hasSyncContact\fC [protected]\fP"

.PP
Definition at line \fB39\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "Transform Photon\&.Pun\&.Simple\&.SyncShootBase\&.origin\fC [protected]\fP"

.PP
Definition at line \fB30\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "KeyCode Photon\&.Pun\&.Simple\&.SyncShootBase\&.triggerKey = KeyCode\&.None"

.PP
Definition at line \fB31\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.Simple\&.SyncShootBase\&.triggerQueued\fC [protected]\fP"

.PP
Definition at line \fB42\fP of file \fBSyncShootBase\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "override int Photon\&.Pun\&.Simple\&.SyncShootBase\&.ApplyOrder\fC [get]\fP"

.PP
Definition at line \fB44\fP of file \fBSyncShootBase\&.cs\fP\&.
.SS "\fBIContactTrigger\fP Photon\&.Pun\&.Simple\&.SyncShootBase\&.ContactTrigger\fC [get]\fP"

.PP
Definition at line \fB37\fP of file \fBSyncShootBase\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
