.TH "Photon.Pun.Simple.Vitals" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.Simple.Vitals \- Collection of \fBVitals\fP with code to propagate damage and such from higher layers to lower layers\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPhoton\&.Pun\&.Simple\&.IOnVitalValueChange\fP, and \fBPhoton\&.Pun\&.Simple\&.IOnVitalParamChange\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBInitialize\fP ()"
.br
.ti -1c
.RI "void \fBResetValues\fP ()"
.br
.ti -1c
.RI "\fBVital\fP \fBGetVital\fP (\fBVitalNameType\fP vitalNameType)"
.br
.RI "Do not use this in a hot path please\&. "
.ti -1c
.RI "int \fBGetVitalIndex\fP (\fBVitalNameType\fP vitalNameType)"
.br
.ti -1c
.RI "\fBSerializationFlags\fP \fBSerialize\fP (\fBVitalsData\fP vdata, \fBVitalsData\fP lastVData, byte[] buffer, ref int bitposition, bool keyframe)"
.br
.ti -1c
.RI "\fBSerializationFlags\fP \fBDeserialize\fP (\fBVitalsData\fP vdata, byte[] buffer, ref int bitposition, bool keyframe)"
.br
.ti -1c
.RI "void \fBApply\fP (\fBVitalsData\fP vdata)"
.br
.ti -1c
.RI "double \fBApplyCharges\fP (double discharge, bool allowOverload, bool propagate)"
.br
.ti -1c
.RI "double \fBApplyCharges\fP (\fBVitalNameType\fP vitalNameType, double discharge, bool allowOverload, bool propagate)"
.br
.ti -1c
.RI "void \fBCheckForDisrupt\fP (double consumed)"
.br
.ti -1c
.RI "void \fBDisruptRegen\fP ()"
.br
.ti -1c
.RI "void \fBDisruptDecay\fP ()"
.br
.ti -1c
.RI "void \fBOnVitalValueChange\fP (\fBVital\fP vital)"
.br
.ti -1c
.RI "void \fBOnVitalParamChange\fP (\fBVital\fP vital)"
.br
.ti -1c
.RI "void \fBSimulate\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "List< \fBIOnVitalValueChange\fP > \fBOnVitalValueChangeCallbacks\fP = new List<\fBIOnVitalValueChange\fP>()"
.br
.ti -1c
.RI "List< \fBIOnVitalParamChange\fP > \fBOnVitalParamChangeCallbacks\fP = new List<\fBIOnVitalParamChange\fP>()"
.br
.ti -1c
.RI "List< \fBVitalDefinition\fP > \fBvitalDefs\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "List< \fBVitalDefinition\fP > \fBVitalDefs\fP\fC [get]\fP"
.br
.ti -1c
.RI "\fBVital\fP[] \fBVitalArray\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Collection of \fBVitals\fP with code to propagate damage and such from higher layers to lower layers\&. 

Primary use case would be Health as the lowest level [0] and higher levels being such things as armor and shields that mitigate damage to the lowest level\&. 
.PP
Definition at line \fB23\fP of file \fBVitals\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Pun\&.Simple\&.Vitals\&.Apply (\fBVitalsData\fP vdata)"

.PP
Definition at line \fB173\fP of file \fBVitals\&.cs\fP\&.
.SS "double Photon\&.Pun\&.Simple\&.Vitals\&.ApplyCharges (double discharge, bool allowOverload, bool propagate)"

.PP
Definition at line \fB233\fP of file \fBVitals\&.cs\fP\&.
.SS "double Photon\&.Pun\&.Simple\&.Vitals\&.ApplyCharges (\fBVitalNameType\fP vitalNameType, double discharge, bool allowOverload, bool propagate)"

.PP
Definition at line \fB238\fP of file \fBVitals\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Vitals\&.CheckForDisrupt (double consumed)"

.PP
Definition at line \fB262\fP of file \fBVitals\&.cs\fP\&.
.SS "\fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.Vitals\&.Deserialize (\fBVitalsData\fP vdata, byte[] buffer, ref int bitposition, bool keyframe)"
We are using NegativeInfinity to indicate null, rather than a nullable struct
.PP
Definition at line \fB149\fP of file \fBVitals\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Vitals\&.DisruptDecay ()"

.PP
Definition at line \fB280\fP of file \fBVitals\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Vitals\&.DisruptRegen ()"

.PP
Definition at line \fB274\fP of file \fBVitals\&.cs\fP\&.
.SS "\fBVital\fP Photon\&.Pun\&.Simple\&.Vitals\&.GetVital (\fBVitalNameType\fP vitalNameType)"

.PP
Do not use this in a hot path please\&. Cache the \fBVital\fP this returns\&. 
.PP
Definition at line \fB111\fP of file \fBVitals\&.cs\fP\&.
.SS "int Photon\&.Pun\&.Simple\&.Vitals\&.GetVitalIndex (\fBVitalNameType\fP vitalNameType)"
TODO: There should be a fast lookup array for targetVital
.PP
Definition at line \fB121\fP of file \fBVitals\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Vitals\&.Initialize ()"
Create \fBVital\fP for each \fBVitalDefinition\fP at runtime
.PP
Definition at line \fB61\fP of file \fBVitals\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Vitals\&.OnVitalParamChange (\fBVital\fP vital)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnVitalParamChange\fP\&.
.PP
Definition at line \fB292\fP of file \fBVitals\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Vitals\&.OnVitalValueChange (\fBVital\fP vital)"

.PP
Implements \fBPhoton\&.Pun\&.Simple\&.IOnVitalValueChange\fP\&.
.PP
Definition at line \fB286\fP of file \fBVitals\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Vitals\&.ResetValues ()"

.PP
Definition at line \fB94\fP of file \fBVitals\&.cs\fP\&.
.SS "\fBSerializationFlags\fP Photon\&.Pun\&.Simple\&.Vitals\&.Serialize (\fBVitalsData\fP vdata, \fBVitalsData\fP lastVData, byte[] buffer, ref int bitposition, bool keyframe)"

.PP
Definition at line \fB136\fP of file \fBVitals\&.cs\fP\&.
.SS "void Photon\&.Pun\&.Simple\&.Vitals\&.Simulate ()"

.PP
Definition at line \fB298\fP of file \fBVitals\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "List<\fBIOnVitalParamChange\fP> Photon\&.Pun\&.Simple\&.Vitals\&.OnVitalParamChangeCallbacks = new List<\fBIOnVitalParamChange\fP>()"

.PP
Definition at line \fB30\fP of file \fBVitals\&.cs\fP\&.
.SS "List<\fBIOnVitalValueChange\fP> Photon\&.Pun\&.Simple\&.Vitals\&.OnVitalValueChangeCallbacks = new List<\fBIOnVitalValueChange\fP>()"

.PP
Definition at line \fB29\fP of file \fBVitals\&.cs\fP\&.
.SS "List<\fBVitalDefinition\fP> Photon\&.Pun\&.Simple\&.Vitals\&.vitalDefs"
\fBInitial value:\fP
.PP
.nf
= new List<VitalDefinition>()
        {
            new VitalDefinition (100f, 125, 125f, 1f, 1f, 1f, 1f, 1f, "Health"),
            new VitalDefinition (100f, 125, 50, \&.667f, 1f, 1f, 1f, 0f, "Armor"),
            new VitalDefinition (200f, 250, 100, 1f, 1f, 20f, 1f, 10f, "Shield"),
        }
.fi
.PP
Definition at line \fB33\fP of file \fBVitals\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "\fBVital\fP [] Photon\&.Pun\&.Simple\&.Vitals\&.VitalArray\fC [get]\fP"

.PP
Definition at line \fB45\fP of file \fBVitals\&.cs\fP\&.
.SS "List<\fBVitalDefinition\fP> Photon\&.Pun\&.Simple\&.Vitals\&.VitalDefs\fC [get]\fP"

.PP
Definition at line \fB40\fP of file \fBVitals\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
