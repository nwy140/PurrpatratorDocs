.TH "Photon.Pun.UtilityScripts.PunTurnManager" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Pun.UtilityScripts.PunTurnManager \- \fBPun\fP turnBased Game manager\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPhoton\&.Pun\&.MonoBehaviourPunCallbacks\fP, and \fBPhoton\&.Realtime\&.IOnEventCallback\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBBeginTurn\fP ()"
.br
.RI "Tells the TurnManager to begins a new turn\&. "
.ti -1c
.RI "void \fBSendMove\fP (object move, bool finished)"
.br
.RI "Call to send an action\&. "
.ti -1c
.RI "bool \fBGetPlayerFinishedTurn\fP (\fBPlayer\fP player)"
.br
.RI "Gets if the player finished the current turn\&. "
.ti -1c
.RI "void \fBOnEvent\fP (EventData photonEvent)"
.br
.RI "Called by PhotonNetwork\&.OnEventCall registration "
.ti -1c
.RI "override void \fBOnRoomPropertiesUpdate\fP (\fBHashtable\fP propertiesThatChanged)"
.br
.RI "Called by \fBPhotonNetwork\fP "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "float \fBTurnDuration\fP = 20f"
.br
.RI "The duration of the turn in seconds\&. "
.ti -1c
.RI "\fBIPunTurnManagerCallbacks\fP \fBTurnManagerListener\fP"
.br
.RI "The turn manager listener\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "const byte \fBTurnManagerEventOffset\fP = 0"
.br
.RI "The turn manager event offset event message byte\&. "
.ti -1c
.RI "const byte \fBEvMove\fP = 1 + \fBTurnManagerEventOffset\fP"
.br
.RI "The Move event message byte\&. "
.ti -1c
.RI "const byte \fBEvFinalMove\fP = 2 + \fBTurnManagerEventOffset\fP"
.br
.RI "The Final Move event message byte\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "int \fBTurn\fP\fC [get]\fP"
.br
.RI "Wraps accessing the 'turn' custom properties of a room\&. "
.ti -1c
.RI "float \fBElapsedTimeInTurn\fP\fC [get]\fP"
.br
.RI "Gets the elapsed time in the current turn in seconds "
.ti -1c
.RI "float \fBRemainingSecondsInTurn\fP\fC [get]\fP"
.br
.RI "Gets the remaining seconds for the current turn\&. "
.ti -1c
.RI "bool \fBIsCompletedByAll\fP\fC [get]\fP"
.br
.RI "Gets a value indicating whether the turn is completed by all\&. "
.ti -1c
.RI "bool \fBIsFinishedByMe\fP\fC [get]\fP"
.br
.RI "Gets a value indicating whether the current turn is finished by me\&. "
.ti -1c
.RI "bool \fBIsOver\fP\fC [get]\fP"
.br
.RI "Gets a value indicating whether the current turn is over\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBPun\fP turnBased Game manager\&. 

Provides an Interface (\fBIPunTurnManagerCallbacks\fP) for the typical turn flow and logic, between players Provides Extensions for Player, Room and RoomInfo to feature dedicated api for TurnBased Needs 
.PP
Definition at line \fB28\fP of file \fBPunTurnManager\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.BeginTurn ()"

.PP
Tells the TurnManager to begins a new turn\&. 
.PP
Definition at line \fB155\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.GetPlayerFinishedTurn (\fBPlayer\fP player)"

.PP
Gets if the player finished the current turn\&. 
.PP
\fBReturns\fP
.RS 4
\fCtrue\fP, if player finished the current turn, \fCfalse\fP otherwise\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIplayer\fP The Player to check for
.RE
.PP

.PP
Definition at line \fB197\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.OnEvent (EventData photonEvent)"

.PP
Called by PhotonNetwork\&.OnEventCall registration 
.PP
\fBParameters\fP
.RS 4
\fIphotonEvent\fP \fBPhoton\fP event\&.
.RE
.PP

.PP
Implements \fBPhoton\&.Realtime\&.IOnEventCallback\fP\&.
.PP
Definition at line \fB257\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "override void Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.OnRoomPropertiesUpdate (\fBHashtable\fP propertiesThatChanged)\fC [virtual]\fP"

.PP
Called by \fBPhotonNetwork\fP 
.PP
\fBParameters\fP
.RS 4
\fIpropertiesThatChanged\fP Properties that changed\&.
.RE
.PP

.PP
Reimplemented from \fBPhoton\&.Pun\&.MonoBehaviourPunCallbacks\fP\&.
.PP
Definition at line \fB266\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "void Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.SendMove (object move, bool finished)"

.PP
Call to send an action\&. Optionally finish the turn, too\&. The move object can be anything\&. Try to optimize though and only send the strict minimum set of information to define the turn move\&. 
.PP
\fBParameters\fP
.RS 4
\fImove\fP 
.br
\fIfinished\fP 
.RE
.PP

.PP
Definition at line \fB167\fP of file \fBPunTurnManager\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "const byte Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.EvFinalMove = 2 + \fBTurnManagerEventOffset\fP\fC [static]\fP"

.PP
The Final Move event message byte\&. Used internaly for saving data in Room Custom Properties 
.PP
Definition at line \fB129\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "const byte Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.EvMove = 1 + \fBTurnManagerEventOffset\fP\fC [static]\fP"

.PP
The Move event message byte\&. Used internaly for saving data in Room Custom Properties 
.PP
Definition at line \fB124\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "float Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.TurnDuration = 20f"

.PP
The duration of the turn in seconds\&. 
.PP
Definition at line \fB56\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "const byte Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.TurnManagerEventOffset = 0\fC [static]\fP"

.PP
The turn manager event offset event message byte\&. Used internaly for defining data in Room Custom Properties 
.PP
Definition at line \fB119\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "\fBIPunTurnManagerCallbacks\fP Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.TurnManagerListener"

.PP
The turn manager listener\&. Set this to your own script instance to catch Callbacks 
.PP
Definition at line \fB108\fP of file \fBPunTurnManager\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "float Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.ElapsedTimeInTurn\fC [get]\fP"

.PP
Gets the elapsed time in the current turn in seconds The elapsed time in the turn\&.
.PP
Definition at line \fB62\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.IsCompletedByAll\fC [get]\fP"

.PP
Gets a value indicating whether the turn is completed by all\&. \fCtrue\fP if this turn is completed by all; otherwise, \fCfalse\fP\&.
.PP
Definition at line \fB82\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.IsFinishedByMe\fC [get]\fP"

.PP
Gets a value indicating whether the current turn is finished by me\&. \fCtrue\fP if the current turn is finished by me; otherwise, \fCfalse\fP\&.
.PP
Definition at line \fB91\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "bool Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.IsOver\fC [get]\fP"

.PP
Gets a value indicating whether the current turn is over\&. That is the ElapsedTimeinTurn is greater or equal to the TurnDuration 
.PP
\fCtrue\fP if the current turn is over; otherwise, \fCfalse\fP\&.
.PP
Definition at line \fB100\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "float Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.RemainingSecondsInTurn\fC [get]\fP"

.PP
Gets the remaining seconds for the current turn\&. Ranges from 0 to TurnDuration 
.PP
The remaining seconds fo the current turn
.PP
Definition at line \fB72\fP of file \fBPunTurnManager\&.cs\fP\&.
.SS "int Photon\&.Pun\&.UtilityScripts\&.PunTurnManager\&.Turn\fC [get]\fP"

.PP
Wraps accessing the 'turn' custom properties of a room\&. The turn index
.PP
Definition at line \fB40\fP of file \fBPunTurnManager\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
