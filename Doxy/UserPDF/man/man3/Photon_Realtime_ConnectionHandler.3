.TH "Photon.Realtime.ConnectionHandler" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Realtime.ConnectionHandler
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBPhoton\&.Pun\&.PhotonHandler\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBStartFallbackSendAckThread\fP ()"
.br
.ti -1c
.RI "void \fBStopFallbackSendAckThread\fP ()"
.br
.ti -1c
.RI "bool \fBRealtimeFallbackThread\fP ()"
.br
.RI "A thread which runs independent from the Update() calls\&. Keeps connections online while loading or in background\&. See \fBKeepAliveInBackground\fP\&."
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBDisconnectAfterKeepAlive\fP = false"
.br
.RI "Option to let the fallback thread call Disconnect after the KeepAliveInBackground time\&. "
.ti -1c
.RI "int \fBKeepAliveInBackground\fP = 60000"
.br
.RI "Defines for how long the Fallback Thread should keep the connection, before it may time out as usual\&. "
.ti -1c
.RI "bool \fBApplyDontDestroyOnLoad\fP = true"
.br
.RI "Keeps the \fBConnectionHandler\fP, even if a new scene gets loaded\&."
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static bool \fBAppQuits\fP"
.br
.RI "Indicates that the app is closing\&. Set in OnApplicationQuit()\&."
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBLoadBalancingClient\fP \fBClient\fP\fC [getset]\fP"
.br
.RI "\fBPhoton\fP client to log information and statistics from\&. "
.ti -1c
.RI "int \fBCountSendAcksOnly\fP\fC [get]\fP"
.br
.RI "Counts how often the Fallback Thread called SendAcksOnly, which is purely of interest to monitor if the game logic called SendOutgoingCommands as intended\&."
.ti -1c
.RI "bool \fBFallbackThreadRunning\fP\fC [get]\fP"
.br
.RI "True if a fallback thread is running\&. Will call the client's SendAcksOnly() method to keep the connection up\&."
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB31\fP of file \fBConnectionHandler\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "bool Photon\&.Realtime\&.ConnectionHandler\&.RealtimeFallbackThread ()"

.PP
A thread which runs independent from the Update() calls\&. Keeps connections online while loading or in background\&. See \fBKeepAliveInBackground\fP\&.
.PP
Definition at line \fB157\fP of file \fBConnectionHandler\&.cs\fP\&.
.SS "void Photon\&.Realtime\&.ConnectionHandler\&.StartFallbackSendAckThread ()"

.PP
Definition at line \fB126\fP of file \fBConnectionHandler\&.cs\fP\&.
.SS "void Photon\&.Realtime\&.ConnectionHandler\&.StopFallbackSendAckThread ()"

.PP
Definition at line \fB142\fP of file \fBConnectionHandler\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "bool Photon\&.Realtime\&.ConnectionHandler\&.ApplyDontDestroyOnLoad = true"

.PP
Keeps the \fBConnectionHandler\fP, even if a new scene gets loaded\&.
.PP
Definition at line \fB62\fP of file \fBConnectionHandler\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.ConnectionHandler\&.AppQuits\fC [static]\fP"

.PP
Indicates that the app is closing\&. Set in OnApplicationQuit()\&.
.PP
Definition at line \fB66\fP of file \fBConnectionHandler\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.ConnectionHandler\&.DisconnectAfterKeepAlive = false"

.PP
Option to let the fallback thread call Disconnect after the KeepAliveInBackground time\&. Default: false\&.
.PP
If set to true, the thread will disconnect the client regularly, should the client not call SendOutgoingCommands / Service\&. This may happen due to an app being in background (and not getting a lot of CPU time) or when loading assets\&.
.PP
If false, a regular timeout time will have to pass (on top) to time out the client\&. 
.PP
Definition at line \fB46\fP of file \fBConnectionHandler\&.cs\fP\&.
.SS "int Photon\&.Realtime\&.ConnectionHandler\&.KeepAliveInBackground = 60000"

.PP
Defines for how long the Fallback Thread should keep the connection, before it may time out as usual\&. We want to the Client to keep it's connection when an app is in the background (and doesn't call Update / Service Clients should not keep their connection indefinitely in the background, so after some milliseconds, the Fallback Thread should stop keeping it up\&.
.PP
Definition at line \fB50\fP of file \fBConnectionHandler\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "\fBLoadBalancingClient\fP Photon\&.Realtime\&.ConnectionHandler\&.Client\fC [get]\fP, \fC [set]\fP"

.PP
\fBPhoton\fP client to log information and statistics from\&. 
.PP
Definition at line \fB37\fP of file \fBConnectionHandler\&.cs\fP\&.
.SS "int Photon\&.Realtime\&.ConnectionHandler\&.CountSendAcksOnly\fC [get]\fP"

.PP
Counts how often the Fallback Thread called SendAcksOnly, which is purely of interest to monitor if the game logic called SendOutgoingCommands as intended\&.
.PP
Definition at line \fB53\fP of file \fBConnectionHandler\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.ConnectionHandler\&.FallbackThreadRunning\fC [get]\fP"

.PP
True if a fallback thread is running\&. Will call the client's SendAcksOnly() method to keep the connection up\&.
.PP
Definition at line \fB56\fP of file \fBConnectionHandler\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
