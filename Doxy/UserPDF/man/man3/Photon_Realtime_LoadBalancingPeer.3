.TH "Photon.Realtime.LoadBalancingPeer" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Realtime.LoadBalancingPeer \- A \fBLoadBalancingPeer\fP provides the operations and enum definitions needed to use the LoadBalancing server application which is also used in \fBPhoton\fP Cloud\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits PhotonPeer\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLoadBalancingPeer\fP (ConnectionProtocol protocolType)"
.br
.RI "Creates a Peer with specified connection protocol\&. "
.ti -1c
.RI "\fBLoadBalancingPeer\fP (IPhotonPeerListener listener, ConnectionProtocol protocolType)"
.br
.RI "Creates a Peer with specified connection protocol and a Listener for callbacks\&. "
.ti -1c
.RI "virtual bool \fBOpGetRegions\fP (string appId)"
.br
.ti -1c
.RI "virtual bool \fBOpJoinLobby\fP (\fBTypedLobby\fP lobby=null)"
.br
.RI "Joins the lobby on the Master Server, where you get a list of RoomInfos of currently open rooms\&. "
.ti -1c
.RI "virtual bool \fBOpLeaveLobby\fP ()"
.br
.RI "Leaves the lobby on the Master Server\&. "
.ti -1c
.RI "virtual bool \fBOpCreateRoom\fP (\fBEnterRoomParams\fP opParams)"
.br
.RI "Creates a room (on either Master or Game Server)\&. "
.ti -1c
.RI "virtual bool \fBOpJoinRoom\fP (\fBEnterRoomParams\fP opParams)"
.br
.RI "Joins a room by name or creates new room if room with given name not exists\&. "
.ti -1c
.RI "virtual bool \fBOpJoinRandomRoom\fP (\fBOpJoinRandomRoomParams\fP opJoinRandomRoomParams)"
.br
.RI "Operation to join a random, available room\&. "
.ti -1c
.RI "virtual bool \fBOpJoinRandomOrCreateRoom\fP (\fBOpJoinRandomRoomParams\fP opJoinRandomRoomParams, \fBEnterRoomParams\fP createRoomParams)"
.br
.RI "Only used on the Master Server\&. "
.ti -1c
.RI "virtual bool \fBOpLeaveRoom\fP (bool becomeInactive, bool sendAuthCookie=false)"
.br
.RI "Leaves a room with option to come back later or 'for good'\&. "
.ti -1c
.RI "virtual bool \fBOpGetGameList\fP (\fBTypedLobby\fP lobby, string queryData)"
.br
.RI "Gets a list of games matching a SQL-like where clause\&. "
.ti -1c
.RI "virtual bool \fBOpFindFriends\fP (string[] friendsToFind, \fBFindFriendsOptions\fP options=null)"
.br
.RI "Request the rooms and online status for a list of friends (each client must set a unique username via OpAuthenticate)\&. "
.ti -1c
.RI "bool \fBOpSetCustomPropertiesOfActor\fP (int actorNr, \fBHashtable\fP actorProperties)"
.br
.ti -1c
.RI "bool \fBOpSetCustomPropertiesOfRoom\fP (\fBHashtable\fP gameProperties)"
.br
.ti -1c
.RI "virtual bool \fBOpAuthenticate\fP (string appId, string appVersion, \fBAuthenticationValues\fP authValues, string regionCode, bool getLobbyStatistics)"
.br
.RI "Sends this app's appId and appVersion to identify this application server side\&. "
.ti -1c
.RI "virtual bool \fBOpAuthenticateOnce\fP (string appId, string appVersion, \fBAuthenticationValues\fP authValues, string regionCode, \fBEncryptionMode\fP encryptionMode, ConnectionProtocol expectedProtocol)"
.br
.RI "Sends this app's appId and appVersion to identify this application server side\&. "
.ti -1c
.RI "virtual bool \fBOpChangeGroups\fP (byte[] groupsToRemove, byte[] groupsToAdd)"
.br
.RI "Operation to handle this client's interest groups (for events in room)\&. "
.ti -1c
.RI "virtual bool \fBOpRaiseEvent\fP (byte eventCode, object customEventContent, \fBRaiseEventOptions\fP raiseEventOptions, SendOptions sendOptions)"
.br
.RI "Send an event with custom code/type and any content to the other players in the same room\&. "
.ti -1c
.RI "virtual bool \fBOpSettings\fP (bool receiveLobbyStats)"
.br
.RI "Internally used operation to set some 'per server' settings\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "bool \fBOpSetPropertyOfRoom\fP (byte propCode, object value)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A \fBLoadBalancingPeer\fP provides the operations and enum definitions needed to use the LoadBalancing server application which is also used in \fBPhoton\fP Cloud\&. 

This class is internally used\&. The \fBLoadBalancingPeer\fP does not keep a state, instead this is done by a \fBLoadBalancingClient\fP\&. 
.PP
Definition at line \fB41\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Photon\&.Realtime\&.LoadBalancingPeer\&.LoadBalancingPeer (ConnectionProtocol protocolType)"

.PP
Creates a Peer with specified connection protocol\&. You need to set the Listener before using the peer\&. 
.PP
Each connection protocol has it's own default networking ports for \fBPhoton\fP\&.
.PP
\fBParameters\fP
.RS 4
\fIprotocolType\fP The preferred option is UDP\&.
.RE
.PP

.PP
Definition at line \fB63\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "Photon\&.Realtime\&.LoadBalancingPeer\&.LoadBalancingPeer (IPhotonPeerListener listener, ConnectionProtocol protocolType)"

.PP
Creates a Peer with specified connection protocol and a Listener for callbacks\&. 
.PP
Definition at line \fB74\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpAuthenticate (string appId, string appVersion, \fBAuthenticationValues\fP authValues, string regionCode, bool getLobbyStatistics)\fC [virtual]\fP"

.PP
Sends this app's appId and appVersion to identify this application server side\&. This is an async request which triggers a OnOperationResponse() call\&. 
.PP
This operation makes use of encryption, if that is established before\&. See: EstablishEncryption()\&. Check encryption with IsEncryptionAvailable\&. This operation is allowed only once per connection (multiple calls will have \fBErrorCode\fP != Ok)\&. 
.PP
\fBParameters\fP
.RS 4
\fIappId\fP Your application's name or ID to authenticate\&. This is assigned by \fBPhoton\fP Cloud (webpage)\&.
.br
\fIappVersion\fP The client's version (clients with differing client appVersions are separated and players don't meet)\&.
.br
\fIauthValues\fP Contains all values relevant for authentication\&. Even without account system (external Custom Auth), the clients are allowed to identify themselves\&.
.br
\fIregionCode\fP Optional region code, if the client should connect to a specific \fBPhoton\fP Cloud \fBRegion\fP\&.
.br
\fIgetLobbyStatistics\fP Set to true on Master Server to receive 'Lobby Statistics' events\&.
.RE
.PP
\fBReturns\fP
.RS 4
If the operation could be sent (has to be connected)\&.
.RE
.PP

.PP
Definition at line \fB729\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpAuthenticateOnce (string appId, string appVersion, \fBAuthenticationValues\fP authValues, string regionCode, \fBEncryptionMode\fP encryptionMode, ConnectionProtocol expectedProtocol)\fC [virtual]\fP"

.PP
Sends this app's appId and appVersion to identify this application server side\&. This is an async request which triggers a OnOperationResponse() call\&. 
.PP
This operation makes use of encryption, if that is established before\&. See: EstablishEncryption()\&. Check encryption with IsEncryptionAvailable\&. This operation is allowed only once per connection (multiple calls will have \fBErrorCode\fP != Ok)\&. 
.PP
\fBParameters\fP
.RS 4
\fIappId\fP Your application's name or ID to authenticate\&. This is assigned by \fBPhoton\fP Cloud (webpage)\&.
.br
\fIappVersion\fP The client's version (clients with differing client appVersions are separated and players don't meet)\&.
.br
\fIauthValues\fP Optional authentication values\&. The client can set no values or a UserId or some parameters for Custom Authentication by a server\&.
.br
\fIregionCode\fP Optional region code, if the client should connect to a specific \fBPhoton\fP Cloud \fBRegion\fP\&.
.br
\fIencryptionMode\fP 
.br
\fIexpectedProtocol\fP 
.RE
.PP
\fBReturns\fP
.RS 4
If the operation could be sent (has to be connected)\&.
.RE
.PP

.PP
Definition at line \fB804\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpChangeGroups (byte[] groupsToRemove, byte[] groupsToAdd)\fC [virtual]\fP"

.PP
Operation to handle this client's interest groups (for events in room)\&. Note the difference between passing null and byte[0]: null won't add/remove any groups\&. byte[0] will add/remove all (existing) groups\&. First, removing groups is executed\&. This way, you could leave all groups and join only the ones provided\&.
.PP
Changes become active not immediately but when the server executes this operation (approximately RTT/2)\&. 
.PP
\fBParameters\fP
.RS 4
\fIgroupsToRemove\fP Groups to remove from interest\&. Null will not remove any\&. A byte[0] will remove all\&.
.br
\fIgroupsToAdd\fP Groups to add to interest\&. Null will not add any\&. A byte[0] will add all current\&.
.RE
.PP
\fBReturns\fP
.RS 4
If operation could be enqueued for sending\&. Sent when calling: Service or SendOutgoingCommands\&.
.RE
.PP

.PP
Definition at line \fB882\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpCreateRoom (\fBEnterRoomParams\fP opParams)\fC [virtual]\fP"

.PP
Creates a room (on either Master or Game Server)\&. The OperationResponse depends on the server the peer is connected to: Master will return a Game Server to connect to\&. Game Server will return the joined \fBRoom\fP's data\&. This is an async request which triggers a OnOperationResponse() call\&. 
.PP
If the room is already existing, the OperationResponse will have a returnCode of ErrorCode\&.GameAlreadyExists\&. 
.PP
Definition at line \fB280\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpFindFriends (string[] friendsToFind, \fBFindFriendsOptions\fP options = \fCnull\fP)\fC [virtual]\fP"

.PP
Request the rooms and online status for a list of friends (each client must set a unique username via OpAuthenticate)\&. Used on Master Server to find the rooms played by a selected list of users\&. Users identify themselves by using OpAuthenticate with a unique user ID\&. The list of user IDs must be fetched from some other source (not provided by \fBPhoton\fP)\&.
.PP
The server response includes 2 arrays of info (each index matching a friend from the request):
.br
 \fBParameterCode\&.FindFriendsResponseOnlineList\fP = bool[] of online states
.br
 \fBParameterCode\&.FindFriendsResponseRoomIdList\fP = string[] of room names (empty string if not in a room)
.br
 
.br
 The options may be used to define which state a room must match to be returned\&. 
.PP
\fBParameters\fP
.RS 4
\fIfriendsToFind\fP Array of friend's names (make sure they are unique)\&.
.br
\fIoptions\fP Options that affect the result of the FindFriends operation\&.
.RE
.PP
\fBReturns\fP
.RS 4
If the operation could be sent (requires connection)\&.
.RE
.PP

.PP
Definition at line \fB599\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpGetGameList (\fBTypedLobby\fP lobby, string queryData)\fC [virtual]\fP"

.PP
Gets a list of games matching a SQL-like where clause\&. Operation is only available in lobbies of type SqlLobby\&. This is an async request which triggers a OnOperationResponse() call\&. Returned game list is stored in RoomInfoList\&. 
.PP
https://doc\&.photonengine\&.com/en-us/realtime/current/reference/matchmaking-and-lobby::sql_lobby_type 
.PP
\fBParameters\fP
.RS 4
\fIlobby\fP The lobby to query\&. Has to be of type SqlLobby\&.
.br
\fIqueryData\fP The sql query statement\&.
.RE
.PP
\fBReturns\fP
.RS 4
If the operation could be sent (has to be connected)\&.
.RE
.PP

.PP
Definition at line \fB531\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpGetRegions (string appId)\fC [virtual]\fP"

.PP
Definition at line \fB126\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpJoinLobby (\fBTypedLobby\fP lobby = \fCnull\fP)\fC [virtual]\fP"

.PP
Joins the lobby on the Master Server, where you get a list of RoomInfos of currently open rooms\&. This is an async request which triggers a OnOperationResponse() call\&. 
.PP
\fBParameters\fP
.RS 4
\fIlobby\fP The lobby join to\&.
.RE
.PP
\fBReturns\fP
.RS 4
If the operation could be sent (has to be connected)\&.
.RE
.PP

.PP
Definition at line \fB140\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpJoinRandomOrCreateRoom (\fBOpJoinRandomRoomParams\fP opJoinRandomRoomParams, \fBEnterRoomParams\fP createRoomParams)\fC [virtual]\fP"

.PP
Only used on the Master Server\&. It will assign a game server and room to join-or-create\&. On the Game Server, the OpJoin is used with option 'create if not exists'\&. 
.PP
Definition at line \fB437\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpJoinRandomRoom (\fBOpJoinRandomRoomParams\fP opJoinRandomRoomParams)\fC [virtual]\fP"

.PP
Operation to join a random, available room\&. Overloads take additional player properties\&. This is an async request which triggers a OnOperationResponse() call\&. If all rooms are closed or full, the OperationResponse will have a returnCode of \fBErrorCode\&.NoRandomMatchFound\fP\&. If successful, the OperationResponse contains a gameserver address and the name of some room\&. 
.PP
\fBReturns\fP
.RS 4
If the operation could be sent currently (requires connection)\&.
.RE
.PP

.PP
Definition at line \fB388\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpJoinRoom (\fBEnterRoomParams\fP opParams)\fC [virtual]\fP"

.PP
Joins a room by name or creates new room if room with given name not exists\&. The OperationResponse depends on the server the peer is connected to: Master will return a Game Server to connect to\&. Game Server will return the joined \fBRoom\fP's data\&. This is an async request which triggers a OnOperationResponse() call\&. 
.PP
If the room is not existing (anymore), the OperationResponse will have a returnCode of \fBErrorCode\&.GameDoesNotExist\fP\&. Other possible ErrorCodes are: GameClosed, GameFull\&. 
.PP
\fBReturns\fP
.RS 4
If the operation could be sent (requires connection)\&.
.RE
.PP

.PP
Definition at line \fB330\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpLeaveLobby ()\fC [virtual]\fP"

.PP
Leaves the lobby on the Master Server\&. This is an async request which triggers a OnOperationResponse() call\&. 
.PP
\fBReturns\fP
.RS 4
If the operation could be sent (requires connection)\&.
.RE
.PP

.PP
Definition at line \fB164\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpLeaveRoom (bool becomeInactive, bool sendAuthCookie = \fCfalse\fP)\fC [virtual]\fP"

.PP
Leaves a room with option to come back later or 'for good'\&. 
.PP
\fBParameters\fP
.RS 4
\fIbecomeInactive\fP Async games can be re-joined (loaded) later on\&. Set to false, if you want to abandon a game entirely\&.
.br
\fIsendAuthCookie\fP WebFlag: Securely transmit the encrypted object AuthCookie to the web service in PathLeave webhook when available
.RE
.PP
\fBReturns\fP
.RS 4
If the opteration can be send currently\&.
.RE
.PP

.PP
Definition at line \fB507\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpRaiseEvent (byte eventCode, object customEventContent, \fBRaiseEventOptions\fP raiseEventOptions, SendOptions sendOptions)\fC [virtual]\fP"

.PP
Send an event with custom code/type and any content to the other players in the same room\&. This override explicitly uses another parameter order to not mix it up with the implementation for Hashtable only\&.
.PP
\fBParameters\fP
.RS 4
\fIeventCode\fP Identifies this type of event (and the content)\&. Your game's event codes can start with 0\&.
.br
\fIcustomEventContent\fP Any serializable datatype (including Hashtable like the other OpRaiseEvent overloads)\&.
.br
\fIraiseEventOptions\fP Contains (slightly) less often used options\&. If you pass null, the default options will be used\&.
.br
\fIsendOptions\fP Send options for reliable, encryption etc
.RE
.PP
\fBReturns\fP
.RS 4
If operation could be enqueued for sending\&. Sent when calling: Service or SendOutgoingCommands\&.
.RE
.PP

.PP
Definition at line \fB912\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpSetCustomPropertiesOfActor (int actorNr, \fBHashtable\fP actorProperties)"

.PP
Definition at line \fB615\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpSetCustomPropertiesOfRoom (\fBHashtable\fP gameProperties)"

.PP
Definition at line \fB670\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpSetPropertyOfRoom (byte propCode, object value)\fC [protected]\fP"

.PP
Definition at line \fB663\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "virtual bool Photon\&.Realtime\&.LoadBalancingPeer\&.OpSettings (bool receiveLobbyStats)\fC [virtual]\fP"

.PP
Internally used operation to set some 'per server' settings\&. This is for the Master Server\&. 
.PP
\fBParameters\fP
.RS 4
\fIreceiveLobbyStats\fP Set to true, to get Lobby Statistics (lists of existing lobbies)\&.
.RE
.PP
\fBReturns\fP
.RS 4
False if the operation could not be sent\&.
.RE
.PP

.PP
Definition at line \fB979\fP of file \fBLoadbalancingPeer\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
