.TH "Photon.Realtime.ParameterCode" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Realtime.ParameterCode \- Class for constants\&.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "const byte \fBSuppressRoomEvents\fP = 237"
.br
.RI "(237) A bool parameter for creating games\&. If set to true, no room events are sent to the clients on join and leave\&. Default: false (and not sent)\&."
.ti -1c
.RI "const byte \fBEmptyRoomTTL\fP = 236"
.br
.RI "(236) Time To Live (TTL) for a room when the last player leaves\&. Keeps room in memory for case a player re-joins soon\&. In milliseconds\&."
.ti -1c
.RI "const byte \fBPlayerTTL\fP = 235"
.br
.RI "(235) Time To Live (TTL) for an 'actor' in a room\&. If a client disconnects, this actor is inactive first and removed after this timeout\&. In milliseconds\&."
.ti -1c
.RI "const byte \fBEventForward\fP = 234"
.br
.RI "(234) Optional parameter of OpRaiseEvent and OpSetCustomProperties to forward the event/operation to a web-service\&."
.ti -1c
.RI "const byte \fBIsComingBack\fP = (byte)233"
.br
.RI "(233) Optional parameter of OpLeave in async games\&. If false, the player does abandons the game (forever)\&. By default players become inactive and can re-join\&."
.ti -1c
.RI "const byte \fBIsInactive\fP = (byte)233"
.br
.RI "(233) Used in EvLeave to describe if a user is inactive (and might come back) or not\&. In rooms with PlayerTTL, becoming inactive is the default case\&."
.ti -1c
.RI "const byte \fBCheckUserOnJoin\fP = (byte)232"
.br
.RI "(232) Used when creating rooms to define if any userid can join the room only once\&."
.ti -1c
.RI "const byte \fBExpectedValues\fP = (byte)231"
.br
.RI "(231) Code for 'Check And Swap' (CAS) when changing properties\&."
.ti -1c
.RI "const byte \fBAddress\fP = 230"
.br
.RI "(230) Address of a (game) server to use\&."
.ti -1c
.RI "const byte \fBPeerCount\fP = 229"
.br
.RI "(229) Count of players in this application in a rooms (used in stats event)"
.ti -1c
.RI "const byte \fBGameCount\fP = 228"
.br
.RI "(228) Count of games in this application (used in stats event)"
.ti -1c
.RI "const byte \fBMasterPeerCount\fP = 227"
.br
.RI "(227) Count of players on the master server (in this app, looking for rooms)"
.ti -1c
.RI "const byte \fBUserId\fP = 225"
.br
.RI "(225) User's ID"
.ti -1c
.RI "const byte \fBApplicationId\fP = 224"
.br
.RI "(224) Your application's ID: a name on your own \fBPhoton\fP or a GUID on the \fBPhoton\fP Cloud"
.ti -1c
.RI "const byte \fBPosition\fP = 223"
.br
.RI "(223) Not used currently (as 'Position')\&. If you get queued before connect, this is your position"
.ti -1c
.RI "const byte \fBMatchMakingType\fP = 223"
.br
.RI "(223) Modifies the matchmaking algorithm used for OpJoinRandom\&. Allowed parameter values are defined in enum MatchmakingMode\&."
.ti -1c
.RI "const byte \fBGameList\fP = 222"
.br
.RI "(222) List of RoomInfos about open / listed rooms"
.ti -1c
.RI "const byte \fBToken\fP = 221"
.br
.RI "(221) Internally used to establish encryption"
.ti -1c
.RI "const byte \fBAppVersion\fP = 220"
.br
.RI "(220) Version of your application"
.ti -1c
.RI "const byte \fBAzureNodeInfo\fP = 210"
.br
.RI "(210) Internally used in case of hosting by Azure"
.ti -1c
.RI "const byte \fBAzureLocalNodeId\fP = 209"
.br
.RI "(209) Internally used in case of hosting by Azure"
.ti -1c
.RI "const byte \fBAzureMasterNodeId\fP = 208"
.br
.RI "(208) Internally used in case of hosting by Azure"
.ti -1c
.RI "const byte \fBRoomName\fP = (byte)255"
.br
.RI "(255) Code for the gameId/roomName (a unique name per room)\&. Used in OpJoin and similar\&."
.ti -1c
.RI "const byte \fBBroadcast\fP = (byte)250"
.br
.RI "(250) Code for broadcast parameter of OpSetProperties method\&."
.ti -1c
.RI "const byte \fBActorList\fP = (byte)252"
.br
.RI "(252) Code for list of players in a room\&."
.ti -1c
.RI "const byte \fBActorNr\fP = (byte)254"
.br
.RI "(254) Code of the Actor of an operation\&. Used for property get and set\&."
.ti -1c
.RI "const byte \fBPlayerProperties\fP = (byte)249"
.br
.RI "(249) Code for property set (Hashtable)\&."
.ti -1c
.RI "const byte \fBCustomEventContent\fP = (byte)245"
.br
.RI "(245) Code of data/custom content of an event\&. Used in OpRaiseEvent\&."
.ti -1c
.RI "const byte \fBData\fP = (byte)245"
.br
.RI "(245) Code of data of an event\&. Used in OpRaiseEvent\&."
.ti -1c
.RI "const byte \fBCode\fP = (byte)244"
.br
.RI "(244) Code used when sending some code-related parameter, like OpRaiseEvent's event-code\&. "
.ti -1c
.RI "const byte \fBGameProperties\fP = (byte)248"
.br
.RI "(248) Code for property set (Hashtable)\&."
.ti -1c
.RI "const byte \fBProperties\fP = (byte)251"
.br
.RI "(251) Code for property-set (Hashtable)\&. "
.ti -1c
.RI "const byte \fBTargetActorNr\fP = (byte)253"
.br
.RI "(253) Code of the target Actor of an operation\&. Used for property set\&. Is 0 for game"
.ti -1c
.RI "const byte \fBReceiverGroup\fP = (byte)246"
.br
.RI "(246) Code to select the receivers of events (used in Lite, Operation RaiseEvent)\&."
.ti -1c
.RI "const byte \fBCache\fP = (byte)247"
.br
.RI "(247) Code for caching events while raising them\&."
.ti -1c
.RI "const byte \fBCleanupCacheOnLeave\fP = (byte)241"
.br
.RI "(241) Bool parameter of CreateGame Operation\&. If true, server cleans up roomcache of leaving players (their cached events get removed)\&."
.ti -1c
.RI "const byte \fBGroup\fP = 240"
.br
.RI "(240) Code for 'group' operation-parameter (as used in Op RaiseEvent)\&."
.ti -1c
.RI "const byte \fBRemove\fP = 239"
.br
.RI "(239) The 'Remove' operation-parameter can be used to remove something from a list\&. E\&.g\&. remove groups from player's interest groups\&."
.ti -1c
.RI "const byte \fBPublishUserId\fP = 239"
.br
.RI "(239) Used in Op Join to define if UserIds of the players are broadcast in the room\&. Useful for FindFriends and reserving slots for expected users\&."
.ti -1c
.RI "const byte \fBAdd\fP = 238"
.br
.RI "(238) The 'Add' operation-parameter can be used to add something to some list or set\&. E\&.g\&. add groups to player's interest groups\&."
.ti -1c
.RI "const byte \fBInfo\fP = 218"
.br
.RI "(218) Content for \fBEventCode\&.ErrorInfo\fP and internal debug operations\&."
.ti -1c
.RI "const byte \fBClientAuthenticationType\fP = 217"
.br
.RI "(217) This key's (byte) value defines the target custom authentication type/service the client connects with\&. Used in OpAuthenticate"
.ti -1c
.RI "const byte \fBClientAuthenticationParams\fP = 216"
.br
.RI "(216) This key's (string) value provides parameters sent to the custom authentication type/service the client connects with\&. Used in OpAuthenticate"
.ti -1c
.RI "const byte \fBJoinMode\fP = 215"
.br
.RI "(215) Makes the server create a room if it doesn't exist\&. OpJoin uses this to always enter a room, unless it exists and is full/closed\&."
.ti -1c
.RI "const byte \fBClientAuthenticationData\fP = 214"
.br
.RI "(214) This key's (string or byte[]) value provides parameters sent to the custom authentication service setup in \fBPhoton\fP Dashboard\&. Used in OpAuthenticate"
.ti -1c
.RI "const byte \fBMasterClientId\fP = (byte)203"
.br
.RI "(203) Code for MasterClientId, which is synced by server\&. "
.ti -1c
.RI "const byte \fBFindFriendsRequestList\fP = (byte)1"
.br
.RI "(1) Used in Op FindFriends request\&. Value must be string[] of friends to look up\&."
.ti -1c
.RI "const byte \fBFindFriendsOptions\fP = (byte)2"
.br
.RI "(2) Used in Op FindFriends request\&. An integer containing option-flags to filter the results\&."
.ti -1c
.RI "const byte \fBFindFriendsResponseOnlineList\fP = (byte)1"
.br
.RI "(1) Used in Op FindFriends response\&. Contains bool[] list of online states (false if not online)\&."
.ti -1c
.RI "const byte \fBFindFriendsResponseRoomIdList\fP = (byte)2"
.br
.RI "(2) Used in Op FindFriends response\&. Contains string[] of room names ('' where not known or no room joined)\&."
.ti -1c
.RI "const byte \fBLobbyName\fP = (byte)213"
.br
.RI "(213) Used in matchmaking-related methods and when creating a room to name a lobby (to join or to attach a room to)\&."
.ti -1c
.RI "const byte \fBLobbyType\fP = (byte)212"
.br
.RI "(212) Used in matchmaking-related methods and when creating a room to define the type of a lobby\&. Combined with the lobby name this identifies the lobby\&."
.ti -1c
.RI "const byte \fBLobbyStats\fP = (byte)211"
.br
.RI "(211) This (optional) parameter can be sent in Op Authenticate to turn on Lobby Stats (info about lobby names and their user- and game-counts)\&."
.ti -1c
.RI "const byte \fBRegion\fP = (byte)210"
.br
.RI "(210) Used for region values in OpAuth and OpGetRegions\&."
.ti -1c
.RI "const byte \fBUriPath\fP = 209"
.br
.RI "(209) Path of the WebRPC that got called\&. Also known as 'WebRpc Name'\&. Type: string\&."
.ti -1c
.RI "const byte \fBWebRpcParameters\fP = 208"
.br
.RI "(208) Parameters for a WebRPC as: Dictionary<string, object>\&. This will get serialized to JSon\&."
.ti -1c
.RI "const byte \fBWebRpcReturnCode\fP = 207"
.br
.RI "(207) ReturnCode for the WebRPC, as sent by the web service (not by \fBPhoton\fP, which uses \fBErrorCode\fP)\&. Type: byte\&."
.ti -1c
.RI "const byte \fBWebRpcReturnMessage\fP = 206"
.br
.RI "(206) Message returned by WebRPC server\&. Analog to \fBPhoton\fP's debug message\&. Type: string\&."
.ti -1c
.RI "const byte \fBCacheSliceIndex\fP = 205"
.br
.RI "(205) Used to define a 'slice' for cached events\&. Slices can easily be removed from cache\&. Type: int\&."
.ti -1c
.RI "const byte \fBPlugins\fP = 204"
.br
.RI "(204) Informs the server of the expected plugin setup\&. "
.ti -1c
.RI "const byte \fBNickName\fP = 202"
.br
.RI "(202) Used by the server in Operation Responses, when it sends the nickname of the client (the user's nickname)\&."
.ti -1c
.RI "const byte \fBPluginName\fP = 201"
.br
.RI "(201) Informs user about name of plugin load to game"
.ti -1c
.RI "const byte \fBPluginVersion\fP = 200"
.br
.RI "(200) Informs user about version of plugin load to game"
.ti -1c
.RI "const byte \fBCluster\fP = 196"
.br
.RI "(196) Cluster info provided in OpAuthenticate/OpAuthenticateOnce responses\&."
.ti -1c
.RI "const byte \fBExpectedProtocol\fP = 195"
.br
.RI "(195) Protocol which will be used by client to connect master/game servers\&. Used for nameserver\&."
.ti -1c
.RI "const byte \fBCustomInitData\fP = 194"
.br
.RI "(194) Set of custom parameters which are sent in auth request\&."
.ti -1c
.RI "const byte \fBEncryptionMode\fP = 193"
.br
.RI "(193) How are we going to encrypt data\&."
.ti -1c
.RI "const byte \fBEncryptionData\fP = 192"
.br
.RI "(192) Parameter of Authentication, which contains encryption keys (depends on AuthMode and EncryptionMode)\&."
.ti -1c
.RI "const byte \fBRoomOptionFlags\fP = 191"
.br
.RI "(191) An int parameter summarizing several boolean room-options with bit-flags\&."
.in -1c
.SH "Detailed Description"
.PP 
Class for constants\&. 

Codes for parameters of Operations and Events\&.
.PP
These constants are used internally\&.
.PP
Definition at line \fB1384\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.ActorList = (byte)252\fC [static]\fP"

.PP
(252) Code for list of players in a room\&.
.PP
Definition at line \fB1463\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.ActorNr = (byte)254\fC [static]\fP"

.PP
(254) Code of the Actor of an operation\&. Used for property get and set\&.
.PP
Definition at line \fB1466\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Add = 238\fC [static]\fP"

.PP
(238) The 'Add' operation-parameter can be used to add something to some list or set\&. E\&.g\&. add groups to player's interest groups\&.
.PP
Definition at line \fB1512\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Address = 230\fC [static]\fP"

.PP
(230) Address of a (game) server to use\&.
.PP
Definition at line \fB1412\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.ApplicationId = 224\fC [static]\fP"

.PP
(224) Your application's ID: a name on your own \fBPhoton\fP or a GUID on the \fBPhoton\fP Cloud
.PP
Definition at line \fB1427\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.AppVersion = 220\fC [static]\fP"

.PP
(220) Version of your application
.PP
Definition at line \fB1442\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.AzureLocalNodeId = 209\fC [static]\fP"

.PP
(209) Internally used in case of hosting by Azure
.PP
Definition at line \fB1450\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.AzureMasterNodeId = 208\fC [static]\fP"

.PP
(208) Internally used in case of hosting by Azure
.PP
Definition at line \fB1454\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.AzureNodeInfo = 210\fC [static]\fP"

.PP
(210) Internally used in case of hosting by Azure
.PP
Definition at line \fB1446\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Broadcast = (byte)250\fC [static]\fP"

.PP
(250) Code for broadcast parameter of OpSetProperties method\&.
.PP
Definition at line \fB1460\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Cache = (byte)247\fC [static]\fP"

.PP
(247) Code for caching events while raising them\&.
.PP
Definition at line \fB1497\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.CacheSliceIndex = 205\fC [static]\fP"

.PP
(205) Used to define a 'slice' for cached events\&. Slices can easily be removed from cache\&. Type: int\&.
.PP
Definition at line \fB1574\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.CheckUserOnJoin = (byte)232\fC [static]\fP"

.PP
(232) Used when creating rooms to define if any userid can join the room only once\&.
.PP
Definition at line \fB1406\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.CleanupCacheOnLeave = (byte)241\fC [static]\fP"

.PP
(241) Bool parameter of CreateGame Operation\&. If true, server cleans up roomcache of leaving players (their cached events get removed)\&.
.PP
Definition at line \fB1500\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.ClientAuthenticationData = 214\fC [static]\fP"

.PP
(214) This key's (string or byte[]) value provides parameters sent to the custom authentication service setup in \fBPhoton\fP Dashboard\&. Used in OpAuthenticate
.PP
Definition at line \fB1531\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.ClientAuthenticationParams = 216\fC [static]\fP"

.PP
(216) This key's (string) value provides parameters sent to the custom authentication type/service the client connects with\&. Used in OpAuthenticate
.PP
Definition at line \fB1521\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.ClientAuthenticationType = 217\fC [static]\fP"

.PP
(217) This key's (byte) value defines the target custom authentication type/service the client connects with\&. Used in OpAuthenticate
.PP
Definition at line \fB1518\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Cluster = 196\fC [static]\fP"

.PP
(196) Cluster info provided in OpAuthenticate/OpAuthenticateOnce responses\&.
.PP
Definition at line \fB1594\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Code = (byte)244\fC [static]\fP"

.PP
(244) Code used when sending some code-related parameter, like OpRaiseEvent's event-code\&. This is not the same as the Operation's code, which is no longer sent as part of the parameter Dictionary in \fBPhoton\fP 3\&.
.PP
Definition at line \fB1479\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.CustomEventContent = (byte)245\fC [static]\fP"

.PP
(245) Code of data/custom content of an event\&. Used in OpRaiseEvent\&.
.PP
Definition at line \fB1472\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.CustomInitData = 194\fC [static]\fP"

.PP
(194) Set of custom parameters which are sent in auth request\&.
.PP
Definition at line \fB1600\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Data = (byte)245\fC [static]\fP"

.PP
(245) Code of data of an event\&. Used in OpRaiseEvent\&.
.PP
Definition at line \fB1475\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.EmptyRoomTTL = 236\fC [static]\fP"

.PP
(236) Time To Live (TTL) for a room when the last player leaves\&. Keeps room in memory for case a player re-joins soon\&. In milliseconds\&.
.PP
Definition at line \fB1390\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.EncryptionData = 192\fC [static]\fP"

.PP
(192) Parameter of Authentication, which contains encryption keys (depends on AuthMode and EncryptionMode)\&.
.PP
Definition at line \fB1606\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.EncryptionMode = 193\fC [static]\fP"

.PP
(193) How are we going to encrypt data\&.
.PP
Definition at line \fB1603\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.EventForward = 234\fC [static]\fP"

.PP
(234) Optional parameter of OpRaiseEvent and OpSetCustomProperties to forward the event/operation to a web-service\&.
.PP
Definition at line \fB1396\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.ExpectedProtocol = 195\fC [static]\fP"

.PP
(195) Protocol which will be used by client to connect master/game servers\&. Used for nameserver\&.
.PP
Definition at line \fB1597\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.ExpectedValues = (byte)231\fC [static]\fP"

.PP
(231) Code for 'Check And Swap' (CAS) when changing properties\&.
.PP
Definition at line \fB1409\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.FindFriendsOptions = (byte)2\fC [static]\fP"

.PP
(2) Used in Op FindFriends request\&. An integer containing option-flags to filter the results\&.
.PP
Definition at line \fB1541\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.FindFriendsRequestList = (byte)1\fC [static]\fP"

.PP
(1) Used in Op FindFriends request\&. Value must be string[] of friends to look up\&.
.PP
Definition at line \fB1538\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.FindFriendsResponseOnlineList = (byte)1\fC [static]\fP"

.PP
(1) Used in Op FindFriends response\&. Contains bool[] list of online states (false if not online)\&.
.PP
Definition at line \fB1544\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.FindFriendsResponseRoomIdList = (byte)2\fC [static]\fP"

.PP
(2) Used in Op FindFriends response\&. Contains string[] of room names ('' where not known or no room joined)\&.
.PP
Definition at line \fB1547\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.GameCount = 228\fC [static]\fP"

.PP
(228) Count of games in this application (used in stats event)
.PP
Definition at line \fB1418\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.GameList = 222\fC [static]\fP"

.PP
(222) List of RoomInfos about open / listed rooms
.PP
Definition at line \fB1436\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.GameProperties = (byte)248\fC [static]\fP"

.PP
(248) Code for property set (Hashtable)\&.
.PP
Definition at line \fB1482\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Group = 240\fC [static]\fP"

.PP
(240) Code for 'group' operation-parameter (as used in Op RaiseEvent)\&.
.PP
Definition at line \fB1503\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Info = 218\fC [static]\fP"

.PP
(218) Content for \fBEventCode\&.ErrorInfo\fP and internal debug operations\&.
.PP
Definition at line \fB1515\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.IsComingBack = (byte)233\fC [static]\fP"

.PP
(233) Optional parameter of OpLeave in async games\&. If false, the player does abandons the game (forever)\&. By default players become inactive and can re-join\&.
.PP
Definition at line \fB1400\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.IsInactive = (byte)233\fC [static]\fP"

.PP
(233) Used in EvLeave to describe if a user is inactive (and might come back) or not\&. In rooms with PlayerTTL, becoming inactive is the default case\&.
.PP
Definition at line \fB1403\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.JoinMode = 215\fC [static]\fP"

.PP
(215) Makes the server create a room if it doesn't exist\&. OpJoin uses this to always enter a room, unless it exists and is full/closed\&.(215) The JoinMode enum defines which variant of joining a room will be executed: Join only if available, create if not exists or re-join\&.
.PP
Replaces CreateIfNotExists which was only a bool-value\&.
.PP
Definition at line \fB1528\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.LobbyName = (byte)213\fC [static]\fP"

.PP
(213) Used in matchmaking-related methods and when creating a room to name a lobby (to join or to attach a room to)\&.
.PP
Definition at line \fB1550\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.LobbyStats = (byte)211\fC [static]\fP"

.PP
(211) This (optional) parameter can be sent in Op Authenticate to turn on Lobby Stats (info about lobby names and their user- and game-counts)\&.
.PP
Definition at line \fB1556\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.LobbyType = (byte)212\fC [static]\fP"

.PP
(212) Used in matchmaking-related methods and when creating a room to define the type of a lobby\&. Combined with the lobby name this identifies the lobby\&.
.PP
Definition at line \fB1553\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.MasterClientId = (byte)203\fC [static]\fP"

.PP
(203) Code for MasterClientId, which is synced by server\&. When sent as op-parameter this is code 203\&.
.PP
Tightly related to \fBGamePropertyKey\&.MasterClientId\fP\&.
.PP
Definition at line \fB1535\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.MasterPeerCount = 227\fC [static]\fP"

.PP
(227) Count of players on the master server (in this app, looking for rooms)
.PP
Definition at line \fB1421\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.MatchMakingType = 223\fC [static]\fP"

.PP
(223) Modifies the matchmaking algorithm used for OpJoinRandom\&. Allowed parameter values are defined in enum MatchmakingMode\&.
.PP
Definition at line \fB1433\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.NickName = 202\fC [static]\fP"

.PP
(202) Used by the server in Operation Responses, when it sends the nickname of the client (the user's nickname)\&.
.PP
Definition at line \fB1585\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.PeerCount = 229\fC [static]\fP"

.PP
(229) Count of players in this application in a rooms (used in stats event)
.PP
Definition at line \fB1415\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.PlayerProperties = (byte)249\fC [static]\fP"

.PP
(249) Code for property set (Hashtable)\&.
.PP
Definition at line \fB1469\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.PlayerTTL = 235\fC [static]\fP"

.PP
(235) Time To Live (TTL) for an 'actor' in a room\&. If a client disconnects, this actor is inactive first and removed after this timeout\&. In milliseconds\&.
.PP
Definition at line \fB1393\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.PluginName = 201\fC [static]\fP"

.PP
(201) Informs user about name of plugin load to game
.PP
Definition at line \fB1588\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Plugins = 204\fC [static]\fP"

.PP
(204) Informs the server of the expected plugin setup\&. The operation will fail in case of a plugin mismatch returning error code PluginMismatch 32751(0x7FFF - 16)\&. Setting string[]{} means the client expects no plugin to be setup\&. Note: for backwards compatibility null omits any check\&. 
.PP
Definition at line \fB1582\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.PluginVersion = 200\fC [static]\fP"

.PP
(200) Informs user about version of plugin load to game
.PP
Definition at line \fB1591\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Position = 223\fC [static]\fP"

.PP
(223) Not used currently (as 'Position')\&. If you get queued before connect, this is your position
.PP
Definition at line \fB1430\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Properties = (byte)251\fC [static]\fP"

.PP
(251) Code for property-set (Hashtable)\&. This key is used when sending only one set of properties\&. If either \fBActorProperties\fP or GameProperties are used (or both), check those keys\&. 
.PP
Definition at line \fB1488\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.PublishUserId = 239\fC [static]\fP"

.PP
(239) Used in Op Join to define if UserIds of the players are broadcast in the room\&. Useful for FindFriends and reserving slots for expected users\&.
.PP
Definition at line \fB1509\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.ReceiverGroup = (byte)246\fC [static]\fP"

.PP
(246) Code to select the receivers of events (used in Lite, Operation RaiseEvent)\&.
.PP
Definition at line \fB1494\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Region = (byte)210\fC [static]\fP"

.PP
(210) Used for region values in OpAuth and OpGetRegions\&.
.PP
Definition at line \fB1559\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Remove = 239\fC [static]\fP"

.PP
(239) The 'Remove' operation-parameter can be used to remove something from a list\&. E\&.g\&. remove groups from player's interest groups\&.
.PP
Definition at line \fB1506\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.RoomName = (byte)255\fC [static]\fP"

.PP
(255) Code for the gameId/roomName (a unique name per room)\&. Used in OpJoin and similar\&.
.PP
Definition at line \fB1457\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.RoomOptionFlags = 191\fC [static]\fP"

.PP
(191) An int parameter summarizing several boolean room-options with bit-flags\&.
.PP
Definition at line \fB1609\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.SuppressRoomEvents = 237\fC [static]\fP"

.PP
(237) A bool parameter for creating games\&. If set to true, no room events are sent to the clients on join and leave\&. Default: false (and not sent)\&.
.PP
Definition at line \fB1387\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.TargetActorNr = (byte)253\fC [static]\fP"

.PP
(253) Code of the target Actor of an operation\&. Used for property set\&. Is 0 for game
.PP
Definition at line \fB1491\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.Token = 221\fC [static]\fP"

.PP
(221) Internally used to establish encryption
.PP
Definition at line \fB1439\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.UriPath = 209\fC [static]\fP"

.PP
(209) Path of the WebRPC that got called\&. Also known as 'WebRpc Name'\&. Type: string\&.
.PP
Definition at line \fB1562\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.UserId = 225\fC [static]\fP"

.PP
(225) User's ID
.PP
Definition at line \fB1424\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.WebRpcParameters = 208\fC [static]\fP"

.PP
(208) Parameters for a WebRPC as: Dictionary<string, object>\&. This will get serialized to JSon\&.
.PP
Definition at line \fB1565\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.WebRpcReturnCode = 207\fC [static]\fP"

.PP
(207) ReturnCode for the WebRPC, as sent by the web service (not by \fBPhoton\fP, which uses \fBErrorCode\fP)\&. Type: byte\&.
.PP
Definition at line \fB1568\fP of file \fBLoadbalancingPeer\&.cs\fP\&.
.SS "const byte Photon\&.Realtime\&.ParameterCode\&.WebRpcReturnMessage = 206\fC [static]\fP"

.PP
(206) Message returned by WebRPC server\&. Analog to \fBPhoton\fP's debug message\&. Type: string\&.
.PP
Definition at line \fB1571\fP of file \fBLoadbalancingPeer\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
