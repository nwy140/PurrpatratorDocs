.TH "Photon.Realtime.RoomInfo" 3 "Mon Apr 18 2022" "Purrpatrator User manual" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Photon.Realtime.RoomInfo \- A simplified room with just the info required to list and join, used for the room listing in the lobby\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBPhoton\&.Realtime\&.Room\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override bool \fBEquals\fP (object other)"
.br
.RI "Makes \fBRoomInfo\fP comparable (by name)\&. "
.ti -1c
.RI "override int \fBGetHashCode\fP ()"
.br
.RI "Accompanies Equals, using the name's HashCode as return\&. "
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.RI "Returns most interesting room values as string\&. "
.ti -1c
.RI "string \fBToStringFull\fP ()"
.br
.RI "Returns most interesting room values as string, including custom properties\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBRemovedFromList\fP"
.br
.RI "Used in lobby, to mark rooms that are no longer listed (for being full, closed or hidden)\&."
.ti -1c
.RI "int \fBmasterClientId\fP"
.br
.RI "Backing field for master client id (actorNumber)\&. defined by server in room props and ev leave\&."
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "byte \fBmaxPlayers\fP = 0"
.br
.RI "Backing field for property\&."
.ti -1c
.RI "int \fBemptyRoomTtl\fP = 0"
.br
.RI "Backing field for property\&."
.ti -1c
.RI "int \fBplayerTtl\fP = 0"
.br
.RI "Backing field for property\&."
.ti -1c
.RI "string[] \fBexpectedUsers\fP"
.br
.RI "Backing field for property\&."
.ti -1c
.RI "bool \fBisOpen\fP = true"
.br
.RI "Backing field for property\&."
.ti -1c
.RI "bool \fBisVisible\fP = true"
.br
.RI "Backing field for property\&."
.ti -1c
.RI "bool \fBautoCleanUp\fP = true"
.br
.RI "Backing field for property\&. False unless the GameProperty is set to true (else it's not sent)\&."
.ti -1c
.RI "string \fBname\fP"
.br
.RI "Backing field for property\&."
.ti -1c
.RI "string[] \fBpropertiesListedInLobby\fP"
.br
.RI "Backing field for property\&."
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBHashtable\fP \fBCustomProperties\fP\fC [get]\fP"
.br
.RI "Read-only 'cache' of custom properties of a room\&. "
.ti -1c
.RI "string \fBName\fP\fC [get]\fP"
.br
.RI "The name of a room\&. Unique identifier for a room/match (per AppId + game-Version)\&."
.ti -1c
.RI "int \fBPlayerCount\fP\fC [get]\fP"
.br
.RI "Count of players currently in room\&. "
.ti -1c
.RI "byte \fBMaxPlayers\fP\fC [get]\fP"
.br
.RI "The limit of players for this room\&. "
.ti -1c
.RI "bool \fBIsOpen\fP\fC [get]\fP"
.br
.RI "Defines if the room can be joined\&. "
.ti -1c
.RI "bool \fBIsVisible\fP\fC [get]\fP"
.br
.RI "Defines if the room is listed in its lobby\&. "
.in -1c
.SH "Detailed Description"
.PP 
A simplified room with just the info required to list and join, used for the room listing in the lobby\&. 

The properties are not settable (IsOpen, MaxPlayers, etc)\&. 
.PP
This class resembles info about available rooms, as sent by the Master server's lobby\&. Consider all values as readonly\&. None are synced (only updated by events by server)\&. 
.PP
Definition at line \fB36\fP of file \fBRoomInfo\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "override bool Photon\&.Realtime\&.RoomInfo\&.Equals (object other)"

.PP
Makes \fBRoomInfo\fP comparable (by name)\&. 
.PP
Definition at line \fB167\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "override int Photon\&.Realtime\&.RoomInfo\&.GetHashCode ()"

.PP
Accompanies Equals, using the name's HashCode as return\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.PP
Definition at line \fB177\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "override string Photon\&.Realtime\&.RoomInfo\&.ToString ()"

.PP
Returns most interesting room values as string\&. 
.PP
\fBReturns\fP
.RS 4
Summary of this \fBRoomInfo\fP instance\&.
.RE
.PP

.PP
Definition at line \fB185\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "string Photon\&.Realtime\&.RoomInfo\&.ToStringFull ()"

.PP
Returns most interesting room values as string, including custom properties\&. 
.PP
\fBReturns\fP
.RS 4
Summary of this \fBRoomInfo\fP instance\&.
.RE
.PP

.PP
Definition at line \fB192\fP of file \fBRoomInfo\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "bool Photon\&.Realtime\&.RoomInfo\&.autoCleanUp = true\fC [protected]\fP"

.PP
Backing field for property\&. False unless the GameProperty is set to true (else it's not sent)\&.
.PP
Definition at line \fB63\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "int Photon\&.Realtime\&.RoomInfo\&.emptyRoomTtl = 0\fC [protected]\fP"

.PP
Backing field for property\&.
.PP
Definition at line \fB48\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "string [] Photon\&.Realtime\&.RoomInfo\&.expectedUsers\fC [protected]\fP"

.PP
Backing field for property\&.
.PP
Definition at line \fB54\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.RoomInfo\&.isOpen = true\fC [protected]\fP"

.PP
Backing field for property\&.
.PP
Definition at line \fB57\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.RoomInfo\&.isVisible = true\fC [protected]\fP"

.PP
Backing field for property\&.
.PP
Definition at line \fB60\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "int Photon\&.Realtime\&.RoomInfo\&.masterClientId"

.PP
Backing field for master client id (actorNumber)\&. defined by server in room props and ev leave\&.
.PP
Definition at line \fB69\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "byte Photon\&.Realtime\&.RoomInfo\&.maxPlayers = 0\fC [protected]\fP"

.PP
Backing field for property\&.
.PP
Definition at line \fB45\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "string Photon\&.Realtime\&.RoomInfo\&.name\fC [protected]\fP"

.PP
Backing field for property\&.
.PP
Definition at line \fB66\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "int Photon\&.Realtime\&.RoomInfo\&.playerTtl = 0\fC [protected]\fP"

.PP
Backing field for property\&.
.PP
Definition at line \fB51\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "string [] Photon\&.Realtime\&.RoomInfo\&.propertiesListedInLobby\fC [protected]\fP"

.PP
Backing field for property\&.
.PP
Definition at line \fB72\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.RoomInfo\&.RemovedFromList"

.PP
Used in lobby, to mark rooms that are no longer listed (for being full, closed or hidden)\&.
.PP
Definition at line \fB39\fP of file \fBRoomInfo\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "\fBHashtable\fP Photon\&.Realtime\&.RoomInfo\&.CustomProperties\fC [get]\fP"

.PP
Read-only 'cache' of custom properties of a room\&. Set via \fBRoom\&.SetCustomProperties\fP (not available for \fBRoomInfo\fP class!)\&.
.PP
All keys are string-typed and the values depend on the game/application\&.
.PP
\fBRoom\&.SetCustomProperties\fP 
.PP
Definition at line \fB77\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.RoomInfo\&.IsOpen\fC [get]\fP"

.PP
Defines if the room can be joined\&. This does not affect listing in a lobby but joining the room will fail if not open\&. If not open, the room is excluded from random matchmaking\&. Due to racing conditions, found matches might become closed even while you join them\&. Simply re-connect to master and find another\&. Use property 'IsVisible' to not list the room\&. 
.PP
As part of \fBRoomInfo\fP this can't be set\&. As part of a \fBRoom\fP (which the player joined), the setter will update the server and all clients\&. 
.PP
Definition at line \fB127\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "bool Photon\&.Realtime\&.RoomInfo\&.IsVisible\fC [get]\fP"

.PP
Defines if the room is listed in its lobby\&. Rooms can be created invisible, or changed to invisible\&. To change if a room can be joined, use property: open\&. 
.PP
As part of \fBRoomInfo\fP this can't be set\&. As part of a \fBRoom\fP (which the player joined), the setter will update the server and all clients\&. 
.PP
Definition at line \fB144\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "byte Photon\&.Realtime\&.RoomInfo\&.MaxPlayers\fC [get]\fP"

.PP
The limit of players for this room\&. This property is shown in lobby, too\&. If the room is full (players count == maxplayers), joining this room will fail\&. 
.PP
As part of \fBRoomInfo\fP this can't be set\&. As part of a \fBRoom\fP (which the player joined), the setter will update the server and all clients\&. 
.PP
Definition at line \fB107\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "string Photon\&.Realtime\&.RoomInfo\&.Name\fC [get]\fP"

.PP
The name of a room\&. Unique identifier for a room/match (per AppId + game-Version)\&.
.PP
Definition at line \fB86\fP of file \fBRoomInfo\&.cs\fP\&.
.SS "int Photon\&.Realtime\&.RoomInfo\&.PlayerCount\fC [get]\fP"

.PP
Count of players currently in room\&. This property is overwritten by the \fBRoom\fP class (used when you're in a \fBRoom\fP)\&. 
.PP
Definition at line \fB97\fP of file \fBRoomInfo\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Purrpatrator User manual from the source code\&.
