<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_float_crusher_extensions_8cs" kind="file" language="C#">
    <compoundname>FloatCrusherExtensions.cs</compoundname>
    <innerclass refid="class_photon_1_1_compression_1_1_float_crusher_extensions" prot="public">Photon::Compression::FloatCrusherExtensions</innerclass>
    <innernamespace refid="namespace_photon">Photon</innernamespace>
    <innernamespace refid="namespace_photon_1_1_compression">Photon::Compression</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>---------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;copyright&gt;PhotonNetwork<sp/>Framework<sp/>for<sp/>Unity<sp/>-<sp/>Copyright<sp/>(C)<sp/>2020<sp/>Exit<sp/>Games<sp/>GmbH&lt;/copyright&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;author&gt;developer@exitgames.com&lt;/author&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceemotitron" kindref="compound">emotitron</ref>.Compression;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_photon_1_1_compression" kindref="compound">Photon.Compression</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10" refid="class_photon_1_1_compression_1_1_float_crusher_extensions" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions" kindref="compound">FloatCrusherExtensions</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>Primitive<sp/>Buffer<sp/>Writers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a0297630e5acd86b10c1aca27da140480" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a0297630e5acd86b10c1aca27da140480" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/>ref<sp/>ulong<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CompressedFloat<sp/>c<sp/>=<sp/>fc.Compress(f);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.cvalue.Inject(ref<sp/>buffer,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a36df302f4b85d37da195629635c38bee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a36df302f4b85d37da195629635c38bee" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/>ref<sp/>uint<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CompressedFloat<sp/>c<sp/>=<sp/>fc.Compress(f);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.cvalue.Inject(ref<sp/>buffer,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1ab277dccc1d2368c5411396a4939b6991" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1ab277dccc1d2368c5411396a4939b6991" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/>ref<sp/>ushort<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CompressedFloat<sp/>c<sp/>=<sp/>fc.Compress(f);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.cvalue.Inject(ref<sp/>buffer,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1af94a9dea8b2e1f0c6acfc45d01321344" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1af94a9dea8b2e1f0c6acfc45d01321344" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/>ref<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CompressedFloat<sp/>c<sp/>=<sp/>fc.Compress(f);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.cvalue.Inject(ref<sp/>buffer,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a6a1351567693b29598594598d923286d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a6a1351567693b29598594598d923286d" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>CompressedFloat<sp/>c,<sp/>ref<sp/>ulong<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.cvalue.Inject(ref<sp/>buffer,<sp/>ref<sp/>bitposition,<sp/>fc._bits[(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)bcl]);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>ULong<sp/>Primitive<sp/>Buffer<sp/>Readers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//UNTESTED</highlight></codeline>
<codeline lineno="106" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1af52a59e1020854f8238e9a44c09094a3" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1af52a59e1020854f8238e9a44c09094a3" kindref="member">ReadAndDecompress</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>ulong<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>c<sp/>=<sp/>(uint)buffer.Read(ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc.Decompress(c);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//UNTESTED</highlight></codeline>
<codeline lineno="122" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1ae9e94f84059630ad8b786d784fd88886" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1ae9e94f84059630ad8b786d784fd88886" kindref="member">Read</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>ulong<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>c<sp/>=<sp/>(uint)buffer.Read(ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>c);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[System.Obsolete(</highlight><highlight class="stringliteral">&quot;No<sp/>reason<sp/>for<sp/>buffer<sp/>to<sp/>be<sp/>a<sp/>ref&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="136" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a4071e9d9db6f038e69e41bf347cb66e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a4071e9d9db6f038e69e41bf347cb66e8" kindref="member">Read</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>ref<sp/>ulong<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>mask<sp/>=<sp/>fc.masks[(int)bcl];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>c<sp/>=<sp/>(uint)((buffer<sp/>&gt;&gt;<sp/>bitposition)<sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitposition<sp/>+=<sp/>bits;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>c);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>Array<sp/>Buffer<sp/>Writers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1afc55286e62fa14665186ff0f76da1683" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1afc55286e62fa14665186ff0f76da1683" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>CompressedFloat<sp/>c,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.Write(c.cvalue,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a56f07607af4e0a2e0312dc03e3c44e6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a56f07607af4e0a2e0312dc03e3c44e6d" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>CompressedFloat<sp/>c,<sp/>uint[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.Write(c.cvalue,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1ad764ab48c2153909f66984251f3f1694" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1ad764ab48c2153909f66984251f3f1694" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>CompressedFloat<sp/>c,<sp/>ulong[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.Write(c.cvalue,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1aed190b38cfe2e641ddd5529df5d7d755" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1aed190b38cfe2e641ddd5529df5d7d755" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>uint<sp/>c,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.Write(c,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>c);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a45192c9c0b197a3d75ee1db774625ac3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a45192c9c0b197a3d75ee1db774625ac3" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>uint<sp/>c,<sp/>uint[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.Write(c,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>c);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1ac44b0871380c0a0e2b8faa96711f4e4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1ac44b0871380c0a0e2b8faa96711f4e4b" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>uint<sp/>c,<sp/>ulong[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.Write(c,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>c);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1aa57e77f92883b2c5aff764d7f2a816f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1aa57e77f92883b2c5aff764d7f2a816f3" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>c<sp/>=<sp/>fc.Compress(f);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.Write(c,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>c);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a387a3483ef223f4bba0226225b1467f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a387a3483ef223f4bba0226225b1467f5" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/>uint[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>c<sp/>=<sp/>fc.Compress(f);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.Write(c,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>c);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a16673f791941085ba8871284bf232157" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a16673f791941085ba8871284bf232157" kindref="member">Write</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/>ulong[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>c<sp/>=<sp/>fc.Compress(f);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.Write(c,<sp/>ref<sp/>bitposition,<sp/>bits);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>c);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>Array<sp/>Buffer<sp/>Readers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a77c3488784b59269f70501ec55fab108" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a77c3488784b59269f70501ec55fab108" kindref="member">Read</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>buffer.ReadUInt32(ref<sp/>bitposition,<sp/>bits));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a713392b80a947b05242b45c89fb6b6da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a713392b80a947b05242b45c89fb6b6da" kindref="member">Read</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>uint[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>buffer.ReadUInt32(ref<sp/>bitposition,<sp/>bits));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a951da8c4e6abeaeb611a4c804179bf0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CompressedFloat<sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a951da8c4e6abeaeb611a4c804179bf0c" kindref="member">Read</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>ulong[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition,<sp/>BitCullingLevel<sp/>bcl<sp/>=<sp/>BitCullingLevel.NoCulling)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>fc._bits[(int)bcl];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CompressedFloat(fc,<sp/>buffer.ReadUInt32(ref<sp/>bitposition,<sp/>bits));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a855a45ac17fa2a1f24e05a9f395753fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a855a45ac17fa2a1f24e05a9f395753fb" kindref="member">ReadAndDecompress</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>c<sp/>=<sp/>buffer.ReadUInt32(ref<sp/>bitposition,<sp/>fc._bits[0]);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc.Decompress(c);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a5bb794c7dfe522c3e65134f2bf3dd9a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a5bb794c7dfe522c3e65134f2bf3dd9a4" kindref="member">ReadAndDecompress</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>uint[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>c<sp/>=<sp/>buffer.ReadUInt32(ref<sp/>bitposition,<sp/>fc._bits[0]);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc.Decompress(c);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357" refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a84c43a060fa36aebd77a32ec2d3ccc0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_photon_1_1_compression_1_1_float_crusher_extensions_1a84c43a060fa36aebd77a32ec2d3ccc0f" kindref="member">ReadAndDecompress</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>FloatCrusher<sp/>fc,<sp/>ulong[]<sp/>buffer,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitposition)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>c<sp/>=<sp/>buffer.ReadUInt32(ref<sp/>bitposition,<sp/>fc._bits[0]);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc.Decompress(c);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/TransformCrusher/Extensions/FloatCrusherExtensions.cs"/>
  </compounddef>
</doxygen>
