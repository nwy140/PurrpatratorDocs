<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_hitscan_definition_8cs" kind="file" language="C#">
    <compoundname>HitscanDefinition.cs</compoundname>
    <innerclass refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition" prot="public">Photon::Pun::Simple::HitscanDefinition</innerclass>
    <innernamespace refid="namespace_photon">Photon</innernamespace>
    <innernamespace refid="namespace_photon_1_1_pun">Photon::Pun</innernamespace>
    <innernamespace refid="namespace_photon_1_1_pun_1_1_simple">Photon::Pun::Simple</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>---------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;copyright&gt;PhotonNetwork<sp/>Framework<sp/>for<sp/>Unity<sp/>-<sp/>Copyright<sp/>(C)<sp/>2020<sp/>Exit<sp/>Games<sp/>GmbH&lt;/copyright&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;author&gt;developer@exitgames.com&lt;/author&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEditor;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_photon_1_1_pun_1_1_simple" kindref="compound">Photon.Pun.Simple</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14" refid="namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605" kindref="member">Replicate</ref><sp/>{<sp/>None,<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605a5992e2c6ea3ae8b4d17a188a23060e66" kindref="member">CastOnly</ref>,<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605ab69df945ae986e6b1882cdc87ad19617" kindref="member">Hits</ref>,<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605a31c15e58d29019df36ef35823df29d71" kindref="member">HitsWithContactGroups</ref><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>[System.Serializable]</highlight></codeline>
<codeline lineno="20" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition" kindref="compound">HitscanDefinition</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a1b3a9e0f1d81b079a2d1d9cf73f60a00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605" kindref="member">Replicate</ref><sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a1b3a9e0f1d81b079a2d1d9cf73f60a00" kindref="member">ownerToAuthority</ref><sp/>=<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605" kindref="member">Replicate</ref>.Hits;</highlight></codeline>
<codeline lineno="24" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a49225059802005c7f201086085479fe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605" kindref="member">Replicate</ref><sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a49225059802005c7f201086085479fe6" kindref="member">authorityToAll</ref><sp/>=<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1ae222b1d282607f29064a898497538605" kindref="member">Replicate</ref>.Hits;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;This<sp/>cast/overlap<sp/>test<sp/>will<sp/>be<sp/>done<sp/>on<sp/>the<sp/>initiating<sp/>client<sp/>against<sp/>colliders<sp/>on<sp/>these<sp/>layers.<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Exclude<sp/>layers<sp/>that<sp/>won&apos;t<sp/>include<sp/>any<sp/>objects<sp/>that<sp/>you<sp/>don&apos;t<sp/>want<sp/>to<sp/>test<sp/>(such<sp/>as<sp/>walls).&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="28" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a482718b76eb4133549cd195f369b2b8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>LayerMask<sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a482718b76eb4133549cd195f369b2b8e" kindref="member">layerMask</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="29" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a10837c9550ee4c55cd4818dcd35f4d80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a10837c9550ee4c55cd4818dcd35f4d80" kindref="member">useOffset</ref>;</highlight></codeline>
<codeline lineno="30" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1aec7152e443150178277feefdc90a9890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1aec7152e443150178277feefdc90a9890" kindref="member">offset1</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>offset<sp/>and<sp/>first<sp/>sphere<sp/>of<sp/>capsule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a1f790037471068200865d13fcd586b61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a1f790037471068200865d13fcd586b61" kindref="member">offset2</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>1,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>second<sp/>sphere<sp/>of<sp/>capsule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a4ce6ae6e122e10bdc8c96504e6e28cd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a4ce6ae6e122e10bdc8c96504e6e28cd8" kindref="member">halfExtents</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="33" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a6d5851caa7f3e7ea2a2d91e1454ad514" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a6d5851caa7f3e7ea2a2d91e1454ad514" kindref="member">orientation</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="34" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a9763ffe8911201cbe64c8720fcd2b5d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref><sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a9763ffe8911201cbe64c8720fcd2b5d0" kindref="member">hitscanType</ref><sp/>=<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref>.Raycast;</highlight></codeline>
<codeline lineno="35" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a771f3bbdd1ec7b10a7f6f69ab4916322" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a771f3bbdd1ec7b10a7f6f69ab4916322" kindref="member">distance</ref><sp/>=<sp/>100f;</highlight></codeline>
<codeline lineno="36" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a3359e24db3b776d7d81ff421bb3c203e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1a3359e24db3b776d7d81ff421bb3c203e" kindref="member">radius</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="37" refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1afab80ca582f3ffd01d7364d6911b2dbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition_1afab80ca582f3ffd01d7364d6911b2dbc" kindref="member">nearestOnly</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>bool<sp/>NearestOnly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>set<sp/>{<sp/>nearestOnly<sp/>=<sp/>value;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(hitscanType.IsOverlap())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>nearestOnly;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>[CustomPropertyDrawer(typeof(<ref refid="class_photon_1_1_pun_1_1_simple_1_1_hitscan_definition" kindref="compound">HitscanDefinition</ref>))]</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HitscanDefinitionDrawer<sp/>:<sp/>PropertyDrawer</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GUIStyle<sp/>lefttextstyle<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIStyle</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alignment<sp/>=<sp/>TextAnchor.UpperLeft,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>richText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>PAD<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>SPACING<sp/>=<sp/>18;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FLDHGHT<sp/>=<sp/>18;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnGUI(Rect<sp/>r,<sp/>SerializedProperty<sp/>_property,<sp/>GUIContent<sp/>_label)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.yMax<sp/>-=<sp/>6;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>leading<sp/>black<sp/>separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.yMin<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.DrawRect(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r)<sp/>{<sp/>height<sp/>=<sp/>2<sp/>},<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color(.15f,<sp/>.15f,<sp/>.15f));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.yMin<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.BeginProperty(r,<sp/>GUIContent.none,<sp/>_property);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startingIndent<sp/>=<sp/>EditorGUI.indentLevel;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>layerMask<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;layerMask&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>useOffset<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;useOffset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>offset1<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;offset1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>offset2<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;offset2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>hitscanType<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;hitscanType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>distance<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;distance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>radius<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;radius&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>halfExtents<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;halfExtents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>orientation<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;orientation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>nearestOnly<sp/>=<sp/>_property.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;nearestOnly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref><sp/>hitscantype<sp/>=<sp/>(<ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref>)hitscanType.intValue;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.LabelField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r)<sp/>{<sp/>height<sp/>=<sp/>FLDHGHT<sp/>},<sp/>_label);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.yMin<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.Box(r,<sp/>GUIContent.none,<sp/>(GUIStyle)</highlight><highlight class="stringliteral">&quot;HelpBox&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.xMin<sp/>+=<sp/>PAD;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.xMax<sp/>-=<sp/>PAD;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.height<sp/>=<sp/>FLDHGHT;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>PAD;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.BeginChangeCheck();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(r,<sp/>hitscanType);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(r,<sp/>layerMask);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>dist<sp/>for<sp/>any<sp/>of<sp/>the<sp/>casts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hitscantype.IsCast())</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(r,<sp/>distance);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(r,<sp/>nearestOnly);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Radius<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hitscantype.UsesRadius())</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(r,<sp/>radius);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>(all<sp/>but<sp/>capsule)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hitscantype.IsCapsule())</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.LabelField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin<sp/>+<sp/>18,<sp/>r.y,<sp/>100,<sp/>FLDHGHT),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent(</highlight><highlight class="stringliteral">&quot;Offset&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin,<sp/>r.y,<sp/>32,<sp/>FLDHGHT),<sp/>useOffset,<sp/>GUIContent.none);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useOffset.boolValue)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin<sp/>+<sp/>100,<sp/>r.y,<sp/>r.width<sp/>-<sp/>100,<sp/>FLDHGHT),<sp/>offset1,<sp/>GUIContent.none);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>Point1<sp/>and<sp/>Point2<sp/>for<sp/>capsule.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hitscantype.IsCapsule())</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.LabelField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin,<sp/>r.y,<sp/>100,<sp/>FLDHGHT),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent(</highlight><highlight class="stringliteral">&quot;Offset1:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin<sp/>+<sp/>100,<sp/>r.y,<sp/>r.width<sp/>-<sp/>100,<sp/>FLDHGHT),<sp/>offset1,<sp/>GUIContent.none);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.LabelField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin,<sp/>r.y,<sp/>100,<sp/>FLDHGHT),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent(</highlight><highlight class="stringliteral">&quot;Offset2:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin<sp/>+<sp/>100,<sp/>r.y,<sp/>r.width<sp/>-<sp/>100,<sp/>FLDHGHT),<sp/>offset2,<sp/>GUIContent.none);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hitscantype.IsBox())</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.LabelField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin,<sp/>r.y,<sp/>100,<sp/>FLDHGHT),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent(</highlight><highlight class="stringliteral">&quot;Half<sp/>Extents:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin<sp/>+<sp/>100,<sp/>r.y,<sp/>r.width<sp/>-<sp/>100,<sp/>FLDHGHT),<sp/>halfExtents,<sp/>GUIContent.none);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.y<sp/>+=<sp/>SPACING;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.LabelField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin,<sp/>r.y,<sp/>100,<sp/>FLDHGHT),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent(</highlight><highlight class="stringliteral">&quot;Orientation:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.PropertyField(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r.xMin<sp/>+<sp/>100,<sp/>r.y,<sp/>r.width<sp/>-<sp/>100,<sp/>FLDHGHT),<sp/>orientation,<sp/>GUIContent.none);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haschanged<sp/>=<sp/>EditorGUI.EndChangeCheck();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haschanged)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorUtility.SetDirty(_property.serializedObject.targetObject);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.EndProperty();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>closing<sp/>black<sp/>separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.xMin<sp/>-=<sp/>PAD;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.xMax<sp/>+=<sp/>PAD;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.DrawRect(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(r)<sp/>{<sp/>y<sp/>=<sp/>r.y<sp/>+<sp/>26,<sp/>height<sp/>=<sp/>2<sp/>},<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color(.15f,<sp/>.15f,<sp/>.15f));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetPropertyHeight(SerializedProperty<sp/>property,<sp/>GUIContent<sp/>label)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>hitscanType<sp/>=<sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal">.FindPropertyRelative(</highlight><highlight class="stringliteral">&quot;hitscanType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref><sp/>hittype<sp/>=<sp/>(<ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref>)hitscanType.intValue;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doesntNeedExtraLine<sp/>=<sp/>hittype<sp/>==<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref>.Raycast<sp/>||<sp/>hittype<sp/>==<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref>.OverlapSphere;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needsExtraExtra<sp/>=<sp/>hittype<sp/>==<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref>.CapsuleCast<sp/>||<sp/>hittype<sp/>==<sp/><ref refid="namespace_photon_1_1_pun_1_1_simple_1a53d5d69bb5eee3caafdced8773439447" kindref="member">HitscanType</ref>.BoxCast;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOverlap<sp/>=<sp/>hittype.IsOverlap();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SEPARATORS<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEPARATORS<sp/>+<sp/>(5<sp/>*<sp/>SPACING<sp/>+<sp/>PAD<sp/>*<sp/>2)<sp/>+<sp/>(isOverlap<sp/>?<sp/>SPACING<sp/>:<sp/>0)<sp/>+<sp/>(doesntNeedExtraLine<sp/>?<sp/>0<sp/>:<sp/>(needsExtraExtra<sp/>?<sp/>SPACING<sp/>*<sp/>2<sp/>:<sp/>SPACING))<sp/>+<sp/>(hittype.IsCast()<sp/>?<sp/>SPACING<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/Simple/Core/GenericHitscan/HitscanDefinition.cs"/>
  </compounddef>
</doxygen>
