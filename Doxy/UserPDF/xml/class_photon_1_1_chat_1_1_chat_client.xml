<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_photon_1_1_chat_1_1_chat_client" kind="class" language="C#" prot="public">
    <compoundname>Photon::Chat::ChatClient</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IPhotonPeerListener</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1acceaf28552483beba377dae782637824" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Photon.Chat.ChatClient.FriendRequestListMax</definition>
        <argsstring></argsstring>
        <name>FriendRequestListMax</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="43" column="19" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1a845beb33aab78ae0b4b1cad0f5b8fa04" prot="private" static="yes" mutable="no">
        <type>const byte</type>
        <definition>const byte Photon.Chat.ChatClient.HttpForwardWebFlag</definition>
        <argsstring></argsstring>
        <name>HttpForwardWebFlag</name>
        <initializer>= 0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="48" column="28" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1a3fd3e0396578e60e296f249dfce7b934" prot="private" static="yes" mutable="no">
        <type>const string</type>
        <definition>const string Photon.Chat.ChatClient.ChatAppName</definition>
        <argsstring></argsstring>
        <name>ChatAppName</name>
        <initializer>= &quot;chat&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="165" column="30" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1ac37c92ca11e06427a261abde9809ce3f" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Photon.Chat.ChatClient.DefaultMaxSubscribers</definition>
        <argsstring></argsstring>
        <name>DefaultMaxSubscribers</name>
        <initializer>= 100</initializer>
        <briefdescription>
<para>Default maximum value possible for <ref refid="class_photon_1_1_chat_1_1_chat_channel_1a458b3f57d85acd8d6c775828bdd78d00" kindref="member">ChatChannel.MaxSubscribers</ref> when <ref refid="class_photon_1_1_chat_1_1_chat_channel_1a67ecb9b6dfcd34e0c761f571a642d8fe" kindref="member">ChatChannel.PublishSubscribers</ref> is enabled</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="46" column="26" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="46" bodyend="-1"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a0f1ee1bc79ae06278ad7229706441141" compoundref="_chat_client_8cs" startline="1586" endline="1673">Photon.Chat.ChatClient.Subscribe</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1a0299296d1acde3271523056464c0ac11" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.EnableProtocolFallback</definition>
        <argsstring></argsstring>
        <name>EnableProtocolFallback</name>
        <briefdescription>
<para>Enables a fallback to another protocol in case a connect to the Name Server fails. </para>
        </briefdescription>
        <detaileddescription>
<para>When connecting to the Name Server fails for a first time, the client will select an alternative network protocol and re-try to connect.</para>
<para>The fallback will use the default Name Server port as defined by ProtocolToNameServerPort.</para>
<para>The fallback for TCP is UDP. All other protocols fallback to TCP. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="59" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="59" bodyend="59"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a55a715b3029d0f17c1eb537960c7aa5b" compoundref="_chat_client_8cs" startline="235" endline="260">Photon.Chat.ChatClient.ConnectUsingSettings</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1acd09983e6a7c5f77386068daea5c1e5e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>string</type>
        <definition>string Photon.Chat.ChatClient.NameServerAddress</definition>
        <argsstring></argsstring>
        <name>NameServerAddress</name>
        <briefdescription>
<para>The address of last connected Name Server.</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="62" column="23" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="62" bodyend="62"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1a586cbe47663c00ba006c4b1fca8973fc" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>string</type>
        <definition>string Photon.Chat.ChatClient.FrontendAddress</definition>
        <argsstring></argsstring>
        <name>FrontendAddress</name>
        <briefdescription>
<para>The address of the actual chat server assigned from NameServer. Public for read only.</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="65" column="23" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1a44a3e865b745b732bc02213a5388c1ea" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string Photon.Chat.ChatClient.ChatRegion</definition>
        <argsstring></argsstring>
        <name>ChatRegion</name>
        <briefdescription>
<para>Settable only before you connect! Defaults to &quot;EU&quot;.</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="71" column="23" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="72" bodyend="75"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a55a715b3029d0f17c1eb537960c7aa5b" compoundref="_chat_client_8cs" startline="235" endline="260">Photon.Chat.ChatClient.ConnectUsingSettings</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="namespace_photon_1_1_chat_1afc6e9ce1b2729658dbf7d583305c6c81" kindref="member">ChatState</ref></type>
        <definition>ChatState Photon.Chat.ChatClient.State</definition>
        <argsstring></argsstring>
        <name>State</name>
        <briefdescription>
<para>Current state of the <ref refid="class_photon_1_1_chat_1_1_chat_client" kindref="compound">ChatClient</ref>. Also use CanChat.</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="78" column="26" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="78" bodyend="78"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1ab42b0bad653802e35481597091cc4c57" compoundref="_chat_client_8cs" startline="220" endline="232">Photon.Chat.ChatClient.ChatClient</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2" compoundref="_chat_client_8cs" startline="389" endline="397">Photon.Chat.ChatClient.Disconnect</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type><ref refid="namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e" kindref="member">ChatDisconnectCause</ref></type>
        <definition>ChatDisconnectCause Photon.Chat.ChatClient.DisconnectedCause</definition>
        <argsstring></argsstring>
        <name>DisconnectedCause</name>
        <briefdescription>
<para>Disconnection cause. Check this inside <ref refid="interface_photon_1_1_chat_1_1_i_chat_client_listener_1a8d918edf361f65d6ab749da04604b138" kindref="member">IChatClientListener.OnDisconnected</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="81" column="36" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="81" bodyend="81"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2" compoundref="_chat_client_8cs" startline="389" endline="397">Photon.Chat.ChatClient.Disconnect</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.CanChat</definition>
        <argsstring></argsstring>
        <name>CanChat</name>
        <briefdescription>
<para>Checks if this client is ready to send messages. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="85" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="86" bodyend="88"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a03179eafc39116476b13ebd68ae43b58" compoundref="_chat_client_8cs" startline="764" endline="798">Photon.Chat.ChatClient.AddFriends</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a9319494267567de368f56a737b643634" compoundref="_chat_client_8cs" startline="94" endline="97">Photon.Chat.ChatClient.CanChatInChannel</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a9dc5c47ec3c216142d3dcdf6b5a5e1a0" compoundref="_chat_client_8cs" startline="842" endline="876">Photon.Chat.ChatClient.RemoveFriends</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a9443c39e4fde86cbfe6e2687642d3f79" compoundref="_chat_client_8cs" startline="424" endline="473">Photon.Chat.ChatClient.Subscribe</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a107f60bcc98b3ed19922d3222f7a32b7" compoundref="_chat_client_8cs" startline="519" endline="544">Photon.Chat.ChatClient.Unsubscribe</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1adbc2467f75a7929daaf2905c29031139" prot="private" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.HasPeer</definition>
        <argsstring></argsstring>
        <name>HasPeer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="99" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1adc7265160bf8f2697ae12f1fbe027eb3" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>string</type>
        <definition>string Photon.Chat.ChatClient.AppVersion</definition>
        <argsstring></argsstring>
        <name>AppVersion</name>
        <briefdescription>
<para>The version of your client. A new version also creates a new &quot;virtual app&quot; to separate players from older client versions.</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="105" column="23" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="105" bodyend="105"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1ad90fda837d118577340199e9485bba84" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>string</type>
        <definition>string Photon.Chat.ChatClient.AppId</definition>
        <argsstring></argsstring>
        <name>AppId</name>
        <briefdescription>
<para>The AppID as assigned from the <ref refid="namespace_photon" kindref="compound">Photon</ref> Cloud.</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="108" column="23" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="108" bodyend="108"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_photon_1_1_chat_1_1_authentication_values" kindref="compound">AuthenticationValues</ref></type>
        <definition>AuthenticationValues Photon.Chat.ChatClient.AuthValues</definition>
        <argsstring></argsstring>
        <name>AuthValues</name>
        <briefdescription>
<para>Settable only before you connect!</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="112" column="37" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="112" bodyend="112"/>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1a5b63578fb6b72aeac9e753626daaa73d" compoundref="_chat_gui_8cs" startline="148" endline="163">Photon.Chat.Demo.ChatGui.Connect</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>string?</type>
        <definition>string? Photon.Chat.ChatClient.UserId</definition>
        <argsstring></argsstring>
        <name>UserId</name>
        <briefdescription>
<para>The unique ID of a user/person, stored in AuthValues.UserId. </para>
        </briefdescription>
        <detaileddescription>
<para>Set it before you connect.</para>
<para>This value wraps AuthValues.UserId. It&apos;s not a nickname and we assume users with the same userID are the same person.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="118" column="23" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="119" bodyend="132"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1ab1feb7b68f1125ecd4a5c1994767a8ce" compoundref="_chat_client_8cs" startline="886" endline="889">Photon.Chat.ChatClient.GetPrivateChannelNameByUser</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1a9a625d156affdbf51778ebf60a302df6" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.UseBackgroundWorkerForSending</definition>
        <argsstring></argsstring>
        <name>UseBackgroundWorkerForSending</name>
        <briefdescription>
<para>Defines if a background thread will call SendOutgoingCommands, while your code calls Service to dispatch received messages. </para>
        </briefdescription>
        <detaileddescription>
<para>The benefit of using a background thread to call SendOutgoingCommands is this:</para>
<para>Even if your game logic is being paused, the background thread will keep the connection to the server up. On a lower level, acknowledgements and pings will prevent a server-side timeout while (e.g.) Unity loads assets.</para>
<para>Your game logic still has to call Service regularly, or else incoming messages are not dispatched. As this typically triggers UI updates, it&apos;s easier to call Service from the main/UI thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="184" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="184" bodyend="184"/>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1a5b63578fb6b72aeac9e753626daaa73d" compoundref="_chat_gui_8cs" startline="148" endline="163">Photon.Chat.Demo.ChatGui.Connect</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1aa08129ee3ee957c825e0a91a61e97993" compoundref="_chat_client_8cs" startline="344" endline="363">Photon.Chat.ChatClient.Service</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>ConnectionProtocol?</type>
        <definition>ConnectionProtocol? Photon.Chat.ChatClient.TransportProtocol</definition>
        <argsstring></argsstring>
        <name>TransportProtocol</name>
        <briefdescription>
<para>Exposes the TransportProtocol of the used PhotonPeer. Settable while not connected.</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="187" column="35" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="188" bodyend="199"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a55a715b3029d0f17c1eb537960c7aa5b" compoundref="_chat_client_8cs" startline="235" endline="260">Photon.Chat.ChatClient.ConnectUsingSettings</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1a8a166f5011405a4a85e957ac2d1ea498" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Dictionary&lt; ConnectionProtocol, Type &gt;</type>
        <definition>Dictionary&lt;ConnectionProtocol, Type&gt; Photon.Chat.ChatClient.SocketImplementationConfig</definition>
        <argsstring></argsstring>
        <name>SocketImplementationConfig</name>
        <briefdescription>
<para>Defines which IPhotonSocket class to use per ConnectionProtocol. </para>
        </briefdescription>
        <detaileddescription>
<para>Several platforms have special Socket implementations and slightly different APIs. To accomodate this, switching the socket implementation for a network protocol was made available. By default, UDP and TCP have socket implementations assigned.</para>
<para>You only need to set the SocketImplementationConfig once, after creating a PhotonPeer and before connecting. If you switch the TransportProtocol, the correct implementation is being used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="210" column="27" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="property" id="class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>DebugLevel</type>
        <definition>DebugLevel Photon.Chat.ChatClient.DebugOut</definition>
        <argsstring></argsstring>
        <name>DebugOut</name>
        <briefdescription>
<para>Sets the level (and amount) of debug output provided by the library. </para>
        </briefdescription>
        <detaileddescription>
<para>This affects the callbacks to <ref refid="interface_photon_1_1_chat_1_1_i_chat_client_listener_1a4b905d8308b42d3da45d11193f928983" kindref="member">IChatClientListener.DebugReturn</ref>. Default Level: Error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="954" column="27" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="955" bodyend="958"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a03179eafc39116476b13ebd68ae43b58" compoundref="_chat_client_8cs" startline="764" endline="798">Photon.Chat.ChatClient.AddFriends</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a55a715b3029d0f17c1eb537960c7aa5b" compoundref="_chat_client_8cs" startline="235" endline="260">Photon.Chat.ChatClient.ConnectUsingSettings</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a9dc5c47ec3c216142d3dcdf6b5a5e1a0" compoundref="_chat_client_8cs" startline="842" endline="876">Photon.Chat.ChatClient.RemoveFriends</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a9443c39e4fde86cbfe6e2687642d3f79" compoundref="_chat_client_8cs" startline="424" endline="473">Photon.Chat.ChatClient.Subscribe</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a107f60bcc98b3ed19922d3222f7a32b7" compoundref="_chat_client_8cs" startline="519" endline="544">Photon.Chat.ChatClient.Unsubscribe</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1aa3283c94a99aed6c09a956a8b93cf114" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Photon.Chat.ChatClient.chatRegion</definition>
        <argsstring></argsstring>
        <name>chatRegion</name>
        <initializer>= &quot;EU&quot;</initializer>
        <briefdescription>
<para>Region used to connect to. Currently all chat is done in EU. It can make sense to use only one region for the whole game.</para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="68" column="24" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1afd7015c98c33f037ca7f7c9a3443ffc4" prot="private" static="no" mutable="no">
        <type>readonly HashSet&lt; string &gt;</type>
        <definition>readonly HashSet&lt;string&gt; Photon.Chat.ChatClient.PublicChannelsUnsubscribing</definition>
        <argsstring></argsstring>
        <name>PublicChannelsUnsubscribing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="160" column="34" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1aee0af5e31e332be4b4f3bb723f558aa9" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_photon_1_1_chat_1_1_i_chat_client_listener" kindref="compound">IChatClientListener</ref></type>
        <definition>readonly IChatClientListener Photon.Chat.ChatClient.listener</definition>
        <argsstring></argsstring>
        <name>listener</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="162" column="46" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1aada90cf9a335670c3810b4d1365b832c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.didAuthenticate</definition>
        <argsstring></argsstring>
        <name>didAuthenticate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="166" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1a8af461f901a7f3b8eddd3731d6b95cf4" prot="private" static="no" mutable="no">
        <type>int?</type>
        <definition>int? Photon.Chat.ChatClient.statusToSetWhenConnected</definition>
        <argsstring></argsstring>
        <name>statusToSetWhenConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="168" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1ac63937c8dd37e3c18053d1cf02a8c8ad" prot="private" static="no" mutable="no">
        <type>object</type>
        <definition>object Photon.Chat.ChatClient.messageToSetWhenConnected</definition>
        <argsstring></argsstring>
        <name>messageToSetWhenConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="169" column="24" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1a456491d7456542df1bda2eb858682cee" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Photon.Chat.ChatClient.msDeltaForServiceCalls</definition>
        <argsstring></argsstring>
        <name>msDeltaForServiceCalls</name>
        <initializer>= 50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="171" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1a9134717123e2ab8641c284dd6152e45b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Photon.Chat.ChatClient.msTimestampOfLastServiceCall</definition>
        <argsstring></argsstring>
        <name>msTimestampOfLastServiceCall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="172" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1a145da05ec4438bf37eb12603459b66b5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Photon.Chat.ChatClient.MessageLimit</definition>
        <argsstring></argsstring>
        <name>MessageLimit</name>
        <briefdescription>
<para>If greater than 0, new channels will limit the number of messages they cache locally. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be useful to limit the amount of memory used by chats. You can set a MessageLimit per channel but this value gets applied to new ones.</para>
<para>Note: Changing this value, does not affect ChatChannels that are already in use! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="142" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1a7097434874100e46b581916dbba5ced1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Photon.Chat.ChatClient.PrivateChatHistoryLength</definition>
        <argsstring></argsstring>
        <name>PrivateChatHistoryLength</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>Limits the number of messages from private channel histories. </para>
        </briefdescription>
        <detaileddescription>
<para>This is applied to all private channels on reconnect, as there is no explicit re-joining private channels.<linebreak/>
 Default is -1, which gets available messages up to a maximum set by the server.<linebreak/>
 A value of 0 gets you zero messages.<linebreak/>
 The server&apos;s limit of messages may be lower. If so, the server&apos;s value will overrule this.<linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="151" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1a83932af87d8d3a71deb04cda9c7961c0" prot="public" static="no" mutable="no">
        <type>readonly Dictionary&lt; string, <ref refid="class_photon_1_1_chat_1_1_chat_channel" kindref="compound">ChatChannel</ref> &gt;</type>
        <definition>readonly Dictionary&lt;string, ChatChannel&gt; Photon.Chat.ChatClient.PublicChannels</definition>
        <argsstring></argsstring>
        <name>PublicChannels</name>
        <briefdescription>
<para>Public channels this client is subscribed to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="154" column="36" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="154" bodyend="-1"/>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a9319494267567de368f56a737b643634" compoundref="_chat_client_8cs" startline="94" endline="97">Photon.Chat.ChatClient.CanChatInChannel</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1a595d3160ff5fa3ba96ec5c972ad8528b" prot="public" static="no" mutable="no">
        <type>readonly Dictionary&lt; string, <ref refid="class_photon_1_1_chat_1_1_chat_channel" kindref="compound">ChatChannel</ref> &gt;</type>
        <definition>readonly Dictionary&lt;string, ChatChannel&gt; Photon.Chat.ChatClient.PrivateChannels</definition>
        <argsstring></argsstring>
        <name>PrivateChannels</name>
        <briefdescription>
<para>Private channels in which this client has exchanged messages. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="156" column="36" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_chat_1_1_chat_client_1af8e65e153d95d5ba0378393fd39e1a1e" prot="public" static="no" mutable="no">
        <type><ref refid="class_photon_1_1_chat_1_1_chat_peer" kindref="compound">ChatPeer</ref></type>
        <definition>ChatPeer Photon.Chat.ChatClient.chatPeer</definition>
        <argsstring></argsstring>
        <name>chatPeer</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>The <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Peer used by this client. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="164" column="25" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a9319494267567de368f56a737b643634" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.CanChatInChannel</definition>
        <argsstring>(string channelName)</argsstring>
        <name>CanChatInChannel</name>
        <param>
          <type>string</type>
          <declname>channelName</declname>
        </param>
        <briefdescription>
<para>Checks if this client is ready to publish messages inside a public channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelName</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to do the check with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not this client is ready to publish messages inside the public channel with the specified channelName.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="94" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="94" bodyend="97"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5" compoundref="_chat_client_8cs" startline="86" endline="88">Photon.Chat.ChatClient.CanChat</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a83932af87d8d3a71deb04cda9c7961c0" compoundref="_chat_client_8cs" startline="154">Photon.Chat.ChatClient.PublicChannels</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1ab42b0bad653802e35481597091cc4c57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Photon.Chat.ChatClient.ChatClient</definition>
        <argsstring>(IChatClientListener listener, ConnectionProtocol protocol=ConnectionProtocol.Udp)</argsstring>
        <name>ChatClient</name>
        <param>
          <type><ref refid="interface_photon_1_1_chat_1_1_i_chat_client_listener" kindref="compound">IChatClientListener</ref></type>
          <declname>listener</declname>
        </param>
        <param>
          <type>ConnectionProtocol</type>
          <declname>protocol</declname>
          <defval>ConnectionProtocol.Udp</defval>
        </param>
        <briefdescription>
<para><ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> client constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The chat listener implementation.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protocol</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection protocol to be used by this client. Default is ConnectionProtocol.Udp.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="220" column="16" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="220" bodyend="232"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7" compoundref="_chat_client_8cs" startline="78" endline="78">Photon.Chat.ChatClient.State</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a55a715b3029d0f17c1eb537960c7aa5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.ConnectUsingSettings</definition>
        <argsstring>(ChatAppSettings appSettings)</argsstring>
        <name>ConnectUsingSettings</name>
        <param>
          <type><ref refid="class_photon_1_1_chat_1_1_chat_app_settings" kindref="compound">ChatAppSettings</ref></type>
          <declname>appSettings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="235" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="235" bodyend="260"/>
        <references refid="class_photon_1_1_chat_1_1_chat_app_settings_1a082b8a5313837a3f9c33520b202ee55f" compoundref="_chat_app_settings_8cs" startline="37">Photon.Chat.ChatAppSettings.AppIdChat</references>
        <references refid="class_photon_1_1_chat_1_1_chat_app_settings_1a8173220d38fd94bcb5fadb2a6304cbbb" compoundref="_chat_app_settings_8cs" startline="40">Photon.Chat.ChatAppSettings.AppVersion</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a44a3e865b745b732bc02213a5388c1ea" compoundref="_chat_client_8cs" startline="72" endline="75">Photon.Chat.ChatClient.ChatRegion</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b" compoundref="_chat_client_8cs" startline="955" endline="958">Photon.Chat.ChatClient.DebugOut</references>
        <references refid="class_photon_1_1_chat_1_1_chat_app_settings_1a5bf3015c982241ccc17702f9542b609e" compoundref="_chat_app_settings_8cs" startline="56">Photon.Chat.ChatAppSettings.EnableProtocolFallback</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a0299296d1acde3271523056464c0ac11" compoundref="_chat_client_8cs" startline="59" endline="59">Photon.Chat.ChatClient.EnableProtocolFallback</references>
        <references refid="class_photon_1_1_chat_1_1_chat_app_settings_1a9ec67739f1545b7a93cb7f6ac0ca6368" compoundref="_chat_app_settings_8cs" startline="43">Photon.Chat.ChatAppSettings.FixedRegion</references>
        <references refid="class_photon_1_1_chat_1_1_chat_app_settings_1a3a2c9a7940abc2890b334ab041661a48" compoundref="_chat_app_settings_8cs" startline="62" endline="62">Photon.Chat.ChatAppSettings.IsDefaultNameServer</references>
        <references refid="class_photon_1_1_chat_1_1_chat_peer_1ac5e355b6fb0142819c49deae80305659" compoundref="_chat_peer_8cs" startline="30">Photon.Chat.ChatPeer.NameServerHost</references>
        <references refid="class_photon_1_1_chat_1_1_chat_peer_1ac6a44cd138597c409840edb8395ad442" compoundref="_chat_peer_8cs" startline="97">Photon.Chat.ChatPeer.NameServerPortOverride</references>
        <references refid="class_photon_1_1_chat_1_1_chat_app_settings_1a9855b64c1107dfad8221b1d0156be575" compoundref="_chat_app_settings_8cs" startline="59">Photon.Chat.ChatAppSettings.NetworkLogging</references>
        <references refid="class_photon_1_1_chat_1_1_chat_app_settings_1a0eb04044ea10a4c8529983bda96f290b" compoundref="_chat_app_settings_8cs" startline="49">Photon.Chat.ChatAppSettings.Port</references>
        <references refid="class_photon_1_1_chat_1_1_chat_app_settings_1a51f15aea7a0a4418107b40ecfe9deca7" compoundref="_chat_app_settings_8cs" startline="52">Photon.Chat.ChatAppSettings.Protocol</references>
        <references refid="class_photon_1_1_chat_1_1_chat_app_settings_1a1ea03b819b873de0427b45a15950b5a6" compoundref="_chat_app_settings_8cs" startline="46">Photon.Chat.ChatAppSettings.Server</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff" compoundref="_chat_client_8cs" startline="188" endline="199">Photon.Chat.ChatClient.TransportProtocol</references>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1a5b63578fb6b72aeac9e753626daaa73d" compoundref="_chat_gui_8cs" startline="148" endline="163">Photon.Chat.Demo.ChatGui.Connect</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.Connect</definition>
        <argsstring>(string appId, string appVersion, AuthenticationValues authValues)</argsstring>
        <name>Connect</name>
        <param>
          <type>string</type>
          <declname>appId</declname>
        </param>
        <param>
          <type>string</type>
          <declname>appVersion</declname>
        </param>
        <param>
          <type><ref refid="class_photon_1_1_chat_1_1_authentication_values" kindref="compound">AuthenticationValues</ref></type>
          <declname>authValues</declname>
        </param>
        <briefdescription>
<para>Connects this client to the <ref refid="namespace_photon" kindref="compound">Photon</ref> <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Cloud service, which will also authenticate the user (and set a UserId). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>appId</parametername>
</parameternamelist>
<parameterdescription>
<para>Get your <ref refid="namespace_photon" kindref="compound">Photon</ref> <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> AppId from the <ulink url="https://dashboard.photonengine.com">Dashboard</ulink>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>appVersion</parametername>
</parameternamelist>
<parameterdescription>
<para>Any version string you make up. Used to separate users and variants of your clients, which might be incompatible.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authValues</parametername>
</parameternamelist>
<parameterdescription>
<para>Values for authentication. You can leave this null, if you set a UserId before. If you set authValues, they will override any UserId set before.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="269" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="269" bodyend="316"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1ad90fda837d118577340199e9485bba84" compoundref="_chat_client_8cs" startline="108" endline="108">Photon.Chat.ChatClient.AppId</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1adc7265160bf8f2697ae12f1fbe027eb3" compoundref="_chat_client_8cs" startline="105" endline="105">Photon.Chat.ChatClient.AppVersion</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61" compoundref="_chat_client_8cs" startline="112" endline="112">Photon.Chat.ChatClient.AuthValues</references>
        <references refid="class_photon_1_1_chat_1_1_chat_peer_1afc6fce926fbdd0512c2940c1a914f4e7" compoundref="_chat_peer_8cs" startline="130" endline="138">Photon.Chat.ChatPeer.Connect</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50" compoundref="_chat_client_8cs" startline="81" endline="81">Photon.Chat.ChatClient.DisconnectedCause</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1acd09983e6a7c5f77386068daea5c1e5e" compoundref="_chat_client_8cs" startline="62" endline="62">Photon.Chat.ChatClient.NameServerAddress</references>
        <references refid="class_photon_1_1_chat_1_1_chat_peer_1a541b0c29815c07c87c49e62827c5b33a" compoundref="_chat_peer_8cs" startline="36" endline="36">Photon.Chat.ChatPeer.NameServerAddress</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7" compoundref="_chat_client_8cs" startline="78" endline="78">Photon.Chat.ChatClient.State</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff" compoundref="_chat_client_8cs" startline="188" endline="199">Photon.Chat.ChatClient.TransportProtocol</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a9a625d156affdbf51778ebf60a302df6" compoundref="_chat_client_8cs" startline="184" endline="184">Photon.Chat.ChatClient.UseBackgroundWorkerForSending</references>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1ae8f7f17505875382395e1cc898c6ca61" compoundref="_chat_client_8cs" startline="329" endline="335">Photon.Chat.ChatClient.ConnectAndSetStatus</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1a55a715b3029d0f17c1eb537960c7aa5b" compoundref="_chat_client_8cs" startline="235" endline="260">Photon.Chat.ChatClient.ConnectUsingSettings</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1ae8f7f17505875382395e1cc898c6ca61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.ConnectAndSetStatus</definition>
        <argsstring>(string appId, string appVersion, AuthenticationValues authValues, int status=ChatUserStatus.Online, object message=null)</argsstring>
        <name>ConnectAndSetStatus</name>
        <param>
          <type>string</type>
          <declname>appId</declname>
        </param>
        <param>
          <type>string</type>
          <declname>appVersion</declname>
        </param>
        <param>
          <type><ref refid="class_photon_1_1_chat_1_1_authentication_values" kindref="compound">AuthenticationValues</ref></type>
          <declname>authValues</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
          <defval><ref refid="class_photon_1_1_chat_1_1_chat_user_status_1a5dd001713c1f5f001beaf278fa3978bb" kindref="member">ChatUserStatus.Online</ref></defval>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Connects this client to the <ref refid="namespace_photon" kindref="compound">Photon</ref> <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Cloud service, which will also authenticate the user (and set a UserId). </para>
        </briefdescription>
        <detaileddescription>
<para>This also sets an online status once connected. By default it will set user status to <ref refid="class_photon_1_1_chat_1_1_chat_user_status_1a5dd001713c1f5f001beaf278fa3978bb" kindref="member">ChatUserStatus.Online</ref>. See <ref refid="class_photon_1_1_chat_1_1_chat_client_1ac910645633b86071da9f1bb928b42243" kindref="member">SetOnlineStatus(int,object)</ref> for more information. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>appId</parametername>
</parameternamelist>
<parameterdescription>
<para>Get your <ref refid="namespace_photon" kindref="compound">Photon</ref> <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> AppId from the <ulink url="https://dashboard.photonengine.com">Dashboard</ulink>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>appVersion</parametername>
</parameternamelist>
<parameterdescription>
<para>Any version string you make up. Used to separate users and variants of your clients, which might be incompatible.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authValues</parametername>
</parameternamelist>
<parameterdescription>
<para>Values for authentication. You can leave this null, if you set a UserId before. If you set authValues, they will override any UserId set before.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>User status to set when connected. Predefined states are in class <ref refid="class_photon_1_1_chat_1_1_chat_user_status" kindref="compound">ChatUserStatus</ref>. Other values can be used at will.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional status Also sets a status-message which your friends can get.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the connection attempt could be sent at all.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="329" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="329" bodyend="335"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" compoundref="_chat_client_8cs" startline="269" endline="316">Photon.Chat.ChatClient.Connect</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1aa08129ee3ee957c825e0a91a61e97993" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.Service</definition>
        <argsstring>()</argsstring>
        <name>Service</name>
        <briefdescription>
<para>Must be called regularly to keep connection between client and server alive and to process incoming messages. </para>
        </briefdescription>
        <detaileddescription>
<para>This method limits the effort it does automatically using the private variable msDeltaForServiceCalls. That value is lower for connect and multiplied by 4 when chat-server connection is ready. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="344" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="344" bodyend="363"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a9a625d156affdbf51778ebf60a302df6" compoundref="_chat_client_8cs" startline="184" endline="184">Photon.Chat.ChatClient.UseBackgroundWorkerForSending</references>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1aaf945cb389717f7f9d3f21b324a44113" compoundref="_chat_gui_8cs" startline="183" endline="198">Photon.Chat.Demo.ChatGui.Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a9fffdb1eda49e68bf205c17c99d8b217" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.SendAcksOnly</definition>
        <argsstring>()</argsstring>
        <name>SendAcksOnly</name>
        <briefdescription>
<para>Obsolete: Better use UseBackgroundWorkerForSending and <ref refid="class_photon_1_1_chat_1_1_chat_client_1aa08129ee3ee957c825e0a91a61e97993" kindref="member">Service()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="380" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.Disconnect</definition>
        <argsstring>(ChatDisconnectCause cause=ChatDisconnectCause.DisconnectByClientLogic)</argsstring>
        <name>Disconnect</name>
        <param>
          <type><ref refid="namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454e" kindref="member">ChatDisconnectCause</ref></type>
          <declname>cause</declname>
          <defval><ref refid="namespace_photon_1_1_chat_1ae62af83eed801a62ffbe6bd2fcdd454ea8b87ea0f6c00718bace24e4c4f616d84" kindref="member">ChatDisconnectCause.DisconnectByClientLogic</ref></defval>
        </param>
        <briefdescription>
<para>Disconnects from the <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Server by sending a &quot;disconnect command&quot;, which prevents a timeout server-side. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="389" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="389" bodyend="397"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50" compoundref="_chat_client_8cs" startline="81" endline="81">Photon.Chat.ChatClient.DisconnectedCause</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7" compoundref="_chat_client_8cs" startline="78" endline="78">Photon.Chat.ChatClient.State</references>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1ac8cc7ea8fbe16f11b0e1b911e9b35b34" compoundref="_chat_gui_8cs" startline="175" endline="181">Photon.Chat.Demo.ChatGui.OnApplicationQuit</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1ab20902157aae533bd581004009976b2b" compoundref="_chat_gui_8cs" startline="166" endline="172">Photon.Chat.Demo.ChatGui.OnDestroy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a7e3cc4c17ac091055422d6f21dd59818" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.StopThread</definition>
        <argsstring>()</argsstring>
        <name>StopThread</name>
        <briefdescription>
<para>Locally shuts down the connection to the <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Server. </para>
        </briefdescription>
        <detaileddescription>
<para>This resets states locally but the server will have to timeout this peer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="402" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="402" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1abe55a18070d332c5cad63a884d6a1242" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.Subscribe</definition>
        <argsstring>(string[] channels)</argsstring>
        <name>Subscribe</name>
        <param>
          <type>string[]</type>
          <declname>channels</declname>
        </param>
        <briefdescription>
<para>Sends operation to subscribe to a list of channels by name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>List of channels to subscribe to. Avoid null or empty values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the operation could be sent at all (Example: Fails if not connected to <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Server).</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="413" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="413" bodyend="416"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1abe55a18070d332c5cad63a884d6a1242" compoundref="_chat_client_8cs" startline="413" endline="416">Photon.Chat.ChatClient.Subscribe</references>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1ac18c9607a7e0bb7ccf1780f0de43f768" compoundref="_chat_gui_8cs" startline="366" endline="402">Photon.Chat.Demo.ChatGui.OnConnected</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1abe55a18070d332c5cad63a884d6a1242" compoundref="_chat_client_8cs" startline="413" endline="416">Photon.Chat.ChatClient.Subscribe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a9443c39e4fde86cbfe6e2687642d3f79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.Subscribe</definition>
        <argsstring>(string[] channels, int[] lastMsgIds)</argsstring>
        <name>Subscribe</name>
        <param>
          <type>string[]</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>int[]</type>
          <declname>lastMsgIds</declname>
        </param>
        <briefdescription>
<para>Sends operation to subscribe to a list of channels by name and possibly retrieve messages we did not receive while unsubscribed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>List of channels to subscribe to. Avoid null or empty values.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastMsgIds</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of last message received per channel. Useful when re subscribing to receive only messages we missed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the operation could be sent at all (Example: Fails if not connected to <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Server).</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="424" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="424" bodyend="473"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5" compoundref="_chat_client_8cs" startline="86" endline="88">Photon.Chat.ChatClient.CanChat</references>
        <references refid="class_photon_1_1_chat_1_1_chat_parameter_code_1a9dd583a1e25e106394b9aec31eaf15f3" compoundref="_chat_parameter_code_8cs" startline="15">Photon.Chat.ChatParameterCode.Channels</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b" compoundref="_chat_client_8cs" startline="955" endline="958">Photon.Chat.ChatClient.DebugOut</references>
        <references refid="class_photon_1_1_chat_1_1_chat_parameter_code_1a6b76139a3303feb491403143af03404a" compoundref="_chat_parameter_code_8cs" startline="47">Photon.Chat.ChatParameterCode.HistoryLength</references>
        <references refid="class_photon_1_1_chat_1_1_chat_parameter_code_1ae647ccead0599f216485fd191c7318ce" compoundref="_chat_parameter_code_8cs" startline="33">Photon.Chat.ChatParameterCode.MsgIds</references>
        <references refid="class_photon_1_1_chat_1_1_chat_operation_code_1af116a0d1172c73fda306f69e51241df0" compoundref="_chat_operation_code_8cs" startline="18">Photon.Chat.ChatOperationCode.Subscribe</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a34ca1fde36c382177f9941c70402e5d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.Subscribe</definition>
        <argsstring>(string[] channels, int messagesFromHistory)</argsstring>
        <name>Subscribe</name>
        <param>
          <type>string[]</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>messagesFromHistory</declname>
        </param>
        <briefdescription>
<para>Sends operation to subscribe client to channels, optionally fetching a number of messages from the cache. </para>
        </briefdescription>
        <detaileddescription>
<para>Subscribes channels will forward new messages to this user. Use PublishMessage to do so. The messages cache is limited but can be useful to get into ongoing conversations, if that&apos;s needed. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>List of channels to subscribe to. Avoid null or empty values.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>messagesFromHistory</parametername>
</parameternamelist>
<parameterdescription>
<para>0: no history. 1 and higher: number of messages in history. -1: all available history.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the operation could be sent at all (Example: Fails if not connected to <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Server).</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="485" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="485" bodyend="506"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5" compoundref="_chat_client_8cs" startline="86" endline="88">Photon.Chat.ChatClient.CanChat</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b" compoundref="_chat_client_8cs" startline="955" endline="958">Photon.Chat.ChatClient.DebugOut</references>
        <references refid="class_photon_1_1_chat_1_1_chat_operation_code_1af116a0d1172c73fda306f69e51241df0" compoundref="_chat_operation_code_8cs" startline="18">Photon.Chat.ChatOperationCode.Subscribe</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a107f60bcc98b3ed19922d3222f7a32b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.Unsubscribe</definition>
        <argsstring>(string[] channels)</argsstring>
        <name>Unsubscribe</name>
        <param>
          <type>string[]</type>
          <declname>channels</declname>
        </param>
        <briefdescription>
<para>Unsubscribes from a list of channels, which stops getting messages from those. </para>
        </briefdescription>
        <detaileddescription>
<para>The client will remove these channels from the PublicChannels dictionary once the server sent a response to this request.</para>
<para>The request will be sent to the server and <ref refid="interface_photon_1_1_chat_1_1_i_chat_client_listener_1a54c546b010d3578316532d0af31ee183" kindref="member">IChatClientListener.OnUnsubscribed</ref> gets called when the server actually removed the channel subscriptions.</para>
<para>Unsubscribe will fail if you include null or empty channel names. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>Names of channels to unsubscribe.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>False, if not connected to a chat server.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="519" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="519" bodyend="544"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5" compoundref="_chat_client_8cs" startline="86" endline="88">Photon.Chat.ChatClient.CanChat</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b" compoundref="_chat_client_8cs" startline="955" endline="958">Photon.Chat.ChatClient.DebugOut</references>
        <references refid="class_photon_1_1_chat_1_1_chat_operation_code_1a0cf740ac7a73ba3d7c3c3448cfb40633" compoundref="_chat_operation_code_8cs" startline="20">Photon.Chat.ChatOperationCode.Unsubscribe</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1afefc5d6f79d10d6d755669d14eee9c12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.PublishMessage</definition>
        <argsstring>(string channelName, object message, bool forwardAsWebhook=false)</argsstring>
        <name>PublishMessage</name>
        <param>
          <type>string</type>
          <declname>channelName</declname>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forwardAsWebhook</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sends a message to a public channel which this client subscribed to. </para>
        </briefdescription>
        <detaileddescription>
<para>Before you publish to a channel, you have to subscribe it. Everyone in that channel will get the message. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the channel to publish to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Your message (string or any serializable data).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forwardAsWebhook</parametername>
</parameternamelist>
<parameterdescription>
<para>Optionally, public messages can be forwarded as webhooks. Configure webhooks for your <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> app to use this.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>False if the client is not yet ready to send messages.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="555" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="555" bodyend="558"/>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1a23d955970144389370fe34cb6d30cc50" compoundref="_chat_gui_8cs" startline="417" endline="455">Photon.Chat.Demo.ChatGui.OnSubscribed</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1ad50dca47b8149b0952746af0fe25dad2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.SendPrivateMessage</definition>
        <argsstring>(string target, object message, bool forwardAsWebhook=false)</argsstring>
        <name>SendPrivateMessage</name>
        <param>
          <type>string</type>
          <declname>target</declname>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forwardAsWebhook</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sends a private message to a single target user. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls OnPrivateMessage on the receiving client. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Username to send this message to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message you want to send. Can be a simple string or anything serializable.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forwardAsWebhook</parametername>
</parameternamelist>
<parameterdescription>
<para>Optionally, private messages can be forwarded as webhooks. Configure webhooks for your <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> app to use this.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if this clients can send the message to the server.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="605" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="605" bodyend="608"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1ad50dca47b8149b0952746af0fe25dad2" compoundref="_chat_client_8cs" startline="605" endline="608">Photon.Chat.ChatClient.SendPrivateMessage</references>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1ad50dca47b8149b0952746af0fe25dad2" compoundref="_chat_client_8cs" startline="605" endline="608">Photon.Chat.ChatClient.SendPrivateMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1af667c9375be0cfdd9d626c24f1bb4deb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.SendPrivateMessage</definition>
        <argsstring>(string target, object message, bool encrypt, bool forwardAsWebhook)</argsstring>
        <name>SendPrivateMessage</name>
        <param>
          <type>string</type>
          <declname>target</declname>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>encrypt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forwardAsWebhook</declname>
        </param>
        <briefdescription>
<para>Sends a private message to a single target user. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls OnPrivateMessage on the receiving client. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Username to send this message to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message you want to send. Can be a simple string or anything serializable.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encrypt</parametername>
</parameternamelist>
<parameterdescription>
<para>Optionally, private messages can be encrypted. Encryption is not end-to-end as the server decrypts the message.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forwardAsWebhook</parametername>
</parameternamelist>
<parameterdescription>
<para>Optionally, private messages can be forwarded as webhooks. Configure webhooks for your <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> app to use this.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if this clients can send the message to the server.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="618" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="618" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a0d5755dc7972e0a68cf51863ff2d6ed1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.SetOnlineStatus</definition>
        <argsstring>(int status)</argsstring>
        <name>SetOnlineStatus</name>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Sets the user&apos;s status without changing your status-message. </para>
        </briefdescription>
        <detaileddescription>
<para>The predefined status values can be found in class <ref refid="class_photon_1_1_chat_1_1_chat_user_status" kindref="compound">ChatUserStatus</ref>. State <ref refid="class_photon_1_1_chat_1_1_chat_user_status_1aa68c785d513085589c97caedd932cad1" kindref="member">ChatUserStatus.Invisible</ref> will make you offline for everyone and send no message.</para>
<para>You can set custom values in the status integer. Aside from the pre-configured ones, all states will be considered visible and online. Else, no one would see the custom state.</para>
<para>This overload does not change the set message. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Predefined states are in class <ref refid="class_photon_1_1_chat_1_1_chat_user_status" kindref="compound">ChatUserStatus</ref>. Other values can be used at will.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation gets called on the server.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="716" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="716" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1ac910645633b86071da9f1bb928b42243" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.SetOnlineStatus</definition>
        <argsstring>(int status, object message)</argsstring>
        <name>SetOnlineStatus</name>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Sets the user&apos;s status without changing your status-message. </para>
        </briefdescription>
        <detaileddescription>
<para>The predefined status values can be found in class <ref refid="class_photon_1_1_chat_1_1_chat_user_status" kindref="compound">ChatUserStatus</ref>. State <ref refid="class_photon_1_1_chat_1_1_chat_user_status_1aa68c785d513085589c97caedd932cad1" kindref="member">ChatUserStatus.Invisible</ref> will make you offline for everyone and send no message.</para>
<para>You can set custom values in the status integer. Aside from the pre-configured ones, all states will be considered visible and online. Else, no one would see the custom state.</para>
<para>The message object can be anything that <ref refid="namespace_photon" kindref="compound">Photon</ref> can serialize, including (but not limited to) Hashtable, object[] and string. This value is defined by your own conventions. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Predefined states are in class <ref refid="class_photon_1_1_chat_1_1_chat_user_status" kindref="compound">ChatUserStatus</ref>. Other values can be used at will.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Also sets a status-message which your friends can get.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation gets called on the server.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="735" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="735" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a03179eafc39116476b13ebd68ae43b58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.AddFriends</definition>
        <argsstring>(string[] friends)</argsstring>
        <name>AddFriends</name>
        <param>
          <type>string[]</type>
          <declname>friends</declname>
        </param>
        <briefdescription>
<para>Adds friends to a list on the <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Server which will send you status updates for those. </para>
        </briefdescription>
        <detaileddescription>
<para>AddFriends and RemoveFriends enable clients to handle their friend list in the <ref refid="namespace_photon" kindref="compound">Photon</ref> <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> server. Having users on your friends list gives you access to their current online status (and whatever info your client sets in it).</para>
<para>Each user can set an online status consisting of an integer and an arbitrary (serializable) object. The object can be null, Hashtable, object[] or anything else <ref refid="namespace_photon" kindref="compound">Photon</ref> can serialize.</para>
<para>The status is published automatically to friends (anyone who set your user ID with AddFriends).</para>
<para><ref refid="namespace_photon" kindref="compound">Photon</ref> flushes friends-list when a chat client disconnects, so it has to be set each time. If your community API gives you access to online status already, you could filter and set online friends in AddFriends.</para>
<para>Actual friend relations are not persistent and have to be stored outside of <ref refid="namespace_photon" kindref="compound">Photon</ref>. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>friends</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of friend userIds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the operation could be sent.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="764" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="764" bodyend="798"/>
        <references refid="class_photon_1_1_chat_1_1_chat_operation_code_1ad0fa7f85c104183cfec5fb0613088fb7" compoundref="_chat_operation_code_8cs" startline="32">Photon.Chat.ChatOperationCode.AddFriends</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5" compoundref="_chat_client_8cs" startline="86" endline="88">Photon.Chat.ChatClient.CanChat</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b" compoundref="_chat_client_8cs" startline="955" endline="958">Photon.Chat.ChatClient.DebugOut</references>
        <references refid="class_photon_1_1_chat_1_1_chat_parameter_code_1ae1248e5e672e273a606542ef83713c75" compoundref="_chat_parameter_code_8cs" startline="42">Photon.Chat.ChatParameterCode.Friends</references>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1ac18c9607a7e0bb7ccf1780f0de43f768" compoundref="_chat_gui_8cs" startline="366" endline="402">Photon.Chat.Demo.ChatGui.OnConnected</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a9dc5c47ec3c216142d3dcdf6b5a5e1a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.RemoveFriends</definition>
        <argsstring>(string[] friends)</argsstring>
        <name>RemoveFriends</name>
        <param>
          <type>string[]</type>
          <declname>friends</declname>
        </param>
        <briefdescription>
<para>Removes the provided entries from the list on the <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> Server and stops their status updates. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_photon" kindref="compound">Photon</ref> flushes friends-list when a chat client disconnects. Unless you want to remove individual entries, you don&apos;t have to RemoveFriends.</para>
<para>AddFriends and RemoveFriends enable clients to handle their friend list in the <ref refid="namespace_photon" kindref="compound">Photon</ref> <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> server. Having users on your friends list gives you access to their current online status (and whatever info your client sets in it).</para>
<para>Each user can set an online status consisting of an integer and an arbitratry (serializable) object. The object can be null, Hashtable, object[] or anything else <ref refid="namespace_photon" kindref="compound">Photon</ref> can serialize.</para>
<para>The status is published automatically to friends (anyone who set your user ID with AddFriends).</para>
<para><ref refid="namespace_photon" kindref="compound">Photon</ref> flushes friends-list when a chat client disconnects, so it has to be set each time. If your community API gives you access to online status already, you could filter and set online friends in AddFriends.</para>
<para>Actual friend relations are not persistent and have to be stored outside of <ref refid="namespace_photon" kindref="compound">Photon</ref>.</para>
<para>AddFriends and RemoveFriends enable clients to handle their friend list in the <ref refid="namespace_photon" kindref="compound">Photon</ref> <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> server. Having users on your friends list gives you access to their current online status (and whatever info your client sets in it).</para>
<para>Each user can set an online status consisting of an integer and an arbitratry (serializable) object. The object can be null, Hashtable, object[] or anything else <ref refid="namespace_photon" kindref="compound">Photon</ref> can serialize.</para>
<para>The status is published automatically to friends (anyone who set your user ID with AddFriends).</para>
<para>Actual friend relations are not persistent and have to be stored outside of <ref refid="namespace_photon" kindref="compound">Photon</ref>. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>friends</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of friend userIds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the operation could be sent.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="842" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="842" bodyend="876"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5" compoundref="_chat_client_8cs" startline="86" endline="88">Photon.Chat.ChatClient.CanChat</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b" compoundref="_chat_client_8cs" startline="955" endline="958">Photon.Chat.ChatClient.DebugOut</references>
        <references refid="class_photon_1_1_chat_1_1_chat_parameter_code_1ae1248e5e672e273a606542ef83713c75" compoundref="_chat_parameter_code_8cs" startline="42">Photon.Chat.ChatParameterCode.Friends</references>
        <references refid="class_photon_1_1_chat_1_1_chat_operation_code_1a84934276dfca49546803e3af930526e9" compoundref="_chat_operation_code_8cs" startline="34">Photon.Chat.ChatOperationCode.RemoveFriends</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1ab1feb7b68f1125ecd4a5c1994767a8ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Photon.Chat.ChatClient.GetPrivateChannelNameByUser</definition>
        <argsstring>(string userName)</argsstring>
        <name>GetPrivateChannelNameByUser</name>
        <param>
          <type>string</type>
          <declname>userName</declname>
        </param>
        <briefdescription>
<para>Get you the (locally used) channel name for the chat between this client and another user. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>userName</parametername>
</parameternamelist>
<parameterdescription>
<para>Remote user&apos;s name or UserId.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The (locally used) channel name for a private channel.</para>
</simplesect>
</para>
<para>Do not subscribe to this channel. Private channels do not need to be explicitly subscribed to. Use this for debugging purposes mainly.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="886" column="23" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="886" bodyend="889"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546" compoundref="_chat_client_8cs" startline="119" endline="132">Photon.Chat.ChatClient.UserId</references>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1af9f150401be83cd00b7061fe04a07456" compoundref="_chat_client_8cs" startline="936" endline="945">Photon.Chat.ChatClient.TryGetPrivateChannelByUser</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a5dd578fb1b7cbbebcbe28a95187bb85e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.TryGetChannel</definition>
        <argsstring>(string channelName, bool isPrivate, out ChatChannel channel)</argsstring>
        <name>TryGetChannel</name>
        <param>
          <type>string</type>
          <declname>channelName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isPrivate</declname>
        </param>
        <param>
          <type>out <ref refid="class_photon_1_1_chat_1_1_chat_channel" kindref="compound">ChatChannel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Simplified access to either private or public channels by name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the channel to get. For private channels, the channel-name is composed of both user&apos;s names.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isPrivate</parametername>
</parameternamelist>
<parameterdescription>
<para>Define if you expect a private or public channel.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Out parameter gives you the found channel, if any.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the channel was found.</para>
</simplesect>
</para>
<para>Public channels exist only when subscribed to them. Private channels exist only when at least one message is exchanged with the target user privately.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="900" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="900" bodyend="910"/>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1a85d3cb36afac98dba57d6250df07a67b" compoundref="_chat_gui_8cs" startline="597" endline="611">Photon.Chat.Demo.ChatGui.AddMessageToSelectedChannel</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1a26014f297b76b9538f8d9376f9607c91" compoundref="_chat_gui_8cs" startline="615" endline="638">Photon.Chat.Demo.ChatGui.ShowChannel</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_chat_client_1af9f150401be83cd00b7061fe04a07456" compoundref="_chat_client_8cs" startline="936" endline="945">Photon.Chat.ChatClient.TryGetPrivateChannelByUser</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a5e6a8762289fd86be605bef46d67018d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.TryGetChannel</definition>
        <argsstring>(string channelName, out ChatChannel channel)</argsstring>
        <name>TryGetChannel</name>
        <param>
          <type>string</type>
          <declname>channelName</declname>
        </param>
        <param>
          <type>out <ref refid="class_photon_1_1_chat_1_1_chat_channel" kindref="compound">ChatChannel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Simplified access to all channels by name. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks public channels first, then private ones. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the channel to get.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Out parameter gives you the found channel, if any.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the channel was found.</para>
</simplesect>
</para>
<para>Public channels exist only when subscribed to them. Private channels exist only when at least one message is exchanged with the target user privately.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="920" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="920" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1af9f150401be83cd00b7061fe04a07456" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.TryGetPrivateChannelByUser</definition>
        <argsstring>(string userId, out ChatChannel channel)</argsstring>
        <name>TryGetPrivateChannelByUser</name>
        <param>
          <type>string</type>
          <declname>userId</declname>
        </param>
        <param>
          <type>out <ref refid="class_photon_1_1_chat_1_1_chat_channel" kindref="compound">ChatChannel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Simplified access to private channels by target user. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>userId</parametername>
</parameternamelist>
<parameterdescription>
<para>UserId of the target user in the private channel.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Out parameter gives you the found channel, if any.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the channel was found.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="936" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="936" bodyend="945"/>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1ab1feb7b68f1125ecd4a5c1994767a8ce" compoundref="_chat_client_8cs" startline="886" endline="889">Photon.Chat.ChatClient.GetPrivateChannelNameByUser</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1a5dd578fb1b7cbbebcbe28a95187bb85e" compoundref="_chat_client_8cs" startline="900" endline="910">Photon.Chat.ChatClient.TryGetChannel</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a0f1ee1bc79ae06278ad7229706441141" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.Subscribe</definition>
        <argsstring>(string channel, int lastMsgId=0, int messagesFromHistory=-1, ChannelCreationOptions creationOptions=null)</argsstring>
        <name>Subscribe</name>
        <param>
          <type>string</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lastMsgId</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>messagesFromHistory</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="class_photon_1_1_chat_1_1_channel_creation_options" kindref="compound">ChannelCreationOptions</ref></type>
          <declname>creationOptions</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Subscribe to a single channel and optionally sets its well-know channel properties in case the channel is created. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the channel to subscribe to</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastMsgId</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the last received message from this channel when re subscribing to receive only missed messages, default is 0</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>messagesFromHistory</parametername>
</parameternamelist>
<parameterdescription>
<para>how many missed messages to receive from history, default is -1 (available history). 0 will get you no items. Positive values are capped by a server side limit.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>creationOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>options to be used in case the channel to subscribe to will be created.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1586" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1586" bodyend="1673"/>
        <references refid="class_photon_1_1_chat_1_1_chat_parameter_code_1a9dd583a1e25e106394b9aec31eaf15f3" compoundref="_chat_parameter_code_8cs" startline="15">Photon.Chat.ChatParameterCode.Channels</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b" compoundref="_chat_client_8cs" startline="955" endline="958">Photon.Chat.ChatClient.DebugOut</references>
        <references refid="class_photon_1_1_chat_1_1_channel_creation_options_1aa2c635f57756a2bdddab74ea8e50fb3e" compoundref="_channel_creation_options_8cs" startline="12">Photon.Chat.ChannelCreationOptions.Default</references>
        <references refid="class_photon_1_1_chat_1_1_chat_client_1ac37c92ca11e06427a261abde9809ce3f" compoundref="_chat_client_8cs" startline="46">Photon.Chat.ChatClient.DefaultMaxSubscribers</references>
        <references refid="class_photon_1_1_chat_1_1_chat_parameter_code_1a6b76139a3303feb491403143af03404a" compoundref="_chat_parameter_code_8cs" startline="47">Photon.Chat.ChatParameterCode.HistoryLength</references>
        <references refid="class_photon_1_1_chat_1_1_channel_creation_options_1a94ba10ec47180d1f9435658e82cd82b0" compoundref="_channel_creation_options_8cs" startline="16" endline="16">Photon.Chat.ChannelCreationOptions.MaxSubscribers</references>
        <references refid="class_photon_1_1_chat_1_1_channel_well_known_properties_1a88d36f10f0462ea021635b5ef416adba" compoundref="_channel_well_known_properties_8cs" startline="11">Photon.Chat.ChannelWellKnownProperties.MaxSubscribers</references>
        <references refid="class_photon_1_1_chat_1_1_chat_parameter_code_1ae647ccead0599f216485fd191c7318ce" compoundref="_chat_parameter_code_8cs" startline="33">Photon.Chat.ChatParameterCode.MsgIds</references>
        <references refid="class_photon_1_1_chat_1_1_chat_parameter_code_1a9a090586c7b99a491fefd8f90d042820" compoundref="_chat_parameter_code_8cs" startline="60">Photon.Chat.ChatParameterCode.Properties</references>
        <references refid="class_photon_1_1_chat_1_1_channel_well_known_properties_1a7a5ec624e5b41204f40420bebffa530d" compoundref="_channel_well_known_properties_8cs" startline="12">Photon.Chat.ChannelWellKnownProperties.PublishSubscribers</references>
        <references refid="class_photon_1_1_chat_1_1_chat_operation_code_1af116a0d1172c73fda306f69e51241df0" compoundref="_chat_operation_code_8cs" startline="18">Photon.Chat.ChatOperationCode.Subscribe</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1add96a4fe0e51460c5ef0b0d3da469bc3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.SendOutgoingInBackground</definition>
        <argsstring>()</argsstring>
        <name>SendOutgoingInBackground</name>
        <briefdescription>
<para>Called by a separate thread, this sends outgoing commands of this peer, as long as it&apos;s connected. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True as long as the client is not disconnected.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="369" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="369" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1abd054e64db59e580d97a817f99310e99" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.publishMessage</definition>
        <argsstring>(string channelName, object message, bool reliable, bool forwardAsWebhook=false)</argsstring>
        <name>publishMessage</name>
        <param>
          <type>string</type>
          <declname>channelName</declname>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reliable</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forwardAsWebhook</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="565" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="565" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1af43bd1ad8d9b455840d5d00265b20bb9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.sendPrivateMessage</definition>
        <argsstring>(string target, object message, bool encrypt, bool reliable, bool forwardAsWebhook=false)</argsstring>
        <name>sendPrivateMessage</name>
        <param>
          <type>string</type>
          <declname>target</declname>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>encrypt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reliable</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forwardAsWebhook</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="628" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="628" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a4082838ff7355c23a7d92b02e8405efc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.SetOnlineStatus</definition>
        <argsstring>(int status, object message, bool skipMessage)</argsstring>
        <name>SetOnlineStatus</name>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipMessage</declname>
        </param>
        <briefdescription>
<para>Sets the user&apos;s status (pre-defined or custom) and an optional message. </para>
        </briefdescription>
        <detaileddescription>
<para>The predefined status values can be found in class <ref refid="class_photon_1_1_chat_1_1_chat_user_status" kindref="compound">ChatUserStatus</ref>. State <ref refid="class_photon_1_1_chat_1_1_chat_user_status_1aa68c785d513085589c97caedd932cad1" kindref="member">ChatUserStatus.Invisible</ref> will make you offline for everyone and send no message.</para>
<para>You can set custom values in the status integer. Aside from the pre-configured ones, all states will be considered visible and online. Else, no one would see the custom state.</para>
<para>The message object can be anything that <ref refid="namespace_photon" kindref="compound">Photon</ref> can serialize, including (but not limited to) Hashtable, object[] and string. This value is defined by your own conventions. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Predefined states are in class <ref refid="class_photon_1_1_chat_1_1_chat_user_status" kindref="compound">ChatUserStatus</ref>. Other values can be used at will.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional string message or null.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the message gets ignored. It can be null but won&apos;t replace any current message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation gets called on the server.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="676" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="676" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1afe4e4cf5b16815e7f60f55b7d230483e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void IPhotonPeerListener.</type>
        <definition>void IPhotonPeerListener. Photon.Chat.ChatClient.DebugReturn</definition>
        <argsstring>(DebugLevel level, string message)</argsstring>
        <name>DebugReturn</name>
        <param>
          <type>DebugLevel</type>
          <declname>level</declname>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="964" column="33" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="964" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a6040c42c7364e2488514bd79383213d9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void IPhotonPeerListener.</type>
        <definition>void IPhotonPeerListener. Photon.Chat.ChatClient.OnEvent</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>OnEvent</name>
        <param>
          <type>EventData</type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="969" column="33" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="969" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a6fa6375e40c2b85a51b3d989cb46cc4b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void IPhotonPeerListener.</type>
        <definition>void IPhotonPeerListener. Photon.Chat.ChatClient.OnOperationResponse</definition>
        <argsstring>(OperationResponse operationResponse)</argsstring>
        <name>OnOperationResponse</name>
        <param>
          <type>OperationResponse</type>
          <declname>operationResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1005" column="33" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1005" bodyend="1032"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1af4a59688bc7fd4ced31ef2d68f552c40" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void IPhotonPeerListener.</type>
        <definition>void IPhotonPeerListener. Photon.Chat.ChatClient.OnStatusChanged</definition>
        <argsstring>(StatusCode statusCode)</argsstring>
        <name>OnStatusChanged</name>
        <param>
          <type>StatusCode</type>
          <declname>statusCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1034" column="33" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1034" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a2ca62421358371f177157f7340713e91" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.TryAuthenticateOnNameServer</definition>
        <argsstring>()</argsstring>
        <name>TryAuthenticateOnNameServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1193" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1193" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a0413525517b1e67ed1818f262fe92a5e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.SendChannelOperation</definition>
        <argsstring>(string[] channels, byte operation, int historyLength)</argsstring>
        <name>SendChannelOperation</name>
        <param>
          <type>string[]</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>historyLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1208" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1208" bodyend="1218"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a7a4f71c23e6893b6ed7b64ae1715c177" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.HandlePrivateMessageEvent</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>HandlePrivateMessageEvent</name>
        <param>
          <type>EventData</type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1220" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1220" bodyend="1250"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a8ea25391a52a306adc08cabd928becc3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.HandleChatMessagesEvent</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>HandleChatMessagesEvent</name>
        <param>
          <type>EventData</type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1252" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1252" bodyend="1271"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a16dde8462bf480197026133d168adcda" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.HandleSubscribeEvent</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>HandleSubscribeEvent</name>
        <param>
          <type>EventData</type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1273" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1273" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a231b0ce90f39ead85cb27bcf77184b01" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.HandleUnsubscribeEvent</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>HandleUnsubscribeEvent</name>
        <param>
          <type>EventData</type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1321" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1321" bodyend="1332"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a427aacde5ff51e6593888ffd12827cb3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.HandleAuthResponse</definition>
        <argsstring>(OperationResponse operationResponse)</argsstring>
        <name>HandleAuthResponse</name>
        <param>
          <type>OperationResponse</type>
          <declname>operationResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1334" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1334" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1abacc7a03514cd92c694540ed80b7b146" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.HandleStatusUpdate</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>HandleStatusUpdate</name>
        <param>
          <type>EventData</type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1426" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1426" bodyend="1439"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1aa8b24c8d99ef4691becf5e7d7e2bf0b8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.ConnectToFrontEnd</definition>
        <argsstring>()</argsstring>
        <name>ConnectToFrontEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1441" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1441" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a021fb122f4ed3a4dccaa6d5583a85c22" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.AuthenticateOnFrontEnd</definition>
        <argsstring>()</argsstring>
        <name>AuthenticateOnFrontEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1470" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1470" bodyend="1501"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1afeea2f5182c79f4d70613f4bcb42e49b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.HandleUserUnsubscribedEvent</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>HandleUserUnsubscribedEvent</name>
        <param>
          <type>EventData</type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1503" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1503" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1ad904338de0cf5bd965029ca3625d5dbf" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Chat.ChatClient.HandleUserSubscribedEvent</definition>
        <argsstring>(EventData eventData)</argsstring>
        <name>HandleUserSubscribedEvent</name>
        <param>
          <type>EventData</type>
          <declname>eventData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="1535" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="1535" bodyend="1574"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a611fb92d0be8a681c671c889300942d3" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.PublishMessageUnreliable</definition>
        <argsstring>(string channelName, object message, bool forwardAsWebhook=false)</argsstring>
        <name>PublishMessageUnreliable</name>
        <param>
          <type>string</type>
          <declname>channelName</declname>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forwardAsWebhook</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="560" column="23" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="560" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_chat_1_1_chat_client_1a58f26a4806b1cd1d0de844fa27e356bc" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Photon.Chat.ChatClient.SendPrivateMessageUnreliable</definition>
        <argsstring>(string target, object message, bool encrypt, bool forwardAsWebhook=false)</argsstring>
        <name>SendPrivateMessageUnreliable</name>
        <param>
          <type>string</type>
          <declname>target</declname>
        </param>
        <param>
          <type>object</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>encrypt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forwardAsWebhook</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="623" column="23" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="623" bodyend="626"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Central class of the <ref refid="namespace_photon" kindref="compound">Photon</ref> <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> API to connect, handle channels and messages. </para>
    </briefdescription>
    <detaileddescription>
<para>This class must be instantiated with a <ref refid="interface_photon_1_1_chat_1_1_i_chat_client_listener" kindref="compound">IChatClientListener</ref> instance to get the callbacks. Integrate it into your game loop by calling Service regularly. If the target platform supports Threads/Tasks, set UseBackgroundWorkerForSending = true, to let the <ref refid="class_photon_1_1_chat_1_1_chat_client" kindref="compound">ChatClient</ref> keep the connection by sending from an independent thread.</para>
<para>Call Connect with an AppId that is setup as <ref refid="namespace_photon" kindref="compound">Photon</ref> <ref refid="namespace_photon_1_1_chat" kindref="compound">Chat</ref> application. Note: Connect covers multiple messages between this client and the servers. A short workflow will connect you to a chat server.</para>
<para>Each <ref refid="class_photon_1_1_chat_1_1_chat_client" kindref="compound">ChatClient</ref> resembles a user in chat (set in Connect). Each user automatically subscribes a channel for incoming private messages and can message any other user privately. Before you publish messages in any non-private channel, that channel must be subscribed.</para>
<para>PublicChannels is a list of subscribed channels, containing messages and senders. PrivateChannels contains all incoming and sent private messages. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IPhotonPeerListener</label>
      </node>
      <node id="1">
        <label>Photon.Chat.ChatClient</label>
        <link refid="class_photon_1_1_chat_1_1_chat_client"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IPhotonPeerListener</label>
      </node>
      <node id="1">
        <label>Photon.Chat.ChatClient</label>
        <link refid="class_photon_1_1_chat_1_1_chat_client"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>+chatPeer</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Photon.Chat.ChatPeer</label>
        <link refid="class_photon_1_1_chat_1_1_chat_peer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>PhotonPeer</label>
      </node>
    </collaborationgraph>
    <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" line="41" column="11" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonChat/Code/ChatClient.cs" bodystart="42" bodyend="1827"/>
    <listofallmembers>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a03179eafc39116476b13ebd68ae43b58" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>AddFriends</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1ad90fda837d118577340199e9485bba84" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>AppId</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1adc7265160bf8f2697ae12f1fbe027eb3" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>AppVersion</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a021fb122f4ed3a4dccaa6d5583a85c22" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>AuthenticateOnFrontEnd</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a2883e249a1a3b89d2058f84105549a61" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>AuthValues</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a24f7e37f078c3ea6d24b032a428e45b5" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>CanChat</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a9319494267567de368f56a737b643634" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>CanChatInChannel</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a3fd3e0396578e60e296f249dfce7b934" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>ChatAppName</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1ab42b0bad653802e35481597091cc4c57" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>ChatClient</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1af8e65e153d95d5ba0378393fd39e1a1e" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>chatPeer</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1aa3283c94a99aed6c09a956a8b93cf114" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>chatRegion</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a44a3e865b745b732bc02213a5388c1ea" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>ChatRegion</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a26295d698e9cea35b3e6411623c54ded" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>Connect</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1ae8f7f17505875382395e1cc898c6ca61" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>ConnectAndSetStatus</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1aa8b24c8d99ef4691becf5e7d7e2bf0b8" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>ConnectToFrontEnd</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a55a715b3029d0f17c1eb537960c7aa5b" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>ConnectUsingSettings</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1af4333dbf23b2a561999bf4afc359617b" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>DebugOut</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1afe4e4cf5b16815e7f60f55b7d230483e" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>DebugReturn</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1ac37c92ca11e06427a261abde9809ce3f" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>DefaultMaxSubscribers</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1aada90cf9a335670c3810b4d1365b832c" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>didAuthenticate</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a9eac49b1efa140099bd95f95df3cc8c2" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>Disconnect</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1af21defff503f937fec64ac09ec502b50" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>DisconnectedCause</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a0299296d1acde3271523056464c0ac11" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>EnableProtocolFallback</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1acceaf28552483beba377dae782637824" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>FriendRequestListMax</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a586cbe47663c00ba006c4b1fca8973fc" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>FrontendAddress</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1ab1feb7b68f1125ecd4a5c1994767a8ce" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>GetPrivateChannelNameByUser</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a427aacde5ff51e6593888ffd12827cb3" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HandleAuthResponse</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a8ea25391a52a306adc08cabd928becc3" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HandleChatMessagesEvent</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a7a4f71c23e6893b6ed7b64ae1715c177" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HandlePrivateMessageEvent</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1abacc7a03514cd92c694540ed80b7b146" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HandleStatusUpdate</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a16dde8462bf480197026133d168adcda" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HandleSubscribeEvent</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a231b0ce90f39ead85cb27bcf77184b01" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HandleUnsubscribeEvent</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1ad904338de0cf5bd965029ca3625d5dbf" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HandleUserSubscribedEvent</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1afeea2f5182c79f4d70613f4bcb42e49b" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HandleUserUnsubscribedEvent</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1adbc2467f75a7929daaf2905c29031139" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HasPeer</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a845beb33aab78ae0b4b1cad0f5b8fa04" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>HttpForwardWebFlag</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1aee0af5e31e332be4b4f3bb723f558aa9" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>listener</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a145da05ec4438bf37eb12603459b66b5" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>MessageLimit</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1ac63937c8dd37e3c18053d1cf02a8c8ad" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>messageToSetWhenConnected</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a456491d7456542df1bda2eb858682cee" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>msDeltaForServiceCalls</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a9134717123e2ab8641c284dd6152e45b" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>msTimestampOfLastServiceCall</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1acd09983e6a7c5f77386068daea5c1e5e" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>NameServerAddress</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a6040c42c7364e2488514bd79383213d9" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>OnEvent</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a6fa6375e40c2b85a51b3d989cb46cc4b" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>OnOperationResponse</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1af4a59688bc7fd4ced31ef2d68f552c40" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>OnStatusChanged</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a595d3160ff5fa3ba96ec5c972ad8528b" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>PrivateChannels</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a7097434874100e46b581916dbba5ced1" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>PrivateChatHistoryLength</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a83932af87d8d3a71deb04cda9c7961c0" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>PublicChannels</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1afd7015c98c33f037ca7f7c9a3443ffc4" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>PublicChannelsUnsubscribing</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1abd054e64db59e580d97a817f99310e99" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>publishMessage</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1afefc5d6f79d10d6d755669d14eee9c12" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>PublishMessage</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a611fb92d0be8a681c671c889300942d3" prot="package" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>PublishMessageUnreliable</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a9dc5c47ec3c216142d3dcdf6b5a5e1a0" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>RemoveFriends</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a9fffdb1eda49e68bf205c17c99d8b217" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SendAcksOnly</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a0413525517b1e67ed1818f262fe92a5e" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SendChannelOperation</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1add96a4fe0e51460c5ef0b0d3da469bc3" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SendOutgoingInBackground</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1af43bd1ad8d9b455840d5d00265b20bb9" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>sendPrivateMessage</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1ad50dca47b8149b0952746af0fe25dad2" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SendPrivateMessage</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1af667c9375be0cfdd9d626c24f1bb4deb" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SendPrivateMessage</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a58f26a4806b1cd1d0de844fa27e356bc" prot="package" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SendPrivateMessageUnreliable</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1aa08129ee3ee957c825e0a91a61e97993" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>Service</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a4082838ff7355c23a7d92b02e8405efc" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SetOnlineStatus</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a0d5755dc7972e0a68cf51863ff2d6ed1" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SetOnlineStatus</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1ac910645633b86071da9f1bb928b42243" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SetOnlineStatus</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a8a166f5011405a4a85e957ac2d1ea498" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>SocketImplementationConfig</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a433c87f11e648a9b24a44c0bcad5c6b7" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>State</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a8af461f901a7f3b8eddd3731d6b95cf4" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>statusToSetWhenConnected</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a7e3cc4c17ac091055422d6f21dd59818" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>StopThread</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1abe55a18070d332c5cad63a884d6a1242" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>Subscribe</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a9443c39e4fde86cbfe6e2687642d3f79" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>Subscribe</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a34ca1fde36c382177f9941c70402e5d7" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>Subscribe</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a0f1ee1bc79ae06278ad7229706441141" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>Subscribe</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a5a7d22fc0ccda0c61fff2cf9ffb798ff" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>TransportProtocol</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a2ca62421358371f177157f7340713e91" prot="private" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>TryAuthenticateOnNameServer</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a5dd578fb1b7cbbebcbe28a95187bb85e" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>TryGetChannel</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a5e6a8762289fd86be605bef46d67018d" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>TryGetChannel</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1af9f150401be83cd00b7061fe04a07456" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>TryGetPrivateChannelByUser</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a107f60bcc98b3ed19922d3222f7a32b7" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>Unsubscribe</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1a9a625d156affdbf51778ebf60a302df6" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>UseBackgroundWorkerForSending</name></member>
      <member refid="class_photon_1_1_chat_1_1_chat_client_1abe9eae1c888f8f58a32c4f3298038546" prot="public" virt="non-virtual"><scope>Photon::Chat::ChatClient</scope><name>UserId</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
