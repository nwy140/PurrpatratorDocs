<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_photon_1_1_compression_1_1_array_pack_bits_ext" kind="class" language="C#" prot="public">
    <compoundname>Photon::Compression::ArrayPackBitsExt</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a7aa4bf5228a942524e44499747ea30f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsafe void</type>
        <definition>static unsafe void Photon.Compression.ArrayPackBitsExt.WritePackedBits</definition>
        <argsstring>(ulong *uPtr, ulong value, ref int bitposition, int bits)</argsstring>
        <name>WritePackedBits</name>
        <param>
          <type>ulong *</type>
          <declname>uPtr</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary UNSAFE WritePacked Method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>countbits</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="42" column="27" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="42" bodyend="53"/>
        <references refid="class_photon_1_1_compression_1_1_array_serialize_unsafe_1a7cb429a914dbfd6d416570d712e50ec1" compoundref="_array_serialize_unsafe_8cs" startline="241" endline="269">Photon.Compression.ArraySerializeUnsafe.Write</references>
        <referencedby refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a6c2a4459af37d41b70a3f5d88dff7886" compoundref="_array_pack_bits_ext_8cs" startline="176" endline="180">Photon.Compression.ArrayPackBitsExt.WriteSignedPackedBits</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a3b849e1c6d450d974ed2abea73aef8c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Compression.ArrayPackBitsExt.WritePackedBits</definition>
        <argsstring>(this ulong[] buffer, ulong value, ref int bitposition, int bits)</argsstring>
        <name>WritePackedBits</name>
        <param>
          <type>this ulong[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary WritePacked Method </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>countbits</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="59" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="59" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a0272281b2501bf0b94b5dff51c31aa9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Compression.ArrayPackBitsExt.WritePackedBits</definition>
        <argsstring>(this uint[] buffer, ulong value, ref int bitposition, int bits)</argsstring>
        <name>WritePackedBits</name>
        <param>
          <type>this uint[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary WritePacked Method </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>countbits</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="76" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="76" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a5ed8dc40ce421494abee8a7288e087fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Compression.ArrayPackBitsExt.WritePackedBits</definition>
        <argsstring>(this byte[] buffer, ulong value, ref int bitposition, int bits)</argsstring>
        <name>WritePackedBits</name>
        <param>
          <type>this byte[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary WritePacked Method </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>countbits</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="92" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="92" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a47724a2140489273a73215fb045ed016" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsafe ulong</type>
        <definition>static unsafe ulong Photon.Compression.ArrayPackBitsExt.ReadPackedBits</definition>
        <argsstring>(ulong *uPtr, ref int bitposition, int bits)</argsstring>
        <name>ReadPackedBits</name>
        <param>
          <type>ulong *</type>
          <declname>uPtr</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>Primary UNSAFE Reader for PackedBits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="109" column="28" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="109" bodyend="118"/>
        <references refid="class_photon_1_1_compression_1_1_array_serialize_unsafe_1aed2650eee9804de6bf8b43e12da2748b" compoundref="_array_serialize_unsafe_8cs" startline="279" endline="296">Photon.Compression.ArraySerializeUnsafe.Read</references>
        <referencedby refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1ab32db61412b91fa8c2a732729c7d6939" compoundref="_array_pack_bits_ext_8cs" startline="186" endline="191">Photon.Compression.ArrayPackBitsExt.ReadSignedPackedBits</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a13d85c233f3f68aea3ad5e7a14297869" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ulong</type>
        <definition>static ulong Photon.Compression.ArrayPackBitsExt.ReadPackedBits</definition>
        <argsstring>(this ulong[] buffer, ref int bitposition, int bits)</argsstring>
        <name>ReadPackedBits</name>
        <param>
          <type>this ulong[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>Primary Reader for PackedBits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="123" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="123" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1ab10e6b857477acde6663173ea9f9dec3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ulong</type>
        <definition>static ulong Photon.Compression.ArrayPackBitsExt.ReadPackedBits</definition>
        <argsstring>(this uint[] buffer, ref int bitposition, int bits)</argsstring>
        <name>ReadPackedBits</name>
        <param>
          <type>this uint[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>Primary Reader for PackedBits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="137" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="137" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a289fcdbd38546d0bc24be8efb795c049" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ulong</type>
        <definition>static ulong Photon.Compression.ArrayPackBitsExt.ReadPackedBits</definition>
        <argsstring>(this byte[] buffer, ref int bitposition, int bits)</argsstring>
        <name>ReadPackedBits</name>
        <param>
          <type>this byte[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>Primary Reader for PackedBits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="154" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="154" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a6c2a4459af37d41b70a3f5d88dff7886" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsafe void</type>
        <definition>static unsafe void Photon.Compression.ArrayPackBitsExt.WriteSignedPackedBits</definition>
        <argsstring>(ulong *uPtr, int value, ref int bitposition, int bits)</argsstring>
        <name>WriteSignedPackedBits</name>
        <param>
          <type>ulong *</type>
          <declname>uPtr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary UNSAFE Write packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="176" column="27" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="176" bodyend="180"/>
        <references refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a7aa4bf5228a942524e44499747ea30f7" compoundref="_array_pack_bits_ext_8cs" startline="42" endline="53">Photon.Compression.ArrayPackBitsExt.WritePackedBits</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1ab32db61412b91fa8c2a732729c7d6939" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsafe int</type>
        <definition>static unsafe int Photon.Compression.ArrayPackBitsExt.ReadSignedPackedBits</definition>
        <argsstring>(ulong *buffer, ref int bitposition, int bits)</argsstring>
        <name>ReadSignedPackedBits</name>
        <param>
          <type>ulong *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary UNSAFE Read packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="186" column="26" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="186" bodyend="191"/>
        <references refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a47724a2140489273a73215fb045ed016" compoundref="_array_pack_bits_ext_8cs" startline="109" endline="118">Photon.Compression.ArrayPackBitsExt.ReadPackedBits</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a58418af5b8c92b833969fd47a99a788e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Compression.ArrayPackBitsExt.WriteSignedPackedBits</definition>
        <argsstring>(this ulong[] buffer, int value, ref int bitposition, int bits)</argsstring>
        <name>WriteSignedPackedBits</name>
        <param>
          <type>this ulong[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary Write packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="198" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="198" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a5d4dc2d2713632a8b7a59bea29627e6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Photon.Compression.ArrayPackBitsExt.ReadSignedPackedBits</definition>
        <argsstring>(this ulong[] buffer, ref int bitposition, int bits)</argsstring>
        <name>ReadSignedPackedBits</name>
        <param>
          <type>this ulong[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary Read packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="207" column="19" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="207" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a2908035f3a482091f5dfecd596aa143c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Compression.ArrayPackBitsExt.WriteSignedPackedBits</definition>
        <argsstring>(this uint[] buffer, int value, ref int bitposition, int bits)</argsstring>
        <name>WriteSignedPackedBits</name>
        <param>
          <type>this uint[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary Write packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="220" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="220" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1aec220a902869e135d64dad9618d6a1ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Photon.Compression.ArrayPackBitsExt.ReadSignedPackedBits</definition>
        <argsstring>(this uint[] buffer, ref int bitposition, int bits)</argsstring>
        <name>ReadSignedPackedBits</name>
        <param>
          <type>this uint[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary Read packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="229" column="19" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="229" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1aece6270685beb00f756679b85911caf0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Compression.ArrayPackBitsExt.WriteSignedPackedBits</definition>
        <argsstring>(this byte[] buffer, int value, ref int bitposition, int bits)</argsstring>
        <name>WriteSignedPackedBits</name>
        <param>
          <type>this byte[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary Write packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="243" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a610c0972bbd1236d2183344e8492de21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Photon.Compression.ArrayPackBitsExt.ReadSignedPackedBits</definition>
        <argsstring>(this byte[] buffer, ref int bitposition, int bits)</argsstring>
        <name>ReadSignedPackedBits</name>
        <param>
          <type>this byte[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary Read packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="252" column="19" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="252" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1aa3968be741b713a9598369bed5c913db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Compression.ArrayPackBitsExt.WriteSignedPackedBits64</definition>
        <argsstring>(this byte[] buffer, long value, ref int bitposition, int bits)</argsstring>
        <name>WriteSignedPackedBits64</name>
        <param>
          <type>this byte[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary Write packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="264" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_compression_1_1_array_pack_bits_ext_1af428f144064c18baf10b2ce471e6f2b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long Photon.Compression.ArrayPackBitsExt.ReadSignedPackedBits64</definition>
        <argsstring>(this byte[] buffer, ref int bitposition, int bits)</argsstring>
        <name>ReadSignedPackedBits64</name>
        <param>
          <type>this byte[]</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>bitposition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>EXPERIMENTAL: Primary Read packed signed value. </para>
        </briefdescription>
        <detaileddescription>
<para>ZigZag is employed to move the sign to the rightmost position. Packed values work best for serializing fields that have a large possible range, but are mostly hover closer to zero in value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="273" column="20" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="273" bodyend="278"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Experimental packers, that counts number of used bits for serialization. </para>
    </briefdescription>
    <detaileddescription>
<para>Effective for values that hover close to zero. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Photon.Compression.ArrayPackBitsExt</label>
        <link refid="class_photon_1_1_compression_1_1_array_pack_bits_ext"/>
      </node>
    </collaborationgraph>
    <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" line="34" column="15" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUtilities/Compression/Bitpackers/ArrayPackBitsExt.cs" bodystart="35" bodyend="281"/>
    <listofallmembers>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a47724a2140489273a73215fb045ed016" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>ReadPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a13d85c233f3f68aea3ad5e7a14297869" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>ReadPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1ab10e6b857477acde6663173ea9f9dec3" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>ReadPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a289fcdbd38546d0bc24be8efb795c049" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>ReadPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1ab32db61412b91fa8c2a732729c7d6939" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>ReadSignedPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a5d4dc2d2713632a8b7a59bea29627e6b" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>ReadSignedPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1aec220a902869e135d64dad9618d6a1ec" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>ReadSignedPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a610c0972bbd1236d2183344e8492de21" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>ReadSignedPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1af428f144064c18baf10b2ce471e6f2b7" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>ReadSignedPackedBits64</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a7aa4bf5228a942524e44499747ea30f7" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>WritePackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a3b849e1c6d450d974ed2abea73aef8c5" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>WritePackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a0272281b2501bf0b94b5dff51c31aa9f" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>WritePackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a5ed8dc40ce421494abee8a7288e087fc" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>WritePackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a6c2a4459af37d41b70a3f5d88dff7886" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>WriteSignedPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a58418af5b8c92b833969fd47a99a788e" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>WriteSignedPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1a2908035f3a482091f5dfecd596aa143c" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>WriteSignedPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1aece6270685beb00f756679b85911caf0" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>WriteSignedPackedBits</name></member>
      <member refid="class_photon_1_1_compression_1_1_array_pack_bits_ext_1aa3968be741b713a9598369bed5c913db" prot="public" virt="non-virtual"><scope>Photon::Compression::ArrayPackBitsExt</scope><name>WriteSignedPackedBits64</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
