<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb" kind="class" language="C#" prot="public">
    <compoundname>Photon::Realtime::Demo::ConnectAndJoinRandomLb</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MonoBehaviour</basecompoundref>
    <basecompoundref refid="interface_photon_1_1_realtime_1_1_i_connection_callbacks" prot="public" virt="non-virtual">Photon.Realtime.IConnectionCallbacks</basecompoundref>
    <basecompoundref refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks" prot="public" virt="non-virtual">Photon.Realtime.IMatchmakingCallbacks</basecompoundref>
    <basecompoundref refid="interface_photon_1_1_realtime_1_1_i_lobby_callbacks" prot="public" virt="non-virtual">Photon.Realtime.ILobbyCallbacks</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1add49ff1338f8d323440526a97dc106d9" prot="private" static="no" mutable="no">
        <type><ref refid="class_photon_1_1_realtime_1_1_app_settings" kindref="compound">AppSettings</ref></type>
        <definition>AppSettings Photon.Realtime.Demo.ConnectAndJoinRandomLb.appSettings</definition>
        <argsstring></argsstring>
        <name>appSettings</name>
        <initializer>= new <ref refid="class_photon_1_1_realtime_1_1_app_settings" kindref="compound">AppSettings</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="17" column="29" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a10dab275e670535f1ba5dcf60f32c591" prot="private" static="no" mutable="no">
        <type><ref refid="class_photon_1_1_realtime_1_1_load_balancing_client" kindref="compound">LoadBalancingClient</ref></type>
        <definition>LoadBalancingClient Photon.Realtime.Demo.ConnectAndJoinRandomLb.lbc</definition>
        <argsstring></argsstring>
        <name>lbc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="18" column="37" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aea05997b79a34e3717c9b921000a754f" prot="private" static="no" mutable="no">
        <type><ref refid="class_photon_1_1_realtime_1_1_connection_handler" kindref="compound">ConnectionHandler</ref></type>
        <definition>ConnectionHandler Photon.Realtime.Demo.ConnectAndJoinRandomLb.ch</definition>
        <argsstring></argsstring>
        <name>ch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="20" column="35" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a6c0cd2a721973978b68327e334314116" prot="public" static="no" mutable="no">
        <type>Text</type>
        <definition>Text Photon.Realtime.Demo.ConnectAndJoinRandomLb.StateUiText</definition>
        <argsstring></argsstring>
        <name>StateUiText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="21" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="21" bodyend="-1"/>
        <referencedby refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a83e6fbba4e52ae1459f938027752f6cf" compoundref="_connect_and_join_random_lb_8cs" startline="41" endline="56">Photon.Realtime.Demo.ConnectAndJoinRandomLb.Update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a8bb8b49446440e7bab6b36d5342f52f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="23" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="23" bodyend="39"/>
        <references refid="class_photon_1_1_realtime_1_1_load_balancing_client_1a7eccc149073296a316965f2ce96d08d3" compoundref="_load_balancing_client_8cs" startline="3490" endline="3493">Photon.Realtime.LoadBalancingClient.AddCallbackTarget</references>
        <references refid="class_photon_1_1_realtime_1_1_connection_handler_1ab24008a841d2b4771a94a3a0877e61f6" compoundref="_connection_handler_8cs" startline="37" endline="37">Photon.Realtime.ConnectionHandler.Client</references>
        <references refid="class_photon_1_1_realtime_1_1_load_balancing_client_1af6bb8135f9b32d1b6ffa2956d19b943b" compoundref="_load_balancing_client_8cs" startline="854" endline="943">Photon.Realtime.LoadBalancingClient.ConnectUsingSettings</references>
        <references refid="class_photon_1_1_realtime_1_1_connection_handler_1ad814fc7b6a0761684e69ef3a24a11dce" compoundref="_connection_handler_8cs" startline="126" endline="140">Photon.Realtime.ConnectionHandler.StartFallbackSendAckThread</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a83e6fbba4e52ae1459f938027752f6cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="41" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="41" bodyend="56"/>
        <references refid="class_photon_1_1_realtime_1_1_load_balancing_client_1a6a74a4fbc220c6afd759cc5b5bdaf31d" compoundref="_load_balancing_client_8cs" startline="1395" endline="1401">Photon.Realtime.LoadBalancingClient.Service</references>
        <references refid="class_photon_1_1_realtime_1_1_load_balancing_client_1a50b56ed2bd694735fe5d4745ea2f5588" compoundref="_load_balancing_client_8cs" startline="438" endline="454">Photon.Realtime.LoadBalancingClient.State</references>
        <references refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a6c0cd2a721973978b68327e334314116" compoundref="_connect_and_join_random_lb_8cs" startline="21">Photon.Realtime.Demo.ConnectAndJoinRandomLb.StateUiText</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a09d3c0b43ab6fdd6accddee12a43faef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnConnected</definition>
        <argsstring>()</argsstring>
        <name>OnConnected</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a2e3c773af453748eaaf877585d3d8e1d">OnConnected</reimplements>
        <briefdescription>
<para>Called to signal that the &quot;low level connection&quot; got established but before the client can call operation on the server. </para>
        </briefdescription>
        <detaileddescription>
<para>After the (low level transport) connection is established, the client will automatically send the Authentication operation, which needs to get a response before the client can call other operations.</para>
<para>Your logic should wait for either: OnRegionListReceived or OnConnectedToMaster.</para>
<para>This callback is useful to detect if the server can be reached at all (technically). Most often, it&apos;s enough to implement <ref refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1ce82aa6347d9c08b777946623429729" kindref="member">OnDisconnected(DisconnectCause cause)</ref> and check for the cause.</para>
<para>This is not called for transitions from the masterserver to game servers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="59" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9892dfffa14371a343074e9bf96092f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnConnectedToMaster</definition>
        <argsstring>()</argsstring>
        <name>OnConnectedToMaster</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a52dfd77079d550168c7ff7aa0ce01a6c">OnConnectedToMaster</reimplements>
        <briefdescription>
<para>Called when the client is connected to the Master Server and ready for matchmaking and other tasks. </para>
        </briefdescription>
        <detaileddescription>
<para>The list of available rooms won&apos;t become available unless you join a lobby via <ref refid="class_photon_1_1_realtime_1_1_load_balancing_client_1a4dd9222198402145e2e4e6c4f3462f9d" kindref="member">LoadBalancingClient.OpJoinLobby</ref>. You can join rooms and create them even without being in a lobby. The default lobby is used in that case. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="63" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="63" bodyend="67"/>
        <references refid="class_photon_1_1_realtime_1_1_load_balancing_client_1ad00ac5adf15d214a91a2762a99f07cf6" compoundref="_load_balancing_client_8cs" startline="1590" endline="1614">Photon.Realtime.LoadBalancingClient.OpJoinRandomRoom</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1ce82aa6347d9c08b777946623429729" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnDisconnected</definition>
        <argsstring>(DisconnectCause cause)</argsstring>
        <name>OnDisconnected</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a5e133a672790851ab0554fdc821c7727">OnDisconnected</reimplements>
        <param>
          <type><ref refid="namespace_photon_1_1_realtime_1ac8fdb8bec6a53e17604d94fb7a2e9cc6" kindref="member">DisconnectCause</ref></type>
          <declname>cause</declname>
        </param>
        <briefdescription>
<para>Called after disconnecting from the <ref refid="namespace_photon" kindref="compound">Photon</ref> server. </para>
        </briefdescription>
        <detaileddescription>
<para>It could be a failure or an explicit disconnect call </para>
<para>The reason for this disconnect is provided as DisconnectCause. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="69" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1a8e91c623ece390cf1d8d525c2683e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnCustomAuthenticationResponse</definition>
        <argsstring>(Dictionary&lt; string, object &gt; data)</argsstring>
        <name>OnCustomAuthenticationResponse</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a2a7051e8442a636549eb73705168250c">OnCustomAuthenticationResponse</reimplements>
        <param>
          <type>Dictionary&lt; string, object &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called when your Custom Authentication service responds with additional data. </para>
        </briefdescription>
        <detaileddescription>
<para>Custom Authentication services can include some custom data in their response. When present, that data is made available in this callback as Dictionary. While the keys of your data have to be strings, the values can be either string or a number (in Json). You need to make extra sure, that the value type is the one you expect. Numbers become (currently) int64.</para>
<para>Example: void OnCustomAuthenticationResponse(Dictionary&lt;string, object&gt; data) { ... } </para>
<para>https://doc.photonengine.com/en-us/realtime/current/reference/custom-authentication </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="74" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aa5af7ebd9800465bab5d6dbceeade93e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnCustomAuthenticationFailed</definition>
        <argsstring>(string debugMessage)</argsstring>
        <name>OnCustomAuthenticationFailed</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a669ed841654618813e551e11d7686225">OnCustomAuthenticationFailed</reimplements>
        <param>
          <type>string</type>
          <declname>debugMessage</declname>
        </param>
        <briefdescription>
<para>Called when the custom authentication failed. </para>
        </briefdescription>
        <detaileddescription>
<para>Followed by disconnect! </para>
<para>Custom Authentication can fail due to user-input, bad tokens/secrets. If authentication is successful, this method is not called. Implement <ref refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9c794fec84463dbc65bfd897ae66b742" kindref="member">OnJoinedLobby()</ref> or <ref refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9892dfffa14371a343074e9bf96092f2" kindref="member">OnConnectedToMaster()</ref> (as usual).</para>
<para>During development of a game, it might also fail due to wrong configuration on the server side. In those cases, logging the debugMessage is very important.</para>
<para>Unless you setup a custom authentication service for your app (in the <ulink url="https://dashboard.photonengine.com">Dashboard</ulink>), this won&apos;t be called! </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debugMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains a debug message why authentication failed. This has to be fixed during development.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="78" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a0ae9b9b10119366621182ef8554d102c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnRegionListReceived</definition>
        <argsstring>(RegionHandler regionHandler)</argsstring>
        <name>OnRegionListReceived</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_connection_callbacks_1a69f1c715fb64aff2dda2d18832ff45d2">OnRegionListReceived</reimplements>
        <param>
          <type><ref refid="class_photon_1_1_realtime_1_1_region_handler" kindref="compound">RegionHandler</ref></type>
          <declname>regionHandler</declname>
        </param>
        <briefdescription>
<para>Called when the Name Server provided a list of regions for your title. </para>
        </briefdescription>
        <detaileddescription>
<para>Check the <ref refid="class_photon_1_1_realtime_1_1_region_handler" kindref="compound">RegionHandler</ref> class description, to make use of the provided values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>regionHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The currently used <ref refid="class_photon_1_1_realtime_1_1_region_handler" kindref="compound">RegionHandler</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="82" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="82" bodyend="86"/>
        <references refid="class_photon_1_1_realtime_1_1_region_handler_1a667ee30920336dcb56113bdab8795887" compoundref="_region_handler_8cs" startline="188" endline="261">Photon.Realtime.RegionHandler.PingMinimumOfRegions</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1bf323059eaf90cc88a4d1b65eb68f97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnRoomListUpdate</definition>
        <argsstring>(List&lt; RoomInfo &gt; roomList)</argsstring>
        <name>OnRoomListUpdate</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ae07fb2877a6af51b34db77422187dcf6">OnRoomListUpdate</reimplements>
        <param>
          <type>List&lt; <ref refid="class_photon_1_1_realtime_1_1_room_info" kindref="compound">RoomInfo</ref> &gt;</type>
          <declname>roomList</declname>
        </param>
        <briefdescription>
<para>Called for any update of the room-listing while in a lobby (InLobby) on the Master Server. </para>
        </briefdescription>
        <detaileddescription>
<para>Each item is a <ref refid="class_photon_1_1_realtime_1_1_room_info" kindref="compound">RoomInfo</ref> which might include custom properties (provided you defined those as lobby-listed when creating a room). Not all types of lobbies provide a listing of rooms to the client. Some are silent and specialized for server-side matchmaking. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="88" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ac558f3f113a3f48b14a93974c32e8912" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnLobbyStatisticsUpdate</definition>
        <argsstring>(List&lt; TypedLobbyInfo &gt; lobbyStatistics)</argsstring>
        <name>OnLobbyStatisticsUpdate</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ab2cc546cf0e5189d90360217ebdabd40">OnLobbyStatisticsUpdate</reimplements>
        <param>
          <type>List&lt; <ref refid="class_photon_1_1_realtime_1_1_typed_lobby_info" kindref="compound">TypedLobbyInfo</ref> &gt;</type>
          <declname>lobbyStatistics</declname>
        </param>
        <briefdescription>
<para>Called when the Master Server sent an update for the Lobby Statistics. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback has two preconditions: EnableLobbyStatistics must be set to true, before this client connects. And the client has to be connected to the Master Server, which is providing the info about lobbies. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="92" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9c794fec84463dbc65bfd897ae66b742" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnJoinedLobby</definition>
        <argsstring>()</argsstring>
        <name>OnJoinedLobby</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ac3d6267cf8d9b108ed0b621a9e6eab46">OnJoinedLobby</reimplements>
        <briefdescription>
<para>Called on entering a lobby on the Master Server. </para>
        </briefdescription>
        <detaileddescription>
<para>The actual room-list updates will call OnRoomListUpdate. </para>
<para>While in the lobby, the roomlist is automatically updated in fixed intervals (which you can&apos;t modify in the public cloud). The room list gets available via OnRoomListUpdate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="96" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae59347ec10e79b8ba4b83067a8a5c1c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnLeftLobby</definition>
        <argsstring>()</argsstring>
        <name>OnLeftLobby</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_lobby_callbacks_1ae31b4cb08b81157a52a3550be24ceae3">OnLeftLobby</reimplements>
        <briefdescription>
<para>Called after leaving a lobby. </para>
        </briefdescription>
        <detaileddescription>
<para>When you leave a lobby, OpCreateRoom and OpJoinRandomRoom automatically refer to the default lobby. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="100" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aa7d164a26ced6c7ca47ba0a12bf38b25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnFriendListUpdate</definition>
        <argsstring>(List&lt; FriendInfo &gt; friendList)</argsstring>
        <name>OnFriendListUpdate</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a8f08da473647d070c554b5b4daba60af">OnFriendListUpdate</reimplements>
        <param>
          <type>List&lt; <ref refid="class_photon_1_1_realtime_1_1_friend_info" kindref="compound">FriendInfo</ref> &gt;</type>
          <declname>friendList</declname>
        </param>
        <briefdescription>
<para>Called when the server sent the response to a FindFriends request. </para>
        </briefdescription>
        <detaileddescription>
<para>After calling OpFindFriends, the Master Server will cache the friend list and send updates to the friend list. The friends includes the name, userId, online state and the room (if any) for each requested user/friend.</para>
<para>Use the friendList to update your UI and store it, if the UI should highlight changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="104" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1572d3f98378ead9aaad79871c7f1e81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnCreatedRoom</definition>
        <argsstring>()</argsstring>
        <name>OnCreatedRoom</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a3d084f0aa95b2e8f48514695af73b31d">OnCreatedRoom</reimplements>
        <briefdescription>
<para>Called when this client created a room and entered it. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae48fe093b4e390452c09d5aa6554be2d" kindref="member">OnJoinedRoom()</ref> will be called as well. </para>
<para>This callback is only called on the client which created a room (see OpCreateRoom).</para>
<para>As any client might close (or drop connection) anytime, there is a chance that the creator of a room does not execute OnCreatedRoom.</para>
<para>If you need specific room properties or a &quot;start signal&quot;, implement OnMasterClientSwitched() and make each new MasterClient check the room&apos;s state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="108" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ab6cc4d3b12d2a9b633f17d02df6b365a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnCreateRoomFailed</definition>
        <argsstring>(short returnCode, string message)</argsstring>
        <name>OnCreateRoomFailed</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a099d97fa4d65074adb0db876f47bacd7">OnCreateRoomFailed</reimplements>
        <param>
          <type>short</type>
          <declname>returnCode</declname>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Called when the server couldn&apos;t create a room (OpCreateRoom failed). </para>
        </briefdescription>
        <detaileddescription>
<para>Creating a room may fail for various reasons. Most often, the room already exists (roomname in use) or the <ref refid="class_photon_1_1_realtime_1_1_room_options" kindref="compound">RoomOptions</ref> clash and it&apos;s impossible to create the room.</para>
<para>When creating a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>returnCode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation ReturnCode from the server.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Debug message for the error.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="112" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae48fe093b4e390452c09d5aa6554be2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnJoinedRoom</definition>
        <argsstring>()</argsstring>
        <name>OnJoinedRoom</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a8add9e72c38d241a448f4b539acd684b">OnJoinedRoom</reimplements>
        <briefdescription>
<para>Called when the <ref refid="class_photon_1_1_realtime_1_1_load_balancing_client" kindref="compound">LoadBalancingClient</ref> entered a room, no matter if this client created it or simply joined. </para>
        </briefdescription>
        <detaileddescription>
<para>When this is called, you can access the existing players in <ref refid="class_photon_1_1_realtime_1_1_room_1ad1ed20ddc14c6ec0c9a74aff4eb201fa" kindref="member">Room.Players</ref>, their custom properties and <ref refid="class_photon_1_1_realtime_1_1_room_info_1a9f8bff52fad7c5ad1d1eb321c97e1fbf" kindref="member">Room.CustomProperties</ref>.</para>
<para>In this callback, you could create player objects. For example in Unity, instantiate a prefab for the player.</para>
<para>If you want a match to be started &quot;actively&quot;, enable the user to signal &quot;ready&quot; (using OpRaiseEvent or a Custom Property). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="116" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a2cb0c729861f2d7f5b0fd0b676b371d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnJoinRoomFailed</definition>
        <argsstring>(short returnCode, string message)</argsstring>
        <name>OnJoinRoomFailed</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a55bcc9aca42ebe749a8dcb210ed145e9">OnJoinRoomFailed</reimplements>
        <param>
          <type>short</type>
          <declname>returnCode</declname>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Called when a previous OpJoinRoom call failed on the server. </para>
        </briefdescription>
        <detaileddescription>
<para>Joining a room may fail for various reasons. Most often, the room is full or does not exist anymore (due to someone else being faster or closing the room).</para>
<para>When joining a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>returnCode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation ReturnCode from the server.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Debug message for the error.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="121" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a87c1e195c79cdfbf18644f0c1fbd360b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnJoinRandomFailed</definition>
        <argsstring>(short returnCode, string message)</argsstring>
        <name>OnJoinRandomFailed</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1a837e8522439b89e68805a2b2c25fa824">OnJoinRandomFailed</reimplements>
        <param>
          <type>short</type>
          <declname>returnCode</declname>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Called when a previous OpJoinRandom call failed on the server. </para>
        </briefdescription>
        <detaileddescription>
<para>The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room).</para>
<para>This operation is only ever sent to the Master Server. Once a room is found by the Master Server, the client will head off to the designated Game Server and use the operation Join on the Game Server.</para>
<para>When using multiple lobbies (via OpJoinLobby or a <ref refid="class_photon_1_1_realtime_1_1_typed_lobby" kindref="compound">TypedLobby</ref> parameter), another lobby might have more/fitting rooms.<linebreak/>
 </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>returnCode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation ReturnCode from the server.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Debug message for the error.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="125" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="125" bodyend="129"/>
        <references refid="class_photon_1_1_realtime_1_1_load_balancing_client_1ac5360b52a4284e623f41b0f870843342" compoundref="_load_balancing_client_8cs" startline="1702" endline="1722">Photon.Realtime.LoadBalancingClient.OpCreateRoom</references>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a54c3927644503232611c95efc1c3c6e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnLeftRoom</definition>
        <argsstring>()</argsstring>
        <name>OnLeftRoom</name>
        <reimplements refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks_1acedd813313ad6724f3935801481d8e8f">OnLeftRoom</reimplements>
        <briefdescription>
<para>Called when the local user/client left a room, so the game&apos;s logic can clean up it&apos;s internal state. </para>
        </briefdescription>
        <detaileddescription>
<para>When leaving a room, the <ref refid="class_photon_1_1_realtime_1_1_load_balancing_client" kindref="compound">LoadBalancingClient</ref> will disconnect the Game Server and connect to the Master Server. This wraps up multiple internal actions.</para>
<para>Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="131" column="21" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="131" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a0781b2c1f363952f51639b4d7641a360" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Realtime.Demo.ConnectAndJoinRandomLb.OnRegionPingCompleted</definition>
        <argsstring>(RegionHandler regionHandler)</argsstring>
        <name>OnRegionPingCompleted</name>
        <param>
          <type><ref refid="class_photon_1_1_realtime_1_1_region_handler" kindref="compound">RegionHandler</ref></type>
          <declname>regionHandler</declname>
        </param>
        <briefdescription>
<para>A callback of the <ref refid="class_photon_1_1_realtime_1_1_region_handler" kindref="compound">RegionHandler</ref>, provided in OnRegionListReceived. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>regionHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The regionHandler wraps up best region and other region relevant info.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="138" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="138" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>IConnectionCallbacks</label>
        <link refid="interface_photon_1_1_realtime_1_1_i_connection_callbacks"/>
      </node>
      <node id="5">
        <label>ILobbyCallbacks</label>
        <link refid="interface_photon_1_1_realtime_1_1_i_lobby_callbacks"/>
      </node>
      <node id="4">
        <label>IMatchmakingCallbacks</label>
        <link refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks"/>
      </node>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
      <node id="1">
        <label>Photon.Realtime.Demo.ConnectAndJoinRandomLb</label>
        <link refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>IConnectionCallbacks</label>
        <link refid="interface_photon_1_1_realtime_1_1_i_connection_callbacks"/>
      </node>
      <node id="5">
        <label>ILobbyCallbacks</label>
        <link refid="interface_photon_1_1_realtime_1_1_i_lobby_callbacks"/>
      </node>
      <node id="4">
        <label>IMatchmakingCallbacks</label>
        <link refid="interface_photon_1_1_realtime_1_1_i_matchmaking_callbacks"/>
      </node>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
      <node id="1">
        <label>Photon.Realtime.Demo.ConnectAndJoinRandomLb</label>
        <link refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>+StateUiText</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Text</label>
      </node>
    </collaborationgraph>
    <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" line="14" column="11" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Demos/DemoLoadBalancing/ConnectAndJoinRandomLb.cs" bodystart="15" bodyend="144"/>
    <listofallmembers>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1add49ff1338f8d323440526a97dc106d9" prot="private" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>appSettings</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aea05997b79a34e3717c9b921000a754f" prot="private" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>ch</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a10dab275e670535f1ba5dcf60f32c591" prot="private" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>lbc</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a09d3c0b43ab6fdd6accddee12a43faef" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnConnected</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9892dfffa14371a343074e9bf96092f2" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnConnectedToMaster</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1572d3f98378ead9aaad79871c7f1e81" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnCreatedRoom</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ab6cc4d3b12d2a9b633f17d02df6b365a" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnCreateRoomFailed</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aa5af7ebd9800465bab5d6dbceeade93e" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnCustomAuthenticationFailed</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1a8e91c623ece390cf1d8d525c2683e5" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnCustomAuthenticationResponse</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1ce82aa6347d9c08b777946623429729" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnDisconnected</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1aa7d164a26ced6c7ca47ba0a12bf38b25" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnFriendListUpdate</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a9c794fec84463dbc65bfd897ae66b742" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnJoinedLobby</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae48fe093b4e390452c09d5aa6554be2d" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnJoinedRoom</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a87c1e195c79cdfbf18644f0c1fbd360b" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnJoinRandomFailed</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a2cb0c729861f2d7f5b0fd0b676b371d1" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnJoinRoomFailed</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ae59347ec10e79b8ba4b83067a8a5c1c7" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnLeftLobby</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a54c3927644503232611c95efc1c3c6e5" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnLeftRoom</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1ac558f3f113a3f48b14a93974c32e8912" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnLobbyStatisticsUpdate</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a0ae9b9b10119366621182ef8554d102c" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnRegionListReceived</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a0781b2c1f363952f51639b4d7641a360" prot="private" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnRegionPingCompleted</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a1bf323059eaf90cc88a4d1b65eb68f97" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>OnRoomListUpdate</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a8bb8b49446440e7bab6b36d5342f52f8" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>Start</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a6c0cd2a721973978b68327e334314116" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>StateUiText</name></member>
      <member refid="class_photon_1_1_realtime_1_1_demo_1_1_connect_and_join_random_lb_1a83e6fbba4e52ae1459f938027752f6cf" prot="public" virt="non-virtual"><scope>Photon::Realtime::Demo::ConnectAndJoinRandomLb</scope><name>Update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
