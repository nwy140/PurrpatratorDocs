<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_photon_1_1_realtime_1_1_extensions" kind="class" language="C#" prot="public">
    <compoundname>Photon::Realtime::Extensions</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_photon_1_1_realtime_1_1_extensions_1a97b97472aff185207e13cd854030de3e" prot="private" static="yes" mutable="no">
        <type>readonly List&lt; object &gt;</type>
        <definition>readonly List&lt;object&gt; Photon.Realtime.Extensions.keysWithNullValue</definition>
        <argsstring></argsstring>
        <name>keysWithNullValue</name>
        <initializer>= new List&lt;object&gt;()</initializer>
        <briefdescription>
<para>Used by StripKeysWithNullValues. </para>
        </briefdescription>
        <detaileddescription>
<para>By making keysWithNullValue a static variable to clear before using, allocations only happen during the warm-up phase as the list needs to grow. Once it hit the high water mark for keys you need to remove. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="184" column="38" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="184" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1a2920675d27002936dd307b4744f83928" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Realtime.Extensions.Merge</definition>
        <argsstring>(this IDictionary target, IDictionary addHash)</argsstring>
        <name>Merge</name>
        <param>
          <type>this IDictionary</type>
          <declname>target</declname>
        </param>
        <param>
          <type>IDictionary</type>
          <declname>addHash</declname>
        </param>
        <briefdescription>
<para>Merges all keys from addHash into the target. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds new keys and updates the values of existing keys in target. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The IDictionary to update.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addHash</parametername>
</parameternamelist>
<parameterdescription>
<para>The IDictionary containing data to merge into target.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="42" column="28" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="42" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1a6a780c9d129460da623b7a710145455a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Realtime.Extensions.MergeStringKeys</definition>
        <argsstring>(this IDictionary target, IDictionary addHash)</argsstring>
        <name>MergeStringKeys</name>
        <param>
          <type>this IDictionary</type>
          <declname>target</declname>
        </param>
        <param>
          <type>IDictionary</type>
          <declname>addHash</declname>
        </param>
        <briefdescription>
<para>Merges keys of type string to target Hashtable. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not remove keys from target (so non-string keys CAN be in target if they were before). </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target IDictionary passed in plus all string-typed keys from the addHash.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addHash</parametername>
</parameternamelist>
<parameterdescription>
<para>A IDictionary that should be merged partly into target to update it.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="63" column="28" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="63" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1af7b6683482b235629b2fc570dba15852" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Photon.Realtime.Extensions.ToStringFull</definition>
        <argsstring>(this IDictionary origin)</argsstring>
        <name>ToStringFull</name>
        <param>
          <type>this IDictionary</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
<para>Helper method for debugging of IDictionary content, including type-information. </para>
        </briefdescription>
        <detaileddescription>
<para>Using this is not performant.</para>
<para>Should only be used for debugging as necessary.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>Some Dictionary or Hashtable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String of the content of the IDictionary.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="84" column="30" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="84" bodyend="87"/>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1a97dc59e649b610be98f5ff963d83b56c" compoundref="_chat_gui_8cs" startline="581" endline="584">Photon.Chat.Demo.ChatGui.OnChannelPropertiesChanged</referencedby>
        <referencedby refid="class_photon_1_1_chat_1_1_demo_1_1_chat_gui_1aed34b2a9067fe0a7f018575b297c2892" compoundref="_chat_gui_8cs" startline="586" endline="589">Photon.Chat.Demo.ChatGui.OnUserPropertiesChanged</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1a5273a94b35dcae68642bcd3e08cfc808" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Photon.Realtime.Extensions.ToStringFull&lt; T &gt;</definition>
        <argsstring>(this List&lt; T &gt; data)</argsstring>
        <name>ToStringFull&lt; T &gt;</name>
        <param>
          <type>this List&lt; T &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Helper method for debugging of List&lt;T&gt; content. </para>
        </briefdescription>
        <detaileddescription>
<para>Using this is not performant.</para>
<para>Should only be used for debugging as necessary.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Any List&lt;T&gt; where T implements .ToString().</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A comma-separated string containing each value&apos;s ToString().</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="93" column="15" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="93" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1a7575986269e88a9822764a2b0fead2aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Photon.Realtime.Extensions.ToStringFull</definition>
        <argsstring>(this object[] data)</argsstring>
        <name>ToStringFull</name>
        <param>
          <type>this object[]</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Helper method for debugging of object[] content. </para>
        </briefdescription>
        <detaileddescription>
<para>Using this is not performant.</para>
<para>Should only be used for debugging as necessary.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Any object[].</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A comma-separated string containing each value&apos;s ToString().</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="111" column="30" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="111" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1affc41795820cc7a35f64bd67c16bb43c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd" kindref="member">Hashtable</ref></type>
        <definition>static Hashtable Photon.Realtime.Extensions.StripToStringKeys</definition>
        <argsstring>(this IDictionary original)</argsstring>
        <name>StripToStringKeys</name>
        <param>
          <type>this IDictionary</type>
          <declname>original</declname>
        </param>
        <briefdescription>
<para>This method copies all string-typed keys of the original into a new Hashtable. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not recurse (!) into hashes that might be values in the root-hash. This does not modify the original. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>original</parametername>
</parameternamelist>
<parameterdescription>
<para>The original IDictonary to get string-typed keys from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New Hashtable containing only string-typed keys of the original.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="135" column="33" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="135" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1af9d28af634983314f7f0be98a9fff5a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd" kindref="member">Hashtable</ref></type>
        <definition>static Hashtable Photon.Realtime.Extensions.StripToStringKeys</definition>
        <argsstring>(this Hashtable original)</argsstring>
        <name>StripToStringKeys</name>
        <param>
          <type>this <ref refid="_player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd" kindref="member">Hashtable</ref></type>
          <declname>original</declname>
        </param>
        <briefdescription>
<para>This method copies all string-typed keys of the original into a new Hashtable. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not recurse (!) into hashes that might be values in the root-hash. This does not modify the original. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>original</parametername>
</parameternamelist>
<parameterdescription>
<para>The original IDictonary to get string-typed keys from.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New Hashtable containing only string-typed keys of the original.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="161" column="33" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="161" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1a76e4595f2c87f4c177accd50efb2f40c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Realtime.Extensions.StripKeysWithNullValues</definition>
        <argsstring>(this IDictionary original)</argsstring>
        <name>StripKeysWithNullValues</name>
        <param>
          <type>this IDictionary</type>
          <declname>original</declname>
        </param>
        <briefdescription>
<para>Removes all keys with null values. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_photon" kindref="compound">Photon</ref> properties are removed by setting their value to null. Changes the original IDictionary! Uses lock(keysWithNullValue), which should be no problem in expected use cases. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>original</parametername>
</parameternamelist>
<parameterdescription>
<para>The IDictionary to strip of keys with null value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="192" column="28" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="192" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1a11cede5b02815150d43f9e512c61e7b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Photon.Realtime.Extensions.StripKeysWithNullValues</definition>
        <argsstring>(this Hashtable original)</argsstring>
        <name>StripKeysWithNullValues</name>
        <param>
          <type>this <ref refid="_player_controller_8cs_1afa613ef589c02dbd94acc273b62cdcfd" kindref="member">Hashtable</ref></type>
          <declname>original</declname>
        </param>
        <briefdescription>
<para>Removes all keys with null values. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_photon" kindref="compound">Photon</ref> properties are removed by setting their value to null. Changes the original IDictionary! Uses lock(keysWithNullValue), which should be no problem in expected use cases. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>original</parametername>
</parameternamelist>
<parameterdescription>
<para>The IDictionary to strip of keys with null value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="220" column="28" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="220" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_photon_1_1_realtime_1_1_extensions_1ae75b397047796822c5e8aa83f990af53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Photon.Realtime.Extensions.Contains</definition>
        <argsstring>(this int[] target, int nr)</argsstring>
        <name>Contains</name>
        <param>
          <type>this int[]</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nr</declname>
        </param>
        <briefdescription>
<para>Checks if a particular integer value is in an int-array. </para>
        </briefdescription>
        <detaileddescription>
<para>This might be useful to look up if a particular actorNumber is in the list of players of a room.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of ints to check.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nr</parametername>
</parameternamelist>
<parameterdescription>
<para>The number to lookup in target.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if nr was found in target.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="250" column="28" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="250" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This static class defines some useful extension methods for several existing classes (e.g. </para>
    </briefdescription>
    <detaileddescription>
<para>Vector3, float and others). </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Photon.Realtime.Extensions</label>
        <link refid="class_photon_1_1_realtime_1_1_extensions"/>
      </node>
    </collaborationgraph>
    <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" line="35" column="19" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonRealtime/Code/Extensions.cs" bodystart="36" bodyend="267"/>
    <listofallmembers>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1ae75b397047796822c5e8aa83f990af53" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>Contains</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1a97b97472aff185207e13cd854030de3e" prot="private" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>keysWithNullValue</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1a2920675d27002936dd307b4744f83928" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>Merge</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1a6a780c9d129460da623b7a710145455a" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>MergeStringKeys</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1a76e4595f2c87f4c177accd50efb2f40c" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>StripKeysWithNullValues</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1a11cede5b02815150d43f9e512c61e7b4" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>StripKeysWithNullValues</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1affc41795820cc7a35f64bd67c16bb43c" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>StripToStringKeys</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1af9d28af634983314f7f0be98a9fff5a9" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>StripToStringKeys</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1af7b6683482b235629b2fc570dba15852" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>ToStringFull</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1a7575986269e88a9822764a2b0fead2aa" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>ToStringFull</name></member>
      <member refid="class_photon_1_1_realtime_1_1_extensions_1a5273a94b35dcae68642bcd3e08cfc808" prot="public" virt="non-virtual"><scope>Photon::Realtime::Extensions</scope><name>ToStringFull&lt; T &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
