<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="interface_photon_1_1_pun_1_1_i_pun_ownership_callbacks" kind="interface" language="C#" prot="public">
    <compoundname>Photon::Pun::IPunOwnershipCallbacks</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interface_photon_1_1_pun_1_1_i_pun_ownership_callbacks_1a20d83cdb1516ef38cf1506181b067477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Pun.IPunOwnershipCallbacks.OnOwnershipRequest</definition>
        <argsstring>(PhotonView targetView, Player requestingPlayer)</argsstring>
        <name>OnOwnershipRequest</name>
        <param>
          <type><ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref></type>
          <declname>targetView</declname>
        </param>
        <param>
          <type><ref refid="class_photon_1_1_realtime_1_1_player" kindref="compound">Player</ref></type>
          <declname>requestingPlayer</declname>
        </param>
        <briefdescription>
<para>Called when another player requests ownership of a <ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Called on all clients, so check if (targetView.IsMine) or (targetView.Owner == <ref refid="class_photon_1_1_pun_1_1_photon_network_1a3941fc37f654b2010d53097dae17f724" kindref="member">PhotonNetwork.LocalPlayer</ref>) to determine if a targetView.TransferOwnership(requestingPlayer) response should be given. </para>
<para>The parameter viewAndPlayer contains:</para>
<para><ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref> view = viewAndPlayer[0] as <ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref>;</para>
<para>Player requestingPlayer = viewAndPlayer[1] as Player; </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>targetView</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref> for which ownership gets requested.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requestingPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Player who requests ownership.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/IPunCallbacks.cs" line="61" column="14"/>
        <referencedby refid="class_photon_1_1_pun_1_1_photon_network_1ab6df1ed60be8a3f494683b8faa28ee4a" compoundref="_photon_network_part_8cs" startline="106" endline="122">Photon.Pun.PhotonNetwork.AddCallbackTarget</referencedby>
        <referencedby refid="class_photon_1_1_pun_1_1_photon_network_1ab9dccde85539981763815278d55f5e27" compoundref="_photon_network_part_8cs" startline="135" endline="151">Photon.Pun.PhotonNetwork.RemoveCallbackTarget</referencedby>
      </memberdef>
      <memberdef kind="function" id="interface_photon_1_1_pun_1_1_i_pun_ownership_callbacks_1ac538522c1aba77f1cc6475ca05787b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Pun.IPunOwnershipCallbacks.OnOwnershipTransfered</definition>
        <argsstring>(PhotonView targetView, Player previousOwner)</argsstring>
        <name>OnOwnershipTransfered</name>
        <param>
          <type><ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref></type>
          <declname>targetView</declname>
        </param>
        <param>
          <type><ref refid="class_photon_1_1_realtime_1_1_player" kindref="compound">Player</ref></type>
          <declname>previousOwner</declname>
        </param>
        <briefdescription>
<para>Called when ownership of a <ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref> is transfered to another player. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameter viewAndPlayers contains:</para>
<para><ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref> view = viewAndPlayers[0] as <ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref>;</para>
<para>Player newOwner = viewAndPlayers[1] as Player;</para>
<para>Player oldOwner = viewAndPlayers[2] as Player; </para>
<para>void OnOwnershipTransfered(object[] viewAndPlayers) {} //</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>targetView</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref> for which ownership changed.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>previousOwner</parametername>
</parameternamelist>
<parameterdescription>
<para>Player who was the previous owner (or null, if none).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/IPunCallbacks.cs" line="78" column="14"/>
        <referencedby refid="class_photon_1_1_pun_1_1_photon_network_1ab6df1ed60be8a3f494683b8faa28ee4a" compoundref="_photon_network_part_8cs" startline="106" endline="122">Photon.Pun.PhotonNetwork.AddCallbackTarget</referencedby>
        <referencedby refid="class_photon_1_1_pun_1_1_photon_network_1ab9dccde85539981763815278d55f5e27" compoundref="_photon_network_part_8cs" startline="135" endline="151">Photon.Pun.PhotonNetwork.RemoveCallbackTarget</referencedby>
      </memberdef>
      <memberdef kind="function" id="interface_photon_1_1_pun_1_1_i_pun_ownership_callbacks_1a9057eaa2e6375e4f12ddd06adeb044b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Pun.IPunOwnershipCallbacks.OnOwnershipTransferFailed</definition>
        <argsstring>(PhotonView targetView, Player senderOfFailedRequest)</argsstring>
        <name>OnOwnershipTransferFailed</name>
        <param>
          <type><ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref></type>
          <declname>targetView</declname>
        </param>
        <param>
          <type><ref refid="class_photon_1_1_realtime_1_1_player" kindref="compound">Player</ref></type>
          <declname>senderOfFailedRequest</declname>
        </param>
        <briefdescription>
<para>Called when an Ownership Request fails for objects with &quot;takeover&quot; setting. </para>
        </briefdescription>
        <detaileddescription>
<para>Each request asks to take ownership from a specific controlling player. This can fail if anyone else took over ownership briefly before the request arrived. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>targetView</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>senderOfFailedRequest</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/IPunCallbacks.cs" line="89" column="14"/>
        <referencedby refid="class_photon_1_1_pun_1_1_photon_network_1ab6df1ed60be8a3f494683b8faa28ee4a" compoundref="_photon_network_part_8cs" startline="106" endline="122">Photon.Pun.PhotonNetwork.AddCallbackTarget</referencedby>
        <referencedby refid="class_photon_1_1_pun_1_1_photon_network_1ab9dccde85539981763815278d55f5e27" compoundref="_photon_network_part_8cs" startline="135" endline="151">Photon.Pun.PhotonNetwork.RemoveCallbackTarget</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Global Callback interface for ownership changes. </para>
    </briefdescription>
    <detaileddescription>
<para>These callbacks will fire for changes to ANY <ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref> that changes. Consider using <ref refid="interface_photon_1_1_pun_1_1_i_on_photon_view_controller_change" kindref="compound">IOnPhotonViewControllerChange</ref> for callbacks from a specific <ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref>. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Photon.Pun.IPunOwnershipCallbacks</label>
        <link refid="interface_photon_1_1_pun_1_1_i_pun_ownership_callbacks"/>
      </node>
    </collaborationgraph>
    <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/IPunCallbacks.cs" line="45" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/IPunCallbacks.cs" bodystart="46" bodyend="90"/>
    <listofallmembers>
      <member refid="interface_photon_1_1_pun_1_1_i_pun_ownership_callbacks_1a20d83cdb1516ef38cf1506181b067477" prot="public" virt="non-virtual"><scope>Photon::Pun::IPunOwnershipCallbacks</scope><name>OnOwnershipRequest</name></member>
      <member refid="interface_photon_1_1_pun_1_1_i_pun_ownership_callbacks_1ac538522c1aba77f1cc6475ca05787b0e" prot="public" virt="non-virtual"><scope>Photon::Pun::IPunOwnershipCallbacks</scope><name>OnOwnershipTransfered</name></member>
      <member refid="interface_photon_1_1_pun_1_1_i_pun_ownership_callbacks_1a9057eaa2e6375e4f12ddd06adeb044b7" prot="public" virt="non-virtual"><scope>Photon::Pun::IPunOwnershipCallbacks</scope><name>OnOwnershipTransferFailed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
