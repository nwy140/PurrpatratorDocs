<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="interface_photon_1_1_pun_1_1_i_pun_prefab_pool" kind="interface" language="C#" prot="public">
    <compoundname>Photon::Pun::IPunPrefabPool</compoundname>
    <derivedcompoundref refid="class_photon_1_1_pun_1_1_default_pool" prot="public" virt="non-virtual">Photon.Pun.DefaultPool</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a870a5155ad093e64f224a774cb1959d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GameObject</type>
        <definition>GameObject Photon.Pun.IPunPrefabPool.Instantiate</definition>
        <argsstring>(string prefabId, Vector3 position, Quaternion rotation)</argsstring>
        <name>Instantiate</name>
        <reimplementedby refid="class_photon_1_1_pun_1_1_default_pool_1a676a4c575a8be85f802d35c010a66232">Instantiate</reimplementedby>
        <param>
          <type>string</type>
          <declname>prefabId</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Called to get an instance of a prefab. </para>
        </briefdescription>
        <detaileddescription>
<para>Must return valid, disabled GameObject with <ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref>. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prefabId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of this prefab.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position for the instance.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>The rotation for the instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A disabled instance to use by PUN or null if the prefabId is unknown.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/IPunCallbacks.cs" line="129" column="20"/>
      </memberdef>
      <memberdef kind="function" id="interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a2429b5aceee58b1566d4ac03ad69f359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Photon.Pun.IPunPrefabPool.Destroy</definition>
        <argsstring>(GameObject gameObject)</argsstring>
        <name>Destroy</name>
        <reimplementedby refid="class_photon_1_1_pun_1_1_default_pool_1a358b21299f8257b3a2c8a826dd626d6c">Destroy</reimplementedby>
        <param>
          <type>GameObject</type>
          <declname>gameObject</declname>
        </param>
        <briefdescription>
<para>Called to destroy (or just return) the instance of a prefab. </para>
        </briefdescription>
        <detaileddescription>
<para>It&apos;s disabled and the pool may reset and cache it for later use in Instantiate. </para>
<para>A pool needs some way to find out which type of GameObject got returned via <ref refid="interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a2429b5aceee58b1566d4ac03ad69f359" kindref="member">Destroy()</ref>. It could be a tag, name, a component or anything similar. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gameObject</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to destroy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/IPunCallbacks.cs" line="139" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines an interface for object pooling, used in <ref refid="class_photon_1_1_pun_1_1_photon_network_1a3c3998fe3bc09a7de8d09378d7a3e2d0" kindref="member">PhotonNetwork.Instantiate</ref> and <ref refid="class_photon_1_1_pun_1_1_photon_network_1ada7d7b9bdb306863c66b260dde7c544e" kindref="member">PhotonNetwork.Destroy</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>To apply your custom <ref refid="interface_photon_1_1_pun_1_1_i_pun_prefab_pool" kindref="compound">IPunPrefabPool</ref>, set <ref refid="class_photon_1_1_pun_1_1_photon_network_1ab4dd61936d6f0060d7317607076071bf" kindref="member">PhotonNetwork.PrefabPool</ref>.</para>
<para>The pool has to return a valid, disabled GameObject when PUN calls Instantiate. Also, the position and rotation must be applied.</para>
<para>Note that Awake and Start are only called once by Unity, so scripts on re-used GameObjects should make use of OnEnable and or OnDisable. When OnEnable gets called, the <ref refid="class_photon_1_1_pun_1_1_photon_view" kindref="compound">PhotonView</ref> is already updated to the new values.</para>
<para>To be able to enable a GameObject, Instantiate must return an inactive object.</para>
<para>Before PUN &quot;destroys&quot; GameObjects, it will disable them.</para>
<para>If a component implements <ref refid="interface_photon_1_1_pun_1_1_i_pun_instantiate_magic_callback" kindref="compound">IPunInstantiateMagicCallback</ref>, PUN will call OnPhotonInstantiate when the networked object gets instantiated. If no components implement this on a prefab, PUN will optimize the instantiation and no longer looks up <ref refid="interface_photon_1_1_pun_1_1_i_pun_instantiate_magic_callback" kindref="compound">IPunInstantiateMagicCallback</ref> via GetComponents. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Photon.Pun.IPunPrefabPool</label>
        <link refid="interface_photon_1_1_pun_1_1_i_pun_prefab_pool"/>
      </node>
      <node id="2">
        <label>Photon.Pun.DefaultPool</label>
        <link refid="class_photon_1_1_pun_1_1_default_pool"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Photon.Pun.IPunPrefabPool</label>
        <link refid="interface_photon_1_1_pun_1_1_i_pun_prefab_pool"/>
      </node>
    </collaborationgraph>
    <location file="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/IPunCallbacks.cs" line="120" column="22" bodyfile="C:/_SSDSPEEDUP/2021/GPS/gps2_purrpatrator/GPS2_Purrpatrator/Assets/Photon/PhotonUnityNetworking/Code/Interfaces/IPunCallbacks.cs" bodystart="121" bodyend="140"/>
    <listofallmembers>
      <member refid="interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a2429b5aceee58b1566d4ac03ad69f359" prot="public" virt="non-virtual"><scope>Photon::Pun::IPunPrefabPool</scope><name>Destroy</name></member>
      <member refid="interface_photon_1_1_pun_1_1_i_pun_prefab_pool_1a870a5155ad093e64f224a774cb1959d9" prot="public" virt="non-virtual"><scope>Photon::Pun::IPunPrefabPool</scope><name>Instantiate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
